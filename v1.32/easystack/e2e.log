  I0115 17:03:35.653966      30 e2e.go:109] Starting e2e run "fede6329-6d35-44b0-93a1-255e31e3d980" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1736960612 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0115 17:03:35.917680 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:03:35.995337 30 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0115 17:03:36.091647 30 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0115 17:03:36.103625 30 e2e.go:153] 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel' (0 seconds elapsed)
  I0115 17:03:36.106459 30 e2e.go:153] 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-arm' (0 seconds elapsed)
  I0115 17:03:36.106484 30 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-arm64' (0 seconds elapsed)
  I0115 17:03:36.106499 30 e2e.go:153] 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-ppc64le' (0 seconds elapsed)
  I0115 17:03:36.106513 30 e2e.go:153] 0 / 0 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds-s390x' (0 seconds elapsed)
  I0115 17:03:36.106527 30 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0115 17:03:36.106541 30 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'nodelocaldns' (0 seconds elapsed)
  I0115 17:03:36.106566 30 e2e.go:245] e2e test version: v1.32.0
  I0115 17:03:36.108086 30 e2e.go:254] kube-apiserver version: v1.32.0
  I0115 17:03:36.108317 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:03:36.113147 30 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.196 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 01/15/25 17:03:36.373
  I0115 17:03:36.373266 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 17:03:36.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:03:36.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:03:36.502
  STEP: Creating a pod to test downward api env vars @ 01/15/25 17:03:36.506
  STEP: Saw pod success @ 01/15/25 17:03:40.567
  I0115 17:03:40.573074 30 output.go:207] Trying to get logs from node node6 pod downward-api-a3b2c103-f2a4-4201-aec4-2cd2e066a214 container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 17:03:40.695
  I0115 17:03:40.748759 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3612" for this suite. @ 01/15/25 17:03:40.755
• [4.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/15/25 17:03:40.823
  I0115 17:03:40.823765 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename runtimeclass @ 01/15/25 17:03:40.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:03:40.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:03:40.87
  STEP: getting /apis @ 01/15/25 17:03:40.874
  STEP: getting /apis/node.k8s.io @ 01/15/25 17:03:40.882
  STEP: getting /apis/node.k8s.io/v1 @ 01/15/25 17:03:40.884
  STEP: creating @ 01/15/25 17:03:40.885
  STEP: watching @ 01/15/25 17:03:40.992
  I0115 17:03:40.992463 30 runtimeclass.go:275] starting watch
  STEP: getting @ 01/15/25 17:03:41.003
  STEP: listing @ 01/15/25 17:03:41.012
  STEP: patching @ 01/15/25 17:03:41.02
  STEP: updating @ 01/15/25 17:03:41.106
  I0115 17:03:41.114295 30 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/15/25 17:03:41.114
  STEP: deleting a collection @ 01/15/25 17:03:41.142
  I0115 17:03:41.163137 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9871" for this suite. @ 01/15/25 17:03:41.168
• [0.361 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/15/25 17:03:41.185
  I0115 17:03:41.185060 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:03:41.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:03:41.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:03:41.217
  STEP: Setting up server cert @ 01/15/25 17:03:41.322
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:03:41.909
  I0115 17:03:41.923936 30 webhook.go:1041] role binding webhook-auth-reader already exists
  STEP: Deploying the webhook pod @ 01/15/25 17:03:41.924
  STEP: Wait for the deployment to be ready @ 01/15/25 17:03:41.993
  I0115 17:03:42.007631 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/15/25 17:03:44.025
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:03:44.084
  I0115 17:03:45.084364 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/15/25 17:03:45.288
  STEP: Creating a configMap that should be mutated @ 01/15/25 17:03:45.405
  STEP: Deleting the collection of validation webhooks @ 01/15/25 17:03:45.49
  STEP: Creating a configMap that should not be mutated @ 01/15/25 17:03:45.569
  I0115 17:03:45.731208 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6717" for this suite. @ 01/15/25 17:03:45.738
  STEP: Destroying namespace "webhook-markers-7895" for this suite. @ 01/15/25 17:03:45.78
• [4.609 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/15/25 17:03:45.794
  I0115 17:03:45.794370 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:03:45.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:03:45.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:03:45.828
  STEP: Setting up server cert @ 01/15/25 17:03:45.927
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:03:46.514
  STEP: Deploying the webhook pod @ 01/15/25 17:03:46.523
  STEP: Wait for the deployment to be ready @ 01/15/25 17:03:46.547
  I0115 17:03:46.576496 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/15/25 17:03:48.591
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:03:48.605
  I0115 17:03:49.606216 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0115 17:03:49.616626 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/15/25 17:03:55.267
  I0115 17:03:55.354843 30 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be denied by the webhook @ 01/15/25 17:03:55.467
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/15/25 17:03:57.609
  STEP: Updating the custom resource with disallowed data should be denied @ 01/15/25 17:03:57.623
  STEP: Deleting the custom resource should be denied @ 01/15/25 17:03:57.646
  STEP: Remove the offending key and value from the custom resource data @ 01/15/25 17:03:57.686
  STEP: Deleting the updated custom resource should be successful @ 01/15/25 17:03:57.701
  I0115 17:03:58.318953 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5142" for this suite. @ 01/15/25 17:03:58.326
  STEP: Destroying namespace "webhook-markers-4784" for this suite. @ 01/15/25 17:03:58.363
• [12.584 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/15/25 17:03:58.378
  I0115 17:03:58.378511 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pv @ 01/15/25 17:03:58.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:03:58.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:03:58.412
  STEP: Creating initial PV and PVC @ 01/15/25 17:03:58.416
  I0115 17:03:58.418793 30 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4704" @ 01/15/25 17:03:58.5
  STEP: Listing PVCs in namespace "pv-4704" @ 01/15/25 17:03:58.504
  STEP: Patching the PV "pv-4704-9w4fz" @ 01/15/25 17:03:58.526
  STEP: Patching the PVC "pvc-8bhsk" @ 01/15/25 17:03:58.596
  STEP: Getting PV "pv-4704-9w4fz" @ 01/15/25 17:03:58.607
  STEP: Getting PVC "pvc-8bhsk" @ 01/15/25 17:03:58.614
  STEP: Deleting PVC "pvc-8bhsk" @ 01/15/25 17:03:58.618
  STEP: Confirm deletion of PVC "pvc-8bhsk" @ 01/15/25 17:03:58.638
  STEP: Deleting PV "pv-4704-9w4fz" @ 01/15/25 17:04:00.65
  STEP: Confirm deletion of PV "pv-4704-9w4fz" @ 01/15/25 17:04:00.659
  STEP: Recreating another PV & PVC @ 01/15/25 17:04:02.671
  I0115 17:04:02.671829 30 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4704-qmnjk" @ 01/15/25 17:04:02.694
  STEP: Updating the PVC "pvc-r8pdb" @ 01/15/25 17:04:02.735
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-r8pdb=updated" @ 01/15/25 17:04:02.797
  STEP: Deleting PVC "pvc-r8pdb" via DeleteCollection @ 01/15/25 17:04:02.8
  STEP: Confirm deletion of PVC "pvc-r8pdb" @ 01/15/25 17:04:02.813
  STEP: Deleting PV "pv-4704-qmnjk" via DeleteCollection @ 01/15/25 17:04:04.823
  STEP: Confirm deletion of PV "pv-4704-qmnjk" @ 01/15/25 17:04:04.838
  I0115 17:04:06.853052 30 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0115 17:04:06.853122 30 pv.go:205] Deleting PersistentVolumeClaim "pvc-r8pdb"
  I0115 17:04:06.858087 30 pv.go:193] Deleting PersistentVolume "pv-4704-qmnjk"
  I0115 17:04:06.862680 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4704" for this suite. @ 01/15/25 17:04:06.87
• [8.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/15/25 17:04:06.884
  I0115 17:04:06.884925 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:04:06.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:06.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:06.922
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/15/25 17:04:06.925
  STEP: Saw pod success @ 01/15/25 17:04:10.985
  I0115 17:04:10.990559 30 output.go:207] Trying to get logs from node node6 pod pod-173dd5d2-4e6b-4936-a93e-c814d5ed4de6 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:04:11
  I0115 17:04:11.024350 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7619" for this suite. @ 01/15/25 17:04:11.031
• [4.162 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/15/25 17:04:11.047
  I0115 17:04:11.047603 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename hostport @ 01/15/25 17:04:11.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:11.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:11.082
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/15/25 17:04:11.13
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.111.146 on the node which pod1 resides and expect scheduled @ 01/15/25 17:04:13.157
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.111.146 but use UDP protocol on the node which pod2 resides @ 01/15/25 17:04:17.188
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/15/25 17:04:21.229
  I0115 17:04:21.229609 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.111.146 http://127.0.0.1:54323/hostname] Namespace:hostport-9675 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:04:21.229638 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:04:21.229724 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9675/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.111.146+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.111.146, port: 54323 @ 01/15/25 17:04:21.825
  I0115 17:04:21.825216 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.111.146:54323/hostname] Namespace:hostport-9675 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:04:21.825241 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:04:21.825317 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9675/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.111.146%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.111.146, port: 54323 UDP @ 01/15/25 17:04:21.916
  I0115 17:04:21.916459 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.111.146 54323] Namespace:hostport-9675 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:04:21.916486 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:04:21.916569 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9675/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.111.146+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0115 17:04:27.011183 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9675" for this suite. @ 01/15/25 17:04:27.019
• [15.984 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/15/25 17:04:27.032
  I0115 17:04:27.032229 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 17:04:27.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:27.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:27.094
  I0115 17:04:27.098526 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  W0115 17:04:34.670163      30 warnings.go:70] unknown field "alpha"
  W0115 17:04:34.670213      30 warnings.go:70] unknown field "beta"
  W0115 17:04:34.670221      30 warnings.go:70] unknown field "delta"
  W0115 17:04:34.670228      30 warnings.go:70] unknown field "epsilon"
  W0115 17:04:34.670234      30 warnings.go:70] unknown field "gamma"
  I0115 17:04:35.263821 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7807" for this suite. @ 01/15/25 17:04:35.27
• [8.251 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/15/25 17:04:35.283
  I0115 17:04:35.283513 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:04:35.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:35.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:35.479
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 17:04:35.484
  STEP: Saw pod success @ 01/15/25 17:04:39.523
  I0115 17:04:39.528253 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-cdf32a7f-a5a5-4afa-8020-08846aaccbcb container client-container: <nil>
  STEP: delete the pod @ 01/15/25 17:04:39.537
  I0115 17:04:39.561850 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1548" for this suite. @ 01/15/25 17:04:39.568
• [4.293 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/15/25 17:04:39.577
  I0115 17:04:39.577283 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl-logs @ 01/15/25 17:04:39.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:39.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:39.609
  STEP: creating a pod @ 01/15/25 17:04:39.613
  I0115 17:04:39.614155 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0115 17:04:40.174581 30 builder.go:146] stderr: ""
  I0115 17:04:40.174650 30 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/15/25 17:04:40.174
  I0115 17:04:40.174889 30 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0115 17:04:42.191050 30 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/15/25 17:04:42.191
  I0115 17:04:42.191211 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 logs logs-generator logs-generator'
  I0115 17:04:42.297917 30 builder.go:146] stderr: ""
  I0115 17:04:42.297985 30 builder.go:147] stdout: "I0115 17:04:40.773177       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/bp65 389\nI0115 17:04:40.973587       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/ckh 515\nI0115 17:04:41.173946       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/bhv 489\nI0115 17:04:41.373272       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/bbt 495\nI0115 17:04:41.573638       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/nlfh 325\nI0115 17:04:41.774040       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/5q9b 536\nI0115 17:04:41.973306       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/kbt 325\nI0115 17:04:42.179563       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/94xl 400\n"
  STEP: limiting log lines @ 01/15/25 17:04:42.298
  I0115 17:04:42.298094 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 logs logs-generator logs-generator --tail=1'
  I0115 17:04:42.396584 30 builder.go:146] stderr: ""
  I0115 17:04:42.396666 30 builder.go:147] stdout: "I0115 17:04:42.373977       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/n5b4 266\n"
  I0115 17:04:42.396694 30 logs.go:180] got output "I0115 17:04:42.373977       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/n5b4 266\n"
  STEP: limiting log bytes @ 01/15/25 17:04:42.396
  I0115 17:04:42.396813 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 logs logs-generator logs-generator --limit-bytes=1'
  I0115 17:04:42.531651 30 builder.go:146] stderr: ""
  I0115 17:04:42.531711 30 builder.go:147] stdout: "I"
  I0115 17:04:42.531728 30 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/15/25 17:04:42.531
  I0115 17:04:42.531856 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 logs logs-generator logs-generator --tail=1 --timestamps'
  I0115 17:04:42.618661 30 builder.go:146] stderr: ""
  I0115 17:04:42.618729 30 builder.go:147] stdout: "2025-01-16T01:04:42.573427739+08:00 I0115 17:04:42.573259       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/hpl 599\n"
  I0115 17:04:42.618748 30 logs.go:192] got output "2025-01-16T01:04:42.573427739+08:00 I0115 17:04:42.573259       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/hpl 599\n"
  STEP: restricting to a time range @ 01/15/25 17:04:42.618
  I0115 17:04:45.119135 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 logs logs-generator logs-generator --since=1s'
  I0115 17:04:45.213749 30 builder.go:146] stderr: ""
  I0115 17:04:45.213812 30 builder.go:147] stdout: "I0115 17:04:44.373293       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/7n2 305\nI0115 17:04:44.573894       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/47b 502\nI0115 17:04:44.774131       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/ntx 536\nI0115 17:04:44.973726       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/qn8x 258\nI0115 17:04:45.174023       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/gqg 541\n"
  I0115 17:04:45.213896 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 logs logs-generator logs-generator --since=24h'
  I0115 17:04:45.306682 30 builder.go:146] stderr: ""
  I0115 17:04:45.306769 30 builder.go:147] stdout: "I0115 17:04:40.773177       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/bp65 389\nI0115 17:04:40.973587       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/ckh 515\nI0115 17:04:41.173946       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/bhv 489\nI0115 17:04:41.373272       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/bbt 495\nI0115 17:04:41.573638       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/nlfh 325\nI0115 17:04:41.774040       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/5q9b 536\nI0115 17:04:41.973306       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/kbt 325\nI0115 17:04:42.179563       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/94xl 400\nI0115 17:04:42.373977       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/n5b4 266\nI0115 17:04:42.573259       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/hpl 599\nI0115 17:04:42.773626       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/tvh 518\nI0115 17:04:42.974007       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/79w 204\nI0115 17:04:43.173286       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/ts8 322\nI0115 17:04:43.373662       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/f6cm 284\nI0115 17:04:43.574038       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/22w 357\nI0115 17:04:43.773286       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/gs46 375\nI0115 17:04:43.973615       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/jrd 261\nI0115 17:04:44.174024       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/wmvs 284\nI0115 17:04:44.373293       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/7n2 305\nI0115 17:04:44.573894       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/47b 502\nI0115 17:04:44.774131       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/ntx 536\nI0115 17:04:44.973726       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/qn8x 258\nI0115 17:04:45.174023       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/gqg 541\n"
  I0115 17:04:45.306908 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-logs-3515 delete pod logs-generator'
  I0115 17:04:46.725389 30 builder.go:146] stderr: ""
  I0115 17:04:46.725447 30 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0115 17:04:46.725595 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3515" for this suite. @ 01/15/25 17:04:46.731
• [7.164 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/15/25 17:04:46.741
  I0115 17:04:46.741793 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:04:46.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:46.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:46.778
  STEP: Setting up server cert @ 01/15/25 17:04:46.872
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:04:47.333
  STEP: Deploying the webhook pod @ 01/15/25 17:04:47.349
  STEP: Wait for the deployment to be ready @ 01/15/25 17:04:47.37
  I0115 17:04:47.378883 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/15/25 17:04:49.397
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:04:49.414
  I0115 17:04:50.415098 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/15/25 17:04:50.425
  STEP: verifying the mutating webhook match conditions @ 01/15/25 17:04:50.616
  STEP: updating the mutating webhook match conditions @ 01/15/25 17:04:50.621
  STEP: verifying the mutating webhook match conditions @ 01/15/25 17:04:50.64
  I0115 17:04:50.782469 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3773" for this suite. @ 01/15/25 17:04:50.797
  STEP: Destroying namespace "webhook-markers-8751" for this suite. @ 01/15/25 17:04:50.809
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/15/25 17:04:50.826
  I0115 17:04:50.826566 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 17:04:50.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:04:50.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:04:50.86
  STEP: Creating pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819 @ 01/15/25 17:04:50.864
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 17:04:52.888
  I0115 17:04:52.893511 30 container_probe.go:1749] Initial restart count of pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 is 0
  I0115 17:04:52.897046 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:04:54.903641 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:04:56.909506 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:04:58.915214 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:00.923238 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:02.930051 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:04.935520 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:06.942704 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:08.949829 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:10.955951 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:12.962542 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:14.969992 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:16.975740 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:18.982670 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:20.991049 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:22.998676 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:25.005198 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:27.012048 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:29.019191 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:31.026112 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:33.035921 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:35.041340 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:37.048175 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:39.055275 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:41.061082 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:43.067247 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:45.073630 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:47.079343 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:49.089810 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:51.099162 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:53.109215 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:55.116134 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:57.122326 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:05:59.127592 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:01.134707 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:03.141060 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:05.147657 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:07.153510 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:09.159629 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:11.165083 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:13.171773 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:15.182280 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:17.187075 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:19.192639 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:21.203973 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:23.211736 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:25.218231 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:27.224669 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:29.231741 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:31.238914 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:33.245169 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:35.252312 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:37.259648 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:39.265993 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:41.273217 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:43.280297 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:45.287602 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:47.296555 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:49.325924 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:51.331686 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:53.339290 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:55.347567 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:57.354655 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:06:59.361339 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:01.368664 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:03.375358 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:05.382358 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:07.389776 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:09.395983 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:11.403021 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:13.409977 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:15.416247 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:17.422855 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:19.430065 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:21.436061 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:23.442028 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:25.448252 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:27.453614 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:29.460793 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:31.467359 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:33.474399 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:35.482427 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:37.489495 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:39.495122 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:41.502048 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:43.509160 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:45.516607 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:47.523339 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:49.534335 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:51.541106 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:53.552340 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:55.559338 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:57.566538 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:07:59.573326 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:01.579004 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:03.585433 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:05.592081 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:07.597400 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:09.604410 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:11.611565 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:13.617781 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:15.624028 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:17.630915 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:19.637123 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:21.644245 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:23.650748 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:25.657023 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:27.662129 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:29.668118 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:31.674351 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:33.680415 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:35.687638 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:37.694350 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:39.700955 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:41.707417 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:43.713397 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:45.722839 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:47.730022 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:49.736077 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  I0115 17:08:51.742625 30 container_probe.go:1759] Get pod liveness-4668948d-33a8-46cd-8ca0-217944abb248 in namespace container-probe-8819
  STEP: deleting the pod @ 01/15/25 17:08:53.744
  I0115 17:08:53.800853 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8819" for this suite. @ 01/15/25 17:08:53.808
• [243.018 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/15/25 17:08:53.844
  I0115 17:08:53.844889 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 17:08:53.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:08:53.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:08:53.918
  STEP: creating a replication controller @ 01/15/25 17:08:53.922
  I0115 17:08:53.922619 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 create -f -'
  I0115 17:08:54.156959 30 builder.go:146] stderr: ""
  I0115 17:08:54.157026 30 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/15/25 17:08:54.157
  I0115 17:08:54.157223 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0115 17:08:54.241573 30 builder.go:146] stderr: ""
  I0115 17:08:54.241639 30 builder.go:147] stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 01/15/25 17:08:54.241
  I0115 17:08:59.244826 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0115 17:08:59.445365 30 builder.go:146] stderr: ""
  I0115 17:08:59.445428 30 builder.go:147] stdout: "update-demo-nautilus-gwqcm update-demo-nautilus-hbd2s "
  I0115 17:08:59.445533 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-gwqcm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 17:08:59.536756 30 builder.go:146] stderr: ""
  I0115 17:08:59.536817 30 builder.go:147] stdout: "true"
  I0115 17:08:59.536899 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-gwqcm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 17:08:59.619583 30 builder.go:146] stderr: ""
  I0115 17:08:59.619647 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 17:08:59.619666 30 kubectl.go:2390] validating pod update-demo-nautilus-gwqcm
  I0115 17:08:59.628895 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 17:08:59.628982 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 17:08:59.629001 30 kubectl.go:2517] update-demo-nautilus-gwqcm is verified up and running
  I0115 17:08:59.629066 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-hbd2s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 17:08:59.710755 30 builder.go:146] stderr: ""
  I0115 17:08:59.710815 30 builder.go:147] stdout: "true"
  I0115 17:08:59.710895 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-hbd2s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 17:08:59.788455 30 builder.go:146] stderr: ""
  I0115 17:08:59.788513 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 17:08:59.788694 30 kubectl.go:2390] validating pod update-demo-nautilus-hbd2s
  I0115 17:08:59.801891 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 17:08:59.801983 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 17:08:59.802006 30 kubectl.go:2517] update-demo-nautilus-hbd2s is verified up and running
  STEP: scaling down the replication controller @ 01/15/25 17:08:59.802
  I0115 17:08:59.804641 30 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0115 17:08:59.804734 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0115 17:09:01.007326 30 builder.go:146] stderr: ""
  I0115 17:09:01.007387 30 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/15/25 17:09:01.007
  I0115 17:09:01.007511 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0115 17:09:01.102997 30 builder.go:146] stderr: ""
  I0115 17:09:01.103099 30 builder.go:147] stdout: "update-demo-nautilus-hbd2s "
  I0115 17:09:01.103326 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-hbd2s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 17:09:01.191833 30 builder.go:146] stderr: ""
  I0115 17:09:01.191899 30 builder.go:147] stdout: "true"
  I0115 17:09:01.191977 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-hbd2s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 17:09:01.280138 30 builder.go:146] stderr: ""
  I0115 17:09:01.280201 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 17:09:01.280221 30 kubectl.go:2390] validating pod update-demo-nautilus-hbd2s
  I0115 17:09:01.286757 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 17:09:01.286825 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 17:09:01.286844 30 kubectl.go:2517] update-demo-nautilus-hbd2s is verified up and running
  STEP: scaling up the replication controller @ 01/15/25 17:09:01.286
  I0115 17:09:01.288339 30 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0115 17:09:01.288407 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0115 17:09:02.392627 30 builder.go:146] stderr: ""
  I0115 17:09:02.392683 30 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/15/25 17:09:02.392
  I0115 17:09:02.392960 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0115 17:09:02.478497 30 builder.go:146] stderr: ""
  I0115 17:09:02.478555 30 builder.go:147] stdout: "update-demo-nautilus-f7g9n update-demo-nautilus-hbd2s "
  I0115 17:09:02.478635 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-f7g9n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 17:09:02.564912 30 builder.go:146] stderr: ""
  I0115 17:09:02.564967 30 builder.go:147] stdout: "true"
  I0115 17:09:02.565049 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-f7g9n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 17:09:02.651744 30 builder.go:146] stderr: ""
  I0115 17:09:02.651839 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 17:09:02.651860 30 kubectl.go:2390] validating pod update-demo-nautilus-f7g9n
  I0115 17:09:02.658841 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 17:09:02.658938 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 17:09:02.658959 30 kubectl.go:2517] update-demo-nautilus-f7g9n is verified up and running
  I0115 17:09:02.659037 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-hbd2s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 17:09:02.737278 30 builder.go:146] stderr: ""
  I0115 17:09:02.737338 30 builder.go:147] stdout: "true"
  I0115 17:09:02.737425 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods update-demo-nautilus-hbd2s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 17:09:02.822892 30 builder.go:146] stderr: ""
  I0115 17:09:02.822957 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 17:09:02.822977 30 kubectl.go:2390] validating pod update-demo-nautilus-hbd2s
  I0115 17:09:02.829374 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 17:09:02.829621 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 17:09:02.829673 30 kubectl.go:2517] update-demo-nautilus-hbd2s is verified up and running
  STEP: using delete to clean up resources @ 01/15/25 17:09:02.829
  I0115 17:09:02.829945 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 delete --grace-period=0 --force -f -'
  I0115 17:09:02.933083 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 17:09:02.933195 30 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0115 17:09:02.933588 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get rc,svc -l name=update-demo --no-headers'
  I0115 17:09:03.063750 30 builder.go:146] stderr: "No resources found in kubectl-2626 namespace.\n"
  I0115 17:09:03.063845 30 builder.go:147] stdout: ""
  I0115 17:09:03.063969 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-2626 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0115 17:09:03.150260 30 builder.go:146] stderr: ""
  I0115 17:09:03.150345 30 builder.go:147] stdout: ""
  I0115 17:09:03.150610 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2626" for this suite. @ 01/15/25 17:09:03.158
• [9.327 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/15/25 17:09:03.171
  I0115 17:09:03.171487 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 17:09:03.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:09:03.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:09:03.205
  STEP: Creating pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492 @ 01/15/25 17:09:03.209
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 17:09:05.235
  I0115 17:09:05.240312 30 container_probe.go:1749] Initial restart count of pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 is 0
  I0115 17:09:05.245137 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:07.251651 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:09.258576 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:11.264700 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:13.271230 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:15.277701 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:17.283596 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:19.289952 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:21.296288 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:23.303165 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:25.308968 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:27.314633 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:29.320897 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:31.326996 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:33.334223 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:35.340837 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:37.347412 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:39.353730 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:41.360139 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:43.367467 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:45.374243 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:47.380735 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:49.386651 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:51.392678 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:53.400140 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:55.407012 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:57.412651 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:09:59.427276 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:01.434532 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:03.442219 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:05.449195 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:07.455945 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:09.462806 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:11.471521 30 container_probe.go:1759] Get pod test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 in namespace container-probe-6492
  I0115 17:10:11.471613 30 container_probe.go:1763] Restart count of pod container-probe-6492/test-grpc-776b0109-5337-4c43-a7fa-4e9140b5c042 is now 1 (1m6.231223302s elapsed)
  STEP: deleting the pod @ 01/15/25 17:10:11.472
  I0115 17:10:11.509592 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6492" for this suite. @ 01/15/25 17:10:11.542
• [68.384 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/15/25 17:10:11.556
  I0115 17:10:11.556088 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:10:11.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:11.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:11.609
  STEP: Creating Pod @ 01/15/25 17:10:11.614
  STEP: Reading file content from the nginx-container @ 01/15/25 17:10:13.642
  I0115 17:10:13.642913 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7681 PodName:pod-sharedvolume-1f493b24-fcf7-4fb2-ac65-629b5f2aec47 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:10:13.642943 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:10:13.643013 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-7681/pods/pod-sharedvolume-1f493b24-fcf7-4fb2-ac65-629b5f2aec47/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0115 17:10:14.401954 30 exec_util.go:108] Exec stderr: ""
  I0115 17:10:14.402259 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7681" for this suite. @ 01/15/25 17:10:14.409
• [2.867 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/15/25 17:10:14.426
  I0115 17:10:14.426138 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-pred @ 01/15/25 17:10:14.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:14.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:14.462
  I0115 17:10:14.466661 30 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0115 17:10:14.514915 30 util.go:396] Waiting for terminating namespaces to be deleted...
  I0115 17:10:14.520043 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node4 before test
  I0115 17:10:14.525537 30 predicates.go:957] kube-flannel-ds-arm64-rnkwn from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.525591 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 1
  I0115 17:10:14.525607 30 predicates.go:957] kube-proxy-7vgrn from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.525619 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0115 17:10:14.525634 30 predicates.go:957] nginx-proxy-node4 from kube-system started at 2025-01-15 07:30:39 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.525645 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 1
  I0115 17:10:14.525656 30 predicates.go:957] nodelocaldns-g85rh from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.525667 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:10:14.525679 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-f8xf4 from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:10:14.525689 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:10:14.525698 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:10:14.525711 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node5 before test
  I0115 17:10:14.530650 30 predicates.go:957] kube-flannel-ds-arm64-6nlst from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.530704 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0115 17:10:14.530726 30 predicates.go:957] kube-proxy-8b92w from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.530751 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0115 17:10:14.530864 30 predicates.go:957] nginx-proxy-node5 from kube-system started at 2025-01-15 07:02:13 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.530880 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 0
  I0115 17:10:14.530937 30 predicates.go:957] nodelocaldns-9b8lg from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.530965 30 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0115 17:10:14.531024 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-tnssb from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:10:14.531049 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:10:14.531064 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:10:14.531123 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node6 before test
  I0115 17:10:14.538040 30 predicates.go:957] pod-sharedvolume-1f493b24-fcf7-4fb2-ac65-629b5f2aec47 from emptydir-7681 started at 2025-01-15 17:10:11 +0000 UTC (2 container statuses recorded)
  I0115 17:10:14.538091 30 predicates.go:959] 	Container busybox-main-container ready: true, restart count 0
  I0115 17:10:14.538106 30 predicates.go:959] 	Container busybox-sub-container ready: false, restart count 0
  I0115 17:10:14.538119 30 predicates.go:957] kube-flannel-ds-arm64-mj7v9 from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.538132 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 2
  I0115 17:10:14.538143 30 predicates.go:957] kube-proxy-9r2mv from kube-system started at 2025-01-14 20:52:39 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.538154 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 2
  I0115 17:10:14.538166 30 predicates.go:957] nginx-proxy-node6 from kube-system started at 2025-01-15 08:19:10 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.538177 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 2
  I0115 17:10:14.538189 30 predicates.go:957] nodelocaldns-gld7c from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.538202 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:10:14.538213 30 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-15 17:03:28 +0000 UTC (1 container statuses recorded)
  I0115 17:10:14.538224 30 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0115 17:10:14.538235 30 predicates.go:957] sonobuoy-e2e-job-6e9ced84281c4bcc from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:10:14.538256 30 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0115 17:10:14.538266 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:10:14.538278 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-nqlxt from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:10:14.538288 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:10:14.538299 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node node4 @ 01/15/25 17:10:14.598
  STEP: verifying the node has the label node node5 @ 01/15/25 17:10:14.617
  STEP: verifying the node has the label node node6 @ 01/15/25 17:10:14.637
  I0115 17:10:14.657343 30 predicates.go:372] Pod pod-sharedvolume-1f493b24-fcf7-4fb2-ac65-629b5f2aec47 requesting resource cpu=0m on Node node6
  I0115 17:10:14.657553 30 predicates.go:372] Pod kube-flannel-ds-arm64-6nlst requesting resource cpu=150m on Node node5
  I0115 17:10:14.657662 30 predicates.go:372] Pod kube-flannel-ds-arm64-mj7v9 requesting resource cpu=150m on Node node6
  I0115 17:10:14.657759 30 predicates.go:372] Pod kube-flannel-ds-arm64-rnkwn requesting resource cpu=150m on Node node4
  I0115 17:10:14.657848 30 predicates.go:372] Pod kube-proxy-7vgrn requesting resource cpu=0m on Node node4
  I0115 17:10:14.658025 30 predicates.go:372] Pod kube-proxy-8b92w requesting resource cpu=0m on Node node5
  I0115 17:10:14.658140 30 predicates.go:372] Pod kube-proxy-9r2mv requesting resource cpu=0m on Node node6
  I0115 17:10:14.658227 30 predicates.go:372] Pod nginx-proxy-node4 requesting resource cpu=25m on Node node4
  I0115 17:10:14.658314 30 predicates.go:372] Pod nginx-proxy-node5 requesting resource cpu=25m on Node node5
  I0115 17:10:14.658401 30 predicates.go:372] Pod nginx-proxy-node6 requesting resource cpu=25m on Node node6
  I0115 17:10:14.658495 30 predicates.go:372] Pod nodelocaldns-9b8lg requesting resource cpu=100m on Node node5
  I0115 17:10:14.658609 30 predicates.go:372] Pod nodelocaldns-g85rh requesting resource cpu=100m on Node node4
  I0115 17:10:14.658704 30 predicates.go:372] Pod nodelocaldns-gld7c requesting resource cpu=100m on Node node6
  I0115 17:10:14.658791 30 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node node6
  I0115 17:10:14.659003 30 predicates.go:372] Pod sonobuoy-e2e-job-6e9ced84281c4bcc requesting resource cpu=0m on Node node6
  I0115 17:10:14.659153 30 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-f8xf4 requesting resource cpu=0m on Node node4
  I0115 17:10:14.659245 30 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-nqlxt requesting resource cpu=0m on Node node6
  I0115 17:10:14.659338 30 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-tnssb requesting resource cpu=0m on Node node5
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/15/25 17:10:14.66
  I0115 17:10:14.660568 30 predicates.go:382] Creating a pod which consumes cpu=2187m on Node node5
  I0115 17:10:14.707910 30 predicates.go:382] Creating a pod which consumes cpu=4987m on Node node6
  I0115 17:10:14.758480 30 predicates.go:382] Creating a pod which consumes cpu=2187m on Node node4
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/15/25 17:10:17.066
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41.181aecd712ae76d9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6219/filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41 to node6] @ 01/15/25 17:10:17.07
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41.181aecd735db1739], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/15/25 17:10:17.07
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41.181aecd73b6f50ee], Reason = [Created], Message = [Created container: filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41] @ 01/15/25 17:10:17.07
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41.181aecd74364728d], Reason = [Started], Message = [Started container filler-pod-560701fb-8dbc-411f-8417-79d8ef853d41] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a.181aecd7230a17dd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6219/filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a to node4] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a.181aecd7458425d1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a.181aecd74a480b1e], Reason = [Created], Message = [Created container: filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a.181aecd750b99af7], Reason = [Started], Message = [Started container filler-pod-6632a4cf-2d9f-4c30-8e35-9d1edb506a8a] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93.181aecd70ea93996], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6219/filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93 to node5] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93.181aecd74fe442a8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93.181aecd7667c837c], Reason = [Created], Message = [Created container: filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93.181aecd76c968247], Reason = [Started], Message = [Started container filler-pod-f5493fbc-f45c-49da-88b0-5930e9f3fa93] @ 01/15/25 17:10:17.071
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.181aecd79cac99b4], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 3 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.] @ 01/15/25 17:10:17.151
  STEP: removing the label node off the node node4 @ 01/15/25 17:10:18.089
  STEP: verifying the node doesn't have the label node @ 01/15/25 17:10:18.111
  STEP: removing the label node off the node node5 @ 01/15/25 17:10:18.115
  STEP: verifying the node doesn't have the label node @ 01/15/25 17:10:18.144
  STEP: removing the label node off the node node6 @ 01/15/25 17:10:18.149
  STEP: verifying the node doesn't have the label node @ 01/15/25 17:10:18.177
  I0115 17:10:18.185926 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6219" for this suite. @ 01/15/25 17:10:18.192
• [3.779 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/15/25 17:10:18.207
  I0115 17:10:18.207200 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 17:10:18.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:18.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:18.479
  STEP: Creating configMap with name configmap-test-volume-map-e6de2d5b-6697-4ef4-b43a-bae094c69ef9 @ 01/15/25 17:10:18.484
  STEP: Creating a pod to test consume configMaps @ 01/15/25 17:10:18.501
  STEP: Saw pod success @ 01/15/25 17:10:22.584
  I0115 17:10:22.589161 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-d0875a6f-96fa-4e5c-b279-6da00d6fad06 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 17:10:22.609
  I0115 17:10:22.655077 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-514" for this suite. @ 01/15/25 17:10:22.666
• [4.471 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/15/25 17:10:22.678
  I0115 17:10:22.678527 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/15/25 17:10:22.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:22.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:22.938
  STEP: create the container to handle the HTTPGet hook request. @ 01/15/25 17:10:22.948
  STEP: create the pod with lifecycle hook @ 01/15/25 17:10:25.024
  STEP: delete the pod with lifecycle hook @ 01/15/25 17:10:27.078
  STEP: check prestop hook @ 01/15/25 17:10:29.101
  I0115 17:10:29.142631 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8041" for this suite. @ 01/15/25 17:10:29.149
• [6.482 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/15/25 17:10:29.16
  I0115 17:10:29.160827 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 17:10:29.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:29.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:29.237
  STEP: Creating the pod @ 01/15/25 17:10:29.24
  I0115 17:10:31.798795 30 pod_client.go:173] Successfully updated pod "labelsupdate2bb9f488-b46c-4964-ae42-2eeada95a744"
  I0115 17:10:35.830464 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1994" for this suite. @ 01/15/25 17:10:35.837
• [6.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/15/25 17:10:35.852
  I0115 17:10:35.852625 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename discovery @ 01/15/25 17:10:35.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:35.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:35.888
  STEP: Setting up server cert @ 01/15/25 17:10:35.893
  STEP: Requesting APIResourceList from "/api/v1" @ 01/15/25 17:10:36.65
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/15/25 17:10:36.653
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/15/25 17:10:36.655
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/15/25 17:10:36.656
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/15/25 17:10:36.658
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/15/25 17:10:36.659
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/15/25 17:10:36.661
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/15/25 17:10:36.662
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/15/25 17:10:36.663
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/15/25 17:10:36.665
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/15/25 17:10:36.666
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/15/25 17:10:36.668
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/15/25 17:10:36.669
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/15/25 17:10:36.672
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/15/25 17:10:36.675
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/15/25 17:10:36.679
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/15/25 17:10:36.681
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/15/25 17:10:36.683
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/15/25 17:10:36.69
  I0115 17:10:36.693190 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-347" for this suite. @ 01/15/25 17:10:36.703
• [0.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/15/25 17:10:36.726
  I0115 17:10:36.726870 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:10:36.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:36.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:36.776
  STEP: Setting up server cert @ 01/15/25 17:10:36.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:10:37.5
  STEP: Deploying the webhook pod @ 01/15/25 17:10:37.542
  STEP: Wait for the deployment to be ready @ 01/15/25 17:10:37.569
  I0115 17:10:37.578647 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/15/25 17:10:39.596
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:10:39.618
  I0115 17:10:40.618873 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/15/25 17:10:40.63
  STEP: create a pod that should be denied by the webhook @ 01/15/25 17:10:40.688
  STEP: create a pod that causes the webhook to hang @ 01/15/25 17:10:40.706
  STEP: create a configmap that should be denied by the webhook @ 01/15/25 17:10:50.737
  STEP: create a configmap that should be admitted by the webhook @ 01/15/25 17:10:50.996
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/15/25 17:10:51.011
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/15/25 17:10:51.023
  STEP: create a namespace that bypass the webhook @ 01/15/25 17:10:51.03
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/15/25 17:10:51.123
  I0115 17:10:51.319029 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8751" for this suite. @ 01/15/25 17:10:51.327
  STEP: Destroying namespace "webhook-markers-4960" for this suite. @ 01/15/25 17:10:51.391
  STEP: Destroying namespace "exempted-namespace-9444" for this suite. @ 01/15/25 17:10:51.459
• [14.748 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/15/25 17:10:51.475
  I0115 17:10:51.475213 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:10:51.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:51.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:51.528
  STEP: Creating projection with secret that has name projected-secret-test-map-e1df2085-e4cc-4842-a416-38fe0cfdaa76 @ 01/15/25 17:10:51.532
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:10:51.538
  STEP: Saw pod success @ 01/15/25 17:10:55.614
  I0115 17:10:55.618873 30 output.go:207] Trying to get logs from node node6 pod pod-projected-secrets-868bbd7e-92cc-4007-8358-513d6a079a97 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:10:55.627
  I0115 17:10:55.674789 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7354" for this suite. @ 01/15/25 17:10:55.681
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/15/25 17:10:55.703
  I0115 17:10:55.703068 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pod-network-test @ 01/15/25 17:10:55.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:10:55.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:10:55.769
  STEP: Performing setup for networking test in namespace pod-network-test-2383 @ 01/15/25 17:10:55.773
  STEP: creating a selector @ 01/15/25 17:10:55.773
  STEP: Creating the service pods in kubernetes @ 01/15/25 17:10:55.775
  I0115 17:10:55.775490 30 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/15/25 17:11:09.976
  I0115 17:11:12.059831 30 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0115 17:11:12.060067 30 utils.go:496] Going to poll 10.233.67.21 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0115 17:11:12.064917 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.67.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2383 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:11:12.064981 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:11:12.065107 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2383/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.67.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0115 17:11:13.223719 30 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0115 17:11:13.223779 30 utils.go:496] Going to poll 10.233.69.10 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0115 17:11:13.227942 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.69.10 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2383 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:11:13.227997 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:11:13.228083 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2383/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.69.10+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0115 17:11:14.307627 30 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0115 17:11:14.307682 30 utils.go:496] Going to poll 10.233.68.36 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0115 17:11:14.313909 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.68.36 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2383 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:11:14.313959 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:11:14.314032 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2383/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.68.36+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0115 17:11:15.371565 30 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0115 17:11:15.371982 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2383" for this suite. @ 01/15/25 17:11:15.379
• [19.711 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/15/25 17:11:15.414
  I0115 17:11:15.414363 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename namespaces @ 01/15/25 17:11:15.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:11:15.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:11:15.507
  STEP: Creating a test namespace @ 01/15/25 17:11:15.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:11:15.602
  STEP: Creating a service in the namespace @ 01/15/25 17:11:15.606
  STEP: Deleting the namespace @ 01/15/25 17:11:15.641
  STEP: Waiting for the namespace to be removed. @ 01/15/25 17:11:15.666
  STEP: Recreating the namespace @ 01/15/25 17:11:22.672
  STEP: Verifying there is no service in the namespace @ 01/15/25 17:11:22.72
  I0115 17:11:22.725361 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6483" for this suite. @ 01/15/25 17:11:22.731
  STEP: Destroying namespace "nsdeletetest-7626" for this suite. @ 01/15/25 17:11:22.741
  I0115 17:11:22.745526 30 framework.go:370] Namespace nsdeletetest-7626 was already deleted
  STEP: Destroying namespace "nsdeletetest-600" for this suite. @ 01/15/25 17:11:22.745
• [7.341 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/15/25 17:11:22.756
  I0115 17:11:22.756029 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 17:11:22.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:11:22.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:11:22.885
  STEP: Creating pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963 @ 01/15/25 17:11:22.888
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 17:11:24.919
  I0115 17:11:24.924162 30 container_probe.go:1749] Initial restart count of pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 is 0
  I0115 17:11:24.929674 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:26.935906 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:28.942333 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:30.947825 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:32.971025 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:34.976663 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:36.982960 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:38.990678 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:40.999226 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:43.005916 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:45.013552 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:47.019758 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:49.027272 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:51.034013 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:53.040356 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:55.050821 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:57.068035 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:11:59.076211 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:01.083200 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:03.090494 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:05.097624 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:07.104934 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:09.113106 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:11.120622 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:13.128110 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:15.135338 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:17.142798 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:19.149428 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:21.156281 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:23.163283 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:25.169978 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:27.176945 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:29.185531 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:31.192173 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:33.200767 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:35.209842 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:37.218508 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:39.224405 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:41.230641 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:43.238277 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:45.257354 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:47.263910 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:49.272396 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:51.279821 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:53.287391 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:55.294104 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:57.301316 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:12:59.307856 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:01.313873 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:03.584259 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:05.590412 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:07.597933 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:09.605019 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:11.611545 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:13.619282 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:15.626009 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:17.632948 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:19.639416 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:21.647121 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:23.654484 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:25.660272 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:27.666643 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:29.677586 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:31.682618 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:33.689981 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:35.712718 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:37.718636 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:39.725521 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:41.731717 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:43.738120 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:45.744995 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:47.754452 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:49.761499 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:51.769057 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:53.776632 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:55.782783 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:57.791367 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:13:59.798865 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:01.804749 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:03.811515 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:05.817080 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:07.824055 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:09.830701 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:11.836564 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:13.843113 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:15.849414 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:17.854821 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:19.861019 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:21.866866 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:23.873346 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:25.878420 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:27.884732 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:29.891556 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:31.897681 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:33.904117 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:35.910919 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:37.917569 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:39.923938 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:41.932009 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:43.939724 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:45.945584 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:47.953111 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:49.961199 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:51.968280 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:53.975877 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:55.983195 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:57.989714 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:14:59.996594 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:02.003079 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:04.009721 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:06.017981 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:08.025242 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:10.032082 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:12.039841 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:14.047212 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:16.053057 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:18.058614 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:20.065347 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:22.072005 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  I0115 17:15:24.078732 30 container_probe.go:1759] Get pod test-grpc-6341d3ef-d961-48f5-94f2-67d105d18184 in namespace container-probe-8963
  STEP: deleting the pod @ 01/15/25 17:15:26.08
  I0115 17:15:26.107215 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8963" for this suite. @ 01/15/25 17:15:26.116
• [243.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/15/25 17:15:26.124
  I0115 17:15:26.124690 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:15:26.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:15:26.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:15:26.169
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/15/25 17:15:26.18
  STEP: Saw pod success @ 01/15/25 17:15:30.214
  I0115 17:15:30.219171 30 output.go:207] Trying to get logs from node node6 pod pod-cb5caa16-2389-4bf7-b133-36ed33ec202e container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:15:30.244
  I0115 17:15:30.287137 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9946" for this suite. @ 01/15/25 17:15:30.294
• [4.180 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/15/25 17:15:30.304
  I0115 17:15:30.304852 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 17:15:30.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:15:30.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:15:30.334
  STEP: Creating secret with name secret-test-6b92e42d-4330-4e04-8f55-cd12dd050270 @ 01/15/25 17:15:30.338
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:15:30.344
  STEP: Saw pod success @ 01/15/25 17:15:34.399
  I0115 17:15:34.404339 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-eeed5cdb-4ed9-4422-a1da-b239ad82a0ac container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:15:34.413
  I0115 17:15:34.435862 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7209" for this suite. @ 01/15/25 17:15:34.441
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/15/25 17:15:34.451
  I0115 17:15:34.451843 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:15:34.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:15:34.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:15:34.489
  STEP: creating service in namespace services-5416 @ 01/15/25 17:15:34.493
  STEP: creating service affinity-nodeport-transition in namespace services-5416 @ 01/15/25 17:15:34.5
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5416 @ 01/15/25 17:15:34.524
  I0115 17:15:34.555195      30 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5416, replica count: 3
  I0115 17:15:37.606858      30 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 17:15:37.622026 30 resource.go:361] Creating new exec pod
  I0115 17:15:40.656620 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5416 exec execpod-affinityslk4v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0115 17:15:41.157522 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.61.175) 80 port [tcp/http] succeeded!\n"
  I0115 17:15:41.157633 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:15:41.157761 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5416 exec execpod-affinityslk4v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.175 80'
  I0115 17:15:41.362589 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.175 80\nConnection to 10.233.61.175 80 port [tcp/http] succeeded!\n"
  I0115 17:15:41.362660 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:15:41.362783 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5416 exec execpod-affinityslk4v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.55 32362'
  I0115 17:15:41.552153 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.55 32362\nConnection to 192.168.111.55 32362 port [tcp/*] succeeded!\n"
  I0115 17:15:41.552235 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:15:41.552353 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5416 exec execpod-affinityslk4v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.146 32362'
  I0115 17:15:41.697119 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.146 32362\nConnection to 192.168.111.146 32362 port [tcp/*] succeeded!\n"
  I0115 17:15:41.697194 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:15:41.714158 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5416 exec execpod-affinityslk4v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.111.146:32362/ ; done'
  I0115 17:15:42.132036 30 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n"
  I0115 17:15:42.132116 30 builder.go:147] stdout: "\naffinity-nodeport-transition-bvzxs\naffinity-nodeport-transition-qrzw5\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-bvzxs\naffinity-nodeport-transition-qrzw5\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-bvzxs\naffinity-nodeport-transition-qrzw5\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-bvzxs\naffinity-nodeport-transition-qrzw5\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-bvzxs\naffinity-nodeport-transition-qrzw5\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-bvzxs"
  I0115 17:15:42.132140 30 service.go:242] Received response from host: affinity-nodeport-transition-bvzxs
  I0115 17:15:42.132155 30 service.go:242] Received response from host: affinity-nodeport-transition-qrzw5
  I0115 17:15:42.132169 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.132181 30 service.go:242] Received response from host: affinity-nodeport-transition-bvzxs
  I0115 17:15:42.132355 30 service.go:242] Received response from host: affinity-nodeport-transition-qrzw5
  I0115 17:15:42.132381 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.132394 30 service.go:242] Received response from host: affinity-nodeport-transition-bvzxs
  I0115 17:15:42.132407 30 service.go:242] Received response from host: affinity-nodeport-transition-qrzw5
  I0115 17:15:42.132421 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.132433 30 service.go:242] Received response from host: affinity-nodeport-transition-bvzxs
  I0115 17:15:42.132444 30 service.go:242] Received response from host: affinity-nodeport-transition-qrzw5
  I0115 17:15:42.132456 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.132468 30 service.go:242] Received response from host: affinity-nodeport-transition-bvzxs
  I0115 17:15:42.132480 30 service.go:242] Received response from host: affinity-nodeport-transition-qrzw5
  I0115 17:15:42.132491 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.132504 30 service.go:242] Received response from host: affinity-nodeport-transition-bvzxs
  I0115 17:15:42.145277 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5416 exec execpod-affinityslk4v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.111.146:32362/ ; done'
  I0115 17:15:42.393150 30 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:32362/\n"
  I0115 17:15:42.393261 30 builder.go:147] stdout: "\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4\naffinity-nodeport-transition-qk8v4"
  I0115 17:15:42.393288 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393303 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393321 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393334 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393346 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393359 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393371 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393382 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393396 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393408 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393420 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.393432 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.394756 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.394814 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.394830 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.394843 30 service.go:242] Received response from host: affinity-nodeport-transition-qk8v4
  I0115 17:15:42.394970 30 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5416, will wait for the garbage collector to delete the pods @ 01/15/25 17:15:42.421
  I0115 17:15:42.486195 30 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 10.194017ms
  I0115 17:15:42.587550 30 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.342559ms
  I0115 17:15:45.825104 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5416" for this suite. @ 01/15/25 17:15:45.834
• [11.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/15/25 17:15:45.847
  I0115 17:15:45.847951 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename proxy @ 01/15/25 17:15:45.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:15:45.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:15:45.885
  I0115 17:15:45.889383 30 proxy.go:387] Creating pod...
  I0115 17:15:47.913376 30 proxy.go:411] Creating service...
  I0115 17:15:47.929961 30 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=DELETE
  I0115 17:15:47.936020 30 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0115 17:15:47.936082 30 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=OPTIONS
  I0115 17:15:47.946663 30 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0115 17:15:47.946722 30 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=PATCH
  I0115 17:15:47.951283 30 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0115 17:15:47.951342 30 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=POST
  I0115 17:15:48.034162 30 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0115 17:15:48.034231 30 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=PUT
  I0115 17:15:48.040355 30 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0115 17:15:48.040411 30 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=DELETE
  I0115 17:15:48.046703 30 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0115 17:15:48.046767 30 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0115 17:15:48.052677 30 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0115 17:15:48.052721 30 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=PATCH
  I0115 17:15:48.059668 30 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0115 17:15:48.059726 30 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=POST
  I0115 17:15:48.065530 30 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0115 17:15:48.065585 30 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=PUT
  I0115 17:15:48.073879 30 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0115 17:15:48.074087 30 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=GET
  I0115 17:15:48.078161 30 proxy.go:487] http.Client request:GET StatusCode:301
  I0115 17:15:48.078372 30 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=GET
  I0115 17:15:48.084687 30 proxy.go:487] http.Client request:GET StatusCode:301
  I0115 17:15:48.084856 30 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/pods/agnhost/proxy?method=HEAD
  I0115 17:15:48.089462 30 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0115 17:15:48.089726 30 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4372/services/e2e-proxy-test-service/proxy?method=HEAD
  I0115 17:15:48.099821 30 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0115 17:15:48.100030 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4372" for this suite. @ 01/15/25 17:15:48.107
• [2.272 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 01/15/25 17:15:48.12
  I0115 17:15:48.120106 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 17:15:48.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:15:48.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:15:48.156
  STEP: Creating service test in namespace statefulset-8630 @ 01/15/25 17:15:48.16
  I0115 17:15:48.189410 30 wait.go:40] Found 0 stateful pods, waiting for 1
  I0115 17:15:58.195158 30 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/15/25 17:15:58.204
  I0115 17:15:58.247221 30 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 17:15:58.247281 30 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0115 17:16:08.261310 30 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 17:16:08.261376 30 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/15/25 17:16:08.275
  STEP: Delete all of the StatefulSets @ 01/15/25 17:16:08.286
  STEP: Verify that StatefulSets have been deleted @ 01/15/25 17:16:08.31
  I0115 17:16:08.314160 30 statefulset.go:138] Deleting all statefulset in ns statefulset-8630
  I0115 17:16:08.348389 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8630" for this suite. @ 01/15/25 17:16:08.357
• [20.273 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 01/15/25 17:16:08.393
  I0115 17:16:08.393716 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 17:16:08.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:08.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:08.431
  STEP: Creating ServiceAccount "e2e-sa-snjjn"  @ 01/15/25 17:16:08.436
  I0115 17:16:08.444359 30 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-snjjn"  @ 01/15/25 17:16:08.444
  I0115 17:16:08.459892 30 service_accounts.go:868] AutomountServiceAccountToken: true
  I0115 17:16:08.460286 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-416" for this suite. @ 01/15/25 17:16:08.467
• [0.084 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 01/15/25 17:16:08.478
  I0115 17:16:08.478260 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:16:08.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:08.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:08.544
  STEP: creating a Service @ 01/15/25 17:16:08.56
  STEP: watching for the Service to be added @ 01/15/25 17:16:08.628
  I0115 17:16:08.630780 30 service.go:3425] Found Service test-service-nkbz4 in namespace services-7824 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32318}]
  I0115 17:16:08.630833 30 service.go:3432] Service test-service-nkbz4 created
  STEP: Getting /status @ 01/15/25 17:16:08.63
  I0115 17:16:08.638620 30 service.go:3443] Service test-service-nkbz4 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/15/25 17:16:08.638
  STEP: watching for the Service to be patched @ 01/15/25 17:16:08.648
  I0115 17:16:08.651686 30 service.go:3466] observed Service test-service-nkbz4 in namespace services-7824 with annotations: map[] & LoadBalancer: {[]}
  I0115 17:16:08.651930 30 service.go:3469] Found Service test-service-nkbz4 in namespace services-7824 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0x4000966f10 []}]}
  I0115 17:16:08.652102 30 service.go:3476] Service test-service-nkbz4 has service status patched
  STEP: updating the ServiceStatus @ 01/15/25 17:16:08.652
  I0115 17:16:08.676988 30 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/15/25 17:16:08.677
  I0115 17:16:08.679561 30 service.go:3507] Observed Service test-service-nkbz4 in namespace services-7824 with annotations: map[] & Conditions: []
  I0115 17:16:08.679742 30 service.go:3518] Observed Service test-service-nkbz4 in namespace services-7824 with annotations: map[patchedstatus:true] & Conditions: []
  I0115 17:16:08.679887 30 service.go:3514] Found Service test-service-nkbz4 in namespace services-7824 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0115 17:16:08.679930 30 service.go:3525] Service test-service-nkbz4 has service status updated
  STEP: patching the service @ 01/15/25 17:16:08.679
  STEP: watching for the Service to be patched @ 01/15/25 17:16:08.712
  I0115 17:16:08.715186 30 service.go:3548] observed Service test-service-nkbz4 in namespace services-7824 with labels: map[test-service-static:true]
  I0115 17:16:08.715262 30 service.go:3548] observed Service test-service-nkbz4 in namespace services-7824 with labels: map[test-service-static:true]
  I0115 17:16:08.715486 30 service.go:3548] observed Service test-service-nkbz4 in namespace services-7824 with labels: map[test-service-static:true]
  I0115 17:16:08.718210 30 service.go:3551] Found Service test-service-nkbz4 in namespace services-7824 with labels: map[test-service:patched test-service-static:true]
  I0115 17:16:08.718256 30 service.go:3558] Service test-service-nkbz4 patched
  STEP: deleting the service @ 01/15/25 17:16:08.718
  STEP: watching for the Service to be deleted @ 01/15/25 17:16:08.803
  I0115 17:16:08.805406 30 service.go:3582] Observed event: ADDED
  I0115 17:16:08.805538 30 service.go:3582] Observed event: MODIFIED
  I0115 17:16:08.805671 30 service.go:3582] Observed event: MODIFIED
  I0115 17:16:08.806150 30 service.go:3582] Observed event: MODIFIED
  I0115 17:16:08.806314 30 service.go:3578] Found Service test-service-nkbz4 in namespace services-7824 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0115 17:16:08.806430 30 service.go:3587] Service test-service-nkbz4 deleted
  I0115 17:16:08.807154 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7824" for this suite. @ 01/15/25 17:16:08.817
• [0.351 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 01/15/25 17:16:08.83
  I0115 17:16:08.830876 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 17:16:08.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:08.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:08.871
  STEP: Creating a test headless service @ 01/15/25 17:16:08.875
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2785 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2785;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2785 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2785;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2785.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2785.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2785.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2785.svc;check="$$(dig +notcp +noall +answer +search 165.51.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.51.165_udp@PTR;check="$$(dig +tcp +noall +answer +search 165.51.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.51.165_tcp@PTR;sleep 1; done
   @ 01/15/25 17:16:08.92
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2785 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2785;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2785 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2785;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2785.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2785.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2785.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2785.svc;check="$$(dig +notcp +noall +answer +search 165.51.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.51.165_udp@PTR;check="$$(dig +tcp +noall +answer +search 165.51.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.51.165_tcp@PTR;sleep 1; done
   @ 01/15/25 17:16:08.92
  STEP: creating a pod to probe DNS @ 01/15/25 17:16:08.92
  STEP: submitting the pod to kubernetes @ 01/15/25 17:16:08.92
  STEP: retrieving the pod @ 01/15/25 17:16:10.959
  STEP: looking for the results for each expected name from probers @ 01/15/25 17:16:10.964
  I0115 17:16:10.969995 30 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:10.974598 30 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:10.979229 30 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2785 from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.010675 30 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2785 from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.017302 30 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.022225 30 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.026828 30 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.033592 30 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.061101 30 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.067122 30 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.072814 30 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2785 from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.076871 30 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2785 from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.082792 30 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.087596 30 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.092544 30 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.098758 30 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:11.120693 30 dns_common.go:506] Lookups using dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-2785 agnhost_tcp@dns-test-service.dns-2785 agnhost_udp@dns-test-service.dns-2785.svc agnhost_tcp@dns-test-service.dns-2785.svc agnhost_udp@_http._tcp.dns-test-service.dns-2785.svc agnhost_tcp@_http._tcp.dns-test-service.dns-2785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2785 jessie_tcp@dns-test-service.dns-2785 jessie_udp@dns-test-service.dns-2785.svc jessie_tcp@dns-test-service.dns-2785.svc jessie_udp@_http._tcp.dns-test-service.dns-2785.svc jessie_tcp@_http._tcp.dns-test-service.dns-2785.svc]

  I0115 17:16:11.128747 30 dns_common.go:514] Pod client logs for webserver: 
  I0115 17:16:11.137102 30 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0115 17:16:11.144641 30 dns_common.go:514] Pod client logs for jessie-querier: 
  I0115 17:16:16.000208 30 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:16.065214 30 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2785.svc from pod dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76: the server could not find the requested resource (get pods dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76)
  I0115 17:16:16.086733 30 dns_common.go:506] Lookups using dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76 failed for: [agnhost_udp@_http._tcp.dns-test-service.dns-2785.svc jessie_tcp@_http._tcp.dns-test-service.dns-2785.svc]

  I0115 17:16:16.096360 30 dns_common.go:514] Pod client logs for webserver: 
  I0115 17:16:16.106970 30 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0115 17:16:16.114936 30 dns_common.go:514] Pod client logs for jessie-querier: 
  I0115 17:16:21.094707 30 dns_common.go:546] DNS probes using dns-2785/dns-test-c3a5a33e-b779-4b0a-84fe-5993975f2a76 succeeded

  STEP: deleting the pod @ 01/15/25 17:16:21.095
  STEP: deleting the test service @ 01/15/25 17:16:21.128
  STEP: deleting the test headless service @ 01/15/25 17:16:21.175
  I0115 17:16:21.193279 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2785" for this suite. @ 01/15/25 17:16:21.201
• [12.384 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/15/25 17:16:21.214
  I0115 17:16:21.214698 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename podtemplate @ 01/15/25 17:16:21.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:21.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:21.247
  STEP: Create a pod template @ 01/15/25 17:16:21.251
  STEP: Replace a pod template @ 01/15/25 17:16:21.27
  I0115 17:16:21.283810 30 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0115 17:16:21.284009 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5462" for this suite. @ 01/15/25 17:16:21.301
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 01/15/25 17:16:21.316
  I0115 17:16:21.316393 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 17:16:21.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:21.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:21.354
  I0115 17:16:21.358857 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 create -f -'
  I0115 17:16:21.549058 30 builder.go:146] stderr: ""
  I0115 17:16:21.549116 30 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0115 17:16:21.549192 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 create -f -'
  I0115 17:16:21.786135 30 builder.go:146] stderr: ""
  I0115 17:16:21.786213 30 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/15/25 17:16:21.786
  I0115 17:16:22.793043 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 17:16:22.793099 30 framework.go:733] Found 0 / 1
  I0115 17:16:23.792715 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 17:16:23.792772 30 framework.go:733] Found 1 / 1
  I0115 17:16:23.792796 30 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0115 17:16:23.797223 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 17:16:23.797270 30 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0115 17:16:23.797349 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 describe pod agnhost-primary-6b86t'
  I0115 17:16:23.938817 30 builder.go:146] stderr: ""
  I0115 17:16:23.939156 30 builder.go:147] stdout: "Name:             agnhost-primary-6b86t\nNamespace:        kubectl-3271\nPriority:         0\nService Account:  default\nNode:             node6/192.168.111.222\nStart Time:       Wed, 15 Jan 2025 17:16:21 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.68.47\nIPs:\n  IP:           10.233.68.47\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://70ea2cb757e6649fe8d7d7169bb0a16e398dcb4239a650a335031d8c360f1dde\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 15 Jan 2025 17:16:22 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-njsjv (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-njsjv:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-3271/agnhost-primary-6b86t to node6\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0115 17:16:23.939274 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 describe rc agnhost-primary'
  I0115 17:16:24.033774 30 builder.go:146] stderr: ""
  I0115 17:16:24.033859 30 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3271\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-6b86t\n"
  I0115 17:16:24.033960 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 describe service agnhost-primary'
  I0115 17:16:24.137827 30 builder.go:146] stderr: ""
  I0115 17:16:24.137894 30 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3271\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.27.24\nIPs:                      10.233.27.24\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.68.47:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0115 17:16:24.145008 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 describe node node1'
  I0115 17:16:24.254620 30 builder.go:146] stderr: ""
  I0115 17:16:24.254778 30 builder.go:147] stdout: "Name:               node1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=arm64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=arm64\n                    kubernetes.io/hostname=node1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"b2:72:2d:5e:90:4c\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.111.189\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 14 Jan 2025 20:51:42 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  node1\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 15 Jan 2025 17:16:15 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 14 Jan 2025 20:53:40 +0000   Tue, 14 Jan 2025 20:53:40 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Wed, 15 Jan 2025 17:16:16 +0000   Tue, 14 Jan 2025 20:51:40 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 15 Jan 2025 17:16:16 +0000   Tue, 14 Jan 2025 20:51:40 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 15 Jan 2025 17:16:16 +0000   Tue, 14 Jan 2025 20:51:40 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 15 Jan 2025 17:16:16 +0000   Wed, 15 Jan 2025 10:16:45 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.111.189\n  Hostname:    node1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  101425200Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      2Gi\n  hugepages-32Mi:     0\n  hugepages-64Ki:     0\n  memory:             8118724Ki\n  pods:               110\nAllocatable:\n  cpu:                3400m\n  ephemeral-storage:  92424888166\n  hugepages-1Gi:      0\n  hugepages-2Mi:      2Gi\n  hugepages-32Mi:     0\n  hugepages-64Ki:     0\n  memory:             5132740Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ed3aa6cb4e1d4927943ad28e0d977e1f\n  System UUID:                aa5ba23c-5df2-4d37-b2cb-f819c866b1cf\n  Boot ID:                    0acc9502-a9bb-40e6-9bff-8049d0cb598b\n  Kernel Version:             5.15.0-122-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               arm64\n  Container Runtime Version:  containerd://1.7.24\n  Kubelet Version:            v1.32.0\n  Kube-Proxy Version:         v1.32.0\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 kube-apiserver-node1                                       250m (7%)     0 (0%)      0 (0%)           0 (0%)         20h\n  kube-system                 kube-controller-manager-node1                              200m (5%)     0 (0%)      0 (0%)           0 (0%)         20h\n  kube-system                 kube-flannel-ds-arm64-85ngp                                150m (4%)     300m (8%)   64M (1%)         500M (9%)      20h\n  kube-system                 kube-proxy-txkpf                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         20h\n  kube-system                 kube-scheduler-node1                                       100m (2%)     0 (0%)      0 (0%)           0 (0%)         20h\n  kube-system                 nodelocaldns-ldwzn                                         100m (2%)     0 (0%)      70Mi (1%)        200Mi (3%)     20h\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-2xgsg    0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests        Limits\n  --------           --------        ------\n  cpu                800m (23%)      300m (8%)\n  memory             137400320 (2%)  709715200 (13%)\n  ephemeral-storage  0 (0%)          0 (0%)\n  hugepages-1Gi      0 (0%)          0 (0%)\n  hugepages-2Mi      0 (0%)          0 (0%)\n  hugepages-32Mi     0 (0%)          0 (0%)\n  hugepages-64Ki     0 (0%)          0 (0%)\nEvents:              <none>\n"
  I0115 17:16:24.254923 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-3271 describe namespace kubectl-3271'
  I0115 17:16:24.344000 30 builder.go:146] stderr: ""
  I0115 17:16:24.344086 30 builder.go:147] stdout: "Name:         kubectl-3271\nLabels:       e2e-framework=kubectl\n              e2e-run=fede6329-6d35-44b0-93a1-255e31e3d980\n              kubernetes.io/metadata.name=kubectl-3271\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0115 17:16:24.344286 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3271" for this suite. @ 01/15/25 17:16:24.35
• [3.043 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/15/25 17:16:24.359
  I0115 17:16:24.359415 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubelet-test @ 01/15/25 17:16:24.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:24.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:24.452
  I0115 17:16:26.501478 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9065" for this suite. @ 01/15/25 17:16:26.507
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/15/25 17:16:26.516
  I0115 17:16:26.516759 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename security-context-test @ 01/15/25 17:16:26.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:26.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:26.548
  I0115 17:16:30.595425 30 security_context.go:538] Got logs for pod "busybox-privileged-false-f3882393-24d1-4e1e-a4cd-4c1e9eccce57": "ip: RTNETLINK answers: Operation not permitted\n"
  I0115 17:16:30.595645 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1739" for this suite. @ 01/15/25 17:16:30.602
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/15/25 17:16:30.611
  I0115 17:16:30.611118 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename cronjob @ 01/15/25 17:16:30.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:16:30.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:16:30.647
  STEP: Creating a cronjob @ 01/15/25 17:16:30.65
  STEP: Ensuring more than one job is running at a time @ 01/15/25 17:16:30.686
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/15/25 17:18:00.69
  STEP: Removing cronjob @ 01/15/25 17:18:00.697
  I0115 17:18:00.707914 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1408" for this suite. @ 01/15/25 17:18:00.714
• [90.113 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/15/25 17:18:00.724
  I0115 17:18:00.724745 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename security-context-test @ 01/15/25 17:18:00.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:18:00.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:18:00.788
  I0115 17:18:04.827144 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-353" for this suite. @ 01/15/25 17:18:04.833
• [4.121 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/15/25 17:18:04.845
  I0115 17:18:04.846034 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/15/25 17:18:04.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:18:04.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:18:04.882
  I0115 17:18:04.886608 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:19:06.205227 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2663" for this suite. @ 01/15/25 17:19:06.211
• [61.381 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/15/25 17:19:06.227
  I0115 17:19:06.227129 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:19:06.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:19:06.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:19:06.275
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/15/25 17:19:06.283
  STEP: Saw pod success @ 01/15/25 17:19:10.323
  I0115 17:19:10.346190 30 output.go:207] Trying to get logs from node node6 pod pod-34c843f4-d533-43fd-b7ab-7da11ac41bb2 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:19:10.371
  I0115 17:19:10.397472 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1165" for this suite. @ 01/15/25 17:19:10.405
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/15/25 17:19:10.414
  I0115 17:19:10.414226 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:19:10.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:19:10.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:19:10.446
  STEP: Setting up server cert @ 01/15/25 17:19:10.549
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:19:11.422
  STEP: Deploying the webhook pod @ 01/15/25 17:19:11.436
  STEP: Wait for the deployment to be ready @ 01/15/25 17:19:11.458
  I0115 17:19:11.473644 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/15/25 17:19:13.489
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:19:13.502
  I0115 17:19:14.502664 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/15/25 17:19:14.512
  STEP: verifying the validating webhook match conditions @ 01/15/25 17:19:14.526
  STEP: updating the validating webhook match conditions @ 01/15/25 17:19:14.53
  STEP: verifying the validating webhook match conditions @ 01/15/25 17:19:14.543
  I0115 17:19:14.614554 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5851" for this suite. @ 01/15/25 17:19:14.626
  STEP: Destroying namespace "webhook-markers-1169" for this suite. @ 01/15/25 17:19:14.637
• [4.233 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/15/25 17:19:14.647
  I0115 17:19:14.647113 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:19:14.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:19:14.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:19:14.678
  STEP: Setting up server cert @ 01/15/25 17:19:14.784
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:19:15.36
  STEP: Deploying the webhook pod @ 01/15/25 17:19:15.372
  STEP: Wait for the deployment to be ready @ 01/15/25 17:19:15.393
  I0115 17:19:15.408691 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/15/25 17:19:17.424
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:19:17.438
  I0115 17:19:18.438572 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/15/25 17:19:18.448
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/15/25 17:19:18.448
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/15/25 17:19:18.474
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/15/25 17:19:19.488
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/15/25 17:19:19.488
  STEP: Having no error when timeout is longer than webhook latency @ 01/15/25 17:19:20.539
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/15/25 17:19:20.539
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/15/25 17:19:25.609
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/15/25 17:19:25.61
  I0115 17:19:30.737583 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3790" for this suite. @ 01/15/25 17:19:30.744
  STEP: Destroying namespace "webhook-markers-8271" for this suite. @ 01/15/25 17:19:30.758
• [16.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 01/15/25 17:19:30.768
  I0115 17:19:30.769024 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 17:19:30.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:19:30.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:19:30.805
  STEP: Creating a pod to test downward api env vars @ 01/15/25 17:19:30.809
  STEP: Saw pod success @ 01/15/25 17:19:34.844
  I0115 17:19:34.850024 30 output.go:207] Trying to get logs from node node6 pod downward-api-9681d807-cd6e-4fc8-892c-ca45faf0d17c container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 17:19:34.859
  I0115 17:19:34.887208 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8652" for this suite. @ 01/15/25 17:19:34.894
• [4.138 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/15/25 17:19:34.907
  I0115 17:19:34.907870 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 17:19:34.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:19:34.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:19:34.948
  STEP: Creating secret with name secret-test-3ed59ee0-3077-490f-a156-4ff61e3d20c8 @ 01/15/25 17:19:34.953
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:19:34.96
  STEP: Saw pod success @ 01/15/25 17:19:38.997
  I0115 17:19:39.019495 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-5f7e7b9f-20f4-4273-ad3c-c482051e8136 container secret-env-test: <nil>
  STEP: delete the pod @ 01/15/25 17:19:39.03
  I0115 17:19:39.072208 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3522" for this suite. @ 01/15/25 17:19:39.079
• [4.184 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/15/25 17:19:39.091
  I0115 17:19:39.091729 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename subpath @ 01/15/25 17:19:39.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:19:39.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:19:39.124
  STEP: Setting up data @ 01/15/25 17:19:39.127
  STEP: Creating pod pod-subpath-test-configmap-4xbv @ 01/15/25 17:19:39.142
  STEP: Creating a pod to test atomic-volume-subpath @ 01/15/25 17:19:39.142
  STEP: Saw pod success @ 01/15/25 17:20:03.253
  I0115 17:20:03.257343 30 output.go:207] Trying to get logs from node node6 pod pod-subpath-test-configmap-4xbv container test-container-subpath-configmap-4xbv: <nil>
  STEP: delete the pod @ 01/15/25 17:20:03.266
  STEP: Deleting pod pod-subpath-test-configmap-4xbv @ 01/15/25 17:20:03.293
  I0115 17:20:03.293349 30 delete.go:62] Deleting pod "pod-subpath-test-configmap-4xbv" in namespace "subpath-113"
  I0115 17:20:03.297272 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-113" for this suite. @ 01/15/25 17:20:03.303
• [24.220 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/15/25 17:20:03.312
  I0115 17:20:03.312947 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:20:03.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:03.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:03.344
  STEP: creating service in namespace services-5724 @ 01/15/25 17:20:03.348
  STEP: creating service affinity-clusterip-transition in namespace services-5724 @ 01/15/25 17:20:03.348
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5724 @ 01/15/25 17:20:03.368
  I0115 17:20:03.382011      30 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5724, replica count: 3
  I0115 17:20:06.433068      30 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 17:20:06.443521 30 resource.go:361] Creating new exec pod
  I0115 17:20:09.479496 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5724 exec execpod-affinityczlkq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0115 17:20:09.650172 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.29.120) 80 port [tcp/http] succeeded!\n"
  I0115 17:20:09.650246 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:20:09.650405 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5724 exec execpod-affinityczlkq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.120 80'
  I0115 17:20:09.825156 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.120 80\nConnection to 10.233.29.120 80 port [tcp/http] succeeded!\n"
  I0115 17:20:09.825267 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:20:09.865724 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5724 exec execpod-affinityczlkq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.29.120:80/ ; done'
  I0115 17:20:10.131573 30 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n"
  I0115 17:20:10.131695 30 builder.go:147] stdout: "\naffinity-clusterip-transition-7s72r\naffinity-clusterip-transition-c8sqj\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-7s72r\naffinity-clusterip-transition-c8sqj\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-7s72r\naffinity-clusterip-transition-c8sqj\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-7s72r\naffinity-clusterip-transition-c8sqj\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-7s72r\naffinity-clusterip-transition-c8sqj\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-7s72r"
  I0115 17:20:10.131723 30 service.go:242] Received response from host: affinity-clusterip-transition-7s72r
  I0115 17:20:10.131767 30 service.go:242] Received response from host: affinity-clusterip-transition-c8sqj
  I0115 17:20:10.131782 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.131812 30 service.go:242] Received response from host: affinity-clusterip-transition-7s72r
  I0115 17:20:10.131826 30 service.go:242] Received response from host: affinity-clusterip-transition-c8sqj
  I0115 17:20:10.131838 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.131851 30 service.go:242] Received response from host: affinity-clusterip-transition-7s72r
  I0115 17:20:10.131862 30 service.go:242] Received response from host: affinity-clusterip-transition-c8sqj
  I0115 17:20:10.131875 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.131886 30 service.go:242] Received response from host: affinity-clusterip-transition-7s72r
  I0115 17:20:10.131898 30 service.go:242] Received response from host: affinity-clusterip-transition-c8sqj
  I0115 17:20:10.131911 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.131942 30 service.go:242] Received response from host: affinity-clusterip-transition-7s72r
  I0115 17:20:10.131955 30 service.go:242] Received response from host: affinity-clusterip-transition-c8sqj
  I0115 17:20:10.131976 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.131988 30 service.go:242] Received response from host: affinity-clusterip-transition-7s72r
  I0115 17:20:10.145333 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5724 exec execpod-affinityczlkq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.29.120:80/ ; done'
  I0115 17:20:10.396159 30 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.29.120:80/\n"
  I0115 17:20:10.396274 30 builder.go:147] stdout: "\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2\naffinity-clusterip-transition-qxhw2"
  I0115 17:20:10.396306 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396325 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396340 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396357 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396372 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396384 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396397 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396409 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396425 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396446 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396468 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396479 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396492 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396504 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396519 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396530 30 service.go:242] Received response from host: affinity-clusterip-transition-qxhw2
  I0115 17:20:10.396679 30 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5724, will wait for the garbage collector to delete the pods @ 01/15/25 17:20:10.417
  I0115 17:20:10.484009 30 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 10.555706ms
  I0115 17:20:10.584704 30 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.684444ms
  I0115 17:20:13.724446 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5724" for this suite. @ 01/15/25 17:20:13.731
• [10.428 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/15/25 17:20:13.741
  I0115 17:20:13.741624 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 17:20:13.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:13.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:13.788
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/15/25 17:20:13.793
  I0115 17:20:13.793776 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:20:21.152083 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:20:32.663642 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9931" for this suite. @ 01/15/25 17:20:32.675
• [18.943 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/15/25 17:20:32.685
  I0115 17:20:32.685565 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 17:20:32.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:32.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:32.715
  I0115 17:20:32.731105 30 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0115 17:20:37.739709 30 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/15/25 17:20:37.739
  I0115 17:20:37.739904 30 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/15/25 17:20:37.753
  I0115 17:20:37.780283 30 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1716",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04819f28-9129-4245-9bae-5bf56fcbe2f3",
      ResourceVersion: (string) (len=6) "212606",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872558437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872558437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 17:20:37.790796 30 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0115 17:20:37.832036 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1716" for this suite. @ 01/15/25 17:20:37.941
• [5.268 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/15/25 17:20:37.954
  I0115 17:20:37.954467 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename endpointslice @ 01/15/25 17:20:37.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:37.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:37.996
  I0115 17:20:40.101090 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4569" for this suite. @ 01/15/25 17:20:40.107
• [2.162 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/15/25 17:20:40.117
  I0115 17:20:40.117102 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replication-controller @ 01/15/25 17:20:40.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:40.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:40.157
  STEP: Creating replication controller my-hostname-basic-faf81476-94fe-4343-b2d8-181a49efcd21 @ 01/15/25 17:20:40.162
  I0115 17:20:40.175511 30 resource.go:87] Pod name my-hostname-basic-faf81476-94fe-4343-b2d8-181a49efcd21: Found 0 pods out of 1
  I0115 17:20:45.185946 30 resource.go:87] Pod name my-hostname-basic-faf81476-94fe-4343-b2d8-181a49efcd21: Found 1 pods out of 1
  I0115 17:20:45.185997 30 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-faf81476-94fe-4343-b2d8-181a49efcd21" are running
  I0115 17:20:45.190854 30 rc.go:523] Pod "my-hostname-basic-faf81476-94fe-4343-b2d8-181a49efcd21-9t4hm" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 17:20:41 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 17:20:40 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 17:20:41 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 17:20:41 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 17:20:40 +0000 UTC Reason: Message:}])
  I0115 17:20:45.190897 30 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/15/25 17:20:45.19
  I0115 17:20:45.206069 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7947" for this suite. @ 01/15/25 17:20:45.212
• [5.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/15/25 17:20:45.222
  I0115 17:20:45.222039 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubelet-test @ 01/15/25 17:20:45.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:45.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:45.258
  I0115 17:20:45.306963 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3121" for this suite. @ 01/15/25 17:20:45.415
• [0.203 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/15/25 17:20:45.425
  I0115 17:20:45.425499 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 17:20:45.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:45.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:45.46
  STEP: Creating configMap configmap-5817/configmap-test-fc94ac0a-37e2-4dcf-ad43-4b4dd4060ce4 @ 01/15/25 17:20:45.463
  STEP: Creating a pod to test consume configMaps @ 01/15/25 17:20:45.472
  STEP: Saw pod success @ 01/15/25 17:20:49.505
  I0115 17:20:49.509685 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-f33b7ff8-6281-4561-9bef-e104bf849227 container env-test: <nil>
  STEP: delete the pod @ 01/15/25 17:20:49.521
  I0115 17:20:49.553782 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5817" for this suite. @ 01/15/25 17:20:49.561
• [4.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/15/25 17:20:49.57
  I0115 17:20:49.570257 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:20:49.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:49.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:49.607
  STEP: Creating the pod @ 01/15/25 17:20:49.61
  I0115 17:20:52.174501 30 pod_client.go:173] Successfully updated pod "annotationupdate21b108ad-266c-44d6-b91b-1cc21f0571f0"
  I0115 17:20:56.204402 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1407" for this suite. @ 01/15/25 17:20:56.21
• [6.653 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/15/25 17:20:56.223
  I0115 17:20:56.223491 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename events @ 01/15/25 17:20:56.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:56.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:56.256
  STEP: Create set of events @ 01/15/25 17:20:56.26
  I0115 17:20:56.270521 30 core_events.go:198] created test-event-1
  I0115 17:20:56.277455 30 core_events.go:198] created test-event-2
  I0115 17:20:56.285123 30 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/15/25 17:20:56.285
  STEP: delete collection of events @ 01/15/25 17:20:56.289
  I0115 17:20:56.289265 30 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/15/25 17:20:56.325
  I0115 17:20:56.325908 30 core_events.go:230] requesting list of events to confirm quantity
  I0115 17:20:56.330275 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8928" for this suite. @ 01/15/25 17:20:56.336
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/15/25 17:20:56.349
  I0115 17:20:56.350035 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 17:20:56.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:20:56.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:20:56.388
  STEP: Creating pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370 @ 01/15/25 17:20:56.392
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 17:20:58.418
  I0115 17:20:58.423044 30 container_probe.go:1749] Initial restart count of pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e is 0
  I0115 17:20:58.427467 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:00.434228 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:02.440620 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:04.448308 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:06.455235 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:08.460244 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:10.472702 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:12.480088 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:14.486249 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:16.492702 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:18.499911 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:20.508049 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:22.514743 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:24.523416 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:26.529544 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:28.536065 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:30.543040 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:32.550141 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:34.556003 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:36.561819 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:38.567528 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:40.575304 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:42.582920 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:44.589064 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:46.594450 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:48.610212 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:50.616595 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:52.621821 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:54.628420 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:56.634039 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:21:58.648051 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:00.655288 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:02.661737 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:04.668829 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:06.675079 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:08.681021 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:10.687385 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:12.693383 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:14.698651 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:16.703754 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:18.709447 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:20.715770 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:22.721625 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:24.728845 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:26.734662 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:28.740805 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:30.747836 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:32.754051 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:34.760722 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:36.767280 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:38.773952 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:40.780665 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:42.785830 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:44.790644 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:46.798723 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:48.804625 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:50.810365 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:52.816335 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:54.822372 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:56.828479 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:22:58.834234 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:00.839817 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:02.845714 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:04.852021 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:06.857571 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:08.863627 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:10.869907 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:12.875716 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:14.882494 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:16.888806 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:18.895773 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:20.904450 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:22.912727 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:24.918627 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:26.988699 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:28.995102 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:31.003447 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:33.010765 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:35.017148 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:37.022836 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:39.029196 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:41.035356 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:43.042087 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:45.049063 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:47.055020 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:49.060365 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:51.066563 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:53.072391 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:55.080521 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:57.087327 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:23:59.093196 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:01.097918 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:03.103773 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:05.115124 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:07.121320 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:09.127714 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:11.136669 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:13.143355 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:15.165163 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:17.172223 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:19.178759 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:21.185682 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:23.190920 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:25.202101 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:27.207922 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:29.214529 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:31.220374 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:33.226708 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:35.233219 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:37.238706 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:39.244838 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:41.251004 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:43.265429 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:45.271128 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:47.286916 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:49.293062 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:51.299489 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:53.304044 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:55.310415 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  I0115 17:24:57.316492 30 container_probe.go:1759] Get pod test-webserver-fdbefbc6-f049-4aed-b3d3-661e049e8e2e in namespace container-probe-7370
  STEP: deleting the pod @ 01/15/25 17:24:59.317
  I0115 17:24:59.353034 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7370" for this suite. @ 01/15/25 17:24:59.363
• [243.038 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/15/25 17:24:59.388
  I0115 17:24:59.388727 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 17:24:59.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:24:59.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:24:59.428
  STEP: set up a multi version CRD @ 01/15/25 17:24:59.432
  I0115 17:24:59.433586 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: mark a version not serverd @ 01/15/25 17:25:08.404
  STEP: check the unserved version gets removed @ 01/15/25 17:25:08.43
  STEP: check the other version is not changed @ 01/15/25 17:25:09.538
  I0115 17:25:12.643982 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3574" for this suite. @ 01/15/25 17:25:12.656
• [13.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/15/25 17:25:12.676
  I0115 17:25:12.676986 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 17:25:12.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:25:12.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:25:12.707
  STEP: Creating a ResourceQuota with best effort scope @ 01/15/25 17:25:12.711
  STEP: Ensuring ResourceQuota status is calculated @ 01/15/25 17:25:12.722
  STEP: Creating a ResourceQuota with not best effort scope @ 01/15/25 17:25:14.728
  STEP: Ensuring ResourceQuota status is calculated @ 01/15/25 17:25:14.748
  STEP: Creating a best-effort pod @ 01/15/25 17:25:16.754
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/15/25 17:25:16.801
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/15/25 17:25:18.808
  STEP: Deleting the pod @ 01/15/25 17:25:20.813
  STEP: Ensuring resource quota status released the pod usage @ 01/15/25 17:25:20.853
  STEP: Creating a not best-effort pod @ 01/15/25 17:25:22.859
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/15/25 17:25:22.912
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/15/25 17:25:24.919
  STEP: Deleting the pod @ 01/15/25 17:25:26.925
  STEP: Ensuring resource quota status released the pod usage @ 01/15/25 17:25:26.946
  I0115 17:25:28.952655 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2699" for this suite. @ 01/15/25 17:25:28.958
• [16.292 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/15/25 17:25:28.969
  I0115 17:25:28.969299 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 17:25:28.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:25:29.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:25:29.018
  STEP: Creating pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679 @ 01/15/25 17:25:29.022
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 17:25:31.054
  I0115 17:25:31.059263 30 container_probe.go:1749] Initial restart count of pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad is 0
  I0115 17:25:31.063411 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:33.070000 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:35.077057 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:37.084737 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:39.090994 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:41.096284 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:43.100765 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:45.106726 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:47.172263 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:49.178493 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:51.184264 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:53.190570 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:55.195976 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:57.202386 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:25:59.209889 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:01.215747 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:03.238376 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:05.245058 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:07.251173 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:09.259324 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:11.265705 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:13.272125 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:15.278903 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:17.287528 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:19.295397 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:21.301870 30 container_probe.go:1759] Get pod busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad in namespace container-probe-9679
  I0115 17:26:21.301955 30 container_probe.go:1763] Restart count of pod container-probe-9679/busybox-ec7601c8-e3d7-4a83-8355-4f4e960b44ad is now 1 (50.242642219s elapsed)
  STEP: deleting the pod @ 01/15/25 17:26:21.302
  I0115 17:26:21.351260 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9679" for this suite. @ 01/15/25 17:26:21.358
• [52.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/15/25 17:26:21.379
  I0115 17:26:21.379989 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:26:21.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:26:21.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:26:21.435
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 17:26:21.439
  STEP: Saw pod success @ 01/15/25 17:26:25.53
  I0115 17:26:25.534901 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-e5a75462-2fc7-4cf1-aa1c-54c03a5a7876 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 17:26:25.558
  I0115 17:26:25.594983 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2584" for this suite. @ 01/15/25 17:26:25.6
• [4.233 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/15/25 17:26:25.612
  I0115 17:26:25.612789 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:26:25.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:26:25.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:26:25.657
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 17:26:25.66
  STEP: Saw pod success @ 01/15/25 17:26:29.695
  I0115 17:26:29.699500 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-0a892bfc-d420-4a5c-9f1a-9ce8df2f5bfb container client-container: <nil>
  STEP: delete the pod @ 01/15/25 17:26:29.708
  I0115 17:26:29.742843 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7847" for this suite. @ 01/15/25 17:26:29.749
• [4.155 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/15/25 17:26:29.767
  I0115 17:26:29.767855 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 17:26:29.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:26:29.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:26:29.812
  STEP: Creating resourceQuota "e2e-rq-status-r59rs" @ 01/15/25 17:26:29.877
  I0115 17:26:29.893386 30 resource_quota.go:1102] Resource quota "e2e-rq-status-r59rs" reports spec: hard cpu limit of 500m
  I0115 17:26:29.893437 30 resource_quota.go:1104] Resource quota "e2e-rq-status-r59rs" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-r59rs" /status @ 01/15/25 17:26:29.893
  STEP: Confirm /status for "e2e-rq-status-r59rs" resourceQuota via watch @ 01/15/25 17:26:29.913
  I0115 17:26:29.915427 30 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-r59rs" in namespace "resourcequota-5943" with hard status: v1.ResourceList(nil)
  I0115 17:26:29.915526 30 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-r59rs" in namespace "resourcequota-5943" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0115 17:26:29.915547 30 resource_quota.go:1141] ResourceQuota "e2e-rq-status-r59rs" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/15/25 17:26:29.919
  I0115 17:26:29.929553 30 resource_quota.go:1152] Resource quota "e2e-rq-status-r59rs" reports spec: hard cpu limit of 1
  I0115 17:26:29.929637 30 resource_quota.go:1153] Resource quota "e2e-rq-status-r59rs" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-r59rs" /status @ 01/15/25 17:26:29.929
  STEP: Confirm /status for "e2e-rq-status-r59rs" resourceQuota via watch @ 01/15/25 17:26:29.94
  I0115 17:26:29.942618 30 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-r59rs" in namespace "resourcequota-5943" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0115 17:26:29.942683 30 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-r59rs" in namespace "resourcequota-5943" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0115 17:26:29.942701 30 resource_quota.go:1185] ResourceQuota "e2e-rq-status-r59rs" /status was patched
  STEP: Get "e2e-rq-status-r59rs" /status @ 01/15/25 17:26:29.942
  I0115 17:26:29.948221 30 resource_quota.go:1196] Resourcequota "e2e-rq-status-r59rs" reports status: hard cpu of 1
  I0115 17:26:29.948272 30 resource_quota.go:1198] Resourcequota "e2e-rq-status-r59rs" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-r59rs" /status before checking Spec is unchanged @ 01/15/25 17:26:29.953
  I0115 17:26:29.966693 30 resource_quota.go:1218] Resourcequota "e2e-rq-status-r59rs" reports status: hard cpu of 2
  I0115 17:26:29.966742 30 resource_quota.go:1220] Resourcequota "e2e-rq-status-r59rs" reports status: hard memory of 2Gi
  I0115 17:26:29.968980 30 resource_quota.go:1229] observed resourceQuota "e2e-rq-status-r59rs" in namespace "resourcequota-5943" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0115 17:26:29.969038 30 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-r59rs" in namespace "resourcequota-5943" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0115 17:26:29.974124 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d44c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:26:34.976372 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d45d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:26:39.976652 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa6f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:26:44.977306 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:26:49.980209 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040458f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:26:54.982462 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa9c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007faa08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:26:59.977209 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045a40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045a70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045aa0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:04.979406 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045b78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045bd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:09.979263 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:14.978733 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d48a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:19.978635 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d49a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d49d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:24.977054 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4b10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:29.978284 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:34.979063 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4d20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4d50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4d80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:39.978680 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045da0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045dd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004045e00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:44.977376 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4e88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4eb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:49.978677 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:54.978029 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5110), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5140), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5188), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:27:59.975347 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5260), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d5290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d52c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:04.980020 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fac30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fac60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fac90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:09.977453 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fadc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fadf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fae40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:14.978540 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007faf30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007faf78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fafa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:19.979538 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fb068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fb098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fb0e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:24.973703 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004372060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x4004372090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40043720d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:29.975026 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:34.977552 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc0a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:39.978463 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc1b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:44.978753 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:49.976394 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:54.977920 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:28:59.978199 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:04.977751 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc6f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:09.977545 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:14.977278 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc948), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc9c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:19.978124 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dca80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:24.978787 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcbb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcbe8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcc18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:29.977844 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcd80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcdc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcdf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:34.977234 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d41c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d41f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:39.979198 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d42b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:44.978181 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa6f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:49.977812 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa7e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:54.977331 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fa978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:29:59.978154 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007faa50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007faa80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007faab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:04.978869 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d44e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:09.978115 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fabb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fabe8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fac18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:14.976969 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d46a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:19.978054 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d4798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40040d47c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:24.977992 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcf48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcf78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dcfa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:29.975522 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fad68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fadb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40007fade0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:34.978682 30 resource_quota.go:1263] ResourceQuota "e2e-rq-status-r59rs" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-r59rs", GenerateName:"", Namespace:"resourcequota-5943", SelfLink:"", UID:"270a32ff-f831-4baf-9aeb-30f54eb1c52f", ResourceVersion:"213896", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-r59rs"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 17, 26, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40041dc0a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0115 17:30:39.977643 30 resource_quota.go:1260] ResourceQuota "e2e-rq-status-r59rs" Spec was unchanged and /status reset
  I0115 17:30:39.978053 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5943" for this suite. @ 01/15/25 17:30:39.984
• [250.228 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/15/25 17:30:39.996
  I0115 17:30:39.996756 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename server-version @ 01/15/25 17:30:39.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:30:40.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:30:40.051
  STEP: Request ServerVersion @ 01/15/25 17:30:40.055
  STEP: Confirm major version @ 01/15/25 17:30:40.056
  I0115 17:30:40.056936 30 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/15/25 17:30:40.056
  I0115 17:30:40.056994 30 server_version.go:58] cleanMinorVersion: 32
  I0115 17:30:40.057016 30 server_version.go:62] Minor version: 32
  I0115 17:30:40.057155 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8254" for this suite. @ 01/15/25 17:30:40.063
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/15/25 17:30:40.074
  I0115 17:30:40.074511 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 17:30:40.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:30:40.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:30:40.128
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/15/25 17:30:40.133
  I0115 17:30:40.133828 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/15/25 17:30:51.497
  I0115 17:30:51.498313 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:30:58.157306 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:31:09.631116 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5031" for this suite. @ 01/15/25 17:31:09.642
• [29.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/15/25 17:31:09.653
  I0115 17:31:09.653029 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 17:31:09.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:09.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:09.693
  I0115 17:31:09.696909 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:31:17.854634 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6430" for this suite. @ 01/15/25 17:31:17.861
• [8.223 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/15/25 17:31:17.876
  I0115 17:31:17.876045 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:31:17.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:17.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:17.906
  STEP: Creating projection with secret that has name projected-secret-test-4e8aabf4-c95b-4be3-92ce-f2801bd55d3c @ 01/15/25 17:31:17.909
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:31:17.916
  STEP: Saw pod success @ 01/15/25 17:31:21.945
  I0115 17:31:21.950034 30 output.go:207] Trying to get logs from node node6 pod pod-projected-secrets-cfa79e92-9041-4e50-b1f9-79cec6cd978e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:31:21.967
  I0115 17:31:21.991822 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6111" for this suite. @ 01/15/25 17:31:21.998
• [4.142 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/15/25 17:31:22.018
  I0115 17:31:22.018906 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubelet-test @ 01/15/25 17:31:22.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:22.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:22.053
  STEP: Waiting for pod completion @ 01/15/25 17:31:22.071
  I0115 17:31:26.111236 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7779" for this suite. @ 01/15/25 17:31:26.117
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/15/25 17:31:26.13
  I0115 17:31:26.130958 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/15/25 17:31:26.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:26.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:26.164
  I0115 17:31:26.173392 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1184" for this suite. @ 01/15/25 17:31:26.218
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/15/25 17:31:26.232
  I0115 17:31:26.233509 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:31:26.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:26.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:26.265
  STEP: Creating configMap with name projected-configmap-test-volume-e1218dc3-02a0-4715-a8f9-808cdac11e21 @ 01/15/25 17:31:26.268
  STEP: Creating a pod to test consume configMaps @ 01/15/25 17:31:26.279
  STEP: Saw pod success @ 01/15/25 17:31:30.329
  I0115 17:31:30.333418 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-5ee8d13d-8a43-4570-8aad-eb55d75a186d container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 17:31:30.34
  I0115 17:31:30.387011 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4086" for this suite. @ 01/15/25 17:31:30.392
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/15/25 17:31:30.405
  I0115 17:31:30.405344 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 17:31:30.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:30.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:30.433
  I0115 17:31:30.436615 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  W0115 17:31:37.991605      30 warnings.go:70] unknown field "alpha"
  W0115 17:31:37.991643      30 warnings.go:70] unknown field "beta"
  W0115 17:31:37.991653      30 warnings.go:70] unknown field "delta"
  W0115 17:31:37.991661      30 warnings.go:70] unknown field "epsilon"
  W0115 17:31:37.991667      30 warnings.go:70] unknown field "gamma"
  I0115 17:31:38.546341 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-631" for this suite. @ 01/15/25 17:31:38.552
• [8.155 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/15/25 17:31:38.56
  I0115 17:31:38.560423 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 17:31:38.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:38.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:38.596
  STEP: Creating simple DaemonSet "daemon-set" @ 01/15/25 17:31:38.664
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/15/25 17:31:38.673
  I0115 17:31:38.752085 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:38.752161 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:38.752195 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:38.757237 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:31:38.757488 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  I0115 17:31:39.680431 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:39.680702 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:39.680832 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:39.684998 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0115 17:31:39.685051 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  I0115 17:31:40.682586 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:40.683172 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:40.683616 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:31:40.690212 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 17:31:40.690314 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/15/25 17:31:40.696
  STEP: DeleteCollection of the DaemonSets @ 01/15/25 17:31:40.701
  STEP: Verify that ReplicaSets have been deleted @ 01/15/25 17:31:40.713
  I0115 17:31:40.730490 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"214984"},"items":null}

  I0115 17:31:40.750540 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"214987"},"items":[{"metadata":{"name":"daemon-set-8cfxn","generateName":"daemon-set-","namespace":"daemonsets-6839","uid":"ee22f7d8-cabe-46af-92c9-04a607abd0a1","resourceVersion":"214986","creationTimestamp":"2025-01-15T17:31:38Z","deletionTimestamp":"2025-01-15T17:32:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0324a7f5-9538-422c-86c1-e7e64701a010","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-15T17:31:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0324a7f5-9538-422c-86c1-e7e64701a010\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-15T17:31:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.69.14\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rqshx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rqshx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"node5","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["node5"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:38Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:38Z"}],"hostIP":"192.168.111.55","hostIPs":[{"ip":"192.168.111.55"}],"podIP":"10.233.69.14","podIPs":[{"ip":"10.233.69.14"}],"startTime":"2025-01-15T17:31:38Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-15T17:31:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df","containerID":"containerd://255ad6b70af5be29cd337c70a8ee426a8c2e0097b2aa623fc0246d2fc3c66e50","started":true,"volumeMounts":[{"name":"kube-api-access-rqshx","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qlsvv","generateName":"daemon-set-","namespace":"daemonsets-6839","uid":"c4971406-d88a-463f-9858-3d5e67b6f36e","resourceVersion":"214987","creationTimestamp":"2025-01-15T17:31:38Z","deletionTimestamp":"2025-01-15T17:32:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0324a7f5-9538-422c-86c1-e7e64701a010","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-15T17:31:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0324a7f5-9538-422c-86c1-e7e64701a010\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-15T17:31:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.68.72\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xprkr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xprkr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"node6","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["node6"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:38Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:38Z"}],"hostIP":"192.168.111.222","hostIPs":[{"ip":"192.168.111.222"}],"podIP":"10.233.68.72","podIPs":[{"ip":"10.233.68.72"}],"startTime":"2025-01-15T17:31:38Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-15T17:31:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df","containerID":"containerd://a0b6fbe406b844b7b13148068fe1c158a6d94d51bdc76d612fc8af85947d7cfc","started":true,"volumeMounts":[{"name":"kube-api-access-xprkr","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xkc59","generateName":"daemon-set-","namespace":"daemonsets-6839","uid":"a50788ac-8572-41b5-8705-d37aa1e4b4b0","resourceVersion":"214985","creationTimestamp":"2025-01-15T17:31:38Z","deletionTimestamp":"2025-01-15T17:32:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0324a7f5-9538-422c-86c1-e7e64701a010","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-15T17:31:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0324a7f5-9538-422c-86c1-e7e64701a010\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-15T17:31:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.67.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tm5dt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tm5dt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"node4","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["node4"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:38Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-15T17:31:38Z"}],"hostIP":"192.168.111.146","hostIPs":[{"ip":"192.168.111.146"}],"podIP":"10.233.67.24","podIPs":[{"ip":"10.233.67.24"}],"startTime":"2025-01-15T17:31:38Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-15T17:31:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df","containerID":"containerd://7199e0e5dcb432d952c5dbb5bda0d5e200289adacc3ad2a29e9a35fb4f56be75","started":true,"volumeMounts":[{"name":"kube-api-access-tm5dt","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0115 17:31:40.797777 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6839" for this suite. @ 01/15/25 17:31:40.823
• [2.276 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 01/15/25 17:31:40.836
  I0115 17:31:40.836682 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 17:31:40.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:40.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:40.869
  STEP: Creating a pod to test downward api env vars @ 01/15/25 17:31:40.874
  STEP: Saw pod success @ 01/15/25 17:31:44.906
  I0115 17:31:44.911260 30 output.go:207] Trying to get logs from node node6 pod downward-api-218d916d-5515-431b-a628-43eb49ac7af2 container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 17:31:44.919
  I0115 17:31:44.939653 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4521" for this suite. @ 01/15/25 17:31:44.945
• [4.129 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/15/25 17:31:44.965
  I0115 17:31:44.965271 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 17:31:44.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:44.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:44.997
  I0115 17:31:45.000370 30 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0115 17:31:45.010092 30 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0115 17:31:45.017998 30 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0115 17:31:47.028471 30 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0115 17:31:47.032385 30 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0115 17:31:47.048007 30 deployment.go:314] Updating deployment test-recreate-deployment
  I0115 17:31:47.048104 30 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0115 17:31:47.174875 30 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "460ccc28-1613-43a6-aa8c-7a6b03884fad",
      ResourceVersion: (string) (len=6) "215105",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872559105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 17:31:47.183397 30 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e953f389-bd73-455f-aafe-6ca7534e515d",
      ResourceVersion: (string) (len=6) "215103",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872559107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "460ccc28-1613-43a6-aa8c-7a6b03884fad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 36 30 63 63 63  32 38 2d 31 36 31 33 2d  |\"460ccc28-1613-|
              00000120  34 33 61 36 2d 61 61 38  63 2d 37 61 36 62 30 33  |43a6-aa8c-7a6b03|
              00000130  38 38 34 66 61 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |884fad\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 17:31:47.184630 30 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0115 17:31:47.184945 30 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8a547fd-07cb-4f3f-b03e-9153ede9bb7c",
      ResourceVersion: (string) (len=6) "215093",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872559105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "460ccc28-1613-43a6-aa8c-7a6b03884fad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 36 30 63 63 63  32 38 2d 31 36 31 33 2d  |\"460ccc28-1613-|
              00000120  34 33 61 36 2d 61 61 38  63 2d 37 61 36 62 30 33  |43a6-aa8c-7a6b03|
              00000130  38 38 34 66 61 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |884fad\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 17:31:47.190956 30 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-dq9gp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-dq9gp",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-2261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f70ef42a-ee40-4f9a-ad93-117603fe7730",
      ResourceVersion: (string) (len=6) "215104",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872559107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "e953f389-bd73-455f-aafe-6ca7534e515d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  35 33 66 33 38 39 2d 62  |d\":\"e953f389-b|
              00000090  64 37 33 2d 34 35 35 66  2d 61 61 66 65 2d 36 63  |d73-455f-aafe-6c|
              000000a0  61 37 35 33 34 65 35 31  35 64 5c 22 7d 22 3a 7b  |a7534e515d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwx46",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwx46",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872559107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872559107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zwx46",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 17:31:47.193206 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2261" for this suite. @ 01/15/25 17:31:47.198
• [2.259 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/15/25 17:31:47.225
  I0115 17:31:47.225659 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 17:31:47.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:47.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:47.26
  STEP: Creating a pod to test substitution in container's args @ 01/15/25 17:31:47.264
  STEP: Saw pod success @ 01/15/25 17:31:51.297
  I0115 17:31:51.302093 30 output.go:207] Trying to get logs from node node6 pod var-expansion-404acdd3-5a2a-48d7-a9a8-547394960ffe container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 17:31:51.31
  I0115 17:31:51.338798 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9939" for this suite. @ 01/15/25 17:31:51.351
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/15/25 17:31:51.362
  I0115 17:31:51.362583 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename security-context-test @ 01/15/25 17:31:51.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:51.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:51.393
  I0115 17:31:55.439354 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5446" for this suite. @ 01/15/25 17:31:55.444
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 01/15/25 17:31:55.458
  I0115 17:31:55.458295 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 17:31:55.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:31:55.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:31:55.49
  STEP: Creating service test in namespace statefulset-6770 @ 01/15/25 17:31:55.493
  STEP: Looking for a node to schedule stateful set and pod @ 01/15/25 17:31:55.499
  STEP: Creating pod with conflicting port in namespace statefulset-6770 @ 01/15/25 17:31:55.55
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6770 @ 01/15/25 17:31:55.564
  STEP: Creating statefulset with conflicting port in namespace statefulset-6770 @ 01/15/25 17:31:57.575
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6770 @ 01/15/25 17:31:57.588
  I0115 17:31:57.619568 30 statefulset.go:872] Observed stateful pod in namespace: statefulset-6770, name: ss-0, uid: be481827-8299-4249-91d8-1a71d6227307, status phase: Pending. Waiting for statefulset controller to delete.
  I0115 17:31:57.636461 30 statefulset.go:872] Observed stateful pod in namespace: statefulset-6770, name: ss-0, uid: be481827-8299-4249-91d8-1a71d6227307, status phase: Failed. Waiting for statefulset controller to delete.
  I0115 17:31:57.672129 30 statefulset.go:872] Observed stateful pod in namespace: statefulset-6770, name: ss-0, uid: be481827-8299-4249-91d8-1a71d6227307, status phase: Failed. Waiting for statefulset controller to delete.
  I0115 17:31:57.681759 30 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-6770
  STEP: Removing pod with conflicting port in namespace statefulset-6770 @ 01/15/25 17:31:57.681
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6770 and will be in running state @ 01/15/25 17:31:57.698
  I0115 17:31:59.709123 30 statefulset.go:138] Deleting all statefulset in ns statefulset-6770
  I0115 17:31:59.714025 30 rest.go:152] Scaling statefulset ss to 0
  I0115 17:32:09.739474 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 17:32:09.743291 30 rest.go:90] Deleting statefulset ss
  I0115 17:32:09.767433 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6770" for this suite. @ 01/15/25 17:32:09.773
• [14.331 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/15/25 17:32:09.789
  I0115 17:32:09.789735 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 17:32:09.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:32:09.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:32:09.823
  STEP: create deployment with httpd image @ 01/15/25 17:32:09.827
  I0115 17:32:09.828120 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6837 create -f -'
  I0115 17:32:09.999964 30 builder.go:146] stderr: ""
  I0115 17:32:10.000065 30 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/15/25 17:32:10
  I0115 17:32:10.000272 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6837 diff -f -'
  I0115 17:32:10.252350 30 builder.go:135] rc: 1
  I0115 17:32:10.252566 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6837 delete -f -'
  I0115 17:32:10.342653 30 builder.go:146] stderr: ""
  I0115 17:32:10.342753 30 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0115 17:32:10.343170 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6837" for this suite. @ 01/15/25 17:32:10.354
• [0.580 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/15/25 17:32:10.369
  I0115 17:32:10.369785 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename chunking @ 01/15/25 17:32:10.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:32:10.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:32:10.402
  STEP: creating a large number of resources @ 01/15/25 17:32:10.406
  I0115 17:32:23.913257      30 request.go:729] Waited for 1.030535856s due to client-side throttling, not priority and fairness, request: POST:https://10.233.0.1:443/api/v1/namespaces/chunking-5309/podtemplates
  STEP: retrieving the first page @ 01/15/25 17:32:28.084
  I0115 17:32:28.139851 30 chunking.go:163] Retrieved 40/40 results with rv 215802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 01/15/25 17:32:28.139
  I0115 17:32:48.149690 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:33:08.150214 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:33:28.148802 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:33:48.150833 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:34:08.152004 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:34:28.150619 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:34:48.152185 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:35:08.149214 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:35:28.151970 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:35:48.148982 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:36:08.151418 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:36:28.168388 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:36:48.153613 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:37:08.150549 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:37:28.149203 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:37:48.150782 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:38:08.150441 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:38:28.152671 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:38:48.149907 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:39:08.151259 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:39:28.150397 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:39:48.151566 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:40:08.148172 30 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1ODAyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0115 17:40:28.147767 30 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0115 17:40:28.147872 30 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/15/25 17:40:28.147
  STEP: retrieving all remaining pages @ 01/15/25 17:40:28.154
  I0115 17:40:28.160668 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  I0115 17:40:28.167063 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  I0115 17:40:28.173604 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  I0115 17:40:28.179340 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  I0115 17:40:28.185088 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  I0115 17:40:28.191581 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  I0115 17:40:28.196844 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE3MTM3LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  I0115 17:40:28.203209 30 chunking.go:221] Retrieved 40/40 results with rv 217137 and continue 
  I0115 17:40:28.203876 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5309" for this suite. @ 01/15/25 17:40:28.209
• [497.851 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/15/25 17:40:28.221
  I0115 17:40:28.221384 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename events @ 01/15/25 17:40:28.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:40:28.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:40:28.263
  STEP: creating a test event @ 01/15/25 17:40:28.267
  STEP: listing events in all namespaces @ 01/15/25 17:40:28.329
  STEP: listing events in test namespace @ 01/15/25 17:40:28.336
  STEP: listing events with field selection filtering on source @ 01/15/25 17:40:28.34
  STEP: listing events with field selection filtering on reportingController @ 01/15/25 17:40:28.344
  STEP: getting the test event @ 01/15/25 17:40:28.347
  STEP: patching the test event @ 01/15/25 17:40:28.351
  STEP: getting the test event @ 01/15/25 17:40:28.364
  STEP: updating the test event @ 01/15/25 17:40:28.368
  STEP: getting the test event @ 01/15/25 17:40:28.378
  STEP: deleting the test event @ 01/15/25 17:40:28.382
  STEP: listing events in all namespaces @ 01/15/25 17:40:28.399
  STEP: listing events in test namespace @ 01/15/25 17:40:28.405
  I0115 17:40:28.408939 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6028" for this suite. @ 01/15/25 17:40:28.414
• [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/15/25 17:40:28.428
  I0115 17:40:28.428884 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 17:40:28.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:40:28.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:40:28.459
  STEP: Creating secret with name secret-test-1520d4c3-dc56-437a-86fd-d32c498853b7 @ 01/15/25 17:40:28.463
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:40:28.488
  STEP: Saw pod success @ 01/15/25 17:40:32.525
  I0115 17:40:32.533720 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-8cc413f7-ed70-4f7d-a80e-de1f3ff272ee container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:40:32.554
  I0115 17:40:32.586771 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4757" for this suite. @ 01/15/25 17:40:32.592
• [4.178 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/15/25 17:40:32.606
  I0115 17:40:32.606876 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 17:40:32.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:40:32.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:40:32.65
  STEP: create the rc @ 01/15/25 17:40:32.692
  W0115 17:40:32.712353      30 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/15/25 17:40:38.732
  STEP: wait for the rc to be deleted @ 01/15/25 17:40:38.753
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/15/25 17:40:43.762
  STEP: Gathering metrics @ 01/15/25 17:41:13.783
  I0115 17:41:14.983097 30 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0115 17:41:14.985044 30 delete.go:95] Deleting pod "simpletest.rc-2jm9c" in namespace "gc-1085"
  I0115 17:41:15.008519 30 delete.go:95] Deleting pod "simpletest.rc-2jrd6" in namespace "gc-1085"
  I0115 17:41:15.027572 30 delete.go:95] Deleting pod "simpletest.rc-49z9m" in namespace "gc-1085"
  I0115 17:41:15.051496 30 delete.go:95] Deleting pod "simpletest.rc-4d65m" in namespace "gc-1085"
  I0115 17:41:15.081879 30 delete.go:95] Deleting pod "simpletest.rc-5k6m9" in namespace "gc-1085"
  I0115 17:41:15.118204 30 delete.go:95] Deleting pod "simpletest.rc-5wlt4" in namespace "gc-1085"
  I0115 17:41:15.137383 30 delete.go:95] Deleting pod "simpletest.rc-6f9fm" in namespace "gc-1085"
  I0115 17:41:15.166990 30 delete.go:95] Deleting pod "simpletest.rc-6h844" in namespace "gc-1085"
  I0115 17:41:15.198984 30 delete.go:95] Deleting pod "simpletest.rc-6h9fm" in namespace "gc-1085"
  I0115 17:41:15.226748 30 delete.go:95] Deleting pod "simpletest.rc-6hsrw" in namespace "gc-1085"
  I0115 17:41:15.248930 30 delete.go:95] Deleting pod "simpletest.rc-7494j" in namespace "gc-1085"
  I0115 17:41:15.271487 30 delete.go:95] Deleting pod "simpletest.rc-7fzll" in namespace "gc-1085"
  I0115 17:41:15.308973 30 delete.go:95] Deleting pod "simpletest.rc-7gvf8" in namespace "gc-1085"
  I0115 17:41:15.336962 30 delete.go:95] Deleting pod "simpletest.rc-7jn9b" in namespace "gc-1085"
  I0115 17:41:15.370480 30 delete.go:95] Deleting pod "simpletest.rc-7xm7w" in namespace "gc-1085"
  I0115 17:41:15.404956 30 delete.go:95] Deleting pod "simpletest.rc-7zgmk" in namespace "gc-1085"
  I0115 17:41:15.423443 30 delete.go:95] Deleting pod "simpletest.rc-8284q" in namespace "gc-1085"
  I0115 17:41:15.461928 30 delete.go:95] Deleting pod "simpletest.rc-8g45s" in namespace "gc-1085"
  I0115 17:41:15.493097 30 delete.go:95] Deleting pod "simpletest.rc-8rw9r" in namespace "gc-1085"
  I0115 17:41:15.520883 30 delete.go:95] Deleting pod "simpletest.rc-95sdg" in namespace "gc-1085"
  I0115 17:41:15.584847 30 delete.go:95] Deleting pod "simpletest.rc-96k5m" in namespace "gc-1085"
  I0115 17:41:15.620853 30 delete.go:95] Deleting pod "simpletest.rc-9cgvm" in namespace "gc-1085"
  I0115 17:41:15.641654 30 delete.go:95] Deleting pod "simpletest.rc-9g7bn" in namespace "gc-1085"
  I0115 17:41:15.671150 30 delete.go:95] Deleting pod "simpletest.rc-9m9pn" in namespace "gc-1085"
  I0115 17:41:15.701488 30 delete.go:95] Deleting pod "simpletest.rc-9z8cg" in namespace "gc-1085"
  I0115 17:41:15.756515 30 delete.go:95] Deleting pod "simpletest.rc-b6ctw" in namespace "gc-1085"
  I0115 17:41:15.813895 30 delete.go:95] Deleting pod "simpletest.rc-bk88z" in namespace "gc-1085"
  I0115 17:41:15.837491 30 delete.go:95] Deleting pod "simpletest.rc-bmkqs" in namespace "gc-1085"
  I0115 17:41:15.920747 30 delete.go:95] Deleting pod "simpletest.rc-btjzm" in namespace "gc-1085"
  I0115 17:41:15.943545 30 delete.go:95] Deleting pod "simpletest.rc-c462k" in namespace "gc-1085"
  I0115 17:41:15.968278 30 delete.go:95] Deleting pod "simpletest.rc-c4h8b" in namespace "gc-1085"
  I0115 17:41:15.994866 30 delete.go:95] Deleting pod "simpletest.rc-c9rvf" in namespace "gc-1085"
  I0115 17:41:16.063503 30 delete.go:95] Deleting pod "simpletest.rc-cdcrg" in namespace "gc-1085"
  I0115 17:41:16.085294 30 delete.go:95] Deleting pod "simpletest.rc-ch4jt" in namespace "gc-1085"
  I0115 17:41:16.108648 30 delete.go:95] Deleting pod "simpletest.rc-cxwps" in namespace "gc-1085"
  I0115 17:41:16.149524 30 delete.go:95] Deleting pod "simpletest.rc-czs8f" in namespace "gc-1085"
  I0115 17:41:16.177139 30 delete.go:95] Deleting pod "simpletest.rc-d96r4" in namespace "gc-1085"
  I0115 17:41:16.214954 30 delete.go:95] Deleting pod "simpletest.rc-drrxb" in namespace "gc-1085"
  I0115 17:41:16.248986 30 delete.go:95] Deleting pod "simpletest.rc-dsghw" in namespace "gc-1085"
  I0115 17:41:16.286070 30 delete.go:95] Deleting pod "simpletest.rc-dxcm5" in namespace "gc-1085"
  I0115 17:41:16.320530 30 delete.go:95] Deleting pod "simpletest.rc-dxrf6" in namespace "gc-1085"
  I0115 17:41:16.357678 30 delete.go:95] Deleting pod "simpletest.rc-f8b7f" in namespace "gc-1085"
  I0115 17:41:16.391004 30 delete.go:95] Deleting pod "simpletest.rc-fnrxj" in namespace "gc-1085"
  I0115 17:41:16.425063 30 delete.go:95] Deleting pod "simpletest.rc-fvzn2" in namespace "gc-1085"
  I0115 17:41:16.446755 30 delete.go:95] Deleting pod "simpletest.rc-gqc9q" in namespace "gc-1085"
  I0115 17:41:16.476735 30 delete.go:95] Deleting pod "simpletest.rc-gv7gq" in namespace "gc-1085"
  I0115 17:41:16.507152 30 delete.go:95] Deleting pod "simpletest.rc-gv8x2" in namespace "gc-1085"
  I0115 17:41:16.533238 30 delete.go:95] Deleting pod "simpletest.rc-hhq62" in namespace "gc-1085"
  I0115 17:41:16.563995 30 delete.go:95] Deleting pod "simpletest.rc-hlj6c" in namespace "gc-1085"
  I0115 17:41:16.593506 30 delete.go:95] Deleting pod "simpletest.rc-hn2ch" in namespace "gc-1085"
  I0115 17:41:16.629403 30 delete.go:95] Deleting pod "simpletest.rc-htx6v" in namespace "gc-1085"
  I0115 17:41:16.665564 30 delete.go:95] Deleting pod "simpletest.rc-hx9bw" in namespace "gc-1085"
  I0115 17:41:16.697887 30 delete.go:95] Deleting pod "simpletest.rc-jpmnf" in namespace "gc-1085"
  I0115 17:41:16.724087 30 delete.go:95] Deleting pod "simpletest.rc-k2wgv" in namespace "gc-1085"
  I0115 17:41:16.764326 30 delete.go:95] Deleting pod "simpletest.rc-khpfg" in namespace "gc-1085"
  I0115 17:41:16.789043 30 delete.go:95] Deleting pod "simpletest.rc-kld5v" in namespace "gc-1085"
  I0115 17:41:16.824666 30 delete.go:95] Deleting pod "simpletest.rc-kx9kp" in namespace "gc-1085"
  I0115 17:41:16.876773 30 delete.go:95] Deleting pod "simpletest.rc-kzpl9" in namespace "gc-1085"
  I0115 17:41:16.957376 30 delete.go:95] Deleting pod "simpletest.rc-lzzph" in namespace "gc-1085"
  I0115 17:41:16.996209 30 delete.go:95] Deleting pod "simpletest.rc-m6jlf" in namespace "gc-1085"
  I0115 17:41:17.025870 30 delete.go:95] Deleting pod "simpletest.rc-mngcn" in namespace "gc-1085"
  I0115 17:41:17.051516 30 delete.go:95] Deleting pod "simpletest.rc-mwc2d" in namespace "gc-1085"
  I0115 17:41:17.077194 30 delete.go:95] Deleting pod "simpletest.rc-nd5fs" in namespace "gc-1085"
  I0115 17:41:17.100473 30 delete.go:95] Deleting pod "simpletest.rc-ng9rc" in namespace "gc-1085"
  I0115 17:41:17.125557 30 delete.go:95] Deleting pod "simpletest.rc-nk2th" in namespace "gc-1085"
  I0115 17:41:17.146825 30 delete.go:95] Deleting pod "simpletest.rc-nqwdk" in namespace "gc-1085"
  I0115 17:41:17.169919 30 delete.go:95] Deleting pod "simpletest.rc-nrp8t" in namespace "gc-1085"
  I0115 17:41:17.195745 30 delete.go:95] Deleting pod "simpletest.rc-p76fz" in namespace "gc-1085"
  I0115 17:41:17.266027 30 delete.go:95] Deleting pod "simpletest.rc-pl2pb" in namespace "gc-1085"
  I0115 17:41:17.308192 30 delete.go:95] Deleting pod "simpletest.rc-pz6x6" in namespace "gc-1085"
  I0115 17:41:17.331853 30 delete.go:95] Deleting pod "simpletest.rc-q2sz5" in namespace "gc-1085"
  I0115 17:41:17.354540 30 delete.go:95] Deleting pod "simpletest.rc-qcw2n" in namespace "gc-1085"
  I0115 17:41:17.376126 30 delete.go:95] Deleting pod "simpletest.rc-qdlq8" in namespace "gc-1085"
  I0115 17:41:17.401708 30 delete.go:95] Deleting pod "simpletest.rc-qvghq" in namespace "gc-1085"
  I0115 17:41:17.424384 30 delete.go:95] Deleting pod "simpletest.rc-r29jl" in namespace "gc-1085"
  I0115 17:41:17.445865 30 delete.go:95] Deleting pod "simpletest.rc-rncpt" in namespace "gc-1085"
  I0115 17:41:17.476822 30 delete.go:95] Deleting pod "simpletest.rc-rnpng" in namespace "gc-1085"
  I0115 17:41:17.503305 30 delete.go:95] Deleting pod "simpletest.rc-rpd9l" in namespace "gc-1085"
  I0115 17:41:17.549970 30 delete.go:95] Deleting pod "simpletest.rc-rsh2x" in namespace "gc-1085"
  I0115 17:41:17.584489 30 delete.go:95] Deleting pod "simpletest.rc-s7227" in namespace "gc-1085"
  I0115 17:41:17.606403 30 delete.go:95] Deleting pod "simpletest.rc-slxws" in namespace "gc-1085"
  I0115 17:41:17.635536 30 delete.go:95] Deleting pod "simpletest.rc-svg6f" in namespace "gc-1085"
  I0115 17:41:17.665051 30 delete.go:95] Deleting pod "simpletest.rc-tjxgl" in namespace "gc-1085"
  I0115 17:41:17.692958 30 delete.go:95] Deleting pod "simpletest.rc-txgnf" in namespace "gc-1085"
  I0115 17:41:17.711927 30 delete.go:95] Deleting pod "simpletest.rc-vmxm8" in namespace "gc-1085"
  I0115 17:41:17.730631 30 delete.go:95] Deleting pod "simpletest.rc-vv68h" in namespace "gc-1085"
  I0115 17:41:17.769803 30 delete.go:95] Deleting pod "simpletest.rc-vxhlh" in namespace "gc-1085"
  I0115 17:41:17.798877 30 delete.go:95] Deleting pod "simpletest.rc-w76z4" in namespace "gc-1085"
  I0115 17:41:17.823214 30 delete.go:95] Deleting pod "simpletest.rc-wc7xz" in namespace "gc-1085"
  I0115 17:41:17.847467 30 delete.go:95] Deleting pod "simpletest.rc-wnnt8" in namespace "gc-1085"
  I0115 17:41:17.885538 30 delete.go:95] Deleting pod "simpletest.rc-wrb7x" in namespace "gc-1085"
  I0115 17:41:17.924526 30 delete.go:95] Deleting pod "simpletest.rc-wv5s4" in namespace "gc-1085"
  I0115 17:41:17.954244 30 delete.go:95] Deleting pod "simpletest.rc-x2q29" in namespace "gc-1085"
  I0115 17:41:17.986663 30 delete.go:95] Deleting pod "simpletest.rc-z5h2f" in namespace "gc-1085"
  I0115 17:41:18.019249 30 delete.go:95] Deleting pod "simpletest.rc-z8wq8" in namespace "gc-1085"
  I0115 17:41:18.051337 30 delete.go:95] Deleting pod "simpletest.rc-z9r26" in namespace "gc-1085"
  I0115 17:41:18.078445 30 delete.go:95] Deleting pod "simpletest.rc-zbs46" in namespace "gc-1085"
  I0115 17:41:18.109346 30 delete.go:95] Deleting pod "simpletest.rc-zfhjc" in namespace "gc-1085"
  I0115 17:41:18.139369 30 delete.go:95] Deleting pod "simpletest.rc-zmgwg" in namespace "gc-1085"
  I0115 17:41:18.214902 30 delete.go:95] Deleting pod "simpletest.rc-zmthr" in namespace "gc-1085"
  I0115 17:41:18.259825 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1085" for this suite. @ 01/15/25 17:41:18.267
• [45.675 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/15/25 17:41:18.283
  I0115 17:41:18.283085 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:41:18.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:41:18.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:41:18.348
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/15/25 17:41:18.353
  STEP: Saw pod success @ 01/15/25 17:41:22.392
  I0115 17:41:22.397835 30 output.go:207] Trying to get logs from node node6 pod pod-dd77b78b-9872-4ec8-b3d6-5fad044bf5fc container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:41:22.405
  I0115 17:41:22.432326 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1882" for this suite. @ 01/15/25 17:41:22.438
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/15/25 17:41:22.447
  I0115 17:41:22.447914 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:41:22.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:41:22.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:41:22.476
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/15/25 17:41:22.48
  STEP: Saw pod success @ 01/15/25 17:41:26.516
  I0115 17:41:26.522331 30 output.go:207] Trying to get logs from node node6 pod pod-d64ae679-6e82-4d00-81c9-dfde12d3a0dd container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:41:26.533
  I0115 17:41:26.562632 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2868" for this suite. @ 01/15/25 17:41:26.57
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/15/25 17:41:26.579
  I0115 17:41:26.579782 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename events @ 01/15/25 17:41:26.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:41:26.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:41:26.611
  STEP: creating a test event @ 01/15/25 17:41:26.614
  STEP: listing all events in all namespaces @ 01/15/25 17:41:26.626
  STEP: patching the test event @ 01/15/25 17:41:26.639
  STEP: fetching the test event @ 01/15/25 17:41:26.65
  STEP: updating the test event @ 01/15/25 17:41:26.654
  STEP: getting the test event @ 01/15/25 17:41:26.671
  STEP: deleting the test event @ 01/15/25 17:41:26.682
  STEP: listing all events in all namespaces @ 01/15/25 17:41:26.693
  I0115 17:41:26.706995 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7001" for this suite. @ 01/15/25 17:41:26.717
• [0.147 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/15/25 17:41:26.727
  I0115 17:41:26.727526 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 17:41:26.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:41:26.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:41:26.77
  I0115 17:41:26.774164 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/15/25 17:41:33.497
  I0115 17:41:33.497590 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-4923 --namespace=crd-publish-openapi-4923 create -f -'
  I0115 17:41:33.642739 30 builder.go:146] stderr: ""
  I0115 17:41:33.642831 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3651-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0115 17:41:33.642920 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-4923 --namespace=crd-publish-openapi-4923 delete e2e-test-crd-publish-openapi-3651-crds test-cr'
  I0115 17:41:33.751058 30 builder.go:146] stderr: ""
  I0115 17:41:33.751141 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3651-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0115 17:41:33.751478 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-4923 --namespace=crd-publish-openapi-4923 apply -f -'
  I0115 17:41:33.932268 30 builder.go:146] stderr: ""
  I0115 17:41:33.932327 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3651-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0115 17:41:33.932406 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-4923 --namespace=crd-publish-openapi-4923 delete e2e-test-crd-publish-openapi-3651-crds test-cr'
  I0115 17:41:34.089668 30 builder.go:146] stderr: ""
  I0115 17:41:34.089860 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3651-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/15/25 17:41:34.09
  I0115 17:41:34.090382 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-4923 explain e2e-test-crd-publish-openapi-3651-crds'
  I0115 17:41:34.294568 30 builder.go:146] stderr: ""
  I0115 17:41:34.294714 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3651-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0115 17:41:35.910717 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4923" for this suite. @ 01/15/25 17:41:35.922
• [9.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/15/25 17:41:35.935
  I0115 17:41:35.935854 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-pred @ 01/15/25 17:41:35.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:41:35.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:41:35.968
  I0115 17:41:35.972737 30 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0115 17:41:36.028697 30 util.go:396] Waiting for terminating namespaces to be deleted...
  I0115 17:41:36.033501 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node4 before test
  I0115 17:41:36.039568 30 predicates.go:957] kube-flannel-ds-arm64-rnkwn from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.039934 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 1
  I0115 17:41:36.040268 30 predicates.go:957] kube-proxy-7vgrn from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.040766 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0115 17:41:36.041337 30 predicates.go:957] nginx-proxy-node4 from kube-system started at 2025-01-15 07:30:39 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.041934 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 1
  I0115 17:41:36.042199 30 predicates.go:957] nodelocaldns-g85rh from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.042443 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:41:36.042706 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-f8xf4 from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:41:36.043100 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:41:36.043595 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:41:36.043883 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node5 before test
  I0115 17:41:36.049745 30 predicates.go:957] kube-flannel-ds-arm64-6nlst from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.049794 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0115 17:41:36.049841 30 predicates.go:957] kube-proxy-8b92w from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.049865 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0115 17:41:36.049879 30 predicates.go:957] nginx-proxy-node5 from kube-system started at 2025-01-15 07:02:13 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.049890 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 0
  I0115 17:41:36.049902 30 predicates.go:957] nodelocaldns-9b8lg from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.049930 30 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0115 17:41:36.049944 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-tnssb from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:41:36.049954 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:41:36.049969 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:41:36.049979 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node6 before test
  I0115 17:41:36.055767 30 predicates.go:957] kube-flannel-ds-arm64-mj7v9 from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.055840 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 2
  I0115 17:41:36.055862 30 predicates.go:957] kube-proxy-9r2mv from kube-system started at 2025-01-14 20:52:39 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.055876 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 2
  I0115 17:41:36.055898 30 predicates.go:957] nginx-proxy-node6 from kube-system started at 2025-01-15 08:19:10 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.055909 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 2
  I0115 17:41:36.055923 30 predicates.go:957] nodelocaldns-gld7c from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.055934 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:41:36.055947 30 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-15 17:03:28 +0000 UTC (1 container statuses recorded)
  I0115 17:41:36.055957 30 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0115 17:41:36.055968 30 predicates.go:957] sonobuoy-e2e-job-6e9ced84281c4bcc from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:41:36.055979 30 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0115 17:41:36.055989 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:41:36.056001 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-nqlxt from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:41:36.056012 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:41:36.056023 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/15/25 17:41:36.056
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/15/25 17:41:38.094
  STEP: Trying to apply a random label on the found node. @ 01/15/25 17:41:38.121
  STEP: verifying the node has the label kubernetes.io/e2e-f430be9e-79a7-436d-9628-9b53abe85208 95 @ 01/15/25 17:41:38.137
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/15/25 17:41:38.142
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.111.222 on the node which pod4 resides and expect not scheduled @ 01/15/25 17:41:40.165
  STEP: removing the label kubernetes.io/e2e-f430be9e-79a7-436d-9628-9b53abe85208 off the node node6 @ 01/15/25 17:46:40.187
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f430be9e-79a7-436d-9628-9b53abe85208 @ 01/15/25 17:46:40.209
  I0115 17:46:40.214919 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-362" for this suite. @ 01/15/25 17:46:40.22
• [304.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/15/25 17:46:40.234
  I0115 17:46:40.234849 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename proxy @ 01/15/25 17:46:40.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:46:40.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:46:40.266
  STEP: starting an echo server on multiple ports @ 01/15/25 17:46:40.295
  STEP: creating replication controller proxy-service-lm8bv in namespace proxy-4730 @ 01/15/25 17:46:40.295
  I0115 17:46:40.306659      30 runners.go:193] Created replication controller with name: proxy-service-lm8bv, namespace: proxy-4730, replica count: 1
  I0115 17:46:41.358050      30 runners.go:193] proxy-service-lm8bv Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 17:46:41.363080 30 proxy.go:230] setup took 1.091826761s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/15/25 17:46:41.363
  I0115 17:46:41.373574 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 10.206382ms)
  I0115 17:46:41.374613 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 11.38868ms)
  I0115 17:46:41.375472 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 11.910063ms)
  I0115 17:46:41.377362 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 13.872549ms)
  I0115 17:46:41.379553 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 16.336067ms)
  I0115 17:46:41.380179 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 16.735507ms)
  I0115 17:46:41.381946 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 18.51807ms)
  I0115 17:46:41.382014 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 18.567101ms)
  I0115 17:46:41.382056 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 18.53045ms)
  I0115 17:46:41.382185 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 18.621812ms)
  I0115 17:46:41.383224 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 19.919512ms)
  I0115 17:46:41.383269 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 19.407871ms)
  I0115 17:46:41.383386 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 20.048375ms)
  I0115 17:46:41.385808 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 22.203777ms)
  I0115 17:46:41.385994 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 22.475133ms)
  I0115 17:46:41.387073 30 proxy.go:558] (0) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 23.497418ms)
  I0115 17:46:41.395370 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 8.042881ms)
  I0115 17:46:41.397931 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 10.234573ms)
  I0115 17:46:41.399497 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 12.052585ms)
  I0115 17:46:41.399522 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 12.374954ms)
  I0115 17:46:41.400730 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 12.715892ms)
  I0115 17:46:41.400745 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 13.003858ms)
  I0115 17:46:41.403904 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 16.352948ms)
  I0115 17:46:41.403948 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 15.926258ms)
  I0115 17:46:41.403987 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 16.387829ms)
  I0115 17:46:41.404037 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 16.387389ms)
  I0115 17:46:41.404021 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 16.238635ms)
  I0115 17:46:41.403974 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 16.00107ms)
  I0115 17:46:41.404469 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 16.307057ms)
  I0115 17:46:41.405237 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 15.366795ms)
  I0115 17:46:41.404132 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 16.258665ms)
  I0115 17:46:41.404815 30 proxy.go:558] (1) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 17.25972ms)
  I0115 17:46:41.411347 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 5.684815ms)
  I0115 17:46:41.415211 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 8.679826ms)
  I0115 17:46:41.415263 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 9.792253ms)
  I0115 17:46:41.417290 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 10.635843ms)
  I0115 17:46:41.417778 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 11.635096ms)
  I0115 17:46:41.418454 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 12.004245ms)
  I0115 17:46:41.418497 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 11.851891ms)
  I0115 17:46:41.418526 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 11.953234ms)
  I0115 17:46:41.420294 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 14.444733ms)
  I0115 17:46:41.420356 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 13.838168ms)
  I0115 17:46:41.420392 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 13.777837ms)
  I0115 17:46:41.420419 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 13.856629ms)
  I0115 17:46:41.420443 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 13.89078ms)
  I0115 17:46:41.420477 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 14.483203ms)
  I0115 17:46:41.420691 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 13.958891ms)
  I0115 17:46:41.421802 30 proxy.go:558] (2) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 15.16653ms)
  I0115 17:46:41.430264 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 8.03459ms)
  I0115 17:46:41.430265 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 8.000509ms)
  I0115 17:46:41.431255 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 8.84552ms)
  I0115 17:46:41.431762 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 9.294801ms)
  I0115 17:46:41.431895 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 9.874334ms)
  I0115 17:46:41.432224 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 9.807913ms)
  I0115 17:46:41.433440 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 11.074593ms)
  I0115 17:46:41.433558 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 11.165804ms)
  I0115 17:46:41.434601 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 12.432005ms)
  I0115 17:46:41.434660 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 12.318173ms)
  I0115 17:46:41.435599 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 13.404328ms)
  I0115 17:46:41.436353 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 14.002892ms)
  I0115 17:46:41.436438 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 14.158766ms)
  I0115 17:46:41.436696 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 14.208527ms)
  I0115 17:46:41.436952 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 14.376881ms)
  I0115 17:46:41.437357 30 proxy.go:558] (3) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 15.496258ms)
  I0115 17:46:41.444370 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 6.909294ms)
  I0115 17:46:41.444296 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 6.541815ms)
  I0115 17:46:41.445604 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 6.923174ms)
  I0115 17:46:41.445693 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 8.054761ms)
  I0115 17:46:41.447684 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 8.729937ms)
  I0115 17:46:41.449197 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 9.910505ms)
  I0115 17:46:41.450389 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 11.548574ms)
  I0115 17:46:41.450488 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 12.625279ms)
  I0115 17:46:41.450698 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 12.555798ms)
  I0115 17:46:41.450751 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 12.510686ms)
  I0115 17:46:41.450887 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 11.815841ms)
  I0115 17:46:41.450931 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 11.758739ms)
  I0115 17:46:41.450960 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 12.924266ms)
  I0115 17:46:41.453325 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 14.872832ms)
  I0115 17:46:41.453901 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 15.354774ms)
  I0115 17:46:41.455751 30 proxy.go:558] (4) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 17.412423ms)
  I0115 17:46:41.468980 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 12.755933ms)
  I0115 17:46:41.469003 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 11.81699ms)
  I0115 17:46:41.469025 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 13.182373ms)
  I0115 17:46:41.469026 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 12.372664ms)
  I0115 17:46:41.469076 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 12.100777ms)
  I0115 17:46:41.470128 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 14.094594ms)
  I0115 17:46:41.471048 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 14.598176ms)
  I0115 17:46:41.471160 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 14.271849ms)
  I0115 17:46:41.471231 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 14.682828ms)
  I0115 17:46:41.471228 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 14.153376ms)
  I0115 17:46:41.471536 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 14.796271ms)
  I0115 17:46:41.471685 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 14.208767ms)
  I0115 17:46:41.472075 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 15.735683ms)
  I0115 17:46:41.472117 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 14.839882ms)
  I0115 17:46:41.472121 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 14.520334ms)
  I0115 17:46:41.472346 30 proxy.go:558] (5) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 14.975056ms)
  I0115 17:46:41.480535 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 7.9982ms)
  I0115 17:46:41.480772 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 8.347528ms)
  I0115 17:46:41.482118 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 9.454894ms)
  I0115 17:46:41.482192 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 9.682529ms)
  I0115 17:46:41.483767 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 11.278508ms)
  I0115 17:46:41.484881 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 12.318712ms)
  I0115 17:46:41.485321 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 12.855365ms)
  I0115 17:46:41.485334 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 12.849975ms)
  I0115 17:46:41.486002 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 13.378948ms)
  I0115 17:46:41.487299 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 14.686588ms)
  I0115 17:46:41.487862 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 15.307043ms)
  I0115 17:46:41.488394 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 15.761554ms)
  I0115 17:46:41.488414 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 15.802605ms)
  I0115 17:46:41.488416 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 15.724383ms)
  I0115 17:46:41.488495 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 16.063151ms)
  I0115 17:46:41.489603 30 proxy.go:558] (6) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 17.013444ms)
  I0115 17:46:41.499842 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 10.10039ms)
  I0115 17:46:41.499853 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 10.154341ms)
  I0115 17:46:41.500385 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 10.492499ms)
  I0115 17:46:41.501914 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 11.908202ms)
  I0115 17:46:41.502791 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 12.755413ms)
  I0115 17:46:41.503703 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 13.724045ms)
  I0115 17:46:41.504091 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 14.156886ms)
  I0115 17:46:41.504185 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 14.31765ms)
  I0115 17:46:41.504956 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 15.099418ms)
  I0115 17:46:41.505215 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 15.459236ms)
  I0115 17:46:41.505387 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 15.372854ms)
  I0115 17:46:41.505399 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 15.642521ms)
  I0115 17:46:41.505750 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 15.799785ms)
  I0115 17:46:41.506112 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 16.190314ms)
  I0115 17:46:41.506134 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 16.141363ms)
  I0115 17:46:41.506342 30 proxy.go:558] (7) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 16.360418ms)
  I0115 17:46:41.512401 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 5.546322ms)
  I0115 17:46:41.513107 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 6.688829ms)
  I0115 17:46:41.514645 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 7.852926ms)
  I0115 17:46:41.515127 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 8.267436ms)
  I0115 17:46:41.515293 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 8.515462ms)
  I0115 17:46:41.516784 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 9.866254ms)
  I0115 17:46:41.516778 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 10.119861ms)
  I0115 17:46:41.517117 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 10.232033ms)
  I0115 17:46:41.518515 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 11.763599ms)
  I0115 17:46:41.518749 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 11.873711ms)
  I0115 17:46:41.533957 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 27.329478ms)
  I0115 17:46:41.533979 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 27.294818ms)
  I0115 17:46:41.534034 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 27.153034ms)
  I0115 17:46:41.534058 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 27.317148ms)
  I0115 17:46:41.535874 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 29.037549ms)
  I0115 17:46:41.535919 30 proxy.go:558] (8) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 28.997478ms)
  I0115 17:46:41.543394 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 7.071568ms)
  I0115 17:46:41.544929 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 8.652435ms)
  I0115 17:46:41.546438 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 9.863414ms)
  I0115 17:46:41.547943 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 11.39747ms)
  I0115 17:46:41.548326 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 12.185349ms)
  I0115 17:46:41.548492 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 12.105807ms)
  I0115 17:46:41.550443 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 14.287989ms)
  I0115 17:46:41.550472 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 14.164786ms)
  I0115 17:46:41.551633 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 15.478257ms)
  I0115 17:46:41.551860 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 15.281642ms)
  I0115 17:46:41.552844 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 16.44086ms)
  I0115 17:46:41.552885 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 16.524702ms)
  I0115 17:46:41.552956 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 16.505062ms)
  I0115 17:46:41.553740 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 17.70022ms)
  I0115 17:46:41.553800 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 17.29628ms)
  I0115 17:46:41.553853 30 proxy.go:558] (9) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 17.412433ms)
  I0115 17:46:41.561635 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 6.600117ms)
  I0115 17:46:41.561669 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 6.729889ms)
  I0115 17:46:41.562081 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 7.263942ms)
  I0115 17:46:41.564960 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 11.050912ms)
  I0115 17:46:41.565588 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 11.298929ms)
  I0115 17:46:41.568722 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 14.301209ms)
  I0115 17:46:41.568776 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 13.551451ms)
  I0115 17:46:41.568799 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 14.262899ms)
  I0115 17:46:41.569711 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 14.151595ms)
  I0115 17:46:41.569981 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 15.789685ms)
  I0115 17:46:41.570212 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 15.489297ms)
  I0115 17:46:41.570268 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 15.135079ms)
  I0115 17:46:41.570254 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 14.793941ms)
  I0115 17:46:41.570268 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 16.185773ms)
  I0115 17:46:41.572507 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 17.171328ms)
  I0115 17:46:41.573169 30 proxy.go:558] (10) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 18.532189ms)
  I0115 17:46:41.584270 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 10.791576ms)
  I0115 17:46:41.584274 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 10.672993ms)
  I0115 17:46:41.586562 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 13.001598ms)
  I0115 17:46:41.586880 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 13.297816ms)
  I0115 17:46:41.588229 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 14.485844ms)
  I0115 17:46:41.588747 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 15.047667ms)
  I0115 17:46:41.589320 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 15.659752ms)
  I0115 17:46:41.589756 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 16.083412ms)
  I0115 17:46:41.590094 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 16.367078ms)
  I0115 17:46:41.590987 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 17.230069ms)
  I0115 17:46:41.591012 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 17.456964ms)
  I0115 17:46:41.591020 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 17.335711ms)
  I0115 17:46:41.591533 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 17.847343ms)
  I0115 17:46:41.591571 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 17.830433ms)
  I0115 17:46:41.591900 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 18.397197ms)
  I0115 17:46:41.591910 30 proxy.go:558] (11) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 18.443597ms)
  I0115 17:46:41.596540 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 4.556998ms)
  I0115 17:46:41.598916 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 6.878823ms)
  I0115 17:46:41.599301 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 7.017716ms)
  I0115 17:46:41.600582 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 8.549143ms)
  I0115 17:46:41.600915 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 8.694727ms)
  I0115 17:46:41.601201 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 8.947082ms)
  I0115 17:46:41.601559 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 9.28033ms)
  I0115 17:46:41.601585 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 9.597548ms)
  I0115 17:46:41.602143 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 9.968397ms)
  I0115 17:46:41.602547 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 10.362415ms)
  I0115 17:46:41.602738 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 10.582251ms)
  I0115 17:46:41.602826 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 10.757695ms)
  I0115 17:46:41.602879 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 10.758555ms)
  I0115 17:46:41.604899 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 12.738812ms)
  I0115 17:46:41.604952 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 12.822645ms)
  I0115 17:46:41.607481 30 proxy.go:558] (12) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 15.453006ms)
  I0115 17:46:41.623350 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 15.16922ms)
  I0115 17:46:41.627990 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 20.043376ms)
  I0115 17:46:41.628065 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 19.945323ms)
  I0115 17:46:41.630738 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 22.431082ms)
  I0115 17:46:41.632523 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 24.622174ms)
  I0115 17:46:41.635375 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 27.83327ms)
  I0115 17:46:41.635430 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 27.380049ms)
  I0115 17:46:41.635817 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 27.523933ms)
  I0115 17:46:41.635870 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 27.679327ms)
  I0115 17:46:41.636764 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 28.520717ms)
  I0115 17:46:41.638005 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 29.867128ms)
  I0115 17:46:41.638073 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 29.976921ms)
  I0115 17:46:41.638323 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 30.535204ms)
  I0115 17:46:41.638883 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 30.651757ms)
  I0115 17:46:41.639004 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 31.020936ms)
  I0115 17:46:41.639303 30 proxy.go:558] (13) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 31.138628ms)
  I0115 17:46:41.650953 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 11.015642ms)
  I0115 17:46:41.654483 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 15.095538ms)
  I0115 17:46:41.656729 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 16.709247ms)
  I0115 17:46:41.662827 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 23.089307ms)
  I0115 17:46:41.663344 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 23.253142ms)
  I0115 17:46:41.663353 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 23.495558ms)
  I0115 17:46:41.663385 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 23.776154ms)
  I0115 17:46:41.664375 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 24.317677ms)
  I0115 17:46:41.664606 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 24.45476ms)
  I0115 17:46:41.665957 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 26.065729ms)
  I0115 17:46:41.666040 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 26.055098ms)
  I0115 17:46:41.666465 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 26.417337ms)
  I0115 17:46:41.666520 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 26.383136ms)
  I0115 17:46:41.666467 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 26.507409ms)
  I0115 17:46:41.666516 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 26.481498ms)
  I0115 17:46:41.667293 30 proxy.go:558] (14) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 27.043052ms)
  I0115 17:46:41.675857 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 8.310007ms)
  I0115 17:46:41.679309 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 11.783669ms)
  I0115 17:46:41.679311 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 11.636216ms)
  I0115 17:46:41.683300 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 15.432606ms)
  I0115 17:46:41.683352 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 15.688302ms)
  I0115 17:46:41.683392 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 15.469097ms)
  I0115 17:46:41.683451 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 15.58115ms)
  I0115 17:46:41.683479 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 15.732243ms)
  I0115 17:46:41.683503 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 15.726843ms)
  I0115 17:46:41.683563 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 15.770814ms)
  I0115 17:46:41.683590 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 15.875987ms)
  I0115 17:46:41.683611 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 15.736423ms)
  I0115 17:46:41.695434 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 27.921073ms)
  I0115 17:46:41.695509 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 27.554364ms)
  I0115 17:46:41.695522 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 27.884892ms)
  I0115 17:46:41.697559 30 proxy.go:558] (15) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 30.025562ms)
  I0115 17:46:41.711223 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 12.327322ms)
  I0115 17:46:41.711317 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 12.63822ms)
  I0115 17:46:41.712380 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 14.042713ms)
  I0115 17:46:41.713396 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 14.673208ms)
  I0115 17:46:41.713392 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 14.917324ms)
  I0115 17:46:41.713904 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 15.262952ms)
  I0115 17:46:41.716426 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 17.783592ms)
  I0115 17:46:41.716579 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 17.826942ms)
  I0115 17:46:41.717852 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 20.21111ms)
  I0115 17:46:41.718071 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 19.217456ms)
  I0115 17:46:41.718192 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 20.162939ms)
  I0115 17:46:41.718309 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 19.597824ms)
  I0115 17:46:41.718418 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 19.633626ms)
  I0115 17:46:41.718652 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 19.828991ms)
  I0115 17:46:41.718780 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 20.699981ms)
  I0115 17:46:41.720074 30 proxy.go:558] (16) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 21.467369ms)
  I0115 17:46:41.727623 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 6.956035ms)
  I0115 17:46:41.727977 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 7.16866ms)
  I0115 17:46:41.727880 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 6.884374ms)
  I0115 17:46:41.727885 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 7.327904ms)
  I0115 17:46:41.730891 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 10.632612ms)
  I0115 17:46:41.730931 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 10.485369ms)
  I0115 17:46:41.732394 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 11.289858ms)
  I0115 17:46:41.733465 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 12.070606ms)
  I0115 17:46:41.733857 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 12.958397ms)
  I0115 17:46:41.734691 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 13.374398ms)
  I0115 17:46:41.734916 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 13.137681ms)
  I0115 17:46:41.735574 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 13.886019ms)
  I0115 17:46:41.735678 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 14.097875ms)
  I0115 17:46:41.735978 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 14.493484ms)
  I0115 17:46:41.736089 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 14.213007ms)
  I0115 17:46:41.736557 30 proxy.go:558] (17) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 15.362684ms)
  I0115 17:46:41.742998 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 6.118515ms)
  I0115 17:46:41.743626 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 6.394112ms)
  I0115 17:46:41.744335 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 7.607811ms)
  I0115 17:46:41.744655 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 7.655141ms)
  I0115 17:46:41.746275 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 8.656255ms)
  I0115 17:46:41.747167 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 9.767322ms)
  I0115 17:46:41.747897 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 10.5567ms)
  I0115 17:46:41.748674 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 11.090423ms)
  I0115 17:46:41.751092 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 13.408468ms)
  I0115 17:46:41.751134 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 13.91586ms)
  I0115 17:46:41.752172 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 14.7234ms)
  I0115 17:46:41.752248 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 15.14855ms)
  I0115 17:46:41.752212 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 14.500964ms)
  I0115 17:46:41.752495 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 14.993266ms)
  I0115 17:46:41.752796 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 15.322674ms)
  I0115 17:46:41.753179 30 proxy.go:558] (18) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 15.642371ms)
  I0115 17:46:41.760520 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:1080/proxy/rewriteme">... (200; 7.266273ms)
  I0115 17:46:41.760743 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp/proxy/rewriteme">test</a> (200; 7.143399ms)
  I0115 17:46:41.760959 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:462/proxy/: tls qux (200; 7.477617ms)
  I0115 17:46:41.762176 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname1/proxy/: tls baz (200; 8.905611ms)
  I0115 17:46:41.762679 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:162/proxy/: bar (200; 9.317871ms)
  I0115 17:46:41.762954 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:162/proxy/: bar (200; 9.526466ms)
  I0115 17:46:41.764401 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:160/proxy/: foo (200; 10.96348ms)
  I0115 17:46:41.764457 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/services/https:proxy-service-lm8bv:tlsportname2/proxy/: tls qux (200; 10.895628ms)
  I0115 17:46:41.764465 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/proxy-service-lm8bv-866lp:1080/proxy/rewriteme">test<... (200; 10.818947ms)
  I0115 17:46:41.764521 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/http:proxy-service-lm8bv-866lp:160/proxy/: foo (200; 10.686644ms)
  I0115 17:46:41.764953 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname1/proxy/: foo (200; 11.224586ms)
  I0115 17:46:41.765005 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:460/proxy/: tls baz (200; 11.310378ms)
  I0115 17:46:41.765067 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname1/proxy/: foo (200; 11.542924ms)
  I0115 17:46:41.765089 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/services/http:proxy-service-lm8bv:portname2/proxy/: bar (200; 11.276847ms)
  I0115 17:46:41.766344 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/services/proxy-service-lm8bv:portname2/proxy/: bar (200; 12.583428ms)
  I0115 17:46:41.770619 30 proxy.go:558] (19) /api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/: <a href="/api/v1/namespaces/proxy-4730/pods/https:proxy-service-lm8bv-866lp:443/proxy/tlsrewritem... (200; 16.821439ms)
  STEP: deleting ReplicationController proxy-service-lm8bv in namespace proxy-4730, will wait for the garbage collector to delete the pods @ 01/15/25 17:46:41.77
  I0115 17:46:41.836450 30 resources.go:139] Deleting ReplicationController proxy-service-lm8bv took: 10.96405ms
  I0115 17:46:41.937599 30 resources.go:163] Terminating ReplicationController proxy-service-lm8bv pods took: 101.141149ms
  I0115 17:46:44.238474 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4730" for this suite. @ 01/15/25 17:46:44.247
• [4.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/15/25 17:46:44.258
  I0115 17:46:44.259008 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 17:46:44.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:46:44.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:46:44.292
  STEP: Creating configMap with name configmap-test-upd-6682e8c1-2661-4331-b473-03ebce5440cb @ 01/15/25 17:46:44.346
  STEP: Creating the pod @ 01/15/25 17:46:44.357
  STEP: Updating configmap configmap-test-upd-6682e8c1-2661-4331-b473-03ebce5440cb @ 01/15/25 17:46:46.4
  STEP: waiting to observe update in volume @ 01/15/25 17:46:46.415
  I0115 17:48:13.020278 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8718" for this suite. @ 01/15/25 17:48:13.027
• [88.780 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/15/25 17:48:13.039
  I0115 17:48:13.039541 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:48:13.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:13.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:13.067
  STEP: Creating configMap with name projected-configmap-test-volume-map-6c638fa0-1bbd-49fa-bd6b-8db77083103e @ 01/15/25 17:48:13.071
  STEP: Creating a pod to test consume configMaps @ 01/15/25 17:48:13.081
  STEP: Saw pod success @ 01/15/25 17:48:17.117
  I0115 17:48:17.122928 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-b9cfcd21-eb29-4f2b-b0c9-5474d187158d container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 17:48:17.135
  I0115 17:48:17.155607 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7559" for this suite. @ 01/15/25 17:48:17.161
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 01/15/25 17:48:17.171
  I0115 17:48:17.171142 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:48:17.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:17.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:17.201
  STEP: fetching services @ 01/15/25 17:48:17.205
  I0115 17:48:17.210832 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6544" for this suite. @ 01/15/25 17:48:17.262
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 01/15/25 17:48:17.272
  I0115 17:48:17.272185 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 17:48:17.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:17.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:17.298
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/15/25 17:48:17.303
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/15/25 17:48:17.303
  STEP: creating a pod to probe DNS @ 01/15/25 17:48:17.303
  STEP: submitting the pod to kubernetes @ 01/15/25 17:48:17.303
  STEP: retrieving the pod @ 01/15/25 17:48:19.337
  STEP: looking for the results for each expected name from probers @ 01/15/25 17:48:19.342
  I0115 17:48:19.362706 30 dns_common.go:546] DNS probes using dns-1304/dns-test-9b85ad3b-e8bf-43cb-847a-78ee9f56f3a8 succeeded

  STEP: deleting the pod @ 01/15/25 17:48:19.363
  I0115 17:48:19.390942 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1304" for this suite. @ 01/15/25 17:48:19.397
• [2.144 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/15/25 17:48:19.416
  I0115 17:48:19.416264 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 17:48:19.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:19.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:19.452
  STEP: Create set of pods @ 01/15/25 17:48:19.456
  I0115 17:48:19.474960 30 pods.go:871] created test-pod-1
  I0115 17:48:19.482161 30 pods.go:871] created test-pod-2
  I0115 17:48:19.495380 30 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/15/25 17:48:19.495
  STEP: waiting for all pods to be deleted @ 01/15/25 17:48:21.566
  I0115 17:48:21.580283 30 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0115 17:48:22.572157 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7542" for this suite. @ 01/15/25 17:48:22.577
• [3.174 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/15/25 17:48:22.59
  I0115 17:48:22.590473 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename limitrange @ 01/15/25 17:48:22.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:22.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:22.619
  STEP: Creating a LimitRange @ 01/15/25 17:48:22.622
  STEP: Setting up watch @ 01/15/25 17:48:22.622
  STEP: Submitting a LimitRange @ 01/15/25 17:48:22.79
  STEP: Verifying LimitRange creation was observed @ 01/15/25 17:48:22.841
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/15/25 17:48:22.841
  I0115 17:48:22.852250 30 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0115 17:48:22.852316 30 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/15/25 17:48:22.852
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/15/25 17:48:22.865
  I0115 17:48:22.869836 30 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0115 17:48:22.869887 30 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/15/25 17:48:22.869
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/15/25 17:48:22.883
  I0115 17:48:22.887665 30 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0115 17:48:22.887731 30 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/15/25 17:48:22.887
  STEP: Failing to create a Pod with more than max resources @ 01/15/25 17:48:22.891
  STEP: Updating a LimitRange @ 01/15/25 17:48:22.894
  STEP: Verifying LimitRange updating is effective @ 01/15/25 17:48:22.902
  STEP: Creating a Pod with less than former min resources @ 01/15/25 17:48:24.907
  STEP: Failing to create a Pod with more than max resources @ 01/15/25 17:48:24.916
  STEP: Deleting a LimitRange @ 01/15/25 17:48:24.918
  STEP: Verifying the LimitRange was deleted @ 01/15/25 17:48:24.935
  I0115 17:48:29.941340 30 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/15/25 17:48:29.941
  I0115 17:48:29.957234 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7156" for this suite. @ 01/15/25 17:48:29.963
• [7.386 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/15/25 17:48:29.976
  I0115 17:48:29.976840 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 17:48:29.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:29.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:30.003
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/15/25 17:48:30.006
  I0115 17:48:30.007633 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:48:36.701976 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:48:48.089707 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2269" for this suite. @ 01/15/25 17:48:48.103
• [18.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/15/25 17:48:48.114
  I0115 17:48:48.114454 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/15/25 17:48:48.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:48.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:48.147
  I0115 17:48:48.153697 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:48:54.209161 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4129" for this suite. @ 01/15/25 17:48:54.214
• [6.110 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/15/25 17:48:54.224
  I0115 17:48:54.224705 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 17:48:54.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:54.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:54.254
  STEP: create the deployment @ 01/15/25 17:48:54.259
  W0115 17:48:54.277177      30 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/15/25 17:48:54.277
  STEP: delete the deployment @ 01/15/25 17:48:54.786
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/15/25 17:48:54.798
  STEP: Gathering metrics @ 01/15/25 17:48:55.32
  I0115 17:48:55.449719 30 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0115 17:48:55.451471 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3170" for this suite. @ 01/15/25 17:48:55.458
• [1.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/15/25 17:48:55.48
  I0115 17:48:55.480888 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename watch @ 01/15/25 17:48:55.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:55.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:55.511
  STEP: getting a starting resourceVersion @ 01/15/25 17:48:55.516
  STEP: starting a background goroutine to produce watch events @ 01/15/25 17:48:55.519
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/15/25 17:48:55.519
  I0115 17:48:58.290792 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1386" for this suite. @ 01/15/25 17:48:58.34
• [2.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/15/25 17:48:58.396
  I0115 17:48:58.396950 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 17:48:58.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:48:58.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:48:58.424
  STEP: Counting existing ResourceQuota @ 01/15/25 17:48:58.428
  STEP: Creating a ResourceQuota @ 01/15/25 17:49:03.434
  STEP: Ensuring resource quota status is calculated @ 01/15/25 17:49:03.443
  STEP: Creating a Service @ 01/15/25 17:49:05.451
  STEP: Creating a NodePort Service @ 01/15/25 17:49:05.493
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/15/25 17:49:05.542
  STEP: Ensuring resource quota status captures service creation @ 01/15/25 17:49:05.578
  STEP: Deleting Services @ 01/15/25 17:49:07.583
  STEP: Ensuring resource quota status released usage @ 01/15/25 17:49:07.661
  I0115 17:49:09.668206 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6899" for this suite. @ 01/15/25 17:49:09.673
• [11.286 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/15/25 17:49:09.685
  I0115 17:49:09.685150 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pv @ 01/15/25 17:49:09.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:49:09.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:49:09.71
  STEP: Creating initial PV and PVC @ 01/15/25 17:49:09.717
  I0115 17:49:09.718013 30 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6514" @ 01/15/25 17:49:09.745
  STEP: Listing PVCs in namespace "pv-6514" @ 01/15/25 17:49:09.751
  STEP: Reading "pvc-g9tng" Status @ 01/15/25 17:49:09.761
  STEP: Reading "pv-6514-c6tks" Status @ 01/15/25 17:49:09.772
  STEP: Patching "pvc-g9tng" Status @ 01/15/25 17:49:09.781
  STEP: Patching "pv-6514-c6tks" Status @ 01/15/25 17:49:09.8
  STEP: Updating "pvc-g9tng" Status @ 01/15/25 17:49:09.812
  STEP: Updating "pv-6514-c6tks" Status @ 01/15/25 17:49:09.837
  I0115 17:49:09.863311 30 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0115 17:49:09.863395 30 pv.go:205] Deleting PersistentVolumeClaim "pvc-g9tng"
  I0115 17:49:09.875395 30 pv.go:193] Deleting PersistentVolume "pv-6514-c6tks"
  I0115 17:49:09.885011 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6514" for this suite. @ 01/15/25 17:49:09.892
• [0.220 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 01/15/25 17:49:09.906
  I0115 17:49:09.906186 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 17:49:09.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:49:09.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:49:09.948
  STEP: validating cluster-info @ 01/15/25 17:49:09.953
  I0115 17:49:09.953585 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4724 cluster-info'
  I0115 17:49:10.060832 30 builder.go:146] stderr: ""
  I0115 17:49:10.060900 30 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0115 17:49:10.061100 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4724" for this suite. @ 01/15/25 17:49:10.067
• [0.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/15/25 17:49:10.079
  I0115 17:49:10.079246 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/15/25 17:49:10.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:49:10.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:49:10.109
  STEP: creating a target pod @ 01/15/25 17:49:10.113
  STEP: adding an ephemeral container @ 01/15/25 17:49:12.145
  STEP: checking pod container endpoints @ 01/15/25 17:49:14.189
  I0115 17:49:14.189700 30 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9045 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 17:49:14.189738 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 17:49:14.189850 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-9045/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0115 17:49:14.251860 30 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/15/25 17:49:14.26
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/15/25 17:49:14.267
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/15/25 17:49:14.284
  I0115 17:49:14.290337 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9045" for this suite. @ 01/15/25 17:49:14.296
• [4.242 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 01/15/25 17:49:14.321
  I0115 17:49:14.321113 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 17:49:14.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:49:14.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:49:14.357
  STEP: Creating service test in namespace statefulset-4440 @ 01/15/25 17:49:14.361
  STEP: Creating a new StatefulSet @ 01/15/25 17:49:14.368
  I0115 17:49:14.397474 30 wait.go:40] Found 0 stateful pods, waiting for 3
  I0115 17:49:24.401905 30 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 17:49:24.402070 30 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0115 17:49:24.402087 30 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0115 17:49:24.416442 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-4440 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 17:49:24.591404 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 17:49:24.591506 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 17:49:24.591525 30 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/15/25 17:49:34.605
  I0115 17:49:34.623509 30 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/15/25 17:49:34.623
  STEP: Updating Pods in reverse ordinal order @ 01/15/25 17:49:44.638
  I0115 17:49:44.642855 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-4440 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 17:49:44.803505 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 17:49:44.803577 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 17:49:44.803597 30 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/15/25 17:49:54.821
  I0115 17:49:54.821882 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-4440 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 17:49:54.980090 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 17:49:54.980154 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 17:49:54.980173 30 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 17:50:05.011622 30 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/15/25 17:50:15.022
  I0115 17:50:15.028488 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-4440 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 17:50:15.185591 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 17:50:15.185661 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 17:50:15.185688 30 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 17:50:25.212695 30 statefulset.go:138] Deleting all statefulset in ns statefulset-4440
  I0115 17:50:25.218174 30 rest.go:152] Scaling statefulset ss2 to 0
  I0115 17:50:35.247216 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 17:50:35.251474 30 rest.go:90] Deleting statefulset ss2
  I0115 17:50:35.272732 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4440" for this suite. @ 01/15/25 17:50:35.278
• [80.970 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/15/25 17:50:35.292
  I0115 17:50:35.292541 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replication-controller @ 01/15/25 17:50:35.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:50:35.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:50:35.319
  STEP: Creating ReplicationController "e2e-rc-djmbb" @ 01/15/25 17:50:35.324
  I0115 17:50:35.333849 30 rc.go:792] Get Replication Controller "e2e-rc-djmbb" to confirm replicas
  I0115 17:50:36.334750 30 rc.go:792] Get Replication Controller "e2e-rc-djmbb" to confirm replicas
  I0115 17:50:36.339825 30 rc.go:801] Found 1 replicas for "e2e-rc-djmbb" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-djmbb" @ 01/15/25 17:50:36.339
  STEP: Updating a scale subresource @ 01/15/25 17:50:36.434
  STEP: Verifying replicas where modified for replication controller "e2e-rc-djmbb" @ 01/15/25 17:50:36.462
  I0115 17:50:36.462579 30 rc.go:792] Get Replication Controller "e2e-rc-djmbb" to confirm replicas
  I0115 17:50:37.463639 30 rc.go:792] Get Replication Controller "e2e-rc-djmbb" to confirm replicas
  I0115 17:50:37.469608 30 rc.go:801] Found 2 replicas for "e2e-rc-djmbb" replication controller
  I0115 17:50:37.469805 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4747" for this suite. @ 01/15/25 17:50:37.475
• [2.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/15/25 17:50:37.489
  I0115 17:50:37.489574 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:50:37.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:50:37.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:50:37.513
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7175 @ 01/15/25 17:50:37.517
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/15/25 17:50:37.531
  STEP: creating service externalsvc in namespace services-7175 @ 01/15/25 17:50:37.532
  STEP: creating replication controller externalsvc in namespace services-7175 @ 01/15/25 17:50:37.554
  I0115 17:50:37.570270      30 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7175, replica count: 2
  I0115 17:50:40.622069      30 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/15/25 17:50:40.642
  I0115 17:50:40.665721 30 resource.go:361] Creating new exec pod
  I0115 17:50:42.705431 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-7175 exec execpodvfzbh -- /bin/sh -x -c nslookup clusterip-service.services-7175.svc.cluster.local'
  I0115 17:50:42.948774 30 builder.go:146] stderr: "+ nslookup clusterip-service.services-7175.svc.cluster.local\n"
  I0115 17:50:42.948950 30 builder.go:147] stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nclusterip-service.services-7175.svc.cluster.local\tcanonical name = externalsvc.services-7175.svc.cluster.local.\nName:\texternalsvc.services-7175.svc.cluster.local\nAddress: 10.233.10.15\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7175, will wait for the garbage collector to delete the pods @ 01/15/25 17:50:42.949
  I0115 17:50:43.018909 30 resources.go:139] Deleting ReplicationController externalsvc took: 12.942588ms
  I0115 17:50:43.119580 30 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.65681ms
  I0115 17:50:46.054698 30 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0115 17:50:46.073675 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7175" for this suite. @ 01/15/25 17:50:46.083
• [8.603 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/15/25 17:50:46.093
  I0115 17:50:46.093194 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:50:46.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:50:46.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:50:46.125
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/15/25 17:50:46.13
  STEP: Saw pod success @ 01/15/25 17:50:50.165
  I0115 17:50:50.169398 30 output.go:207] Trying to get logs from node node6 pod pod-2d7758a3-f9ae-4828-b06b-8f81e409dbb2 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:50:50.178
  I0115 17:50:50.206052 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9452" for this suite. @ 01/15/25 17:50:50.212
• [4.130 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/15/25 17:50:50.223
  I0115 17:50:50.223212 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/15/25 17:50:50.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:50:50.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:50:50.256
  I0115 17:50:50.265815 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2384" for this suite. @ 01/15/25 17:50:50.314
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/15/25 17:50:50.324
  I0115 17:50:50.325033 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-watch @ 01/15/25 17:50:50.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:50:50.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:50:50.359
  I0115 17:50:50.363016 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Creating first CR  @ 01/15/25 17:50:57.92
  I0115 17:50:57.928018 30 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-15T17:50:57Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-15T17:50:57Z]] name:name1 resourceVersion:222386 uid:ae548c85-8033-4776-92f2-13c4330b2a2c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/15/25 17:51:07.929
  I0115 17:51:07.938660 30 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-15T17:51:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-15T17:51:07Z]] name:name2 resourceVersion:222414 uid:f5839d6c-46a2-4fec-a04b-e1478a1a7976] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/15/25 17:51:17.94
  I0115 17:51:17.952365 30 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-15T17:50:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-15T17:51:17Z]] name:name1 resourceVersion:222443 uid:ae548c85-8033-4776-92f2-13c4330b2a2c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/15/25 17:51:27.952
  I0115 17:51:27.964910 30 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-15T17:51:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-15T17:51:27Z]] name:name2 resourceVersion:222472 uid:f5839d6c-46a2-4fec-a04b-e1478a1a7976] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/15/25 17:51:37.965
  I0115 17:51:37.976044 30 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-15T17:50:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-15T17:51:17Z]] name:name1 resourceVersion:222500 uid:ae548c85-8033-4776-92f2-13c4330b2a2c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/15/25 17:51:47.978
  I0115 17:51:47.989360 30 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-15T17:51:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-15T17:51:27Z]] name:name2 resourceVersion:222528 uid:f5839d6c-46a2-4fec-a04b-e1478a1a7976] num:map[num1:9223372036854775807 num2:1000000]]}
  I0115 17:51:58.519086 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5130" for this suite. @ 01/15/25 17:51:58.526
• [68.211 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/15/25 17:51:58.536
  I0115 17:51:58.536881 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 17:51:58.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:51:58.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:51:58.58
  STEP: creating a Pod with a static label @ 01/15/25 17:51:58.593
  STEP: watching for Pod to be ready @ 01/15/25 17:51:58.606
  I0115 17:51:58.609399 30 pods.go:945] observed Pod pod-test in namespace pods-5612 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0115 17:51:58.618968 30 pods.go:945] observed Pod pod-test in namespace pods-5612 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC  }]
  I0115 17:51:58.642446 30 pods.go:945] observed Pod pod-test in namespace pods-5612 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC  }]
  I0115 17:52:00.156123 30 pods.go:948] Found Pod pod-test in namespace pods-5612 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:52:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:52:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:52:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 17:51:58 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/15/25 17:52:00.16
  STEP: getting the Pod and ensuring that it's patched @ 01/15/25 17:52:00.183
  STEP: replacing the Pod's status Ready condition to False @ 01/15/25 17:52:00.187
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/15/25 17:52:00.205
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/15/25 17:52:00.206
  STEP: watching for the Pod to be deleted @ 01/15/25 17:52:00.219
  I0115 17:52:00.221595 30 pods.go:1058] observed event type MODIFIED
  I0115 17:52:02.161026 30 pods.go:1058] observed event type MODIFIED
  I0115 17:52:02.521953 30 pods.go:1058] observed event type MODIFIED
  I0115 17:52:03.165906 30 pods.go:1058] observed event type MODIFIED
  I0115 17:52:03.174601 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5612" for this suite. @ 01/15/25 17:52:03.181
• [4.653 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/15/25 17:52:03.189
  I0115 17:52:03.189618 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename namespaces @ 01/15/25 17:52:03.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:03.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:03.24
  STEP: creating a Namespace @ 01/15/25 17:52:03.244
  STEP: patching the Namespace @ 01/15/25 17:52:03.336
  STEP: get the Namespace and ensuring it has the label @ 01/15/25 17:52:03.368
  I0115 17:52:03.372645 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6028" for this suite. @ 01/15/25 17:52:03.38
  STEP: Destroying namespace "nspatchtest-e242f0f2-2af1-46e4-9904-1939b70dbbd6-6094" for this suite. @ 01/15/25 17:52:03.395
• [0.219 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 01/15/25 17:52:03.409
  I0115 17:52:03.409388 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 17:52:03.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:03.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:03.442
  STEP: Creating a test headless service @ 01/15/25 17:52:03.446
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1653.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1653.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 01/15/25 17:52:03.456
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1653.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1653.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/15/25 17:52:03.456
  STEP: creating a pod to probe DNS @ 01/15/25 17:52:03.456
  STEP: submitting the pod to kubernetes @ 01/15/25 17:52:03.457
  STEP: retrieving the pod @ 01/15/25 17:52:05.494
  STEP: looking for the results for each expected name from probers @ 01/15/25 17:52:05.499
  I0115 17:52:05.523004 30 dns_common.go:546] DNS probes using dns-1653/dns-test-ff141cbd-d48f-4a66-920f-cee63a85ebde succeeded

  STEP: deleting the pod @ 01/15/25 17:52:05.523
  STEP: deleting the test headless service @ 01/15/25 17:52:05.545
  I0115 17:52:05.570024 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1653" for this suite. @ 01/15/25 17:52:05.577
• [2.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/15/25 17:52:05.588
  I0115 17:52:05.588486 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 17:52:05.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:05.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:05.626
  STEP: Creating secret with name secret-test-82d04a6e-3c1f-454f-b8c5-755e1ea3358e @ 01/15/25 17:52:05.719
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:52:05.73
  STEP: Saw pod success @ 01/15/25 17:52:09.761
  I0115 17:52:09.766612 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-c26f5f4a-60d6-425a-96bd-bf4dc243f38e container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:52:09.778
  I0115 17:52:09.808602 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1773" for this suite. @ 01/15/25 17:52:09.815
  STEP: Destroying namespace "secret-namespace-1902" for this suite. @ 01/15/25 17:52:09.825
• [4.245 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/15/25 17:52:09.834
  I0115 17:52:09.834453 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename namespaces @ 01/15/25 17:52:09.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:09.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:09.863
  STEP: Read namespace status @ 01/15/25 17:52:09.866
  I0115 17:52:09.872854 30 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/15/25 17:52:09.872
  I0115 17:52:09.883092 30 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/15/25 17:52:09.883
  I0115 17:52:09.897370 30 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0115 17:52:09.897684 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6465" for this suite. @ 01/15/25 17:52:09.915
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/15/25 17:52:09.93
  I0115 17:52:09.930344 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 17:52:09.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:09.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:09.96
  I0115 17:52:10.028497 30 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/15/25 17:52:10.037
  I0115 17:52:10.042265 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:10.042335 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/15/25 17:52:10.042
  I0115 17:52:10.144329 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:10.144386 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:52:11.146699 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:11.146757 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:52:12.145801 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0115 17:52:12.145866 30 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/15/25 17:52:12.149
  I0115 17:52:12.187013 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:12.187080 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/15/25 17:52:12.187
  I0115 17:52:12.246008 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:12.246078 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:52:13.209227 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:13.209297 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:52:14.208083 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:14.208172 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:52:15.213899 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0115 17:52:15.213980 30 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/15/25 17:52:15.235
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3733, will wait for the garbage collector to delete the pods @ 01/15/25 17:52:15.235
  I0115 17:52:15.302780 30 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.330632ms
  I0115 17:52:15.403968 30 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.170373ms
  I0115 17:52:17.309868 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:52:17.309972 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0115 17:52:17.341451 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"222805"},"items":null}

  I0115 17:52:17.346545 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"222805"},"items":null}

  I0115 17:52:17.385286 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3733" for this suite. @ 01/15/25 17:52:17.391
• [7.473 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/15/25 17:52:17.403
  I0115 17:52:17.403634 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 17:52:17.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:17.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:17.435
  STEP: Creating configMap with name cm-test-opt-del-c0b012d3-e72e-4c6a-a6a3-30d1b067fe8a @ 01/15/25 17:52:17.455
  STEP: Creating configMap with name cm-test-opt-upd-dd2d4305-757f-4f9e-a3d8-f220ef03d58a @ 01/15/25 17:52:17.464
  STEP: Creating the pod @ 01/15/25 17:52:17.474
  STEP: Deleting configmap cm-test-opt-del-c0b012d3-e72e-4c6a-a6a3-30d1b067fe8a @ 01/15/25 17:52:19.539
  STEP: Updating configmap cm-test-opt-upd-dd2d4305-757f-4f9e-a3d8-f220ef03d58a @ 01/15/25 17:52:19.548
  STEP: Creating configMap with name cm-test-opt-create-75721c2a-2adf-4918-86a2-dc1f3411f911 @ 01/15/25 17:52:19.56
  STEP: waiting to observe update in volume @ 01/15/25 17:52:19.57
  I0115 17:52:23.622198 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8923" for this suite. @ 01/15/25 17:52:23.628
• [6.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/15/25 17:52:23.64
  I0115 17:52:23.640547 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 17:52:23.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:52:23.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:52:23.671
  STEP: creating the pod with failed condition @ 01/15/25 17:52:23.676
  STEP: updating the pod @ 01/15/25 17:54:23.689
  I0115 17:54:24.216925 30 pod_client.go:173] Successfully updated pod "var-expansion-b96ac29c-a625-4cbf-ba2f-7a567bd32815"
  STEP: waiting for pod running @ 01/15/25 17:54:24.217
  STEP: deleting the pod gracefully @ 01/15/25 17:54:26.228
  I0115 17:54:26.228066 30 delete.go:62] Deleting pod "var-expansion-b96ac29c-a625-4cbf-ba2f-7a567bd32815" in namespace "var-expansion-879"
  I0115 17:54:26.249420 30 delete.go:70] Wait up to 5m0s for pod "var-expansion-b96ac29c-a625-4cbf-ba2f-7a567bd32815" to be fully deleted
  I0115 17:54:58.390410 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-879" for this suite. @ 01/15/25 17:54:58.396
• [154.775 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/15/25 17:54:58.415
  I0115 17:54:58.415880 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename endpointslice @ 01/15/25 17:54:58.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:54:58.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:54:58.453
  STEP: getting /apis @ 01/15/25 17:54:58.457
  STEP: getting /apis/discovery.k8s.io @ 01/15/25 17:54:58.462
  STEP: getting /apis/discovery.k8s.iov1 @ 01/15/25 17:54:58.464
  STEP: creating @ 01/15/25 17:54:58.466
  STEP: getting @ 01/15/25 17:54:58.525
  STEP: listing @ 01/15/25 17:54:58.552
  STEP: watching @ 01/15/25 17:54:58.557
  I0115 17:54:58.557926 30 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/15/25 17:54:58.56
  STEP: cluster-wide watching @ 01/15/25 17:54:58.567
  I0115 17:54:58.567303 30 endpointslice.go:459] starting watch
  STEP: patching @ 01/15/25 17:54:58.569
  STEP: updating @ 01/15/25 17:54:58.578
  I0115 17:54:58.590061 30 endpointslice.go:482] waiting for watch events with expected annotations
  I0115 17:54:58.590172 30 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/15/25 17:54:58.59
  STEP: deleting a collection @ 01/15/25 17:54:58.608
  I0115 17:54:58.633452 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8582" for this suite. @ 01/15/25 17:54:58.639
• [0.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/15/25 17:54:58.654
  I0115 17:54:58.654981 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 17:54:58.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:54:58.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:54:58.688
  STEP: Counting existing ResourceQuota @ 01/15/25 17:55:15.698
  STEP: Creating a ResourceQuota @ 01/15/25 17:55:20.704
  STEP: Ensuring resource quota status is calculated @ 01/15/25 17:55:20.715
  STEP: Creating a ConfigMap @ 01/15/25 17:55:22.721
  STEP: Ensuring resource quota status captures configMap creation @ 01/15/25 17:55:22.749
  STEP: Deleting a ConfigMap @ 01/15/25 17:55:24.757
  STEP: Ensuring resource quota status released usage @ 01/15/25 17:55:24.767
  I0115 17:55:26.775487 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1055" for this suite. @ 01/15/25 17:55:26.783
• [28.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/15/25 17:55:26.794
  I0115 17:55:26.794136 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:55:26.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:55:26.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:55:26.823
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9450 @ 01/15/25 17:55:26.828
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/15/25 17:55:26.864
  STEP: creating service externalsvc in namespace services-9450 @ 01/15/25 17:55:26.864
  STEP: creating replication controller externalsvc in namespace services-9450 @ 01/15/25 17:55:26.886
  I0115 17:55:26.900032      30 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9450, replica count: 2
  I0115 17:55:29.952102      30 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/15/25 17:55:29.957
  I0115 17:55:29.990489 30 resource.go:361] Creating new exec pod
  I0115 17:55:32.022189 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-9450 exec execpodm5rtq -- /bin/sh -x -c nslookup nodeport-service.services-9450.svc.cluster.local'
  I0115 17:55:32.305781 30 builder.go:146] stderr: "+ nslookup nodeport-service.services-9450.svc.cluster.local\n"
  I0115 17:55:32.305851 30 builder.go:147] stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nnodeport-service.services-9450.svc.cluster.local\tcanonical name = externalsvc.services-9450.svc.cluster.local.\nName:\texternalsvc.services-9450.svc.cluster.local\nAddress: 10.233.45.167\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9450, will wait for the garbage collector to delete the pods @ 01/15/25 17:55:32.306
  I0115 17:55:32.374394 30 resources.go:139] Deleting ReplicationController externalsvc took: 13.242385ms
  I0115 17:55:32.475263 30 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.865938ms
  I0115 17:55:35.203719 30 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0115 17:55:35.232320 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9450" for this suite. @ 01/15/25 17:55:35.24
• [8.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/15/25 17:55:35.257
  I0115 17:55:35.257507 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/15/25 17:55:35.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:55:35.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:55:35.285
  I0115 17:55:35.294839 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 17:55:43.373639 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-605" for this suite. @ 01/15/25 17:55:43.381
• [8.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/15/25 17:55:43.392
  I0115 17:55:43.392263 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-pred @ 01/15/25 17:55:43.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:55:43.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:55:43.424
  I0115 17:55:43.427679 30 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0115 17:55:43.488282 30 util.go:396] Waiting for terminating namespaces to be deleted...
  I0115 17:55:43.493468 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node4 before test
  I0115 17:55:43.499724 30 predicates.go:957] kube-flannel-ds-arm64-rnkwn from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.499771 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 1
  I0115 17:55:43.499852 30 predicates.go:957] kube-proxy-7vgrn from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.499875 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0115 17:55:43.499965 30 predicates.go:957] nginx-proxy-node4 from kube-system started at 2025-01-15 07:30:39 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.500011 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 1
  I0115 17:55:43.500053 30 predicates.go:957] nodelocaldns-g85rh from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.500103 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:55:43.500134 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-f8xf4 from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:55:43.500163 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:55:43.500175 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:55:43.500186 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node5 before test
  I0115 17:55:43.505399 30 predicates.go:957] kube-flannel-ds-arm64-6nlst from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.505447 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0115 17:55:43.505466 30 predicates.go:957] kube-proxy-8b92w from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.505478 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0115 17:55:43.505491 30 predicates.go:957] nginx-proxy-node5 from kube-system started at 2025-01-15 07:02:13 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.505501 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 0
  I0115 17:55:43.505513 30 predicates.go:957] nodelocaldns-9b8lg from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.505525 30 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0115 17:55:43.505537 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-tnssb from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:55:43.505548 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:55:43.505559 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:55:43.505570 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node6 before test
  I0115 17:55:43.511330 30 predicates.go:957] kube-flannel-ds-arm64-mj7v9 from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.511374 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 2
  I0115 17:55:43.511420 30 predicates.go:957] kube-proxy-9r2mv from kube-system started at 2025-01-14 20:52:39 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.511443 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 2
  I0115 17:55:43.511459 30 predicates.go:957] nginx-proxy-node6 from kube-system started at 2025-01-15 08:19:10 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.511470 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 2
  I0115 17:55:43.511521 30 predicates.go:957] nodelocaldns-gld7c from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.511544 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:55:43.511609 30 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-15 17:03:28 +0000 UTC (1 container statuses recorded)
  I0115 17:55:43.511638 30 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0115 17:55:43.511678 30 predicates.go:957] sonobuoy-e2e-job-6e9ced84281c4bcc from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:55:43.511697 30 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0115 17:55:43.511722 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:55:43.511834 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-nqlxt from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:55:43.511991 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:55:43.512004 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/15/25 17:55:43.512
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/15/25 17:55:45.555
  STEP: Trying to apply a random label on the found node. @ 01/15/25 17:55:45.574
  STEP: verifying the node has the label kubernetes.io/e2e-c644e328-07dd-4030-a651-85265e834e93 42 @ 01/15/25 17:55:45.59
  STEP: Trying to relaunch the pod, now with labels. @ 01/15/25 17:55:45.596
  STEP: removing the label kubernetes.io/e2e-c644e328-07dd-4030-a651-85265e834e93 off the node node6 @ 01/15/25 17:55:47.617
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c644e328-07dd-4030-a651-85265e834e93 @ 01/15/25 17:55:47.636
  I0115 17:55:47.641239 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9825" for this suite. @ 01/15/25 17:55:47.648
• [4.265 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/15/25 17:55:47.657
  I0115 17:55:47.657705 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:55:47.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:55:47.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:55:47.691
  STEP: creating service multi-endpoint-test in namespace services-3528 @ 01/15/25 17:55:47.695
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3528 to expose endpoints map[] @ 01/15/25 17:55:47.709
  I0115 17:55:47.721941 30 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0115 17:55:48.743126 30 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3528 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3528 @ 01/15/25 17:55:48.743
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3528 to expose endpoints map[pod1:[100]] @ 01/15/25 17:55:50.768
  I0115 17:55:50.782487 30 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3528 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3528 @ 01/15/25 17:55:50.782
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3528 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/15/25 17:55:52.807
  I0115 17:55:52.827460 30 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3528 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/15/25 17:55:52.827
  I0115 17:55:52.827551 30 resource.go:361] Creating new exec pod
  I0115 17:55:55.859650 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3528 exec execpodlrwv9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0115 17:55:56.018881 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.41.128) 80 port [tcp/http] succeeded!\n"
  I0115 17:55:56.019050 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:55:56.019267 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3528 exec execpodlrwv9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.128 80'
  I0115 17:55:56.171970 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.128 80\nConnection to 10.233.41.128 80 port [tcp/http] succeeded!\n"
  I0115 17:55:56.172082 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:55:56.172244 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3528 exec execpodlrwv9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0115 17:55:56.320919 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.41.128) 81 port [tcp/*] succeeded!\n"
  I0115 17:55:56.320989 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 17:55:56.321101 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3528 exec execpodlrwv9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.128 81'
  I0115 17:55:56.461841 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.128 81\nConnection to 10.233.41.128 81 port [tcp/*] succeeded!\n"
  I0115 17:55:56.461907 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3528 @ 01/15/25 17:55:56.461
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3528 to expose endpoints map[pod2:[101]] @ 01/15/25 17:55:56.5
  I0115 17:55:56.520513 30 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3528 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3528 @ 01/15/25 17:55:56.52
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3528 to expose endpoints map[] @ 01/15/25 17:55:56.544
  I0115 17:55:57.560724 30 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3528 exposes endpoints map[]
  I0115 17:55:57.589646 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3528" for this suite. @ 01/15/25 17:55:57.598
• [9.951 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/15/25 17:55:57.609
  I0115 17:55:57.609084 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename lease-test @ 01/15/25 17:55:57.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:55:57.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:55:57.644
  I0115 17:55:57.734521 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4591" for this suite. @ 01/15/25 17:55:57.74
• [0.146 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/15/25 17:55:57.756
  I0115 17:55:57.756182 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 17:55:57.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:55:57.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:55:57.788
  STEP: Creating simple DaemonSet "daemon-set" @ 01/15/25 17:55:57.862
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/15/25 17:55:57.871
  I0115 17:55:57.941918 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:57.941998 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:57.942037 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:57.963898 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:55:57.963955 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  I0115 17:55:58.879281 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:58.879533 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:58.879609 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:58.884877 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:55:58.884940 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  I0115 17:55:59.878290 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:59.878369 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:59.878409 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:59.883591 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 17:55:59.883670 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/15/25 17:55:59.888
  I0115 17:55:59.916662 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:59.917004 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:59.917161 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:55:59.922267 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0115 17:55:59.922509 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:56:00.917740 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:56:00.917840 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:56:00.917903 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:56:00.924317 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0115 17:56:00.924367 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  I0115 17:56:01.917435 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:56:01.917517 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:56:01.917551 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 17:56:01.922487 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 17:56:01.922529 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/15/25 17:56:01.928
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2523, will wait for the garbage collector to delete the pods @ 01/15/25 17:56:01.928
  I0115 17:56:01.994832 30 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.386857ms
  I0115 17:56:02.095527 30 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.682514ms
  I0115 17:56:03.101838 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 17:56:03.101901 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0115 17:56:03.115758 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"223884"},"items":null}

  I0115 17:56:03.119492 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"223884"},"items":null}

  I0115 17:56:03.139246 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2523" for this suite. @ 01/15/25 17:56:03.144
• [5.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/15/25 17:56:03.155
  I0115 17:56:03.155707 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:56:03.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:56:03.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:56:03.189
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/15/25 17:56:03.193
  STEP: Saw pod success @ 01/15/25 17:56:05.232
  I0115 17:56:05.236265 30 output.go:207] Trying to get logs from node node6 pod pod-e10d7176-c821-4f46-9662-b962163c8a75 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:56:05.287
  I0115 17:56:05.313681 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8716" for this suite. @ 01/15/25 17:56:05.32
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/15/25 17:56:05.334
  I0115 17:56:05.334040 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 17:56:05.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:56:05.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:56:05.366
  STEP: Setting up server cert @ 01/15/25 17:56:05.461
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 17:56:05.798
  STEP: Deploying the webhook pod @ 01/15/25 17:56:05.811
  STEP: Wait for the deployment to be ready @ 01/15/25 17:56:05.844
  I0115 17:56:05.854407 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/15/25 17:56:07.869
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:56:07.893
  I0115 17:56:08.894042 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/15/25 17:56:08.924
  STEP: create a pod @ 01/15/25 17:56:08.958
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/15/25 17:56:10.983
  I0115 17:56:10.983817 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=webhook-5870 attach --namespace=webhook-5870 to-be-attached-pod -i -c=container1'
  I0115 17:56:11.100759 30 builder.go:135] rc: 1
  I0115 17:56:11.200051 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5870" for this suite. @ 01/15/25 17:56:11.207
  STEP: Destroying namespace "webhook-markers-990" for this suite. @ 01/15/25 17:56:11.216
• [5.895 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/15/25 17:56:11.229
  I0115 17:56:11.229693 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-pred @ 01/15/25 17:56:11.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:56:11.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:56:11.26
  I0115 17:56:11.267504 30 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0115 17:56:11.312266 30 util.go:396] Waiting for terminating namespaces to be deleted...
  I0115 17:56:11.317161 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node4 before test
  I0115 17:56:11.323886 30 predicates.go:957] kube-flannel-ds-arm64-rnkwn from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.323937 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 1
  I0115 17:56:11.323959 30 predicates.go:957] kube-proxy-7vgrn from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.323971 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 1
  I0115 17:56:11.323983 30 predicates.go:957] nginx-proxy-node4 from kube-system started at 2025-01-15 07:30:39 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.323993 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 1
  I0115 17:56:11.324004 30 predicates.go:957] nodelocaldns-g85rh from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.324015 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:56:11.324028 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-f8xf4 from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:56:11.324039 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:56:11.324049 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:56:11.324059 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node5 before test
  I0115 17:56:11.330097 30 predicates.go:957] kube-flannel-ds-arm64-6nlst from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.330142 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0115 17:56:11.330157 30 predicates.go:957] kube-proxy-8b92w from kube-system started at 2025-01-14 20:52:40 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.330168 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0115 17:56:11.330180 30 predicates.go:957] nginx-proxy-node5 from kube-system started at 2025-01-15 07:02:13 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.330190 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 0
  I0115 17:56:11.330201 30 predicates.go:957] nodelocaldns-9b8lg from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.330211 30 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0115 17:56:11.330232 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-tnssb from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:56:11.330242 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:56:11.330251 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:56:11.330261 30 predicates.go:119] 
  Logging pods the apiserver thinks is on node node6 before test
  I0115 17:56:11.335645 30 predicates.go:957] kube-flannel-ds-arm64-mj7v9 from kube-system started at 2025-01-14 20:53:37 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.335693 30 predicates.go:959] 	Container kube-flannel ready: true, restart count 2
  I0115 17:56:11.335712 30 predicates.go:957] kube-proxy-9r2mv from kube-system started at 2025-01-14 20:52:39 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.335724 30 predicates.go:959] 	Container kube-proxy ready: true, restart count 2
  I0115 17:56:11.335736 30 predicates.go:957] nginx-proxy-node6 from kube-system started at 2025-01-15 08:19:10 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.335747 30 predicates.go:959] 	Container nginx-proxy ready: true, restart count 2
  I0115 17:56:11.335759 30 predicates.go:957] nodelocaldns-gld7c from kube-system started at 2025-01-14 20:54:01 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.335770 30 predicates.go:959] 	Container node-cache ready: true, restart count 3
  I0115 17:56:11.335989 30 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-15 17:03:28 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.336011 30 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0115 17:56:11.336026 30 predicates.go:957] sonobuoy-e2e-job-6e9ced84281c4bcc from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:56:11.336037 30 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0115 17:56:11.336048 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:56:11.336060 30 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d4550496b2e94223-nqlxt from sonobuoy started at 2025-01-15 17:03:30 +0000 UTC (2 container statuses recorded)
  I0115 17:56:11.336072 30 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0115 17:56:11.336082 30 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0115 17:56:11.336094 30 predicates.go:957] to-be-attached-pod from webhook-5870 started at 2025-01-15 17:56:08 +0000 UTC (1 container statuses recorded)
  I0115 17:56:11.336105 30 predicates.go:959] 	Container container1 ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/15/25 17:56:11.336
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.181aef58e4578e14], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 6 Preemption is not helpful for scheduling.] @ 01/15/25 17:56:11.385
  I0115 17:56:12.379378 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7680" for this suite. @ 01/15/25 17:56:12.385
• [1.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/15/25 17:56:12.395
  I0115 17:56:12.395950 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 17:56:12.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:56:12.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:56:12.429
  STEP: Creating secret with name s-test-opt-del-31c9b94d-d77e-4f3f-b85c-99d7ac441eb5 @ 01/15/25 17:56:12.486
  STEP: Creating secret with name s-test-opt-upd-e0bf6aed-f716-4442-9650-531c5d42011c @ 01/15/25 17:56:12.493
  STEP: Creating the pod @ 01/15/25 17:56:12.502
  STEP: Deleting secret s-test-opt-del-31c9b94d-d77e-4f3f-b85c-99d7ac441eb5 @ 01/15/25 17:56:14.649
  STEP: Updating secret s-test-opt-upd-e0bf6aed-f716-4442-9650-531c5d42011c @ 01/15/25 17:56:14.659
  STEP: Creating secret with name s-test-opt-create-38add138-9b15-4cf5-868f-a4a82f5f619f @ 01/15/25 17:56:14.665
  STEP: waiting to observe update in volume @ 01/15/25 17:56:14.676
  I0115 17:57:27.686540 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6111" for this suite. @ 01/15/25 17:57:27.694
• [75.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/15/25 17:57:27.711
  I0115 17:57:27.711205 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 17:57:27.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:57:27.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:57:27.747
  STEP: Creating secret with name secret-test-map-c82280e4-d440-4816-8724-c5b5e07bd6c9 @ 01/15/25 17:57:27.751
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:57:27.761
  STEP: Saw pod success @ 01/15/25 17:57:31.796
  I0115 17:57:31.800976 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-421746eb-3548-43bf-8c8e-c7cf9eeb0497 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:57:31.811
  I0115 17:57:31.839910 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3147" for this suite. @ 01/15/25 17:57:31.846
• [4.144 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/15/25 17:57:31.855
  I0115 17:57:31.855506 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename proxy @ 01/15/25 17:57:31.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:57:31.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:57:31.882
  I0115 17:57:31.886600 30 proxy.go:293] Creating pod...
  I0115 17:57:33.912888 30 proxy.go:317] Creating service...
  I0115 17:57:33.935733 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/DELETE
  I0115 17:57:33.943560 30 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0115 17:57:33.943651 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/GET
  I0115 17:57:33.949353 30 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0115 17:57:33.949456 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/HEAD
  I0115 17:57:33.954553 30 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0115 17:57:33.954609 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/OPTIONS
  I0115 17:57:33.959138 30 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0115 17:57:33.959673 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/PATCH
  I0115 17:57:33.965692 30 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0115 17:57:33.965756 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/POST
  I0115 17:57:33.970915 30 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0115 17:57:33.971847 30 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/pods/agnhost/proxy/some/path/with/PUT
  I0115 17:57:33.977211 30 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0115 17:57:33.977270 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/DELETE
  I0115 17:57:33.985604 30 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0115 17:57:33.985678 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/GET
  I0115 17:57:33.998311 30 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0115 17:57:33.998393 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/HEAD
  I0115 17:57:34.004881 30 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0115 17:57:34.004969 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/OPTIONS
  I0115 17:57:34.015043 30 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0115 17:57:34.015133 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/PATCH
  I0115 17:57:34.025267 30 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0115 17:57:34.025331 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/POST
  I0115 17:57:34.038838 30 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0115 17:57:34.038914 30 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4140/services/test-service/proxy/some/path/with/PUT
  I0115 17:57:34.045874 30 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0115 17:57:34.046415 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4140" for this suite. @ 01/15/25 17:57:34.055
• [2.210 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/15/25 17:57:34.067
  I0115 17:57:34.067598 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 17:57:34.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:57:34.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:57:34.097
  STEP: apply creating a deployment @ 01/15/25 17:57:34.102
  I0115 17:57:34.124532 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7112" for this suite. @ 01/15/25 17:57:34.155
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/15/25 17:57:34.167
  I0115 17:57:34.167636 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename chunking @ 01/15/25 17:57:34.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:57:34.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:57:34.199
  STEP: creating a large number of resources @ 01/15/25 17:57:34.204
  STEP: retrieving those results in paged fashion several times @ 01/15/25 17:57:51.878
  I0115 17:57:51.924160 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0115 17:57:51.976095 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0115 17:57:52.024715 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0115 17:57:52.074723 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0115 17:57:52.124206 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0115 17:57:52.174485 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0115 17:57:52.224378 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0115 17:57:52.275034 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0115 17:57:52.324681 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0115 17:57:52.374674 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0115 17:57:52.425299 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0115 17:57:52.478713 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0115 17:57:52.528707 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0115 17:57:52.574461 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0115 17:57:52.624829 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0115 17:57:52.674695 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0115 17:57:52.725104 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0115 17:57:52.774307 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0115 17:57:52.824770 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0115 17:57:52.874823 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0115 17:57:52.924123 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0115 17:57:52.974741 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0115 17:57:53.025016 30 chunking.go:98] Retrieved 17/17 results with rv 224857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODU3LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0115 17:57:53.073424 30 chunking.go:98] Retrieved 9/17 results with rv 224857 and continue 
  I0115 17:57:53.125558 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0115 17:57:53.176437 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0115 17:57:53.224492 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0115 17:57:53.274901 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0115 17:57:53.325786 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0115 17:57:53.375374 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0115 17:57:53.424980 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0115 17:57:53.476630 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0115 17:57:53.524047 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0115 17:57:53.575213 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0115 17:57:53.625206 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0115 17:57:53.674693 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0115 17:57:53.724156 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0115 17:57:53.775060 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0115 17:57:53.824325 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0115 17:57:53.873794 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0115 17:57:53.925619 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0115 17:57:53.974190 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0115 17:57:54.025254 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0115 17:57:54.075033 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0115 17:57:54.124987 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0115 17:57:54.175264 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0115 17:57:54.224474 30 chunking.go:98] Retrieved 17/17 results with rv 224860 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYwLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0115 17:57:54.273430 30 chunking.go:98] Retrieved 9/17 results with rv 224860 and continue 
  I0115 17:57:54.338025 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0115 17:57:54.376170 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0115 17:57:54.424995 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0115 17:57:54.475678 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0115 17:57:54.525662 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0115 17:57:54.574652 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0115 17:57:54.624170 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0115 17:57:54.675235 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0115 17:57:54.724905 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0115 17:57:54.775046 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0115 17:57:54.825715 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0115 17:57:54.874179 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0115 17:57:54.925053 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0115 17:57:54.978102 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0115 17:57:55.024387 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0115 17:57:55.074082 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0115 17:57:55.125261 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0115 17:57:55.176562 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0115 17:57:55.234548 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0115 17:57:55.275404 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0115 17:57:55.323667 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0115 17:57:55.389706 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0115 17:57:55.425346 30 chunking.go:98] Retrieved 17/17 results with rv 224862 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODYyLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0115 17:57:55.473330 30 chunking.go:98] Retrieved 9/17 results with rv 224862 and continue 
  STEP: retrieving those results all at once @ 01/15/25 17:57:55.473
  I0115 17:57:55.533284 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7000" for this suite. @ 01/15/25 17:57:55.574
• [21.468 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/15/25 17:57:55.636
  I0115 17:57:55.636461 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename security-context @ 01/15/25 17:57:55.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:57:55.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:57:55.67
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/15/25 17:57:55.674
  STEP: Saw pod success @ 01/15/25 17:57:59.704
  I0115 17:57:59.709305 30 output.go:207] Trying to get logs from node node6 pod security-context-06635436-450a-43dc-aa99-29975eeadfd2 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:57:59.716
  I0115 17:57:59.743712 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8484" for this suite. @ 01/15/25 17:57:59.749
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/15/25 17:57:59.778
  I0115 17:57:59.778041 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:57:59.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:57:59.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:57:59.805
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/15/25 17:57:59.809
  STEP: Saw pod success @ 01/15/25 17:58:03.846
  I0115 17:58:03.850835 30 output.go:207] Trying to get logs from node node6 pod pod-10b4cf02-8b26-46bc-bf19-5c6556117bd0 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:58:03.858
  I0115 17:58:03.889709 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3708" for this suite. @ 01/15/25 17:58:03.895
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 01/15/25 17:58:03.908
  I0115 17:58:03.909112 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/15/25 17:58:03.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:03.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:03.935
  STEP: getting /apis @ 01/15/25 17:58:03.95
  STEP: getting /apis/admissionregistration.k8s.io @ 01/15/25 17:58:03.955
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/15/25 17:58:03.957
  STEP: creating @ 01/15/25 17:58:03.958
  STEP: getting @ 01/15/25 17:58:04.272
  STEP: listing @ 01/15/25 17:58:04.276
  STEP: watching @ 01/15/25 17:58:04.28
  I0115 17:58:04.280864 30 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 01/15/25 17:58:04.282
  STEP: updating @ 01/15/25 17:58:04.313
  I0115 17:58:04.336582 30 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 01/15/25 17:58:04.337
  STEP: patching /status @ 01/15/25 17:58:04.341
  STEP: updating /status @ 01/15/25 17:58:04.361
  STEP: deleting @ 01/15/25 17:58:04.388
  STEP: deleting a collection @ 01/15/25 17:58:04.439
  I0115 17:58:04.472833 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5260" for this suite. @ 01/15/25 17:58:04.5
• [0.614 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/15/25 17:58:04.523
  I0115 17:58:04.523523 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename watch @ 01/15/25 17:58:04.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:04.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:04.554
  STEP: creating a watch on configmaps with label A @ 01/15/25 17:58:04.558
  STEP: creating a watch on configmaps with label B @ 01/15/25 17:58:04.562
  STEP: creating a watch on configmaps with label A or B @ 01/15/25 17:58:04.566
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/15/25 17:58:04.57
  I0115 17:58:04.585995 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225344 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:04.586416 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225344 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/15/25 17:58:04.586
  I0115 17:58:04.600841 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225346 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:04.600973 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225346 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/15/25 17:58:04.601
  I0115 17:58:04.611064 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225347 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:04.611323 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225347 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/15/25 17:58:04.611
  I0115 17:58:04.619113 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225348 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:04.619672 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7902  84e4eab2-3af0-4bcb-a8ed-69ebb795b334 225348 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/15/25 17:58:04.62
  I0115 17:58:04.629069 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7902  5a62bd09-f272-4a26-9864-e6500cb1d1e5 225349 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:04.629414 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7902  5a62bd09-f272-4a26-9864-e6500cb1d1e5 225349 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/15/25 17:58:14.629
  I0115 17:58:14.645563 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7902  5a62bd09-f272-4a26-9864-e6500cb1d1e5 225397 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:14.645668 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7902  5a62bd09-f272-4a26-9864-e6500cb1d1e5 225397 0 2025-01-15 17:58:04 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-15 17:58:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 17:58:24.650111 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7902" for this suite. @ 01/15/25 17:58:24.659
• [20.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/15/25 17:58:24.683
  I0115 17:58:24.683246 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-runtime @ 01/15/25 17:58:24.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:24.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:24.716
  STEP: create the container @ 01/15/25 17:58:24.72
  W0115 17:58:24.734063      30 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/15/25 17:58:24.734
  STEP: get the container status @ 01/15/25 17:58:26.75
  STEP: the container should be terminated @ 01/15/25 17:58:26.754
  STEP: the termination message should be set @ 01/15/25 17:58:26.754
  I0115 17:58:26.754946 30 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/15/25 17:58:26.754
  I0115 17:58:26.782296 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-0" for this suite. @ 01/15/25 17:58:26.789
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/15/25 17:58:26.798
  I0115 17:58:26.798964 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:58:26.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:26.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:26.827
  STEP: Creating secret with name s-test-opt-del-879f7394-88f5-47da-ab37-bb36af51bcf6 @ 01/15/25 17:58:26.835
  STEP: Creating secret with name s-test-opt-upd-aaa46e05-10f0-443d-bcd7-46e6d63d62a6 @ 01/15/25 17:58:26.842
  STEP: Creating the pod @ 01/15/25 17:58:26.85
  STEP: Deleting secret s-test-opt-del-879f7394-88f5-47da-ab37-bb36af51bcf6 @ 01/15/25 17:58:28.905
  STEP: Updating secret s-test-opt-upd-aaa46e05-10f0-443d-bcd7-46e6d63d62a6 @ 01/15/25 17:58:28.914
  STEP: Creating secret with name s-test-opt-create-1de8b4af-c9b2-49ff-83ff-41c6d1079c0a @ 01/15/25 17:58:28.927
  STEP: waiting to observe update in volume @ 01/15/25 17:58:28.945
  I0115 17:58:32.997428 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2480" for this suite. @ 01/15/25 17:58:33.004
• [6.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/15/25 17:58:33.016
  I0115 17:58:33.016946 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 17:58:33.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:33.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:33.113
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 17:58:33.117
  STEP: Saw pod success @ 01/15/25 17:58:37.162
  I0115 17:58:37.167480 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-4ccf1f58-b7fc-4a5c-96b1-f3489766a52a container client-container: <nil>
  STEP: delete the pod @ 01/15/25 17:58:37.174
  I0115 17:58:37.200025 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3243" for this suite. @ 01/15/25 17:58:37.205
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/15/25 17:58:37.217
  I0115 17:58:37.217500 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:58:37.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:37.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:37.239
  STEP: Creating projection with secret that has name projected-secret-test-37508dbc-537b-4456-928a-9c711d24c283 @ 01/15/25 17:58:37.243
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:58:37.249
  STEP: Saw pod success @ 01/15/25 17:58:41.28
  I0115 17:58:41.285120 30 output.go:207] Trying to get logs from node node6 pod pod-projected-secrets-992fe6f1-93f0-4b7c-9604-32a60efd6945 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 17:58:41.293
  I0115 17:58:41.314926 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9517" for this suite. @ 01/15/25 17:58:41.321
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/15/25 17:58:41.33
  I0115 17:58:41.330721 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/15/25 17:58:41.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:41.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:41.361
  STEP: create the container to handle the HTTPGet hook request. @ 01/15/25 17:58:41.422
  STEP: create the pod with lifecycle hook @ 01/15/25 17:58:43.454
  STEP: delete the pod with lifecycle hook @ 01/15/25 17:58:45.477
  STEP: check prestop hook @ 01/15/25 17:58:47.497
  I0115 17:58:47.533096 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3968" for this suite. @ 01/15/25 17:58:47.539
• [6.221 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 01/15/25 17:58:47.552
  I0115 17:58:47.552593 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename volumeattachment @ 01/15/25 17:58:47.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:47.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:47.584
  STEP: Create VolumeAttachment "va-e2e-mdjhc" on node "node6" @ 01/15/25 17:58:47.639
  STEP: Get VolumeAttachment "va-e2e-mdjhc" on node "node6" @ 01/15/25 17:58:47.648
  STEP: Patch VolumeAttachment "va-e2e-mdjhc" on node "node6" @ 01/15/25 17:58:47.653
  STEP: List VolumeAttachments with "va-e2e-mdjhc=patched" label @ 01/15/25 17:58:47.66
  STEP: Delete VolumeAttachment "va-e2e-mdjhc" on node "node6" @ 01/15/25 17:58:47.663
  STEP: Confirm deletion of VolumeAttachment "va-e2e-mdjhc" on node "node6" @ 01/15/25 17:58:47.671
  STEP: Create VolumeAttachment "va-e2e-tb6nw" on node "node2" @ 01/15/25 17:58:47.741
  STEP: Update the VolumeAttachment "va-e2e-tb6nw" on node "node2" with label "va-e2e=updated" @ 01/15/25 17:58:47.752
  STEP: Create VolumeAttachment "va-e2e-nb6fk" on node "node5" @ 01/15/25 17:58:47.841
  STEP: Update the VolumeAttachment "va-e2e-nb6fk" on node "node5" with label "va-e2e=updated" @ 01/15/25 17:58:47.849
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/15/25 17:58:47.86
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/15/25 17:58:47.877
  I0115 17:58:47.881287 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4511" for this suite. @ 01/15/25 17:58:47.942
• [0.399 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/15/25 17:58:47.952
  I0115 17:58:47.952851 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:58:47.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:48.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:48.005
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 17:58:48.009
  STEP: Saw pod success @ 01/15/25 17:58:52.045
  I0115 17:58:52.051636 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-0665084a-5289-494d-8eb6-249f609e4f2e container client-container: <nil>
  STEP: delete the pod @ 01/15/25 17:58:52.061
  I0115 17:58:52.100040 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8431" for this suite. @ 01/15/25 17:58:52.109
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 01/15/25 17:58:52.122
  I0115 17:58:52.122542 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 17:58:52.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:52.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:52.159
  STEP: creating Agnhost RC @ 01/15/25 17:58:52.164
  I0115 17:58:52.164344 30 kubectl.go:1534] namespace kubectl-6017
  I0115 17:58:52.164591 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6017 create -f -'
  I0115 17:58:52.356606 30 builder.go:146] stderr: ""
  I0115 17:58:52.356714 30 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/15/25 17:58:52.356
  I0115 17:58:53.362368 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 17:58:53.362440 30 framework.go:733] Found 0 / 1
  I0115 17:58:54.363170 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 17:58:54.363231 30 framework.go:733] Found 1 / 1
  I0115 17:58:54.363254 30 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0115 17:58:54.367370 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 17:58:54.367417 30 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0115 17:58:54.367433 30 kubectl.go:1541] wait on agnhost-primary startup in kubectl-6017 
  I0115 17:58:54.367568 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6017 logs agnhost-primary-wqbt7 agnhost-primary'
  I0115 17:58:54.474203 30 builder.go:146] stderr: ""
  I0115 17:58:54.474263 30 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/15/25 17:58:54.474
  I0115 17:58:54.474373 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6017 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0115 17:58:54.586221 30 builder.go:146] stderr: ""
  I0115 17:58:54.586281 30 builder.go:147] stdout: "service/rm2 exposed\n"
  I0115 17:58:54.591985 30 utils.go:1203] Service rm2 in namespace kubectl-6017 found.
  STEP: exposing service @ 01/15/25 17:58:56.603
  I0115 17:58:56.603721 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-6017 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0115 17:58:56.711203 30 builder.go:146] stderr: ""
  I0115 17:58:56.711263 30 builder.go:147] stdout: "service/rm3 exposed\n"
  I0115 17:58:56.739084 30 utils.go:1203] Service rm3 in namespace kubectl-6017 found.
  I0115 17:58:58.749776 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6017" for this suite. @ 01/15/25 17:58:58.756
• [6.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/15/25 17:58:58.767
  I0115 17:58:58.767677 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-webhook @ 01/15/25 17:58:58.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:58:58.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:58:58.799
  STEP: Setting up server cert @ 01/15/25 17:58:58.892
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/15/25 17:58:59.171
  STEP: Deploying the custom resource conversion webhook pod @ 01/15/25 17:58:59.184
  STEP: Wait for the deployment to be ready @ 01/15/25 17:58:59.211
  I0115 17:58:59.226784 30 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/15/25 17:59:01.243
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:59:01.265
  I0115 17:59:02.265995 30 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0115 17:59:02.278666 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Creating a v1 custom resource @ 01/15/25 17:59:09.861
  STEP: Create a v2 custom resource @ 01/15/25 17:59:09.883
  STEP: List CRs in v1 @ 01/15/25 17:59:09.928
  STEP: List CRs in v2 @ 01/15/25 17:59:09.933
  I0115 17:59:10.554963 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5345" for this suite. @ 01/15/25 17:59:10.568
• [11.816 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/15/25 17:59:10.583
  I0115 17:59:10.583423 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replicaset @ 01/15/25 17:59:10.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:10.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:10.618
  STEP: Create a ReplicaSet @ 01/15/25 17:59:10.622
  STEP: Verify that the required pods have come up @ 01/15/25 17:59:10.634
  I0115 17:59:10.640749 30 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0115 17:59:15.647784 30 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/15/25 17:59:15.648
  I0115 17:59:15.653762 30 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/15/25 17:59:15.653
  STEP: DeleteCollection of the ReplicaSets @ 01/15/25 17:59:15.658
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/15/25 17:59:15.773
  I0115 17:59:15.784860 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1079" for this suite. @ 01/15/25 17:59:15.796
• [5.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 01/15/25 17:59:15.812
  I0115 17:59:15.812873 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 17:59:15.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:15.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:15.844
  STEP: creating the pod @ 01/15/25 17:59:15.848
  I0115 17:59:15.848862 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 create -f -'
  I0115 17:59:16.063993 30 builder.go:146] stderr: ""
  I0115 17:59:16.064058 30 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/15/25 17:59:18.076
  I0115 17:59:18.077073 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 label pods pause testing-label=testing-label-value'
  I0115 17:59:18.188619 30 builder.go:146] stderr: ""
  I0115 17:59:18.188688 30 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/15/25 17:59:18.188
  I0115 17:59:18.188798 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 get pod pause -L testing-label'
  I0115 17:59:18.277936 30 builder.go:146] stderr: ""
  I0115 17:59:18.278024 30 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/15/25 17:59:18.278
  I0115 17:59:18.278135 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 label pods pause testing-label-'
  I0115 17:59:18.381231 30 builder.go:146] stderr: ""
  I0115 17:59:18.381354 30 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/15/25 17:59:18.381
  I0115 17:59:18.381488 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 get pod pause -L testing-label'
  I0115 17:59:18.468559 30 builder.go:146] stderr: ""
  I0115 17:59:18.468628 30 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 01/15/25 17:59:18.468
  I0115 17:59:18.468943 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 delete --grace-period=0 --force -f -'
  I0115 17:59:18.575775 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 17:59:18.576011 30 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0115 17:59:18.576092 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 get rc,svc -l name=pause --no-headers'
  I0115 17:59:18.683340 30 builder.go:146] stderr: "No resources found in kubectl-5385 namespace.\n"
  I0115 17:59:18.683405 30 builder.go:147] stdout: ""
  I0115 17:59:18.683693 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5385 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0115 17:59:18.767924 30 builder.go:146] stderr: ""
  I0115 17:59:18.767992 30 builder.go:147] stdout: ""
  I0115 17:59:18.768272 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5385" for this suite. @ 01/15/25 17:59:18.774
• [2.972 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 01/15/25 17:59:18.785
  I0115 17:59:18.785513 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename containers @ 01/15/25 17:59:18.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:18.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:18.831
  I0115 17:59:20.911073 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5730" for this suite. @ 01/15/25 17:59:20.923
• [2.152 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/15/25 17:59:20.937
  I0115 17:59:20.937999 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename runtimeclass @ 01/15/25 17:59:20.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:20.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:20.972
  I0115 17:59:23.024899 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3862" for this suite. @ 01/15/25 17:59:23.031
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/15/25 17:59:23.043
  I0115 17:59:23.043412 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/15/25 17:59:23.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:23.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:23.067
  STEP: creating @ 01/15/25 17:59:23.071
  STEP: getting @ 01/15/25 17:59:23.095
  STEP: listing in namespace @ 01/15/25 17:59:23.099
  STEP: patching @ 01/15/25 17:59:23.115
  STEP: deleting @ 01/15/25 17:59:23.127
  I0115 17:59:23.157205 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8477" for this suite. @ 01/15/25 17:59:23.163
• [0.129 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 01/15/25 17:59:23.172
  I0115 17:59:23.172545 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename containers @ 01/15/25 17:59:23.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:23.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:23.206
  STEP: Creating a pod to test override all @ 01/15/25 17:59:23.21
  STEP: Saw pod success @ 01/15/25 17:59:27.238
  I0115 17:59:27.242894 30 output.go:207] Trying to get logs from node node6 pod client-containers-8f07b0fb-2d2f-4eb1-8a4d-5c22f60f395b container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 17:59:27.25
  I0115 17:59:27.276431 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6537" for this suite. @ 01/15/25 17:59:27.282
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/15/25 17:59:27.294
  I0115 17:59:27.294238 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replicaset @ 01/15/25 17:59:27.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:27.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:27.322
  I0115 17:59:27.352466 30 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0115 17:59:32.359871 30 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/15/25 17:59:32.359
  STEP: Scaling up "test-rs" replicaset @ 01/15/25 17:59:32.36
  I0115 17:59:32.373218 30 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/15/25 17:59:32.373
  I0115 17:59:32.539766 30 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2720 with ReadyReplicas 1, AvailableReplicas 1
  I0115 17:59:32.566405 30 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2720 with ReadyReplicas 1, AvailableReplicas 1
  I0115 17:59:32.579183 30 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2720 with ReadyReplicas 1, AvailableReplicas 1
  I0115 17:59:33.582623 30 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2720 with ReadyReplicas 2, AvailableReplicas 2
  I0115 17:59:34.071020 30 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-2720 with ReadyReplicas 3 found true
  I0115 17:59:34.071209 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2720" for this suite. @ 01/15/25 17:59:34.081
• [6.805 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/15/25 17:59:34.099
  I0115 17:59:34.099382 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 17:59:34.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:34.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:34.129
  STEP: creating the pod @ 01/15/25 17:59:34.133
  STEP: submitting the pod to kubernetes @ 01/15/25 17:59:34.134
  STEP: verifying the pod is in kubernetes @ 01/15/25 17:59:36.17
  STEP: updating the pod @ 01/15/25 17:59:36.178
  I0115 17:59:36.699020 30 pod_client.go:173] Successfully updated pod "pod-update-45e3ab0f-574c-4b84-a4a5-b4ac5005ff0b"
  STEP: verifying the updated pod is in kubernetes @ 01/15/25 17:59:36.704
  I0115 17:59:36.708831 30 pods.go:391] Pod update OK
  I0115 17:59:36.709168 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6747" for this suite. @ 01/15/25 17:59:36.715
• [2.626 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/15/25 17:59:36.725
  I0115 17:59:36.725812 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubelet-test @ 01/15/25 17:59:36.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:36.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:36.758
  I0115 17:59:38.806051 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3577" for this suite. @ 01/15/25 17:59:38.811
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 01/15/25 17:59:38.819
  I0115 17:59:38.819843 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-selectable-fields @ 01/15/25 17:59:38.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:38.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:38.844
  STEP: Setting up server cert @ 01/15/25 17:59:38.848
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/15/25 17:59:39.6
  STEP: Deploying the custom resource conversion webhook pod @ 01/15/25 17:59:39.62
  STEP: Wait for the deployment to be ready @ 01/15/25 17:59:39.647
  I0115 17:59:39.662036 30 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/15/25 17:59:41.676
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 17:59:41.69
  I0115 17:59:42.690486 30 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 01/15/25 17:59:42.701
  I0115 17:59:42.701524 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Creating a custom resource conversion webhook @ 01/15/25 17:59:48.218
  STEP: Watching with field selectors @ 01/15/25 17:59:50.285
  STEP: Registering informers with field selectors @ 01/15/25 17:59:50.296
  STEP: Creating custom resources @ 01/15/25 17:59:50.296
  STEP: Listing v2 custom resources with field selector host=host1 @ 01/15/25 17:59:50.353
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 01/15/25 17:59:50.359
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 01/15/25 17:59:50.364
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 01/15/25 17:59:50.369
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 01/15/25 17:59:50.374
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 01/15/25 17:59:50.379
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 01/15/25 17:59:50.379
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 01/15/25 17:59:50.38
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 01/15/25 17:59:50.38
  STEP: Deleting one custom resources to ensure that deletions are observed @ 01/15/25 17:59:50.38
  STEP: Updating one custom resources to ensure that deletions are observed @ 01/15/25 17:59:50.399
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 01/15/25 17:59:50.425
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 01/15/25 17:59:50.43
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 01/15/25 17:59:50.434
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 01/15/25 17:59:50.44
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 01/15/25 17:59:50.44
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 01/15/25 17:59:50.44
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 01/15/25 17:59:50.44
  I0115 17:59:51.047281 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-7147" for this suite. @ 01/15/25 17:59:51.055
• [12.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/15/25 17:59:51.066
  I0115 17:59:51.067049 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 17:59:51.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:51.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:51.099
  STEP: Creating a pod to test downward api env vars @ 01/15/25 17:59:51.103
  STEP: Saw pod success @ 01/15/25 17:59:53.139
  I0115 17:59:53.143330 30 output.go:207] Trying to get logs from node node6 pod downward-api-6c901ba3-98d6-42e5-bed8-cb9bb1f553aa container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 17:59:53.152
  I0115 17:59:53.184306 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1776" for this suite. @ 01/15/25 17:59:53.191
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/15/25 17:59:53.215
  I0115 17:59:53.215256 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 17:59:53.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:53.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:53.247
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/15/25 17:59:53.251
  STEP: Saw pod success @ 01/15/25 17:59:57.278
  I0115 17:59:57.283424 30 output.go:207] Trying to get logs from node node6 pod pod-8428d509-a44e-4955-a0cc-bbd2fe3a1209 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 17:59:57.291
  I0115 17:59:57.316567 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4582" for this suite. @ 01/15/25 17:59:57.327
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/15/25 17:59:57.339
  I0115 17:59:57.339459 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 17:59:57.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:57.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:57.366
  I0115 17:59:57.374340 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1860" for this suite. @ 01/15/25 17:59:57.427
• [0.097 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/15/25 17:59:57.436
  I0115 17:59:57.436387 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/15/25 17:59:57.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:57.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:57.468
  STEP: Cleaning up the secret @ 01/15/25 17:59:59.535
  STEP: Cleaning up the configmap @ 01/15/25 17:59:59.544
  STEP: Cleaning up the pod @ 01/15/25 17:59:59.554
  I0115 17:59:59.571347 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2632" for this suite. @ 01/15/25 17:59:59.577
• [2.155 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/15/25 17:59:59.591
  I0115 17:59:59.591139 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 17:59:59.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 17:59:59.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 17:59:59.619
  STEP: Creating projection with secret that has name projected-secret-test-map-a37e8a70-7638-46dc-b75b-5626b231777e @ 01/15/25 17:59:59.623
  STEP: Creating a pod to test consume secrets @ 01/15/25 17:59:59.63
  STEP: Saw pod success @ 01/15/25 18:00:03.658
  I0115 18:00:03.662616 30 output.go:207] Trying to get logs from node node6 pod pod-projected-secrets-6f903d6a-2a8d-4fc9-a02d-a75d007d5a57 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:00:03.67
  I0115 18:00:03.696818 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6417" for this suite. @ 01/15/25 18:00:03.702
• [4.120 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/15/25 18:00:03.71
  I0115 18:00:03.710986 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replication-controller @ 01/15/25 18:00:03.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:03.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:03.74
  STEP: creating a ReplicationController @ 01/15/25 18:00:03.749
  STEP: waiting for RC to be added @ 01/15/25 18:00:03.761
  STEP: waiting for available Replicas @ 01/15/25 18:00:03.761
  STEP: patching ReplicationController @ 01/15/25 18:00:04.873
  STEP: waiting for RC to be modified @ 01/15/25 18:00:04.893
  STEP: patching ReplicationController status @ 01/15/25 18:00:04.895
  STEP: waiting for RC to be modified @ 01/15/25 18:00:04.905
  STEP: waiting for available Replicas @ 01/15/25 18:00:04.905
  STEP: fetching ReplicationController status @ 01/15/25 18:00:04.92
  STEP: patching ReplicationController scale @ 01/15/25 18:00:04.926
  STEP: waiting for RC to be modified @ 01/15/25 18:00:04.936
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/15/25 18:00:04.939
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/15/25 18:00:05.673
  STEP: updating ReplicationController status @ 01/15/25 18:00:05.677
  STEP: waiting for RC to be modified @ 01/15/25 18:00:05.697
  STEP: listing all ReplicationControllers @ 01/15/25 18:00:05.697
  STEP: checking that ReplicationController has expected values @ 01/15/25 18:00:05.701
  STEP: deleting ReplicationControllers by collection @ 01/15/25 18:00:05.702
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/15/25 18:00:05.717
  I0115 18:00:05.767988 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0115 18:00:05.768340      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9160" for this suite. @ 01/15/25 18:00:05.776
• [2.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 01/15/25 18:00:05.791
  I0115 18:00:05.791786 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:00:05.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:05.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:05.835
  STEP: Creating a pod to test downward api env vars @ 01/15/25 18:00:05.839
  E0115 18:00:06.768999      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:07.769142      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:08.769730      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:09.770011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:00:09.892
  I0115 18:00:09.897006 30 output.go:207] Trying to get logs from node node6 pod downward-api-16f8c34f-c9b8-4ebe-aeba-c5f96d6da367 container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 18:00:09.905
  I0115 18:00:09.930693 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9745" for this suite. @ 01/15/25 18:00:09.937
• [4.155 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/15/25 18:00:09.948
  I0115 18:00:09.948536 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:00:09.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:09.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:09.979
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:00:09.984
  E0115 18:00:10.770854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:11.771422      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:12.771683      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:13.772109      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:00:14.061
  I0115 18:00:14.066537 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-4b195c38-5fd4-46b4-be70-9ca02506814e container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:00:14.075
  I0115 18:00:14.115210 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8881" for this suite. @ 01/15/25 18:00:14.121
• [4.182 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/15/25 18:00:14.13
  I0115 18:00:14.130278 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replicaset @ 01/15/25 18:00:14.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:14.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:14.153
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/15/25 18:00:14.157
  I0115 18:00:14.182465 30 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0115 18:00:14.773109      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:15.773293      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:16.773572      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:17.773905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:18.773991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:00:19.190289 30 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/15/25 18:00:19.19
  STEP: getting scale subresource @ 01/15/25 18:00:19.19
  STEP: updating a scale subresource @ 01/15/25 18:00:19.193
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/15/25 18:00:19.207
  STEP: Patch a scale subresource @ 01/15/25 18:00:19.214
  I0115 18:00:19.256231 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2165" for this suite. @ 01/15/25 18:00:19.262
• [5.141 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 01/15/25 18:00:19.273
  I0115 18:00:19.273417 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:00:19.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:19.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:19.307
  STEP: creating a ServiceAccount @ 01/15/25 18:00:19.31
  STEP: watching for the ServiceAccount to be added @ 01/15/25 18:00:19.327
  STEP: patching the ServiceAccount @ 01/15/25 18:00:19.333
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/15/25 18:00:19.341
  STEP: deleting the ServiceAccount @ 01/15/25 18:00:19.344
  I0115 18:00:19.363142 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3556" for this suite. @ 01/15/25 18:00:19.369
• [0.108 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/15/25 18:00:19.381
  I0115 18:00:19.381745 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replicaset @ 01/15/25 18:00:19.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:19.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:19.404
  I0115 18:00:19.408150 30 replica_set.go:191] Creating ReplicaSet my-hostname-basic-e7922ec9-c29a-4e89-9d5f-ac350e6deb05
  I0115 18:00:19.425091 30 resource.go:87] Pod name my-hostname-basic-e7922ec9-c29a-4e89-9d5f-ac350e6deb05: Found 0 pods out of 1
  E0115 18:00:19.774721      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:20.775113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:21.775414      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:22.775707      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:23.776027      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:00:24.430847 30 resource.go:87] Pod name my-hostname-basic-e7922ec9-c29a-4e89-9d5f-ac350e6deb05: Found 1 pods out of 1
  I0115 18:00:24.430938 30 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-e7922ec9-c29a-4e89-9d5f-ac350e6deb05" is running
  I0115 18:00:24.437907 30 replica_set.go:220] Pod "my-hostname-basic-e7922ec9-c29a-4e89-9d5f-ac350e6deb05-tpspr" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 18:00:20 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 18:00:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 18:00:20 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 18:00:20 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-15 18:00:19 +0000 UTC Reason: Message:}])
  I0115 18:00:24.437967 30 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/15/25 18:00:24.438
  I0115 18:00:24.533217 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7633" for this suite. @ 01/15/25 18:00:24.54
• [5.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/15/25 18:00:24.556
  I0115 18:00:24.556608 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:00:24.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:24.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:24.581
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:00:24.585
  E0115 18:00:24.776235      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:25.776763      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:26.776975      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:27.777321      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:00:28.617
  I0115 18:00:28.621655 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-5b1c05b4-29b0-4bc1-bcb5-bdbb10a46bed container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:00:28.628
  I0115 18:00:28.657792 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5690" for this suite. @ 01/15/25 18:00:28.663
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 01/15/25 18:00:28.673
  I0115 18:00:28.673205 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/15/25 18:00:28.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:28.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:28.7
  STEP: getting /apis @ 01/15/25 18:00:28.712
  STEP: getting /apis/admissionregistration.k8s.io @ 01/15/25 18:00:28.717
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/15/25 18:00:28.718
  STEP: creating @ 01/15/25 18:00:28.72
  STEP: getting @ 01/15/25 18:00:28.771
  STEP: listing @ 01/15/25 18:00:28.775
  E0115 18:00:28.777672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: watching @ 01/15/25 18:00:28.779
  I0115 18:00:28.779624 30 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 01/15/25 18:00:28.781
  STEP: updating @ 01/15/25 18:00:28.789
  I0115 18:00:28.800745 30 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 01/15/25 18:00:28.8
  STEP: deleting a collection @ 01/15/25 18:00:28.819
  I0115 18:00:28.847723 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2035" for this suite. @ 01/15/25 18:00:28.853
• [0.193 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/15/25 18:00:28.865
  I0115 18:00:28.865977 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replication-controller @ 01/15/25 18:00:28.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:28.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:28.897
  I0115 18:00:28.900977 30 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0115 18:00:29.778272      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/15/25 18:00:29.924
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/15/25 18:00:29.933
  E0115 18:00:30.779071      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/15/25 18:00:30.943
  I0115 18:00:30.961113 30 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/15/25 18:00:30.961
  E0115 18:00:31.779187      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:00:31.973232 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6265" for this suite. @ 01/15/25 18:00:31.98
• [3.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/15/25 18:00:31.994
  I0115 18:00:31.994585 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename runtimeclass @ 01/15/25 18:00:31.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:32.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:32.019
  E0115 18:00:32.780130      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:33.781116      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:00:34.096303 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1448" for this suite. @ 01/15/25 18:00:34.103
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/15/25 18:00:34.131
  I0115 18:00:34.131230 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-runtime @ 01/15/25 18:00:34.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:34.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:34.159
  STEP: create the container @ 01/15/25 18:00:34.163
  W0115 18:00:34.179190      30 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/15/25 18:00:34.179
  E0115 18:00:34.781422      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:35.781896      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/15/25 18:00:36.2
  STEP: the container should be terminated @ 01/15/25 18:00:36.205
  STEP: the termination message should be set @ 01/15/25 18:00:36.205
  I0115 18:00:36.205618 30 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/15/25 18:00:36.205
  I0115 18:00:36.230490 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4406" for this suite. @ 01/15/25 18:00:36.236
• [2.116 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/15/25 18:00:36.248
  I0115 18:00:36.248153 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename subpath @ 01/15/25 18:00:36.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:36.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:36.276
  STEP: Setting up data @ 01/15/25 18:00:36.28
  STEP: Creating pod pod-subpath-test-downwardapi-xphh @ 01/15/25 18:00:36.297
  STEP: Creating a pod to test atomic-volume-subpath @ 01/15/25 18:00:36.297
  E0115 18:00:36.782064      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:37.782893      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:38.783075      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:39.783647      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:40.783614      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:41.783932      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:42.784714      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:43.785157      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:44.785155      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:45.785613      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:46.786550      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:47.786879      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:48.787539      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:49.787852      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:50.788191      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:51.788499      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:52.788767      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:53.789443      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:54.790437      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:55.790480      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:56.791577      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:57.792589      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:00:58.389
  I0115 18:00:58.394182 30 output.go:207] Trying to get logs from node node6 pod pod-subpath-test-downwardapi-xphh container test-container-subpath-downwardapi-xphh: <nil>
  STEP: delete the pod @ 01/15/25 18:00:58.404
  STEP: Deleting pod pod-subpath-test-downwardapi-xphh @ 01/15/25 18:00:58.484
  I0115 18:00:58.484850 30 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-xphh" in namespace "subpath-7018"
  I0115 18:00:58.489388 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7018" for this suite. @ 01/15/25 18:00:58.495
• [22.257 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/15/25 18:00:58.505
  I0115 18:00:58.505204 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:00:58.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:00:58.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:00:58.533
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:00:58.538
  E0115 18:00:58.793721      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:00:59.793633      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:00.793856      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:01.793836      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:01:02.568
  I0115 18:01:02.573927 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-94abc7e3-14b2-4a09-97be-e5a0b65f3c0c container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:01:02.581
  I0115 18:01:02.603867 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9309" for this suite. @ 01/15/25 18:01:02.609
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/15/25 18:01:02.619
  I0115 18:01:02.619390 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename init-container @ 01/15/25 18:01:02.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:02.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:02.647
  STEP: creating the pod @ 01/15/25 18:01:02.652
  I0115 18:01:02.652597 30 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0115 18:01:02.794940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:03.795287      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:04.795869      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:05.796423      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:01:06.344465 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-796" for this suite. @ 01/15/25 18:01:06.352
• [3.743 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/15/25 18:01:06.362
  I0115 18:01:06.362255 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:01:06.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:06.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:06.39
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:01:06.394
  E0115 18:01:06.797149      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:07.797452      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:01:08.418
  I0115 18:01:08.422521 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-00e75e8e-7de9-4a75-a5f0-8f7d929de4ec container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:01:08.431
  I0115 18:01:08.457116 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7755" for this suite. @ 01/15/25 18:01:08.462
• [2.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 01/15/25 18:01:08.471
  I0115 18:01:08.471641 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:01:08.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:08.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:08.497
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/15/25 18:01:08.501
  I0115 18:01:08.501335 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-7508 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0115 18:01:08.612059 30 builder.go:146] stderr: ""
  I0115 18:01:08.612120 30 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/15/25 18:01:08.612
  I0115 18:01:08.617137 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-7508 delete pods e2e-test-httpd-pod'
  E0115 18:01:08.798253      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:09.798585      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:01:10.159363 30 builder.go:146] stderr: ""
  I0115 18:01:10.159418 30 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0115 18:01:10.159579 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7508" for this suite. @ 01/15/25 18:01:10.166
• [1.707 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/15/25 18:01:10.178
  I0115 18:01:10.178810 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename tables @ 01/15/25 18:01:10.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:10.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:10.205
  I0115 18:01:10.212996 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7851" for this suite. @ 01/15/25 18:01:10.266
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/15/25 18:01:10.28
  I0115 18:01:10.280482 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename ingressclass @ 01/15/25 18:01:10.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:10.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:10.304
  STEP: getting /apis @ 01/15/25 18:01:10.312
  STEP: getting /apis/networking.k8s.io @ 01/15/25 18:01:10.317
  STEP: getting /apis/networking.k8s.iov1 @ 01/15/25 18:01:10.318
  STEP: creating @ 01/15/25 18:01:10.32
  STEP: getting @ 01/15/25 18:01:10.365
  STEP: listing @ 01/15/25 18:01:10.369
  STEP: watching @ 01/15/25 18:01:10.378
  I0115 18:01:10.379231 30 ingressclass.go:348] starting watch
  STEP: patching @ 01/15/25 18:01:10.381
  STEP: updating @ 01/15/25 18:01:10.39
  I0115 18:01:10.396809 30 ingressclass.go:364] waiting for watch events with expected annotations
  I0115 18:01:10.396877 30 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/15/25 18:01:10.397
  STEP: deleting a collection @ 01/15/25 18:01:10.412
  I0115 18:01:10.435405 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5040" for this suite. @ 01/15/25 18:01:10.44
• [0.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/15/25 18:01:10.524
  I0115 18:01:10.525085 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:01:10.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:10.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:10.558
  STEP: Setting up server cert @ 01/15/25 18:01:10.657
  E0115 18:01:10.799143      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:01:11.084
  STEP: Deploying the webhook pod @ 01/15/25 18:01:11.097
  STEP: Wait for the deployment to be ready @ 01/15/25 18:01:11.124
  I0115 18:01:11.139889 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:01:11.799365      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:12.799710      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:01:13.154
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:01:13.174
  E0115 18:01:13.800132      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:01:14.174331 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0115 18:01:14.185227 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:01:14.800449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:15.801250      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:16.801700      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:17.802306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:18.803431      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4976-crds.webhook.example.com via the AdmissionRegistration API @ 01/15/25 18:01:19.703
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/15/25 18:01:19.757
  E0115 18:01:19.804131      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:20.804677      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:21.805678      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:01:22.416625 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7060" for this suite. @ 01/15/25 18:01:22.428
  STEP: Destroying namespace "webhook-markers-4085" for this suite. @ 01/15/25 18:01:22.44
• [11.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/15/25 18:01:22.451
  I0115 18:01:22.451585 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 18:01:22.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:22.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:22.484
  I0115 18:01:22.488694 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:01:22.806181      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:23.806346      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:24.807070      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:25.807543      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:26.808594      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:27.809478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:28.810511      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:29.810557      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0115 18:01:30.068615      30 warnings.go:70] unknown field "alpha"
  W0115 18:01:30.068653      30 warnings.go:70] unknown field "beta"
  W0115 18:01:30.068661      30 warnings.go:70] unknown field "delta"
  W0115 18:01:30.068667      30 warnings.go:70] unknown field "epsilon"
  W0115 18:01:30.068674      30 warnings.go:70] unknown field "gamma"
  I0115 18:01:30.627438 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4418" for this suite. @ 01/15/25 18:01:30.633
• [8.192 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 01/15/25 18:01:30.644
  I0115 18:01:30.644325 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 18:01:30.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:30.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:30.671
  STEP: Creating a test externalName service @ 01/15/25 18:01:30.675
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3126.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local; sleep 1; done
   @ 01/15/25 18:01:30.683
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3126.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3126.svc.cluster.local; sleep 1; done
   @ 01/15/25 18:01:30.683
  STEP: creating a pod to probe DNS @ 01/15/25 18:01:30.683
  STEP: submitting the pod to kubernetes @ 01/15/25 18:01:30.683
  E0115 18:01:30.811000      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:31.811334      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/15/25 18:01:32.707
  STEP: looking for the results for each expected name from probers @ 01/15/25 18:01:32.712
  I0115 18:01:32.725502 30 dns_common.go:571] DNS probes using dns-test-9073a836-879c-4084-a2ca-aed9620fade0 succeeded

  STEP: changing the externalName to bar.example.com @ 01/15/25 18:01:32.725
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3126.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local; sleep 1; done
   @ 01/15/25 18:01:32.741
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3126.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3126.svc.cluster.local; sleep 1; done
   @ 01/15/25 18:01:32.741
  STEP: creating a second pod to probe DNS @ 01/15/25 18:01:32.741
  STEP: submitting the pod to kubernetes @ 01/15/25 18:01:32.741
  E0115 18:01:32.812337      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:33.812704      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/15/25 18:01:34.763
  STEP: looking for the results for each expected name from probers @ 01/15/25 18:01:34.767
  I0115 18:01:34.777737 30 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local from pod  dns-3126/dns-test-db10817f-4539-4942-a5ee-f3d7c0cd3e04 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0115 18:01:34.782678 30 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3126.svc.cluster.local from pod  dns-3126/dns-test-db10817f-4539-4942-a5ee-f3d7c0cd3e04 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0115 18:01:34.782740 30 dns_common.go:506] Lookups using dns-3126/dns-test-db10817f-4539-4942-a5ee-f3d7c0cd3e04 failed for: [agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local jessie_udp@dns-test-service-3.dns-3126.svc.cluster.local]

  I0115 18:01:34.790449 30 dns_common.go:514] Pod client logs for webserver: 
  I0115 18:01:34.802740 30 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0115 18:01:34.809465 30 dns_common.go:514] Pod client logs for jessie-querier: 
  E0115 18:01:34.813680      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:35.814539      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:36.814849      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:37.815031      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:38.815368      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:01:39.774270 30 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local from pod  dns-3126/dns-test-db10817f-4539-4942-a5ee-f3d7c0cd3e04 contains '' instead of 'bar.example.com.'
  I0115 18:01:39.778990 30 dns_common.go:506] Lookups using dns-3126/dns-test-db10817f-4539-4942-a5ee-f3d7c0cd3e04 failed for: [agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local]

  I0115 18:01:39.787155 30 dns_common.go:514] Pod client logs for webserver: 
  I0115 18:01:39.798995 30 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0115 18:01:39.806455 30 dns_common.go:514] Pod client logs for jessie-querier: 
  E0115 18:01:39.815719      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:40.815974      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:41.816315      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:42.816612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:43.816921      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:01:44.778421 30 dns_common.go:571] DNS probes using dns-test-db10817f-4539-4942-a5ee-f3d7c0cd3e04 succeeded

  STEP: changing the service to type=ClusterIP @ 01/15/25 18:01:44.778
  W0115 18:01:44.796794      30 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3126.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3126.svc.cluster.local; sleep 1; done
   @ 01/15/25 18:01:44.796
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3126.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3126.svc.cluster.local; sleep 1; done
   @ 01/15/25 18:01:44.796
  STEP: creating a third pod to probe DNS @ 01/15/25 18:01:44.796
  STEP: submitting the pod to kubernetes @ 01/15/25 18:01:44.801
  E0115 18:01:44.817095      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:45.818723      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:46.818309      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/15/25 18:01:46.825
  STEP: looking for the results for each expected name from probers @ 01/15/25 18:01:46.829
  I0115 18:01:46.843817 30 dns_common.go:571] DNS probes using dns-test-e4a63728-98bc-4269-b421-25504e27826a succeeded

  STEP: deleting the pod @ 01/15/25 18:01:46.844
  STEP: deleting the pod @ 01/15/25 18:01:46.878
  STEP: deleting the pod @ 01/15/25 18:01:46.9
  STEP: deleting the test externalName service @ 01/15/25 18:01:46.928
  I0115 18:01:46.962902 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3126" for this suite. @ 01/15/25 18:01:46.97
• [16.337 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/15/25 18:01:46.981
  I0115 18:01:46.981441 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename namespaces @ 01/15/25 18:01:46.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:47.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:47.019
  STEP: Updating Namespace "namespaces-5473" @ 01/15/25 18:01:47.024
  I0115 18:01:47.038663 30 namespace.go:389] Namespace "namespaces-5473" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"fede6329-6d35-44b0-93a1-255e31e3d980", "kubernetes.io/metadata.name":"namespaces-5473", "namespaces-5473":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0115 18:01:47.038867 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5473" for this suite. @ 01/15/25 18:01:47.07
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 01/15/25 18:01:47.083
  I0115 18:01:47.083152 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:01:47.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:47.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:47.106
  STEP: creating an Endpoint @ 01/15/25 18:01:47.116
  STEP: waiting for available Endpoint @ 01/15/25 18:01:47.125
  STEP: listing all Endpoints @ 01/15/25 18:01:47.126
  STEP: updating the Endpoint @ 01/15/25 18:01:47.13
  STEP: fetching the Endpoint @ 01/15/25 18:01:47.139
  STEP: patching the Endpoint @ 01/15/25 18:01:47.142
  STEP: fetching the Endpoint @ 01/15/25 18:01:47.155
  STEP: deleting the Endpoint by Collection @ 01/15/25 18:01:47.159
  STEP: waiting for Endpoint deletion @ 01/15/25 18:01:47.17
  STEP: fetching the Endpoint @ 01/15/25 18:01:47.173
  I0115 18:01:47.178974 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7455" for this suite. @ 01/15/25 18:01:47.184
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/15/25 18:01:47.194
  I0115 18:01:47.194437 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:01:47.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:47.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:47.224
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:01:47.227
  E0115 18:01:47.818758      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:48.818802      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:49.819413      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:50.819616      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:01:51.258
  I0115 18:01:51.263198 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-38f5d2dd-ddf2-4e1b-9804-e89695fd65e1 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:01:51.272
  I0115 18:01:51.301609 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3420" for this suite. @ 01/15/25 18:01:51.308
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/15/25 18:01:51.321
  I0115 18:01:51.321522 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pod-network-test @ 01/15/25 18:01:51.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:01:51.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:01:51.366
  STEP: Performing setup for networking test in namespace pod-network-test-5285 @ 01/15/25 18:01:51.37
  STEP: creating a selector @ 01/15/25 18:01:51.37
  STEP: Creating the service pods in kubernetes @ 01/15/25 18:01:51.37
  I0115 18:01:51.370877 30 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0115 18:01:51.820220      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:52.820496      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:53.820629      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:54.820779      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:55.821396      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:56.821733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:57.822840      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:58.823060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:01:59.823251      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:00.823422      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:01.824157      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:02.824504      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:03.825461      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:04.825723      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/15/25 18:02:05.543
  E0115 18:02:05.826506      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:06.830163      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:07.568295 30 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0115 18:02:07.568348 30 networking.go:42] Breadth first check of 10.233.67.67 on host 192.168.111.146...
  I0115 18:02:07.572509 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.68.199:9080/dial?request=hostname&protocol=udp&host=10.233.67.67&port=8081&tries=1'] Namespace:pod-network-test-5285 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:02:07.572571 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:02:07.572660 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5285/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.68.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.67.67%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0115 18:02:07.636392 30 utils.go:356] Waiting for responses: map[]
  I0115 18:02:07.636443 30 utils.go:360] reached 10.233.67.67 after 0/1 tries
  I0115 18:02:07.636459 30 networking.go:42] Breadth first check of 10.233.69.57 on host 192.168.111.55...
  I0115 18:02:07.640417 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.68.199:9080/dial?request=hostname&protocol=udp&host=10.233.69.57&port=8081&tries=1'] Namespace:pod-network-test-5285 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:02:07.640631 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:02:07.640916 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5285/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.68.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.69.57%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0115 18:02:07.704137 30 utils.go:356] Waiting for responses: map[]
  I0115 18:02:07.704185 30 utils.go:360] reached 10.233.69.57 after 0/1 tries
  I0115 18:02:07.704201 30 networking.go:42] Breadth first check of 10.233.68.198 on host 192.168.111.222...
  I0115 18:02:07.708946 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.68.199:9080/dial?request=hostname&protocol=udp&host=10.233.68.198&port=8081&tries=1'] Namespace:pod-network-test-5285 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:02:07.709146 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:02:07.709338 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5285/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.68.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.68.198%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0115 18:02:07.768557 30 utils.go:356] Waiting for responses: map[]
  I0115 18:02:07.768614 30 utils.go:360] reached 10.233.68.198 after 0/1 tries
  I0115 18:02:07.768630 30 networking.go:53] Going to retry 0 out of 3 pods....
  I0115 18:02:07.768770 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5285" for this suite. @ 01/15/25 18:02:07.775
• [16.463 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/15/25 18:02:07.785
  I0115 18:02:07.785092 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename aggregator @ 01/15/25 18:02:07.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:02:07.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:02:07.806
  I0115 18:02:07.811207 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Registering the sample API server. @ 01/15/25 18:02:07.812
  E0115 18:02:07.831182      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:08.476666 30 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0115 18:02:08.546648 30 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0115 18:02:08.831930      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:09.832274      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:10.614702 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:10.833340      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:11.833771      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:12.620685 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:12.834078      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:13.834149      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:14.619376 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:14.834477      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:15.834858      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:16.625888 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:16.834996      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:17.835537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:18.621154 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:18.836481      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:19.836656      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:20.621910 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:20.837500      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:21.851252      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:22.619680 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:22.851763      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:23.852363      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:24.619728 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:24.852873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:25.853103      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:26.619498 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:26.853743      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:27.854049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:28.620758 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:28.855077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:29.855238      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:30.620098 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:02:30.855449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:31.855599      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:32.745827 30 aggregator.go:755] Waited 118.43443ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/15/25 18:02:32.809
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/15/25 18:02:32.813
  STEP: List APIServices @ 01/15/25 18:02:32.827
  I0115 18:02:32.833173 30 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/15/25 18:02:32.833
  I0115 18:02:32.853212 30 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/15/25 18:02:32.853
  E0115 18:02:32.856326      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:32.871347 30 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 15, 18, 2, 32, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/15/25 18:02:32.871
  I0115 18:02:32.875763 30 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-15 18:02:32 +0000 UTC Passed all checks passed}
  I0115 18:02:32.875885 30 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:02:32.875908 30 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/15/25 18:02:32.875
  I0115 18:02:32.889623 30 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2134445763" @ 01/15/25 18:02:32.889
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/15/25 18:02:32.906
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/15/25 18:02:32.918
  STEP: Patch APIService Status @ 01/15/25 18:02:32.922
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/15/25 18:02:32.936
  I0115 18:02:32.941516 30 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-15 18:02:32 +0000 UTC Passed all checks passed}
  I0115 18:02:32.941584 30 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:02:32.941605 30 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0115 18:02:32.941623 30 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/15/25 18:02:32.941
  STEP: Confirm that the generated APIService has been deleted @ 01/15/25 18:02:32.954
  I0115 18:02:32.954549 30 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0115 18:02:32.959135 30 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0115 18:02:32.959217 30 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0115 18:02:33.120485 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7858" for this suite. @ 01/15/25 18:02:33.129
• [25.357 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/15/25 18:02:33.142
  I0115 18:02:33.142180 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:02:33.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:02:33.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:02:33.179
  STEP: Creating configMap with name configmap-test-volume-map-562c0781-2a33-4844-a57e-f5d5ac8aba5a @ 01/15/25 18:02:33.184
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:02:33.192
  E0115 18:02:33.857172      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:34.857726      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:35.859942      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:36.859988      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:02:37.228
  I0115 18:02:37.234298 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-5f9634bb-3593-4c7a-8cb6-a7208a825c83 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:02:37.25
  I0115 18:02:37.283286 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8689" for this suite. @ 01/15/25 18:02:37.291
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/15/25 18:02:37.305
  I0115 18:02:37.305669 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:02:37.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:02:37.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:02:37.337
  STEP: Creating a ResourceQuota @ 01/15/25 18:02:37.342
  STEP: Getting a ResourceQuota @ 01/15/25 18:02:37.354
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/15/25 18:02:37.359
  STEP: Patching the ResourceQuota @ 01/15/25 18:02:37.364
  STEP: Deleting a Collection of ResourceQuotas @ 01/15/25 18:02:37.376
  STEP: Verifying the deleted ResourceQuota @ 01/15/25 18:02:37.391
  I0115 18:02:37.396558 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8591" for this suite. @ 01/15/25 18:02:37.404
• [0.399 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/15/25 18:02:37.704
  I0115 18:02:37.704930 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:02:37.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:02:37.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:02:37.735
  STEP: Creating projection with secret that has name secret-emptykey-test-623b5721-f755-46ec-976c-158db4d3dcb5 @ 01/15/25 18:02:37.739
  I0115 18:02:37.741767 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8965" for this suite. @ 01/15/25 18:02:37.747
• [0.054 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/15/25 18:02:37.759
  I0115 18:02:37.759566 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:02:37.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:02:37.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:02:37.841
  STEP: creating service in namespace services-4297 @ 01/15/25 18:02:37.845
  STEP: creating service affinity-clusterip in namespace services-4297 @ 01/15/25 18:02:37.845
  E0115 18:02:37.859690      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip in namespace services-4297 @ 01/15/25 18:02:37.865
  I0115 18:02:37.878756      30 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4297, replica count: 3
  E0115 18:02:38.859974      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:39.860275      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:40.860806      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:40.929879      30 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 18:02:40.938481 30 resource.go:361] Creating new exec pod
  E0115 18:02:41.861110      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:42.861717      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:43.862321      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:44.046951 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-4297 exec execpod-affinityrr6bf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0115 18:02:44.223591 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.49.39) 80 port [tcp/http] succeeded!\n"
  I0115 18:02:44.223699 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:02:44.223885 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-4297 exec execpod-affinityrr6bf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.39 80'
  I0115 18:02:44.380881 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.39 80\nConnection to 10.233.49.39 80 port [tcp/http] succeeded!\n"
  I0115 18:02:44.381170 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:02:44.381337 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-4297 exec execpod-affinityrr6bf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.49.39:80/ ; done'
  I0115 18:02:44.632306 30 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.49.39:80/\n"
  I0115 18:02:44.632552 30 builder.go:147] stdout: "\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65\naffinity-clusterip-l2t65"
  I0115 18:02:44.632579 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632596 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632613 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632626 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632639 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632651 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632662 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632675 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632688 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632701 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632713 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632725 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632736 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632748 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632759 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632772 30 service.go:242] Received response from host: affinity-clusterip-l2t65
  I0115 18:02:44.632881 30 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4297, will wait for the garbage collector to delete the pods @ 01/15/25 18:02:44.652
  I0115 18:02:44.723763 30 resources.go:139] Deleting ReplicationController affinity-clusterip took: 12.293373ms
  I0115 18:02:44.824042 30 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.282658ms
  E0115 18:02:44.863198      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:45.863720      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:46.864134      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:47.655519 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4297" for this suite. @ 01/15/25 18:02:47.661
• [9.913 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 01/15/25 18:02:47.673
  I0115 18:02:47.673076 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:02:47.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:02:47.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:02:47.708
  STEP: creating service multiprotocol-test in namespace services-845 @ 01/15/25 18:02:47.713
  STEP: creating pod pod1 in namespace services-845 @ 01/15/25 18:02:47.74
  STEP: Creating pod pod1 in namespace services-845 @ 01/15/25 18:02:47.74
  E0115 18:02:47.864580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:48.864907      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-845 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/15/25 18:02:49.776
  I0115 18:02:49.795387 30 service.go:4553] successfully validated that service multiprotocol-test in namespace services-845 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/15/25 18:02:49.795
  I0115 18:02:49.795475 30 resource.go:361] Creating new exec pod
  E0115 18:02:49.865835      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:50.866414      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:51.816204 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80'
  E0115 18:02:51.866795      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:51.957536 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.53 80\nConnection to 10.233.54.53 80 port [tcp/http] succeeded!\n"
  I0115 18:02:51.957608 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:02:51.957713 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.54.53 80'
  E0115 18:02:52.866941      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:53.866964      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:54.107915 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.54.53 80\n"
  I0115 18:02:54.107979 30 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/15/25 18:02:54.108
  I0115 18:02:54.125207 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80'
  I0115 18:02:54.271629 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.53 80\nConnection to 10.233.54.53 80 port [tcp/http] succeeded!\n"
  I0115 18:02:54.271693 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:02:54.271846 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.54.53 80'
  I0115 18:02:54.412691 30 builder.go:146] stderr: "+ + ncecho hostName -v\n -u -w 2 10.233.54.53 80\n"
  I0115 18:02:54.412759 30 builder.go:147] stdout: ""
  E0115 18:02:54.867255      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:55.867540      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:56.272005 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.54.53 80'
  I0115 18:02:56.422975 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.54.53 80\n"
  I0115 18:02:56.423053 30 builder.go:147] stdout: ""
  E0115 18:02:56.867675      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:57.868100      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:02:58.272782 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.54.53 80'
  I0115 18:02:58.414547 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.54.53 80\n"
  I0115 18:02:58.414655 30 builder.go:147] stdout: ""
  E0115 18:02:58.868131      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:02:59.868313      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking if the Service forwards traffic to UDP only @ 01/15/25 18:03:00.272
  I0115 18:03:00.289720 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.54.53 80'
  I0115 18:03:00.444218 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.54.53 80\n"
  I0115 18:03:00.444325 30 builder.go:147] stdout: ""
  E0115 18:03:00.869122      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:01.869511      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:03:02.289983 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.54.53 80'
  E0115 18:03:02.870144      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:03.870486      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:03:04.436050 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.54.53 80\n"
  I0115 18:03:04.436154 30 builder.go:147] stdout: "pod1"
  I0115 18:03:04.436378 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80'
  I0115 18:03:04.614910 30 builder.go:135] rc: 1
  I0115 18:03:04.615113 30 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.54.53 80
  nc: connect to 10.233.54.53 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0115 18:03:04.871124      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:05.871417      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:03:06.437094 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80'
  I0115 18:03:06.578797 30 builder.go:135] rc: 1
  I0115 18:03:06.578907 30 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.54.53 80
  nc: connect to 10.233.54.53 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0115 18:03:06.872376      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:07.872639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:03:08.437518 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80'
  I0115 18:03:08.593158 30 builder.go:135] rc: 1
  I0115 18:03:08.593483 30 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.54.53 80
  nc: connect to 10.233.54.53 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0115 18:03:08.873625      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:09.874217      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:03:10.436517 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80'
  I0115 18:03:10.592373 30 builder.go:135] rc: 1
  I0115 18:03:10.592481 30 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-845 exec execpodrvdvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.53 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.54.53 80
  nc: connect to 10.233.54.53 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0115 18:03:10.592785 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-845" for this suite. @ 01/15/25 18:03:10.6
• [22.939 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/15/25 18:03:10.614
  I0115 18:03:10.614379 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 18:03:10.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:10.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:03:10.653
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/15/25 18:03:10.657
  E0115 18:03:10.874922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:11.876261      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:12.875976      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:13.876047      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:03:14.691
  I0115 18:03:14.696838 30 output.go:207] Trying to get logs from node node6 pod pod-50be93fc-29bf-4913-ba69-2dc1d3f5a534 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 18:03:14.705
  I0115 18:03:14.728672 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9814" for this suite. @ 01/15/25 18:03:14.733
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/15/25 18:03:14.742
  I0115 18:03:14.742109 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:03:14.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:14.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:03:14.765
  STEP: Creating configMap with name configmap-projected-all-test-volume-793099d8-2285-43a8-bf87-2b01a06f307c @ 01/15/25 18:03:14.769
  STEP: Creating secret with name secret-projected-all-test-volume-2401862c-661b-490c-ac1d-5f4c733d65ff @ 01/15/25 18:03:14.778
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/15/25 18:03:14.783
  W0115 18:03:14.799608      30 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0115 18:03:14.876293      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:15.876726      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:16.877352      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:17.877688      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:03:18.816
  I0115 18:03:18.820576 30 output.go:207] Trying to get logs from node node6 pod projected-volume-601b93f6-416e-40f4-9125-1b17ddbcded7 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:03:18.828
  I0115 18:03:18.853683 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2407" for this suite. @ 01/15/25 18:03:18.858
• [4.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/15/25 18:03:18.866
  I0115 18:03:18.867000 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename watch @ 01/15/25 18:03:18.868
  E0115 18:03:18.877935      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:18.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:03:18.893
  STEP: creating a watch on configmaps with a certain label @ 01/15/25 18:03:18.897
  STEP: creating a new configmap @ 01/15/25 18:03:18.902
  STEP: modifying the configmap once @ 01/15/25 18:03:18.91
  STEP: changing the label value of the configmap @ 01/15/25 18:03:18.92
  STEP: Expecting to observe a delete notification for the watched object @ 01/15/25 18:03:18.93
  I0115 18:03:18.930864 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-336  9971e94c-455c-489c-87ff-8480d2800e2c 228213 0 2025-01-15 18:03:18 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-15 18:03:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:03:18.931113 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-336  9971e94c-455c-489c-87ff-8480d2800e2c 228214 0 2025-01-15 18:03:18 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-15 18:03:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:03:18.931234 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-336  9971e94c-455c-489c-87ff-8480d2800e2c 228215 0 2025-01-15 18:03:18 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-15 18:03:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/15/25 18:03:18.931
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/15/25 18:03:18.953
  E0115 18:03:19.878274      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:20.878922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:21.879284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:22.879529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:23.879854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:24.880142      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:25.880189      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:26.880295      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:27.880722      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:28.880964      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 01/15/25 18:03:28.954
  STEP: modifying the configmap a third time @ 01/15/25 18:03:28.971
  STEP: deleting the configmap @ 01/15/25 18:03:28.99
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/15/25 18:03:29.017
  I0115 18:03:29.017610 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-336  9971e94c-455c-489c-87ff-8480d2800e2c 228263 0 2025-01-15 18:03:18 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-15 18:03:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:03:29.017774 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-336  9971e94c-455c-489c-87ff-8480d2800e2c 228264 0 2025-01-15 18:03:18 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-15 18:03:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:03:29.017902 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-336  9971e94c-455c-489c-87ff-8480d2800e2c 228265 0 2025-01-15 18:03:18 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-15 18:03:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:03:29.018105 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-336" for this suite. @ 01/15/25 18:03:29.025
• [10.171 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/15/25 18:03:29.038
  I0115 18:03:29.038442 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pod-network-test @ 01/15/25 18:03:29.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:29.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:03:29.07
  STEP: Performing setup for networking test in namespace pod-network-test-3585 @ 01/15/25 18:03:29.073
  STEP: creating a selector @ 01/15/25 18:03:29.073
  STEP: Creating the service pods in kubernetes @ 01/15/25 18:03:29.073
  I0115 18:03:29.073997 30 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0115 18:03:29.881812      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:30.882022      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:31.882194      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:32.882535      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:33.883468      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:34.883756      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:35.884105      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:36.884336      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:37.884464      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:38.884840      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:39.885034      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:40.885231      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:41.886659      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:42.887061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/15/25 18:03:43.252
  E0115 18:03:43.887158      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:44.887454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:03:45.299959 30 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0115 18:03:45.300045 30 utils.go:496] Going to poll 10.233.67.69 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0115 18:03:45.303703 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.67.69:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3585 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:03:45.303761 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:03:45.303842 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3585/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.67.69%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0115 18:03:45.373031 30 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0115 18:03:45.373109 30 utils.go:496] Going to poll 10.233.69.59 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0115 18:03:45.377702 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.69.59:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3585 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:03:45.377747 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:03:45.377814 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3585/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.69.59%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0115 18:03:45.465175 30 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0115 18:03:45.465419 30 utils.go:496] Going to poll 10.233.68.208 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0115 18:03:45.469922 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.68.208:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3585 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:03:45.469972 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:03:45.470055 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3585/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.68.208%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0115 18:03:45.526909 30 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0115 18:03:45.527344 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3585" for this suite. @ 01/15/25 18:03:45.535
• [16.507 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/15/25 18:03:45.545
  I0115 18:03:45.545600 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename namespaces @ 01/15/25 18:03:45.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:45.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:03:45.574
  STEP: Creating a test namespace @ 01/15/25 18:03:45.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:45.665
  STEP: Creating a pod in the namespace @ 01/15/25 18:03:45.67
  STEP: Waiting for the pod to have running status @ 01/15/25 18:03:45.683
  E0115 18:03:45.888592      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:46.888779      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 01/15/25 18:03:47.693
  STEP: Waiting for the namespace to be removed. @ 01/15/25 18:03:47.703
  E0115 18:03:47.888957      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:48.889834      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:49.890669      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:50.891199      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:51.891945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:52.892912      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:53.892968      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:54.893177      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:55.893978      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:56.894186      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:57.894950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 01/15/25 18:03:58.709
  STEP: Verifying there are no pods in the namespace @ 01/15/25 18:03:58.73
  I0115 18:03:58.736082 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8524" for this suite. @ 01/15/25 18:03:58.742
  STEP: Destroying namespace "nsdeletetest-6269" for this suite. @ 01/15/25 18:03:58.755
  I0115 18:03:58.759836 30 framework.go:370] Namespace nsdeletetest-6269 was already deleted
  STEP: Destroying namespace "nsdeletetest-8405" for this suite. @ 01/15/25 18:03:58.759
• [13.222 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 01/15/25 18:03:58.768
  I0115 18:03:58.768553 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:03:58.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:03:58.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:03:58.832
  STEP: Creating a job @ 01/15/25 18:03:58.836
  STEP: Ensuring active pods == parallelism @ 01/15/25 18:03:58.85
  E0115 18:03:58.895568      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:03:59.895933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 01/15/25 18:04:00.868
  E0115 18:04:00.896294      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:01.391231 30 pod_client.go:173] Successfully updated pod "adopt-release-h8g8k"
  STEP: Checking that the Job readopts the Pod @ 01/15/25 18:04:01.391
  E0115 18:04:01.897435      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:02.897723      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 01/15/25 18:04:03.402
  E0115 18:04:03.897854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:03.924958 30 pod_client.go:173] Successfully updated pod "adopt-release-h8g8k"
  STEP: Checking that the Job releases the Pod @ 01/15/25 18:04:03.925
  E0115 18:04:04.898299      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:05.898535      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:05.937495 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3829" for this suite. @ 01/15/25 18:04:05.945
• [7.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/15/25 18:04:05.969
  I0115 18:04:05.969028 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:04:05.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:05.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:05.995
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:04:05.999
  E0115 18:04:06.898828      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:07.899229      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:08.899444      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:09.900000      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:04:10.032
  I0115 18:04:10.037652 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-c72ad31e-12ee-45dc-9be8-04a9d09a3612 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:04:10.046
  I0115 18:04:10.072485 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9645" for this suite. @ 01/15/25 18:04:10.078
• [4.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/15/25 18:04:10.091
  I0115 18:04:10.091319 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:04:10.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:10.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:10.125
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:04:10.129
  E0115 18:04:10.900652      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:11.901093      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:12.901414      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:13.902128      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:04:14.171
  I0115 18:04:14.176774 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-c9c213c3-0b02-4f17-b2dc-17305852ad20 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:04:14.186
  I0115 18:04:14.219028 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4543" for this suite. @ 01/15/25 18:04:14.225
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 01/15/25 18:04:14.236
  I0115 18:04:14.236512 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 18:04:14.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:14.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:14.267
  STEP: Creating a test headless service @ 01/15/25 18:04:14.271
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7249.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7249.svc.cluster.local;sleep 1; done
   @ 01/15/25 18:04:14.278
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7249.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7249.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7249.svc.cluster.local;sleep 1; done
   @ 01/15/25 18:04:14.278
  STEP: creating a pod to probe DNS @ 01/15/25 18:04:14.278
  STEP: submitting the pod to kubernetes @ 01/15/25 18:04:14.278
  E0115 18:04:14.902370      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:15.903687      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/15/25 18:04:16.33
  STEP: looking for the results for each expected name from probers @ 01/15/25 18:04:16.336
  I0115 18:04:16.344573 30 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.350138 30 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.354750 30 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.359897 30 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.364359 30 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.368768 30 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.374299 30 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.379754 30 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7249.svc.cluster.local from pod dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d: the server could not find the requested resource (get pods dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d)
  I0115 18:04:16.379828 30 dns_common.go:506] Lookups using dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7249.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7249.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7249.svc.cluster.local jessie_udp@dns-test-service-2.dns-7249.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7249.svc.cluster.local]

  I0115 18:04:16.389017 30 dns_common.go:514] Pod client logs for webserver: 
  I0115 18:04:16.397150 30 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0115 18:04:16.405866 30 dns_common.go:514] Pod client logs for jessie-querier: 
  E0115 18:04:16.903965      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:17.903914      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:18.904431      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:19.904498      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:20.904717      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:21.377800 30 dns_common.go:546] DNS probes using dns-7249/dns-test-d31a71b4-df42-4894-bc77-e31fc2cbcd5d succeeded

  STEP: deleting the pod @ 01/15/25 18:04:21.378
  STEP: deleting the test headless service @ 01/15/25 18:04:21.4
  I0115 18:04:21.452582 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7249" for this suite. @ 01/15/25 18:04:21.462
• [7.241 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/15/25 18:04:21.477
  I0115 18:04:21.477891 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/15/25 18:04:21.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:21.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:21.514
  I0115 18:04:21.519362 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:04:21.904728      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:22.905529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:23.905823      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:24.906526      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:25.906655      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:26.907507      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:27.907725      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:28.908150      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:29.630416 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1422" for this suite. @ 01/15/25 18:04:29.637
• [8.172 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/15/25 18:04:29.651
  I0115 18:04:29.651396 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:04:29.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:29.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:29.68
  STEP: Discovering how many secrets are in namespace by default @ 01/15/25 18:04:29.684
  E0115 18:04:29.908878      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:30.909766      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:31.910328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:32.911177      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:33.913376      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/15/25 18:04:34.689
  E0115 18:04:34.913612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:35.914676      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:36.914722      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:37.914872      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:38.915349      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/15/25 18:04:39.695
  STEP: Ensuring resource quota status is calculated @ 01/15/25 18:04:39.706
  E0115 18:04:39.916069      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:40.916559      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 01/15/25 18:04:41.712
  STEP: Ensuring resource quota status captures secret creation @ 01/15/25 18:04:41.732
  E0115 18:04:41.917441      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:42.917645      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 01/15/25 18:04:43.737
  STEP: Ensuring resource quota status released usage @ 01/15/25 18:04:43.748
  E0115 18:04:43.917788      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:44.917970      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:45.755050 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4528" for this suite. @ 01/15/25 18:04:45.761
• [16.121 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/15/25 18:04:45.772
  I0115 18:04:45.772774 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 18:04:45.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:45.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:45.803
  I0115 18:04:45.809888 30 deployment.go:1645] Creating simple deployment test-new-deployment
  I0115 18:04:45.834181 30 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0115 18:04:45.918483      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:46.918624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 01/15/25 18:04:47.852
  STEP: updating a scale subresource @ 01/15/25 18:04:47.856
  STEP: verifying the deployment Spec.Replicas was modified @ 01/15/25 18:04:47.867
  STEP: Patch a scale subresource @ 01/15/25 18:04:47.871
  E0115 18:04:47.919186      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:47.955271 30 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7277",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b67463ee-5d47-4363-ba1e-992f7654a5a4",
      ResourceVersion: (string) (len=6) "228859",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 2,
      UpdatedReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 18:04:47.968329 30 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7277",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f61c231-b23d-4b19-b4a1-1c516868ed75",
      ResourceVersion: (string) (len=6) "228857",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "b67463ee-5d47-4363-ba1e-992f7654a5a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 36 37 34 36 33  65 65 2d 35 64 34 37 2d  |\"b67463ee-5d47-|
              00000120  34 33 36 33 2d 62 61 31  65 2d 39 39 32 66 37 36  |4363-ba1e-992f76|
              00000130  35 34 61 35 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |54a5a4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:04:47.982222 30 deployment.go:68] Pod "test-new-deployment-685b768f58-7jqwk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-7jqwk",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7277",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "808e490c-c70e-4865-8235-fa9b131c4c82",
      ResourceVersion: (string) (len=6) "228856",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f61c231-b23d-4b19-b4a1-1c516868ed75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  36 31 63 32 33 31 2d 62  |d\":\"4f61c231-b|
              00000090  32 33 64 2d 34 62 31 39  2d 62 34 61 31 2d 31 63  |23d-4b19-b4a1-1c|
              000000a0  35 31 36 38 36 38 65 64  37 35 5c 22 7d 22 3a 7b  |516868ed75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cm42c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cm42c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cm42c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:04:47.984669 30 deployment.go:68] Pod "test-new-deployment-685b768f58-cq5f4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-cq5f4",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7277",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79bd6685-11ec-4267-b081-ce7f7f80402b",
      ResourceVersion: (string) (len=6) "228863",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f61c231-b23d-4b19-b4a1-1c516868ed75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  36 31 63 32 33 31 2d 62  |d\":\"4f61c231-b|
              00000090  32 33 64 2d 34 62 31 39  2d 62 34 61 31 2d 31 63  |23d-4b19-b4a1-1c|
              000000a0  35 31 36 38 36 38 65 64  37 35 5c 22 7d 22 3a 7b  |516868ed75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79hbg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79hbg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:04:47.986318 30 deployment.go:68] Pod "test-new-deployment-685b768f58-k5xwf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-k5xwf",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7277",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "396d1712-68c3-4307-96c4-39c80b1729e8",
      ResourceVersion: (string) (len=6) "228838",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f61c231-b23d-4b19-b4a1-1c516868ed75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  36 31 63 32 33 31 2d 62  |d\":\"4f61c231-b|
              00000090  32 33 64 2d 34 62 31 39  2d 62 34 61 31 2d 31 63  |23d-4b19-b4a1-1c|
              000000a0  35 31 36 38 36 38 65 64  37 35 5c 22 7d 22 3a 7b  |516868ed75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 31 37 5c 22 7d 22 3a  |.233.68.217\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qzsbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qzsbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872561086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://1621782ad32521914c17176330399281cdde2dd1aa0ddf0a69ea1bd44037af68",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qzsbk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:04:47.988937 30 deployment.go:68] Pod "test-new-deployment-685b768f58-skcr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-skcr2",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7277",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b9ad6d9-f9eb-49f5-855b-ed75414361c8",
      ResourceVersion: (string) (len=6) "228861",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4f61c231-b23d-4b19-b4a1-1c516868ed75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  36 31 63 32 33 31 2d 62  |d\":\"4f61c231-b|
              00000090  32 33 64 2d 34 62 31 39  2d 62 34 61 31 2d 31 63  |23d-4b19-b4a1-1c|
              000000a0  35 31 36 38 36 38 65 64  37 35 5c 22 7d 22 3a 7b  |516868ed75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4kbxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4kbxk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:04:47.990428 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7277" for this suite. @ 01/15/25 18:04:48
• [2.249 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/15/25 18:04:48.021
  I0115 18:04:48.021565 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename disruption @ 01/15/25 18:04:48.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:48.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:48.051
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:04:48.072
  E0115 18:04:48.920282      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:49.920627      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 01/15/25 18:04:50.078
  STEP: Waiting for all pods to be running @ 01/15/25 18:04:50.091
  I0115 18:04:50.095598 30 disruption.go:691] running pods: 0 < 1
  E0115 18:04:50.921576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:51.921878      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 01/15/25 18:04:52.098
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:04:52.118
  STEP: Patching PodDisruptionBudget status @ 01/15/25 18:04:52.129
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:04:52.141
  I0115 18:04:52.151681 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4489" for this suite. @ 01/15/25 18:04:52.157
• [4.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/15/25 18:04:52.173
  I0115 18:04:52.173700 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:04:52.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:52.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:52.198
  STEP: creating a replication controller @ 01/15/25 18:04:52.202
  I0115 18:04:52.202181 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 create -f -'
  I0115 18:04:52.389874 30 builder.go:146] stderr: ""
  I0115 18:04:52.389973 30 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/15/25 18:04:52.39
  I0115 18:04:52.390107 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0115 18:04:52.513026 30 builder.go:146] stderr: ""
  I0115 18:04:52.513099 30 builder.go:147] stdout: "update-demo-nautilus-h78ds update-demo-nautilus-php9f "
  I0115 18:04:52.513264 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods update-demo-nautilus-h78ds -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 18:04:52.600918 30 builder.go:146] stderr: ""
  I0115 18:04:52.600995 30 builder.go:147] stdout: ""
  I0115 18:04:52.601013 30 kubectl.go:2499] update-demo-nautilus-h78ds is created but not running
  E0115 18:04:52.922443      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:53.922731      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:54.922887      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:55.923194      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:56.923266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:57.602153 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0115 18:04:57.691278 30 builder.go:146] stderr: ""
  I0115 18:04:57.691338 30 builder.go:147] stdout: "update-demo-nautilus-h78ds update-demo-nautilus-php9f "
  I0115 18:04:57.691418 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods update-demo-nautilus-h78ds -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0115 18:04:57.780200 30 builder.go:146] stderr: ""
  I0115 18:04:57.780257 30 builder.go:147] stdout: "true"
  I0115 18:04:57.780332 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods update-demo-nautilus-h78ds -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 18:04:57.870708 30 builder.go:146] stderr: ""
  I0115 18:04:57.870763 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 18:04:57.870783 30 kubectl.go:2390] validating pod update-demo-nautilus-h78ds
  I0115 18:04:57.881244 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 18:04:57.881317 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 18:04:57.881337 30 kubectl.go:2517] update-demo-nautilus-h78ds is verified up and running
  I0115 18:04:57.881449 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods update-demo-nautilus-php9f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0115 18:04:57.962285      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:04:58.044644 30 builder.go:146] stderr: ""
  I0115 18:04:58.044701 30 builder.go:147] stdout: "true"
  I0115 18:04:58.044792 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods update-demo-nautilus-php9f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0115 18:04:58.136921 30 builder.go:146] stderr: ""
  I0115 18:04:58.136983 30 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0115 18:04:58.137001 30 kubectl.go:2390] validating pod update-demo-nautilus-php9f
  I0115 18:04:58.144484 30 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0115 18:04:58.144558 30 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0115 18:04:58.144580 30 kubectl.go:2517] update-demo-nautilus-php9f is verified up and running
  STEP: using delete to clean up resources @ 01/15/25 18:04:58.144
  I0115 18:04:58.144701 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 delete --grace-period=0 --force -f -'
  I0115 18:04:58.246667 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:04:58.246734 30 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0115 18:04:58.246833 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get rc,svc -l name=update-demo --no-headers'
  I0115 18:04:58.362289 30 builder.go:146] stderr: "No resources found in kubectl-156 namespace.\n"
  I0115 18:04:58.362357 30 builder.go:147] stdout: ""
  I0115 18:04:58.362437 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-156 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0115 18:04:58.466412 30 builder.go:146] stderr: ""
  I0115 18:04:58.466475 30 builder.go:147] stdout: ""
  I0115 18:04:58.466658 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-156" for this suite. @ 01/15/25 18:04:58.473
• [6.317 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/15/25 18:04:58.49
  I0115 18:04:58.490619 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:04:58.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:04:58.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:04:58.518
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-68bcf30b-d114-46d6-ae10-8530f1ce5d94 @ 01/15/25 18:04:58.575
  STEP: Creating the pod @ 01/15/25 18:04:58.581
  E0115 18:04:58.962390      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:04:59.962719      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-68bcf30b-d114-46d6-ae10-8530f1ce5d94 @ 01/15/25 18:05:00.621
  STEP: waiting to observe update in volume @ 01/15/25 18:05:00.628
  E0115 18:05:00.963701      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:01.964011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:02.964448      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:03.964815      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:04.965666      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:05.965882      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:06.966123      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:07.966489      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:08.967317      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:09.967648      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:10.968178      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:11.969201      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:12.969097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:13.969337      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:14.969800      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:15.969973      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:16.970496      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:17.970763      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:18.971199      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:19.971324      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:20.972034      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:21.972353      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:22.972560      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:23.972790      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:24.973281      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:25.973554      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:26.974141      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:27.974580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:28.975475      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:29.976148      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:30.976894      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:31.977252      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:32.977839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:33.978262      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:34.978364      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:35.978641      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:36.979463      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:37.979644      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:38.980662      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:39.980853      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:40.980973      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:41.981283      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:42.981179      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:43.981649      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:44.982407      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:45.982971      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:46.983587      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:47.984210      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:48.984168      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:49.984659      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:50.985404      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:51.985644      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:52.986048      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:53.986909      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:54.987244      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:55.988242      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:56.988715      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:57.988854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:58.989151      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:05:59.989342      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:00.989617      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:01.989956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:02.990241      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:03.990767      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:04.991107      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:05.991567      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:06.991975      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:06:07.094602 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1517" for this suite. @ 01/15/25 18:06:07.103
• [68.626 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/15/25 18:06:07.117
  I0115 18:06:07.117410 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 18:06:07.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:06:07.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:06:07.149
  STEP: creating a Deployment @ 01/15/25 18:06:07.16
  I0115 18:06:07.160073 30 deployment.go:507] Creating simple deployment test-deployment-m7dmg
  I0115 18:06:07.187132 30 deployment.go:223] new replicaset for deployment "test-deployment-m7dmg" is yet to be created
  E0115 18:06:07.992140      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:08.992486      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 01/15/25 18:06:09.205
  I0115 18:06:09.210851 30 deployment.go:532] Deployment test-deployment-m7dmg has Conditions: [{Available True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m7dmg-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/15/25 18:06:09.21
  I0115 18:06:09.225610 30 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 6, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 6, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 6, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 6, 7, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-m7dmg-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/15/25 18:06:09.225
  I0115 18:06:09.230208 30 deployment.go:579] Observed &Deployment event: ADDED
  I0115 18:06:09.230302 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m7dmg-6fb4c74686"}
  I0115 18:06:09.230481 30 deployment.go:579] Observed &Deployment event: MODIFIED
  I0115 18:06:09.230533 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m7dmg-6fb4c74686"}
  I0115 18:06:09.230574 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0115 18:06:09.230732 30 deployment.go:579] Observed &Deployment event: MODIFIED
  I0115 18:06:09.230779 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0115 18:06:09.230798 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-m7dmg-6fb4c74686" is progressing.}
  I0115 18:06:09.230932 30 deployment.go:579] Observed &Deployment event: MODIFIED
  I0115 18:06:09.230970 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0115 18:06:09.230994 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m7dmg-6fb4c74686" has successfully progressed.}
  I0115 18:06:09.231145 30 deployment.go:579] Observed &Deployment event: MODIFIED
  I0115 18:06:09.231186 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0115 18:06:09.231205 30 deployment.go:575] Observed Deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m7dmg-6fb4c74686" has successfully progressed.}
  I0115 18:06:09.231228 30 deployment.go:572] Found Deployment test-deployment-m7dmg in namespace deployment-6633 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:06:09.231248 30 deployment.go:583] Deployment test-deployment-m7dmg has an updated status
  STEP: patching the Statefulset Status @ 01/15/25 18:06:09.231
  I0115 18:06:09.231295 30 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0115 18:06:09.248597 30 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/15/25 18:06:09.248
  I0115 18:06:09.251780 30 deployment.go:616] Observed &Deployment event: ADDED
  I0115 18:06:09.251882 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m7dmg-6fb4c74686"}
  I0115 18:06:09.252014 30 deployment.go:616] Observed &Deployment event: MODIFIED
  I0115 18:06:09.252052 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m7dmg-6fb4c74686"}
  I0115 18:06:09.252076 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0115 18:06:09.252216 30 deployment.go:616] Observed &Deployment event: MODIFIED
  I0115 18:06:09.252469 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0115 18:06:09.252588 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:07 +0000 UTC 2025-01-15 18:06:07 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-m7dmg-6fb4c74686" is progressing.}
  I0115 18:06:09.252986 30 deployment.go:616] Observed &Deployment event: MODIFIED
  I0115 18:06:09.253044 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0115 18:06:09.253064 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m7dmg-6fb4c74686" has successfully progressed.}
  I0115 18:06:09.253267 30 deployment.go:616] Observed &Deployment event: MODIFIED
  I0115 18:06:09.253312 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:08 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0115 18:06:09.253332 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-15 18:06:08 +0000 UTC 2025-01-15 18:06:07 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m7dmg-6fb4c74686" has successfully progressed.}
  I0115 18:06:09.253363 30 deployment.go:612] Observed deployment test-deployment-m7dmg in namespace deployment-6633 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:06:09.253563 30 deployment.go:616] Observed &Deployment event: MODIFIED
  I0115 18:06:09.253617 30 deployment.go:609] Found deployment test-deployment-m7dmg in namespace deployment-6633 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0115 18:06:09.253641 30 deployment.go:620] Deployment test-deployment-m7dmg has a patched status
  I0115 18:06:09.263565 30 deployment.go:633] Deployment "test-deployment-m7dmg":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-m7dmg",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6633",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4536339-2f38-427c-955f-143b786247aa",
      ResourceVersion: (string) (len=6) "229261",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-m7dmg-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 18:06:09.298752 30 deployment.go:40] New ReplicaSet "test-deployment-m7dmg-6fb4c74686" of Deployment "test-deployment-m7dmg":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-m7dmg-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6633",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3eb7b966-08a6-40cc-99f7-917811eb4c79",
      ResourceVersion: (string) (len=6) "229256",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-m7dmg",
          UID: (types.UID) (len=36) "d4536339-2f38-427c-955f-143b786247aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 34 35  |k:{\"uid\":\"d45|
              00000120  33 36 33 33 39 2d 32 66  33 38 2d 34 32 37 63 2d  |36339-2f38-427c-|
              00000130  39 35 35 66 2d 31 34 33  62 37 38 36 32 34 37 61  |955f-143b786247a|
              00000140  61 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |a\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:06:09.307572 30 deployment.go:68] Pod "test-deployment-m7dmg-6fb4c74686-mrw6p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-m7dmg-6fb4c74686-mrw6p",
      GenerateName: (string) (len=33) "test-deployment-m7dmg-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-6633",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "267d907d-da54-485b-8030-e705e5c8de59",
      ResourceVersion: (string) (len=6) "229255",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-m7dmg-6fb4c74686",
          UID: (types.UID) (len=36) "3eb7b966-08a6-40cc-99f7-917811eb4c79",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 33 65 62 37 62 39 36  36 2d 30 38 61 36 2d 34  |"3eb7b966-08a6-4|
              000000a0  30 63 63 2d 39 39 66 37  2d 39 31 37 38 31 31 65  |0cc-99f7-917811e|
              000000b0  62 34 63 37 39 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b4c79\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 32 31 5c 22 7d 22 3a  |.233.68.221\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dv26b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dv26b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872561167,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://3199d4a735f86a4faa47f8ff4262901b46c8b9315fbf8fb0e4053e75604ad13e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dv26b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:06:09.312842 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6633" for this suite. @ 01/15/25 18:06:09.325
• [2.219 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/15/25 18:06:09.336
  I0115 18:06:09.336920 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename subpath @ 01/15/25 18:06:09.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:06:09.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:06:09.37
  STEP: Setting up data @ 01/15/25 18:06:09.374
  STEP: Creating pod pod-subpath-test-configmap-n6vx @ 01/15/25 18:06:09.411
  STEP: Creating a pod to test atomic-volume-subpath @ 01/15/25 18:06:09.411
  E0115 18:06:09.993485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:10.993908      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:11.994491      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:12.995335      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:13.995192      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:14.995733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:15.996822      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:16.997455      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:17.998211      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:18.998541      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:19.998959      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:21.000197      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:22.001380      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:23.001837      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:24.002134      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:25.002571      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:26.003445      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:27.004014      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:28.005080      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:29.005514      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:30.006302      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:31.006805      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:32.007734      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:33.008205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:06:33.509
  I0115 18:06:33.514507 30 output.go:207] Trying to get logs from node node6 pod pod-subpath-test-configmap-n6vx container test-container-subpath-configmap-n6vx: <nil>
  STEP: delete the pod @ 01/15/25 18:06:33.523
  STEP: Deleting pod pod-subpath-test-configmap-n6vx @ 01/15/25 18:06:33.549
  I0115 18:06:33.549090 30 delete.go:62] Deleting pod "pod-subpath-test-configmap-n6vx" in namespace "subpath-576"
  I0115 18:06:33.556877 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-576" for this suite. @ 01/15/25 18:06:33.563
• [24.236 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 01/15/25 18:06:33.573
  I0115 18:06:33.573597 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption @ 01/15/25 18:06:33.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:06:33.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:06:33.601
  I0115 18:06:33.641302 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:06:34.008240      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:35.008522      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:36.009416      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:37.009875      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:38.010251      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:39.010590      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:40.010711      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:41.010926      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:42.011887      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:43.012645      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:44.013075      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:45.013663      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:46.014893      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:47.015563      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:48.015732      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:49.016066      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:50.016694      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:51.016865      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:52.017542      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:53.018061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:54.018205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:55.018885      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:56.018906      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:57.019260      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:58.020050      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:06:59.020114      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:00.020968      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:01.021743      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:02.022662      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:03.022822      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:04.023837      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:05.024138      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:06.025158      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:07.025639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:08.026021      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:09.026194      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:10.027279      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:11.027458      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:12.027745      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:13.028007      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:14.028539      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:15.029108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:16.029349      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:17.029586      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:18.030534      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:19.030672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:20.031052      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:21.031745      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:22.031663      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:23.031914      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:24.032004      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:25.032313      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:26.032875      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:27.033271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:28.033485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:29.034234      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:30.034381      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:31.034594      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:32.034804      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:33.035371      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:33.648732 30 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/15/25 18:07:33.656
  I0115 18:07:33.656538 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/15/25 18:07:33.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:07:33.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:07:33.755
  STEP: Finding an available node @ 01/15/25 18:07:33.758
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/15/25 18:07:33.759
  E0115 18:07:34.036066      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:35.037098      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/15/25 18:07:35.85
  I0115 18:07:35.876188 30 preemption.go:709] found a healthy node: node6
  STEP: Adding a custom resource @ 01/15/25 18:07:35.881
  E0115 18:07:36.037980      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:37.038665      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:38.039458      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:39.040522      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:40.040686      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:41.041015      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:42.038371 30 preemption.go:828] pods created so far: [1 1 1]
  I0115 18:07:42.038460 30 preemption.go:829] length of pods created so far: 3
  E0115 18:07:42.042091      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:43.042831      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:44.043853      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:44.062122 30 preemption.go:846] pods created so far: [2 2 1]
  E0115 18:07:45.044022      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:46.044130      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:47.044344      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:48.044936      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:49.045132      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:50.045361      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:07:51.045392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/15/25 18:07:51.064
  STEP: Removing a custom resource @ 01/15/25 18:07:51.196
  STEP: Removing a custom resource @ 01/15/25 18:07:51.21
  STEP: Removing a custom resource @ 01/15/25 18:07:51.267
  I0115 18:07:51.282490 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5132" for this suite. @ 01/15/25 18:07:51.289
  I0115 18:07:51.315242 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8264" for this suite. @ 01/15/25 18:07:51.39
• [77.844 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 01/15/25 18:07:51.418
  I0115 18:07:51.418076 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:07:51.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:07:51.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:07:51.461
  I0115 18:07:51.471989 30 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-3178"
  I0115 18:07:51.501213 30 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-3178"
  STEP: waiting for a new root ca configmap created @ 01/15/25 18:07:52.002
  I0115 18:07:52.007983 30 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-3178"
  I0115 18:07:52.018710 30 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-3178"
  E0115 18:07:52.046057      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 01/15/25 18:07:52.519
  I0115 18:07:52.525434 30 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-3178"
  I0115 18:07:52.525871 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3178" for this suite. @ 01/15/25 18:07:52.533
• [1.130 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/15/25 18:07:52.548
  I0115 18:07:52.548456 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 18:07:52.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:07:52.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:07:52.578
  I0115 18:07:52.646838 30 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/15/25 18:07:52.658
  I0115 18:07:52.733536 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:52.733653 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:52.733745 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:52.745235 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:07:52.745614 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:07:53.046618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:53.672324 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:53.672391 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:53.672468 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:53.677834 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:07:53.678028 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:07:54.046860      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:54.666139 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:54.666397 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:54.666579 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:54.671909 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 18:07:54.671962 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/15/25 18:07:54.689
  STEP: Check that daemon pods images are updated. @ 01/15/25 18:07:54.766
  I0115 18:07:54.773346 30 daemon_set.go:1193] Wrong image for pod: daemon-set-55rzl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:54.773406 30 daemon_set.go:1193] Wrong image for pod: daemon-set-k2k55. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:54.867271 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:54.867350 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:54.867432 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:07:55.048001      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:55.773484 30 daemon_set.go:1193] Wrong image for pod: daemon-set-55rzl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:55.773684 30 daemon_set.go:1193] Wrong image for pod: daemon-set-k2k55. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:55.780006 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:55.780180 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:55.780316 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:07:56.048924      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:56.810447 30 daemon_set.go:1193] Wrong image for pod: daemon-set-55rzl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:56.810508 30 daemon_set.go:1193] Wrong image for pod: daemon-set-k2k55. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:56.817104 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:56.817174 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:56.817212 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:07:57.049358      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:57.772353 30 daemon_set.go:1193] Wrong image for pod: daemon-set-55rzl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:57.772403 30 daemon_set.go:1198] Pod daemon-set-6gvbq is not available
  I0115 18:07:57.772422 30 daemon_set.go:1193] Wrong image for pod: daemon-set-k2k55. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:57.778496 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:57.778573 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:57.778668 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:07:58.050169      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:58.774399 30 daemon_set.go:1193] Wrong image for pod: daemon-set-55rzl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:58.782629 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:58.782855 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:58.783008 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:07:59.050326      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:07:59.772189 30 daemon_set.go:1193] Wrong image for pod: daemon-set-55rzl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0115 18:07:59.772384 30 daemon_set.go:1198] Pod daemon-set-z6jx7 is not available
  I0115 18:07:59.778251 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:59.778340 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:07:59.778380 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:08:00.051344      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:00.784166 30 daemon_set.go:1198] Pod daemon-set-9xsl4 is not available
  I0115 18:08:00.791308 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:00.791428 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:00.791478 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/15/25 18:08:00.791
  I0115 18:08:00.891666 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:00.891744 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:00.891777 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:00.896863 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0115 18:08:00.897034 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  E0115 18:08:01.051829      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:01.802117 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:01.802201 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:01.802238 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:08:01.808901 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 18:08:01.809086 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/15/25 18:08:01.834
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4075, will wait for the garbage collector to delete the pods @ 01/15/25 18:08:01.834
  I0115 18:08:01.917890 30 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 28.221031ms
  I0115 18:08:02.018601 30 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.706966ms
  E0115 18:08:02.051986      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:03.052853      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:03.925961 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:08:03.926496 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0115 18:08:03.932500 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"229940"},"items":null}

  I0115 18:08:03.936662 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"229940"},"items":null}

  I0115 18:08:03.961406 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4075" for this suite. @ 01/15/25 18:08:03.968
• [11.440 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/15/25 18:08:03.989
  I0115 18:08:03.989281 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:08:03.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:08:04.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:08:04.028
  E0115 18:08:04.053063      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/15/25 18:08:04.146
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:08:05.02
  STEP: Deploying the webhook pod @ 01/15/25 18:08:05.038
  E0115 18:08:05.053179      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 01/15/25 18:08:05.061
  I0115 18:08:05.071203 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:08:06.053500      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:07.053868      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:08:07.085
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:08:07.124
  E0115 18:08:08.054516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:08.125624 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0115 18:08:08.136671 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:08:09.055282      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:10.055679      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:11.056660      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:12.057388      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:13.057637      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9464-crds.webhook.example.com via the AdmissionRegistration API @ 01/15/25 18:08:13.675
  I0115 18:08:13.720922 30 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource while v1 is storage version @ 01/15/25 18:08:13.834
  E0115 18:08:14.058433      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:15.058952      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/15/25 18:08:15.888
  STEP: Patching the custom resource while v2 is storage version @ 01/15/25 18:08:15.919
  E0115 18:08:16.059188      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:16.685156 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-672" for this suite. @ 01/15/25 18:08:16.69
  STEP: Destroying namespace "webhook-markers-2980" for this suite. @ 01/15/25 18:08:16.711
• [12.734 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/15/25 18:08:16.723
  I0115 18:08:16.723743 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 18:08:16.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:08:16.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:08:16.769
  STEP: Creating pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556 @ 01/15/25 18:08:16.774
  E0115 18:08:17.059287      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:18.059624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 18:08:18.806
  I0115 18:08:18.810683 30 container_probe.go:1749] Initial restart count of pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d is 0
  I0115 18:08:18.814653 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:19.059974      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:20.060418      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:20.821611 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:21.060915      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:22.061212      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:22.826096 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:23.061372      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:24.061709      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:24.831360 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:25.062706      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:26.062918      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:26.837207 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:27.063597      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:28.063785      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:28.842728 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:29.064222      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:30.064651      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:30.849377 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:31.065534      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:32.066054      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:32.854730 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:33.066049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:34.066560      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:34.860637 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:35.067202      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:36.067429      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:36.953832 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:37.068088      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:38.068460      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:38.960074 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  E0115 18:08:39.069007      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:40.069650      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:41.038637 30 container_probe.go:1759] Get pod liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d in namespace container-probe-5556
  I0115 18:08:41.038740 30 container_probe.go:1763] Restart count of pod container-probe-5556/liveness-7e955e1f-e417-4ad9-b92d-0032e3ba785d is now 1 (22.227953281s elapsed)
  STEP: deleting the pod @ 01/15/25 18:08:41.039
  E0115 18:08:41.070721      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:41.395524 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5556" for this suite. @ 01/15/25 18:08:41.577
• [25.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/15/25 18:08:41.795
  I0115 18:08:41.795567 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replication-controller @ 01/15/25 18:08:41.796
  E0115 18:08:42.071733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:08:42.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:08:42.63
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/15/25 18:08:42.635
  E0115 18:08:43.072164      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:44.072559      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:45.073325      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:46.073946      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 01/15/25 18:08:46.809
  STEP: Then the orphan pod is adopted @ 01/15/25 18:08:46.825
  E0115 18:08:47.074613      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:47.853410 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-167" for this suite. @ 01/15/25 18:08:47.86
• [6.096 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/15/25 18:08:47.892
  I0115 18:08:47.892189 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/15/25 18:08:47.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:08:47.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:08:47.934
  STEP: fetching the /apis discovery document @ 01/15/25 18:08:47.938
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/15/25 18:08:47.94
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/15/25 18:08:47.94
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/15/25 18:08:47.94
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/15/25 18:08:47.941
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/15/25 18:08:47.941
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/15/25 18:08:47.943
  I0115 18:08:47.943379 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1597" for this suite. @ 01/15/25 18:08:47.963
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/15/25 18:08:47.991
  I0115 18:08:47.992013 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 18:08:47.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:08:48.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:08:48.026
  STEP: Creating pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800 @ 01/15/25 18:08:48.032
  E0115 18:08:48.074750      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:49.075446      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:50.075858      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 18:08:50.1
  I0115 18:08:50.106377 30 container_probe.go:1749] Initial restart count of pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d is 0
  I0115 18:08:50.111195 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:08:51.076648      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:52.077135      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:52.118412 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:08:53.077392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:54.077453      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:54.124883 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:08:55.077772      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:56.078029      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:56.130399 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:08:57.078525      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:08:58.078882      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:08:58.136252 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:08:59.079254      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:00.079632      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:00.143165 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:01.080215      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:02.081322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:02.150253 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:03.082200      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:04.082731      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:04.156839 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:05.082783      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:06.083173      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:06.161913 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:07.083875      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:08.084401      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:08.168378 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:09.084530      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:10.084931      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:10.175329 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  I0115 18:09:10.175385 30 container_probe.go:1763] Restart count of pod container-probe-8800/liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d is now 1 (20.068967893s elapsed)
  E0115 18:09:11.085171      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:12.085523      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:12.180904 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:13.085792      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:14.085986      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:14.186146 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:15.086146      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:16.086455      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:16.191524 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:17.088108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:18.087667      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:18.200038 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:19.087905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:20.088314      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:20.206332 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:21.088561      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:22.088950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:22.212714 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:23.089577      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:24.089984      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:24.218570 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:25.090480      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:26.090726      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:26.225946 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:27.090616      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:28.090936      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:28.235934 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:29.091447      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:30.092041      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:30.242839 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  I0115 18:09:30.242960 30 container_probe.go:1763] Restart count of pod container-probe-8800/liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d is now 2 (40.136522017s elapsed)
  E0115 18:09:31.092979      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:32.093338      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:32.248290 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:33.094345      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:34.094703      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:34.259049 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:35.094963      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:36.095350      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:36.265341 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:37.095528      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:38.096074      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:38.272465 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:39.096316      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:40.096893      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:40.278837 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:41.096922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:42.097486      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:42.284991 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:43.097726      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:44.098256      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:44.291356 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:45.099319      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:46.099474      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:46.297802 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:47.099684      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:48.100164      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:48.317698 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:49.100151      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:50.100635      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:50.324280 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  I0115 18:09:50.324563 30 container_probe.go:1763] Restart count of pod container-probe-8800/liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d is now 3 (1m0.218143951s elapsed)
  E0115 18:09:51.101176      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:52.101399      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:52.330242 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:53.101575      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:54.102112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:54.336899 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:55.102657      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:56.102855      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:56.343149 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:57.103077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:09:58.103682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:09:58.349563 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:09:59.104319      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:00.104581      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:00.355285 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:01.105136      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:02.105418      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:02.391900 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:03.105696      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:04.106035      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:04.419853 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:05.106976      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:06.107140      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:06.425530 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:07.107271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:08.107569      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:08.437582 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:09.107990      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:10.108378      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:10.443551 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  I0115 18:10:10.443612 30 container_probe.go:1763] Restart count of pod container-probe-8800/liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d is now 4 (1m20.33719334s elapsed)
  E0115 18:10:11.109097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:12.109888      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:12.448936 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:13.109624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:14.109845      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:14.453806 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:15.110639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:16.111179      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:16.460257 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:17.111731      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:18.112264      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:18.502128 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:19.112535      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:20.113063      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:20.508001 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:21.113707      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:22.114245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:22.514423 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:23.114916      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:24.115420      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:24.520422 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:25.115412      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:26.115786      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:26.525961 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:27.116433      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:28.116836      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:28.532576 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:29.116971      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:30.117660      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:30.537647 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:31.118540      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:32.118928      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:32.549105 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:33.119956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:34.120349      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:34.556072 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:35.120691      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:36.120800      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:36.573806 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:37.121035      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:38.121712      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:38.582359 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:39.121849      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:40.122520      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:40.592023 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:41.122902      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:42.123244      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:42.603462 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:43.124014      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:44.124357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:44.609632 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:45.125217      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:46.125521      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:46.621844 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:47.126381      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:48.126709      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:48.631034 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:49.127664      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:50.128008      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:50.642772 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:51.128478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:52.128798      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:52.648580 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:53.154680      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:54.155060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:54.654896 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:55.155478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:56.155827      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:56.659614 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:57.156140      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:10:58.156524      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:10:58.665739 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:10:59.157342      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:00.157682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:00.671481 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:11:01.158020      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:02.158487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:02.677278 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:11:03.158861      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:04.159200      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:04.682109 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:11:05.159729      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:06.160013      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:06.688439 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:11:07.160028      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:08.160348      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:08.694495 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  E0115 18:11:09.178038      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:10.178393      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:10.701637 30 container_probe.go:1759] Get pod liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d in namespace container-probe-8800
  I0115 18:11:10.701719 30 container_probe.go:1763] Restart count of pod container-probe-8800/liveness-a94c23c3-69a5-43c5-a9f5-3d6beca07c1d is now 5 (2m20.595301113s elapsed)
  STEP: deleting the pod @ 01/15/25 18:11:10.701
  I0115 18:11:10.727640 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8800" for this suite. @ 01/15/25 18:11:10.734
• [142.752 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/15/25 18:11:10.744
  I0115 18:11:10.744590 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:11:10.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:11:10.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:11:10.786
  STEP: Creating a ResourceQuota @ 01/15/25 18:11:10.79
  STEP: Getting a ResourceQuota @ 01/15/25 18:11:10.803
  STEP: Updating a ResourceQuota @ 01/15/25 18:11:10.821
  STEP: Verifying a ResourceQuota was modified @ 01/15/25 18:11:10.829
  STEP: Deleting a ResourceQuota @ 01/15/25 18:11:10.834
  STEP: Verifying the deleted ResourceQuota @ 01/15/25 18:11:10.855
  I0115 18:11:10.859734 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2924" for this suite. @ 01/15/25 18:11:10.866
• [0.138 seconds]
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/15/25 18:11:10.882
  I0115 18:11:10.882314 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 18:11:10.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:11:10.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:11:10.914
  STEP: creating the pod @ 01/15/25 18:11:10.918
  STEP: waiting for pod running @ 01/15/25 18:11:10.938
  E0115 18:11:11.178957      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:12.179249      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 01/15/25 18:11:12.948
  I0115 18:11:12.953993 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3270 PodName:var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:11:12.954049 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:11:12.954103 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-3270/pods/var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/15/25 18:11:13.013
  I0115 18:11:13.017899 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3270 PodName:var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:11:13.017942 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:11:13.017999 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-3270/pods/var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/15/25 18:11:13.076
  E0115 18:11:13.180181      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:13.601548 30 pod_client.go:173] Successfully updated pod "var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6"
  STEP: waiting for annotated pod running @ 01/15/25 18:11:13.601
  STEP: deleting the pod gracefully @ 01/15/25 18:11:13.605
  I0115 18:11:13.605691 30 delete.go:62] Deleting pod "var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6" in namespace "var-expansion-3270"
  I0115 18:11:13.621072 30 delete.go:70] Wait up to 5m0s for pod "var-expansion-18c6170a-0cc4-452a-b9e3-d6acae6fe9f6" to be fully deleted
  E0115 18:11:14.181013      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:15.181354      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:16.181487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:17.181842      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:18.182500      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:19.182869      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:20.183156      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:21.183518      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:22.184434      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:23.184766      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:24.185769      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:25.186090      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:26.186636      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:27.186957      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:28.187706      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:29.188082      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:30.188351      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:31.188569      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:32.189623      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:33.190733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:34.190343      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:35.190530      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:36.190653      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:37.191003      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:38.191223      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:39.191479      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:40.191741      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:41.191948      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:42.192245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:43.192516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:44.193323      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:45.194081      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:46.194960      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:47.195338      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:11:47.727091 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3270" for this suite. @ 01/15/25 18:11:47.734
• [36.861 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/15/25 18:11:47.743
  I0115 18:11:47.743914 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pod-network-test @ 01/15/25 18:11:47.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:11:47.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:11:47.772
  STEP: Performing setup for networking test in namespace pod-network-test-7502 @ 01/15/25 18:11:47.776
  STEP: creating a selector @ 01/15/25 18:11:47.777
  STEP: Creating the service pods in kubernetes @ 01/15/25 18:11:47.777
  I0115 18:11:47.777088 30 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0115 18:11:48.195585      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:49.195907      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:50.196045      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:51.197136      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:52.198064      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:53.198440      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:54.199181      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:55.199654      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:56.199828      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:57.200034      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:58.201041      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:11:59.201396      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:00.202391      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:01.202539      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/15/25 18:12:01.953
  E0115 18:12:02.202970      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:03.203284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:03.976348 30 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0115 18:12:03.976403 30 networking.go:42] Breadth first check of 10.233.67.72 on host 192.168.111.146...
  I0115 18:12:03.982038 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.68.236:9080/dial?request=hostname&protocol=http&host=10.233.67.72&port=8083&tries=1'] Namespace:pod-network-test-7502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:12:03.982128 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:12:03.982233 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.68.236%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.67.72%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0115 18:12:04.052088 30 utils.go:356] Waiting for responses: map[]
  I0115 18:12:04.052145 30 utils.go:360] reached 10.233.67.72 after 0/1 tries
  I0115 18:12:04.052163 30 networking.go:42] Breadth first check of 10.233.69.63 on host 192.168.111.55...
  I0115 18:12:04.057111 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.68.236:9080/dial?request=hostname&protocol=http&host=10.233.69.63&port=8083&tries=1'] Namespace:pod-network-test-7502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:12:04.057194 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:12:04.057300 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.68.236%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.69.63%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0115 18:12:04.122962 30 utils.go:356] Waiting for responses: map[]
  I0115 18:12:04.123116 30 utils.go:360] reached 10.233.69.63 after 0/1 tries
  I0115 18:12:04.123140 30 networking.go:42] Breadth first check of 10.233.68.235 on host 192.168.111.222...
  I0115 18:12:04.186468 30 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.68.236:9080/dial?request=hostname&protocol=http&host=10.233.68.235&port=8083&tries=1'] Namespace:pod-network-test-7502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:12:04.186519 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:12:04.186624 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.68.236%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.68.235%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0115 18:12:04.203482      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:04.248175 30 utils.go:356] Waiting for responses: map[]
  I0115 18:12:04.248224 30 utils.go:360] reached 10.233.68.235 after 0/1 tries
  I0115 18:12:04.248240 30 networking.go:53] Going to retry 0 out of 3 pods....
  I0115 18:12:04.248419 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7502" for this suite. @ 01/15/25 18:12:04.257
• [16.532 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/15/25 18:12:04.276
  I0115 18:12:04.276200 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:12:04.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:12:04.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:12:04.308
  STEP: Setting up server cert @ 01/15/25 18:12:04.401
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:12:05.142
  STEP: Deploying the webhook pod @ 01/15/25 18:12:05.158
  STEP: Wait for the deployment to be ready @ 01/15/25 18:12:05.178
  I0115 18:12:05.192243 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:12:05.204304      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:06.204909      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:07.205152      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:12:07.209
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:12:07.233
  E0115 18:12:08.205977      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:08.234980 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/15/25 18:12:08.36
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/15/25 18:12:08.395
  STEP: Deleting the collection of validation webhooks @ 01/15/25 18:12:08.427
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/15/25 18:12:08.518
  I0115 18:12:08.611129 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6096" for this suite. @ 01/15/25 18:12:08.616
  STEP: Destroying namespace "webhook-markers-5316" for this suite. @ 01/15/25 18:12:08.638
• [4.377 seconds]
------------------------------
SSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/15/25 18:12:08.653
  I0115 18:12:08.653562 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename prestop @ 01/15/25 18:12:08.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:12:08.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:12:08.684
  STEP: Creating server pod server in namespace prestop-4710 @ 01/15/25 18:12:08.689
  STEP: Waiting for pods to come up. @ 01/15/25 18:12:08.701
  E0115 18:12:09.205916      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:10.206339      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4710 @ 01/15/25 18:12:10.716
  E0115 18:12:11.206406      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:12.207124      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 01/15/25 18:12:12.739
  E0115 18:12:13.207071      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:14.207610      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:15.207586      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:16.207721      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:17.208956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:17.761089 30 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/15/25 18:12:17.761
  I0115 18:12:17.784073 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4710" for this suite. @ 01/15/25 18:12:17.791
• [9.146 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/15/25 18:12:17.806
  I0115 18:12:17.806680 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/15/25 18:12:17.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:12:17.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:12:17.835
  STEP: creating a target pod @ 01/15/25 18:12:17.84
  E0115 18:12:18.208578      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:19.208902      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/15/25 18:12:19.873
  E0115 18:12:20.209088      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:21.209376      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/15/25 18:12:21.899
  I0115 18:12:21.899648 30 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1361 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:12:21.899675 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:12:21.899742 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1361/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0115 18:12:21.956073 30 exec_util.go:108] Exec stderr: ""
  I0115 18:12:21.967036 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1361" for this suite. @ 01/15/25 18:12:21.973
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/15/25 18:12:21.988
  I0115 18:12:21.988502 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 18:12:21.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:12:22.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:12:22.037
  I0115 18:12:22.040733 30 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0115 18:12:22.057142 30 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0115 18:12:22.209757      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:23.210141      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:24.210500      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:25.210824      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:26.211032      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:27.066249 30 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/15/25 18:12:27.066
  I0115 18:12:27.066444 30 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0115 18:12:27.082885 30 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0115 18:12:27.092551 30 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0115 18:12:27.212086      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:28.212026      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:29.102823 30 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0115 18:12:29.108509 30 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0115 18:12:29.123732 30 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "135a1f04-260f-434e-b4a0-19b874617269",
      ResourceVersion: (string) (len=6) "231233",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 18:12:29.205107 30 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "449e026f-6413-4572-8f3d-dc481136c49a",
      ResourceVersion: (string) (len=6) "231223",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "135a1f04-260f-434e-b4a0-19b874617269",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 33 35 61 31 66  30 34 2d 32 36 30 66 2d  |\"135a1f04-260f-|
              00000120  34 33 34 65 2d 62 34 61  30 2d 31 39 62 38 37 34  |434e-b4a0-19b874|
              00000130  36 31 37 32 36 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |617269\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:12:29.206312 30 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0115 18:12:29.206595 30 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de7ff1b6-f1e5-45b4-a893-a78e1e0a0842",
      ResourceVersion: (string) (len=6) "231232",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "135a1f04-260f-434e-b4a0-19b874617269",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 33 35 61 31 66 30  |"uid\":\"135a1f0|
              000000b0  34 2d 32 36 30 66 2d 34  33 34 65 2d 62 34 61 30  |4-260f-434e-b4a0|
              000000c0  2d 31 39 62 38 37 34 36  31 37 32 36 39 5c 22 7d  |-19b874617269\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:12:29.214538 30 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-7c54x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-7c54x",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=14) "deployment-183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b979e5c-a780-41eb-b89a-180224cff63a",
      ResourceVersion: (string) (len=6) "231221",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "449e026f-6413-4572-8f3d-dc481136c49a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 34  39 65 30 32 36 66 2d 36  |d\":\"449e026f-6|
              00000090  34 31 33 2d 34 35 37 32  2d 38 66 33 64 2d 64 63  |413-4572-8f3d-dc|
              000000a0  34 38 31 31 33 36 63 34  39 61 5c 22 7d 22 3a 7b  |481136c49a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 34 32 5c 22 7d 22 3a  |.233.68.242\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djjkm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djjkm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872561547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872561547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872561547,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://131adde4af0f83c297bde7f7ec092d998b68f4d20709cde2870d20be67a4d952",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-djjkm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0115 18:12:29.215283      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:12:29.217550 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-183" for this suite. @ 01/15/25 18:12:29.225
• [7.249 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/15/25 18:12:29.237
  I0115 18:12:29.237771 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename cronjob @ 01/15/25 18:12:29.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:12:29.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:12:29.272
  STEP: Creating a ReplaceConcurrent cronjob @ 01/15/25 18:12:29.276
  STEP: Ensuring a job is scheduled @ 01/15/25 18:12:29.285
  E0115 18:12:30.213991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:31.214174      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:32.215031      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:33.215347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:34.216118      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:35.216600      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:36.217541      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:37.217969      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:38.218725      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:39.219117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:40.219260      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:41.219470      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:42.219652      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:43.220135      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:44.220126      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:45.220546      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:46.221558      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:47.221995      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:48.222120      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:49.222269      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:50.223167      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:51.224025      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:52.224423      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:53.225147      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:54.225919      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:55.226267      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:56.226532      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:57.226912      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:58.227260      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:12:59.227687      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:00.228011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:01.228284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/15/25 18:13:01.291
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/15/25 18:13:01.295
  STEP: Ensuring the job is replaced with a new one @ 01/15/25 18:13:01.299
  E0115 18:13:02.228720      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:03.228940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:04.229170      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:05.229877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:06.230393      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:07.230840      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:08.231161      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:09.231585      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:10.231916      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:11.232074      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:12.232936      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:13.233335      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:14.233859      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:15.234275      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:16.234828      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:17.235545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:18.236197      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:19.236626      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:20.237276      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:21.237580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:22.238037      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:23.238504      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:24.239177      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:25.239629      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:26.240047      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:27.240382      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:28.240459      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:29.240646      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:30.240822      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:31.241168      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:32.241187      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:33.241523      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:34.241715      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:35.241894      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:36.242027      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:37.242355      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:38.242504      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:39.242845      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:40.243874      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:41.243960      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:42.244125      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:43.244672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:44.245281      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:45.245301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:46.245638      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:47.245850      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:48.245875      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:49.246434      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:50.247212      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:51.247256      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:52.247565      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:53.247958      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:54.248335      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:55.248672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:56.248733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:57.249060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:58.249190      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:13:59.249715      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:00.249912      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:01.250092      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/15/25 18:14:01.305
  I0115 18:14:01.316638 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9381" for this suite. @ 01/15/25 18:14:01.324
• [92.098 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/15/25 18:14:01.335
  I0115 18:14:01.335945 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/15/25 18:14:01.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:01.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:01.38
  STEP: mirroring a new custom Endpoint @ 01/15/25 18:14:01.404
  I0115 18:14:01.423056 30 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0115 18:14:02.250216      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:03.250627      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 01/15/25 18:14:03.43
  STEP: mirroring deletion of a custom Endpoint @ 01/15/25 18:14:03.458
  I0115 18:14:03.480979 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4671" for this suite. @ 01/15/25 18:14:03.488
• [2.162 seconds]
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/15/25 18:14:03.498
  I0115 18:14:03.498224 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 18:14:03.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:03.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:03.533
  E0115 18:14:04.252519      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:05.253217      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:06.251873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:07.252337      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:08.252872      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:09.253383      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:10.254423      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:11.254894      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:12.255509      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:13.256157      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:14.256378      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:15.256899      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:16.257742      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:17.258266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:18.259215      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:19.259698      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:20.259982      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:21.260227      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:22.261113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:23.261492      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:24.261876      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:25.262172      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:26.262851      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:27.263150      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:14:27.651884 30 container_probe.go:92] Container started at 2025-01-15 18:14:04 +0000 UTC, pod became ready at 2025-01-15 18:14:27 +0000 UTC
  I0115 18:14:27.652443 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5578" for this suite. @ 01/15/25 18:14:27.658
• [24.175 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/15/25 18:14:27.673
  I0115 18:14:27.673329 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-webhook @ 01/15/25 18:14:27.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:27.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:27.7
  STEP: Setting up server cert @ 01/15/25 18:14:27.704
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/15/25 18:14:28.245
  STEP: Deploying the custom resource conversion webhook pod @ 01/15/25 18:14:28.258
  E0115 18:14:28.263728      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 01/15/25 18:14:28.283
  I0115 18:14:28.302486 30 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0115 18:14:29.264395      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:30.265199      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:14:30.32
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:14:30.343
  E0115 18:14:31.265523      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:14:31.343707 30 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0115 18:14:31.356492 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:14:32.266647      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:33.266830      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:34.267330      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:35.267628      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:36.268150      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:37.268926      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:38.269631      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/15/25 18:14:38.957
  STEP: v2 custom resource should be converted @ 01/15/25 18:14:38.965
  E0115 18:14:39.270156      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:14:39.549642 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5944" for this suite. @ 01/15/25 18:14:39.557
• [11.894 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/15/25 18:14:39.567
  I0115 18:14:39.567506 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 18:14:39.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:39.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:39.699
  STEP: create the deployment @ 01/15/25 18:14:39.703
  W0115 18:14:39.710701      30 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/15/25 18:14:39.71
  STEP: delete the deployment @ 01/15/25 18:14:40.217
  STEP: wait for all rs to be garbage collected @ 01/15/25 18:14:40.233
  STEP: expected 0 pods, got 2 pods @ 01/15/25 18:14:40.252
  E0115 18:14:40.271214      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/15/25 18:14:40.75
  I0115 18:14:40.876651 30 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0115 18:14:40.876930 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5059" for this suite. @ 01/15/25 18:14:40.883
• [1.324 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/15/25 18:14:40.892
  I0115 18:14:40.892120 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename endpointslice @ 01/15/25 18:14:40.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:40.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:40.921
  I0115 18:14:40.937526 30 endpointslice.go:1045] Endpoints addresses: [192.168.111.134 192.168.111.189 192.168.111.250] , ports: [6443]
  I0115 18:14:40.937614 30 endpointslice.go:1075] EndpointSlices addresses: [192.168.111.134 192.168.111.189 192.168.111.250] , ports: [6443]
  I0115 18:14:40.937745 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-771" for this suite. @ 01/15/25 18:14:40.984
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/15/25 18:14:40.994
  I0115 18:14:40.994664 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename apf @ 01/15/25 18:14:40.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:41.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:41.026
  STEP: getting /apis @ 01/15/25 18:14:41.031
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/15/25 18:14:41.036
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/15/25 18:14:41.038
  STEP: creating @ 01/15/25 18:14:41.039
  STEP: getting @ 01/15/25 18:14:41.102
  STEP: listing @ 01/15/25 18:14:41.106
  STEP: watching @ 01/15/25 18:14:41.112
  I0115 18:14:41.112206 30 flowcontrol.go:620] starting watch
  STEP: patching @ 01/15/25 18:14:41.114
  STEP: updating @ 01/15/25 18:14:41.131
  I0115 18:14:41.147936 30 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/15/25 18:14:41.148
  STEP: patching /status @ 01/15/25 18:14:41.152
  STEP: updating /status @ 01/15/25 18:14:41.16
  STEP: deleting @ 01/15/25 18:14:41.193
  STEP: deleting a collection @ 01/15/25 18:14:41.21
  I0115 18:14:41.234302 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8186" for this suite. @ 01/15/25 18:14:41.24
• [0.255 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 01/15/25 18:14:41.249
  I0115 18:14:41.249668 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/15/25 18:14:41.25
  E0115 18:14:41.271357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:41.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:41.28
  STEP: Setting up the test @ 01/15/25 18:14:41.285
  STEP: Creating hostNetwork=false pod @ 01/15/25 18:14:41.285
  E0115 18:14:42.272340      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:43.272856      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 01/15/25 18:14:43.322
  E0115 18:14:44.273271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:45.273516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 01/15/25 18:14:45.349
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/15/25 18:14:45.349
  I0115 18:14:45.349150 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.349179 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.349238 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0115 18:14:45.421175 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.421249 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.421264 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.421467 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0115 18:14:45.503619 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.503695 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.503713 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.503930 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0115 18:14:45.560016 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.560077 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.560093 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.560168 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0115 18:14:45.614880 30 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/15/25 18:14:45.614
  I0115 18:14:45.614995 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.615014 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.615088 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0115 18:14:45.676198 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.676271 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.676291 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.676380 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0115 18:14:45.733953 30 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/15/25 18:14:45.734
  I0115 18:14:45.734102 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.734127 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.734252 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0115 18:14:45.792814 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.792947 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.792972 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.793107 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0115 18:14:45.844443 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.844516 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.844534 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.844610 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0115 18:14:45.899179 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.899263 30 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3671 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:14:45.899281 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:14:45.899364 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3671/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0115 18:14:45.955618 30 exec_util.go:108] Exec stderr: ""
  I0115 18:14:45.956039 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3671" for this suite. @ 01/15/25 18:14:45.964
• [4.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/15/25 18:14:45.976
  I0115 18:14:45.976605 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:14:45.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:46.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:46.018
  STEP: creating secret secrets-242/secret-test-2419c8dc-fc65-4b17-a812-bb81f0481dc0 @ 01/15/25 18:14:46.022
  STEP: Creating a pod to test consume secrets @ 01/15/25 18:14:46.031
  E0115 18:14:46.273779      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:47.274061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:48.274675      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:49.275122      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:14:50.06
  I0115 18:14:50.064920 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-3a0a7cde-a0a1-4f56-bac1-9c62709dbd00 container env-test: <nil>
  STEP: delete the pod @ 01/15/25 18:14:50.074
  I0115 18:14:50.098438 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-242" for this suite. @ 01/15/25 18:14:50.105
• [4.138 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/15/25 18:14:50.114
  I0115 18:14:50.114854 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 18:14:50.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:50.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:50.142
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/15/25 18:14:50.147
  E0115 18:14:50.275975      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:51.276137      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:52.277060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:53.277545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:14:54.184
  I0115 18:14:54.189669 30 output.go:207] Trying to get logs from node node6 pod pod-91717529-590e-4e75-845e-672ffdb2d231 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 18:14:54.199
  I0115 18:14:54.236209 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2789" for this suite. @ 01/15/25 18:14:54.243
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/15/25 18:14:54.259
  I0115 18:14:54.259979 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replicaset @ 01/15/25 18:14:54.261
  E0115 18:14:54.277884      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:54.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:54.373
  STEP: Create a Replicaset @ 01/15/25 18:14:54.383
  STEP: Verify that the required pods have come up. @ 01/15/25 18:14:54.394
  I0115 18:14:54.400003 30 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0115 18:14:55.279013      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:56.279478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:57.279851      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:58.280198      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:14:59.280515      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:14:59.421690 30 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/15/25 18:14:59.421
  STEP: Getting /status @ 01/15/25 18:14:59.421
  I0115 18:14:59.428732 30 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/15/25 18:14:59.428
  I0115 18:14:59.446287 30 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/15/25 18:14:59.446
  I0115 18:14:59.450065 30 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0115 18:14:59.450295 30 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.450454 30 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.450642 30 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.451139 30 replica_set.go:682] Found replicaset test-rs in namespace replicaset-5466 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0115 18:14:59.451399 30 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/15/25 18:14:59.451
  I0115 18:14:59.451571 30 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0115 18:14:59.467704 30 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/15/25 18:14:59.467
  I0115 18:14:59.469774 30 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0115 18:14:59.470102 30 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.470542 30 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.470987 30 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.471179 30 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-5466 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:14:59.471487 30 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0115 18:14:59.471649 30 replica_set.go:718] Found replicaset test-rs in namespace replicaset-5466 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0115 18:14:59.471781 30 replica_set.go:729] Replicaset test-rs has a patched status
  I0115 18:14:59.472151 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5466" for this suite. @ 01/15/25 18:14:59.478
• [5.229 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/15/25 18:14:59.49
  I0115 18:14:59.490163 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:14:59.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:14:59.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:14:59.52
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:14:59.524
  E0115 18:15:00.281132      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:01.281431      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:02.281991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:03.282661      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:15:03.558
  I0115 18:15:03.563931 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-90788405-9221-4127-bf81-f585f75bbf29 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:15:03.573
  I0115 18:15:03.601970 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4848" for this suite. @ 01/15/25 18:15:03.608
• [4.129 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/15/25 18:15:03.619
  I0115 18:15:03.619281 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:15:03.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:15:03.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:15:03.658
  STEP: Setting up server cert @ 01/15/25 18:15:03.75
  E0115 18:15:04.283277      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:15:04.427
  STEP: Deploying the webhook pod @ 01/15/25 18:15:04.444
  STEP: Wait for the deployment to be ready @ 01/15/25 18:15:04.471
  I0115 18:15:04.484782 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:15:05.283503      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:06.284319      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:15:06.501
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:15:06.515
  E0115 18:15:07.284666      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:07.516043 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/15/25 18:15:07.528
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/15/25 18:15:07.554
  I0115 18:15:07.554883 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  I0115 18:15:07.644496 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5995" for this suite. @ 01/15/25 18:15:07.654
  STEP: Destroying namespace "webhook-markers-9637" for this suite. @ 01/15/25 18:15:07.67
• [4.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/15/25 18:15:07.684
  I0115 18:15:07.684532 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:15:07.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:15:07.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:15:07.715
  E0115 18:15:08.285125      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:09.285451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:10.286543      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:11.287321      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:12.288430      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:13.288618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:15:13.82
  I0115 18:15:13.825476 30 output.go:207] Trying to get logs from node node6 pod client-envvars-e8998e2a-f563-46b4-bd19-eb26e3139239 container env3cont: <nil>
  STEP: delete the pod @ 01/15/25 18:15:13.836
  I0115 18:15:13.872342 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9956" for this suite. @ 01/15/25 18:15:13.878
• [6.203 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/15/25 18:15:13.888
  I0115 18:15:13.888122 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:15:13.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:15:13.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:15:13.919
  STEP: creating the pod @ 01/15/25 18:15:13.923
  STEP: submitting the pod to kubernetes @ 01/15/25 18:15:13.923
  STEP: verifying QOS class is set on the pod @ 01/15/25 18:15:13.939
  I0115 18:15:13.944022 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-327" for this suite. @ 01/15/25 18:15:13.979
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/15/25 18:15:13.988
  I0115 18:15:13.988315 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 18:15:13.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:15:14.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:15:14.017
  STEP: Creating pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992 @ 01/15/25 18:15:14.021
  E0115 18:15:14.289638      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:15.289992      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/15/25 18:15:16.054
  I0115 18:15:16.057932 30 container_probe.go:1749] Initial restart count of pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 is 0
  I0115 18:15:16.062297 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:16.290727      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:17.291086      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:18.068037 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:18.291357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:19.291709      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:20.079541 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:20.292752      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:21.294975      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:22.088670 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:22.294865      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:23.295322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:24.095058 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:24.296042      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:25.296290      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:26.101178 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:26.296338      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:27.296687      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:28.107181 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:28.297404      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:29.297739      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:30.116354 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:30.298639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:31.299495      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:32.122696 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:32.300110      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:33.300259      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:34.129329 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:34.300566      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:35.301301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:36.138707 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:36.301877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:37.302108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:38.144189 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:38.302449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:39.302886      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:40.149542 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:40.302851      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:41.303201      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:42.155897 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:42.304173      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:43.304301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:44.160995 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:44.305224      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:45.305922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:46.168581 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:46.306796      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:47.307275      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:48.173957 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:48.308101      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:49.308536      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:50.178771 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:50.309019      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:51.309927      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:52.186019 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:52.310122      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:53.310650      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:54.192153 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:54.311492      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:55.311972      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:56.199214 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:56.312333      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:57.312994      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:15:58.204283 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:15:58.313084      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:15:59.313781      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:00.209800 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:00.314125      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:01.314619      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:02.215805 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:02.315070      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:03.315444      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:04.221534 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:04.315782      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:05.316129      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:06.227990 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:06.317046      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:07.317677      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:08.234217 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:08.318383      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:09.319090      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:10.239717 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:10.319945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:11.320394      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:12.246454 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:12.321369      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:13.321950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:14.252675 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:14.322894      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:15.323232      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:16.259521 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:16.323664      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:17.324462      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:18.265237 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:18.325442      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:19.325798      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:20.271193 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:20.326384      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:21.326730      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:22.276640 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:22.327773      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:23.328112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:24.283656 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:24.328764      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:25.329073      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:26.288694 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:26.329877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:27.330233      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:28.298487 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:28.330626      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:29.330961      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:30.304274 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:30.331470      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:31.331703      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:32.308955 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:32.332220      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:33.332712      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:34.315952 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:34.333085      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:35.333444      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:36.320765 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:36.333875      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:37.334189      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:38.326487 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:38.334598      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:39.334967      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:40.331649 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:40.335858      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:41.336620      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:42.337278      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:42.338064 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:43.337995      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:44.338105      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:44.343580 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:45.338353      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:46.338602      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:46.350417 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:47.338848      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:48.339284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:48.355857 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:49.339383      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:50.340023      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:50.360430 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:51.340696      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:52.340884      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:52.365797 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:53.341755      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:54.341941      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:54.371763 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:55.342782      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:56.343201      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:56.377767 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:57.343607      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:16:58.344087      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:16:58.384040 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:16:59.344678      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:00.344872      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:00.390684 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:01.345861      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:02.346304      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:02.396893 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:03.346804      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:04.348306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:04.402591 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:05.348668      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:06.348929      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:06.407540 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:07.349537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:08.350176      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:08.413843 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:09.350751      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:10.351174      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:10.419442 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:11.351722      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:12.352264      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:12.425741 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:13.352690      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:14.354121      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:14.432324 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:15.354224      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:16.354679      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:16.437052 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:17.355150      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:18.355722      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:18.443889 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:19.355873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:20.356049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:20.449676 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:21.356837      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:22.357243      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:22.456424 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:23.357417      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:24.357880      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:24.462145 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:25.358037      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:26.358287      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:26.468306 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:27.359243      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:28.359726      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:28.474335 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:29.360416      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:30.361137      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:30.480080 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:31.362085      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:32.362504      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:32.485883 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:33.362858      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:34.363242      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:34.491479 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:35.363472      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:36.363851      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:36.500341 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:37.364284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:38.364701      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:38.505249 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:39.365205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:40.365706      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:40.512017 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:41.366115      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:42.366301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:42.518518 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:43.366343      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:44.366517      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:44.525565 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:45.367388      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:46.367662      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:46.530971 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:47.367940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:48.368258      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:48.536529 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:49.368487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:50.369931      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:50.543932 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:51.369924      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:52.370280      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:52.550372 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:53.371221      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:54.371554      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:54.556707 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:55.372618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:56.373079      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:56.563181 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:57.373018      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:17:58.373347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:17:58.569265 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:17:59.374180      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:00.374754      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:00.584195 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:01.375314      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:02.375655      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:02.589623 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:03.375855      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:04.376213      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:04.596484 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:05.376420      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:06.376798      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:06.602372 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:07.377044      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:08.377434      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:08.609347 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:09.378097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:10.378252      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:10.621140 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:11.378375      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:12.378715      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:12.627158 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:13.378947      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:14.379357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:14.634352 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:15.380328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:16.380624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:16.639694 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:17.381686      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:18.382046      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:18.648305 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:19.382185      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:20.382485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:20.656317 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:21.383316      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:22.383851      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:22.662431 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:23.384357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:24.385261      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:24.669207 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:25.386077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:26.386160      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:26.674945 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:27.386247      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:28.386590      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:28.681699 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:29.387535      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:30.388054      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:30.687746 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:31.388303      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:32.389089      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:32.693491 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:33.389299      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:34.389628      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:34.701012 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:35.389785      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:36.390009      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:36.707092 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:37.390940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:38.391276      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:38.714772 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:39.391500      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:40.391871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:40.721657 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:41.392226      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:42.392618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:42.726975 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:43.392820      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:44.393306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:44.735386 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:45.393561      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:46.393990      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:46.743172 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:47.395213      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:48.395700      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:48.753336 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:49.396049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:50.396085      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:50.759232 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:51.396842      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:52.397011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:52.765779 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:53.397177      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:54.397504      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:54.773924 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:55.397929      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:56.397987      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:56.779523 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:57.398434      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:18:58.398870      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:18:58.786496 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:18:59.399210      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:00.399598      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:00.792893 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:01.400340      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:02.401117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:02.799723 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:03.401433      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:04.402968      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:04.806577 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:05.401915      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:06.402113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:06.813199 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:07.402774      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:08.403068      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:08.818362 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:09.403950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:10.404270      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:10.823868 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:11.404426      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:12.404582      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:12.829252 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:13.404794      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:14.405080      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:14.834653 30 container_probe.go:1759] Get pod busybox-3ed1464b-3155-4850-aa8d-1f52eabd9930 in namespace container-probe-3992
  E0115 18:19:15.405117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:16.405269      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/15/25 18:19:16.836
  I0115 18:19:16.870684 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3992" for this suite. @ 01/15/25 18:19:16.879
• [242.900 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/15/25 18:19:16.888
  I0115 18:19:16.888979 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 18:19:16.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:19:16.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:19:16.954
  I0115 18:19:17.051038 30 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"9db71643-2dde-4c2b-a7b5-5aea8f6f6921", Controller:(*bool)(0x4001cdf78a), BlockOwnerDeletion:(*bool)(0x4001cdf78b)}}
  I0115 18:19:17.072235 30 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"4fab44e8-fe62-46d2-bd68-a90f80bbdc42", Controller:(*bool)(0x400089a9ba), BlockOwnerDeletion:(*bool)(0x400089a9bb)}}
  I0115 18:19:17.092964 30 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"aa604580-f52b-44ff-9a4a-9847854f29e9", Controller:(*bool)(0x400089ac7a), BlockOwnerDeletion:(*bool)(0x400089ac7b)}}
  E0115 18:19:17.405674      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:18.406097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:19.406487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:20.406902      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:21.407089      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:19:22.111901 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3259" for this suite. @ 01/15/25 18:19:22.117
• [5.251 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 01/15/25 18:19:22.139
  I0115 18:19:22.139983 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption @ 01/15/25 18:19:22.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:19:22.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:19:22.166
  I0115 18:19:22.191984 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:19:22.407767      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:23.408128      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:24.409187      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:25.409501      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:26.410059      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:27.410369      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:28.410515      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:29.410815      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:30.410927      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:31.411137      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:32.412060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:33.412206      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:34.412361      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:35.412694      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:36.413395      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:37.413679      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:38.414259      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:39.414436      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:40.414999      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:41.415224      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:42.415501      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:43.415861      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:44.415927      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:45.416240      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:46.416468      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:47.416789      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:48.417061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:49.417395      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:50.418280      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:51.418650      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:52.419468      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:53.419779      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:54.419883      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:55.420171      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:56.421037      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:57.421683      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:58.422392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:19:59.422985      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:00.423597      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:01.424024      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:02.424642      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:03.425061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:04.426292      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:05.426878      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:06.427017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:07.427313      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:08.427983      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:09.428449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:10.428676      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:11.429036      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:12.429803      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:13.430244      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:14.430807      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:15.431306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:16.431589      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:17.432490      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:18.433271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:19.433584      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:20.434117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:21.434451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:20:22.199817 30 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/15/25 18:20:22.214
  STEP: Adding a custom resource @ 01/15/25 18:20:22.214
  I0115 18:20:22.252765 30 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0115 18:20:22.269089 30 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/15/25 18:20:22.269
  I0115 18:20:22.396119 30 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0115 18:20:22.421263 30 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/15/25 18:20:22.421
  E0115 18:20:22.434838      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:20:22.489355 30 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0115 18:20:22.510606 30 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/15/25 18:20:22.51
  E0115 18:20:23.435898      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:24.436321      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/15/25 18:20:24.567
  E0115 18:20:25.437307      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:26.437491      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:27.438543      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:28.438981      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/15/25 18:20:28.693
  STEP: Removing a custom resource @ 01/15/25 18:20:28.712
  STEP: Removing a custom resource @ 01/15/25 18:20:28.731
  I0115 18:20:28.752128 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1788" for this suite. @ 01/15/25 18:20:28.758
• [66.935 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/15/25 18:20:29.076
  I0115 18:20:29.076953 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:20:29.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:20:29.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:20:29.113
  STEP: Creating secret with name secret-test-7067fa4d-32f9-4f04-aa93-f1a2db69ea9a @ 01/15/25 18:20:29.118
  STEP: Creating a pod to test consume secrets @ 01/15/25 18:20:29.13
  E0115 18:20:29.439322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:30.439680      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:31.440141      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:32.440724      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:20:33.202
  I0115 18:20:33.207520 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-f904dfdf-8257-40af-8202-72bd71a9c1f6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:20:33.218
  I0115 18:20:33.274239 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1867" for this suite. @ 01/15/25 18:20:33.281
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 01/15/25 18:20:33.293
  I0115 18:20:33.293949 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 18:20:33.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:20:33.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:20:33.322
  STEP: Creating service test in namespace statefulset-5891 @ 01/15/25 18:20:33.326
  STEP: Creating statefulset ss in namespace statefulset-5891 @ 01/15/25 18:20:33.356
  I0115 18:20:33.371720 30 wait.go:40] Found 0 stateful pods, waiting for 1
  E0115 18:20:33.441343      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:34.441370      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:35.441687      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:36.441952      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:37.442258      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:38.442577      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:39.442882      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:40.443027      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:41.443188      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:42.443367      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:20:43.373103 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/15/25 18:20:43.382
  STEP: Getting /status @ 01/15/25 18:20:43.419
  I0115 18:20:43.425138 30 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/15/25 18:20:43.425
  I0115 18:20:43.438033 30 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/15/25 18:20:43.438
  I0115 18:20:43.441054 30 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0115 18:20:43.441124 30 statefulset.go:1114] Found Statefulset ss in namespace statefulset-5891 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:20:43.441144 30 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/15/25 18:20:43.441
  I0115 18:20:43.441188 30 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  E0115 18:20:43.443597      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:20:43.454719 30 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/15/25 18:20:43.454
  I0115 18:20:43.458058 30 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0115 18:20:43.458118 30 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-5891 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0115 18:20:43.458296 30 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0115 18:20:43.458386 30 statefulset.go:138] Deleting all statefulset in ns statefulset-5891
  I0115 18:20:43.462232 30 rest.go:152] Scaling statefulset ss to 0
  E0115 18:20:44.444710      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:45.445263      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:46.445597      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:47.446081      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:48.446463      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:49.446933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:50.447326      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:51.447607      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:52.447988      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:53.448498      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:20:53.495513 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 18:20:53.499982 30 rest.go:90] Deleting statefulset ss
  I0115 18:20:53.521120 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5891" for this suite. @ 01/15/25 18:20:53.527
• [20.244 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/15/25 18:20:53.537
  I0115 18:20:53.537641 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename namespaces @ 01/15/25 18:20:53.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:20:53.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:20:53.576
  STEP: Creating namespace "e2e-ns-gtg48" @ 01/15/25 18:20:53.584
  I0115 18:20:53.670174 30 namespace.go:411] Namespace "e2e-ns-gtg48-7391" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-gtg48-7391" @ 01/15/25 18:20:53.67
  I0115 18:20:53.680984 30 namespace.go:434] Namespace "e2e-ns-gtg48-7391" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-gtg48-7391" @ 01/15/25 18:20:53.681
  I0115 18:20:53.693346 30 namespace.go:463] Namespace "e2e-ns-gtg48-7391" has []v1.FinalizerName{"kubernetes"}
  I0115 18:20:53.693691 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7560" for this suite. @ 01/15/25 18:20:53.699
  STEP: Destroying namespace "e2e-ns-gtg48-7391" for this suite. @ 01/15/25 18:20:53.707
• [0.230 seconds]
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 01/15/25 18:20:53.767
  I0115 18:20:53.767420 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:20:53.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:20:53.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:20:53.798
  STEP: creating a collection of services @ 01/15/25 18:20:53.802
  I0115 18:20:53.802881 30 service.go:3635] Creating e2e-svc-a-4kr79
  I0115 18:20:53.837696 30 service.go:3635] Creating e2e-svc-b-9r4z2
  I0115 18:20:53.856504 30 service.go:3635] Creating e2e-svc-c-d4f6b
  STEP: deleting service collection @ 01/15/25 18:20:53.878
  I0115 18:20:53.928260 30 service.go:3670] Collection of services has been deleted
  I0115 18:20:53.928684 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-341" for this suite. @ 01/15/25 18:20:53.935
• [0.184 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 01/15/25 18:20:53.952
  I0115 18:20:53.952589 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:20:53.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:20:53.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:20:53.993
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/15/25 18:20:53.998
  I0115 18:20:53.999047 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9009 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0115 18:20:54.118158 30 builder.go:146] stderr: ""
  I0115 18:20:54.118433 30 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/15/25 18:20:54.118
  E0115 18:20:54.448868      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:55.449289      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:56.450092      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:57.450609      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:20:58.451049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/15/25 18:20:59.169
  I0115 18:20:59.170232 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9009 get pod e2e-test-httpd-pod -o json'
  I0115 18:20:59.273579 30 builder.go:146] stderr: ""
  I0115 18:20:59.273720 30 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-01-15T18:20:54Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9009\",\n        \"resourceVersion\": \"233521\",\n        \"uid\": \"d617e298-93e8-4b2e-a289-837e1fad11df\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-78pdh\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"node6\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-78pdh\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-15T18:20:55Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-15T18:20:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-15T18:20:55Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-15T18:20:55Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-15T18:20:54Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://ade3178c1a5acc9cba6186a1c25dc092ca78f34603d97a12fcad5b7493bc9a6f\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-15T18:20:54Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-78pdh\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.111.222\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.111.222\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.68.8\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.68.8\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-15T18:20:54Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/15/25 18:20:59.273
  I0115 18:20:59.273873 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9009 replace -f -'
  E0115 18:20:59.451551      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:20:59.470319 30 builder.go:146] stderr: ""
  I0115 18:20:59.470381 30 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/15/25 18:20:59.47
  I0115 18:20:59.477005 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9009 delete pods e2e-test-httpd-pod'
  E0115 18:21:00.452504      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:01.452682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:01.550659 30 builder.go:146] stderr: ""
  I0115 18:21:01.550755 30 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0115 18:21:01.551038 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9009" for this suite. @ 01/15/25 18:21:01.558
• [7.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/15/25 18:21:01.575
  I0115 18:21:01.575717 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 18:21:01.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:01.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:01.607
  STEP: Creating a pod to test substitution in volume subpath @ 01/15/25 18:21:01.611
  E0115 18:21:02.453243      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:03.454742      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:04.454293      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:05.454812      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:21:05.646
  I0115 18:21:05.650842 30 output.go:207] Trying to get logs from node node6 pod var-expansion-472500db-d616-4e9f-890f-bea0dd3f3ac6 container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 18:21:05.664
  I0115 18:21:05.688593 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7643" for this suite. @ 01/15/25 18:21:05.695
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/15/25 18:21:05.704
  I0115 18:21:05.704879 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:21:05.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:05.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:05.842
  STEP: Setting up server cert @ 01/15/25 18:21:05.91
  E0115 18:21:06.455024      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:21:06.48
  STEP: Deploying the webhook pod @ 01/15/25 18:21:06.498
  STEP: Wait for the deployment to be ready @ 01/15/25 18:21:06.546
  I0115 18:21:06.569786 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:21:07.455283      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:08.455686      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:21:08.584
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:21:08.602
  E0115 18:21:09.456351      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:09.603579 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0115 18:21:09.617593 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:21:10.457049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:11.457445      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:12.457464      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:13.457632      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:14.458166      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2026-crds.webhook.example.com via the AdmissionRegistration API @ 01/15/25 18:21:15.134
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/15/25 18:21:15.16
  E0115 18:21:15.458842      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:16.459171      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:17.460309      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:17.842689 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5121" for this suite. @ 01/15/25 18:21:17.85
  STEP: Destroying namespace "webhook-markers-9129" for this suite. @ 01/15/25 18:21:17.86
• [12.171 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/15/25 18:21:17.875
  I0115 18:21:17.876044 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename init-container @ 01/15/25 18:21:17.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:17.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:17.913
  STEP: creating the pod @ 01/15/25 18:21:17.917
  I0115 18:21:17.917775 30 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0115 18:21:18.460922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:19.461398      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:20.461850      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:21.462377      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:21.641114 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7205" for this suite. @ 01/15/25 18:21:21.647
• [3.785 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/15/25 18:21:21.661
  I0115 18:21:21.661384 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:21:21.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:21.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:21.733
  STEP: Creating configMap with name configmap-test-volume-86f41bfd-9e0d-4028-a7af-1ae5ebf64c14 @ 01/15/25 18:21:21.737
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:21:21.748
  E0115 18:21:22.463281      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:23.463600      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:24.464530      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:25.464967      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:21:25.778
  I0115 18:21:25.797581 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-58c5495b-18ea-4af7-b241-f5fca7be1c0a container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:21:25.805
  I0115 18:21:25.837453 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9352" for this suite. @ 01/15/25 18:21:25.849
• [4.197 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/15/25 18:21:25.858
  I0115 18:21:25.858757 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svc-latency @ 01/15/25 18:21:25.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:25.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:25.898
  I0115 18:21:25.901892 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7903 @ 01/15/25 18:21:25.903
  I0115 18:21:25.914736      30 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7903, replica count: 1
  E0115 18:21:26.465116      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:26.966173      30 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 18:21:27.093394 30 service_latency.go:356] Created: latency-svc-8ccck
  I0115 18:21:27.101541 30 service_latency.go:363] Got endpoints: latency-svc-8ccck [34.740809ms]
  I0115 18:21:27.121233 30 service_latency.go:356] Created: latency-svc-jvkbp
  I0115 18:21:27.141603 30 service_latency.go:363] Got endpoints: latency-svc-jvkbp [39.450121ms]
  I0115 18:21:27.142193 30 service_latency.go:356] Created: latency-svc-nxphm
  I0115 18:21:27.164201 30 service_latency.go:363] Got endpoints: latency-svc-nxphm [62.535372ms]
  I0115 18:21:27.177094 30 service_latency.go:356] Created: latency-svc-ggd8c
  I0115 18:21:27.180327 30 service_latency.go:356] Created: latency-svc-x474t
  I0115 18:21:27.187504 30 service_latency.go:363] Got endpoints: latency-svc-x474t [85.166401ms]
  I0115 18:21:27.195111 30 service_latency.go:356] Created: latency-svc-96v2j
  I0115 18:21:27.226308 30 service_latency.go:363] Got endpoints: latency-svc-ggd8c [124.177763ms]
  I0115 18:21:27.238667 30 service_latency.go:363] Got endpoints: latency-svc-96v2j [136.384543ms]
  I0115 18:21:27.247778 30 service_latency.go:356] Created: latency-svc-jntj7
  I0115 18:21:27.264182 30 service_latency.go:356] Created: latency-svc-8bmtf
  I0115 18:21:27.271729 30 service_latency.go:363] Got endpoints: latency-svc-jntj7 [169.37203ms]
  I0115 18:21:27.283132 30 service_latency.go:363] Got endpoints: latency-svc-8bmtf [181.432788ms]
  I0115 18:21:27.291392 30 service_latency.go:356] Created: latency-svc-9d54x
  I0115 18:21:27.303352 30 service_latency.go:356] Created: latency-svc-v94mm
  I0115 18:21:27.304310 30 service_latency.go:363] Got endpoints: latency-svc-9d54x [201.874316ms]
  I0115 18:21:27.325796 30 service_latency.go:363] Got endpoints: latency-svc-v94mm [223.218475ms]
  I0115 18:21:27.327774 30 service_latency.go:356] Created: latency-svc-8df67
  I0115 18:21:27.344664 30 service_latency.go:363] Got endpoints: latency-svc-8df67 [242.003523ms]
  I0115 18:21:27.350831 30 service_latency.go:356] Created: latency-svc-fhd4b
  I0115 18:21:27.365526 30 service_latency.go:363] Got endpoints: latency-svc-fhd4b [262.776429ms]
  I0115 18:21:27.367549 30 service_latency.go:356] Created: latency-svc-cmhfh
  I0115 18:21:27.377834 30 service_latency.go:356] Created: latency-svc-kl4kl
  I0115 18:21:27.379358 30 service_latency.go:363] Got endpoints: latency-svc-cmhfh [276.807313ms]
  I0115 18:21:27.390826 30 service_latency.go:363] Got endpoints: latency-svc-kl4kl [288.099882ms]
  I0115 18:21:27.396191 30 service_latency.go:356] Created: latency-svc-862l5
  I0115 18:21:27.417674 30 service_latency.go:356] Created: latency-svc-gmdp9
  I0115 18:21:27.419245 30 service_latency.go:363] Got endpoints: latency-svc-862l5 [316.622483ms]
  I0115 18:21:27.421349 30 service_latency.go:356] Created: latency-svc-wxxdx
  I0115 18:21:27.434757 30 service_latency.go:363] Got endpoints: latency-svc-wxxdx [293.086531ms]
  I0115 18:21:27.434814 30 service_latency.go:363] Got endpoints: latency-svc-gmdp9 [332.313787ms]
  I0115 18:21:27.436771 30 service_latency.go:356] Created: latency-svc-dttxv
  I0115 18:21:27.450194 30 service_latency.go:363] Got endpoints: latency-svc-dttxv [285.90822ms]
  I0115 18:21:27.461363 30 service_latency.go:356] Created: latency-svc-946mb
  E0115 18:21:27.465528      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:27.479479 30 service_latency.go:356] Created: latency-svc-vrl2z
  I0115 18:21:27.480447 30 service_latency.go:363] Got endpoints: latency-svc-946mb [292.768934ms]
  I0115 18:21:27.494381 30 service_latency.go:363] Got endpoints: latency-svc-vrl2z [267.905551ms]
  I0115 18:21:27.498230 30 service_latency.go:356] Created: latency-svc-llfzl
  I0115 18:21:27.506096 30 service_latency.go:363] Got endpoints: latency-svc-llfzl [267.325377ms]
  I0115 18:21:27.510928 30 service_latency.go:356] Created: latency-svc-9rlsb
  I0115 18:21:27.519634 30 service_latency.go:363] Got endpoints: latency-svc-9rlsb [247.75484ms]
  I0115 18:21:27.521445 30 service_latency.go:356] Created: latency-svc-cgd45
  I0115 18:21:27.538019 30 service_latency.go:363] Got endpoints: latency-svc-cgd45 [254.794238ms]
  I0115 18:21:27.555105 30 service_latency.go:356] Created: latency-svc-f5xzq
  I0115 18:21:27.567168 30 service_latency.go:356] Created: latency-svc-fkfbj
  I0115 18:21:27.572023 30 service_latency.go:356] Created: latency-svc-mfgzg
  I0115 18:21:27.572233 30 service_latency.go:363] Got endpoints: latency-svc-f5xzq [267.831309ms]
  I0115 18:21:27.573882 30 service_latency.go:363] Got endpoints: latency-svc-fkfbj [248.021416ms]
  I0115 18:21:27.587372 30 service_latency.go:363] Got endpoints: latency-svc-mfgzg [242.636628ms]
  I0115 18:21:27.592199 30 service_latency.go:356] Created: latency-svc-m2fjk
  I0115 18:21:27.604973 30 service_latency.go:363] Got endpoints: latency-svc-m2fjk [239.37622ms]
  I0115 18:21:27.608199 30 service_latency.go:356] Created: latency-svc-wq6c5
  I0115 18:21:27.623343 30 service_latency.go:356] Created: latency-svc-27bdw
  I0115 18:21:27.625544 30 service_latency.go:363] Got endpoints: latency-svc-wq6c5 [246.122722ms]
  I0115 18:21:27.644211 30 service_latency.go:363] Got endpoints: latency-svc-27bdw [253.330623ms]
  I0115 18:21:27.645342 30 service_latency.go:356] Created: latency-svc-pq78p
  I0115 18:21:27.736028 30 service_latency.go:363] Got endpoints: latency-svc-pq78p [316.725796ms]
  I0115 18:21:27.759606 30 service_latency.go:356] Created: latency-svc-g6q4p
  I0115 18:21:27.762606 30 service_latency.go:356] Created: latency-svc-42wz4
  I0115 18:21:27.779951 30 service_latency.go:363] Got endpoints: latency-svc-42wz4 [344.99441ms]
  I0115 18:21:27.799507 30 service_latency.go:363] Got endpoints: latency-svc-g6q4p [364.689079ms]
  I0115 18:21:27.800681 30 service_latency.go:356] Created: latency-svc-fmfcf
  I0115 18:21:27.816595 30 service_latency.go:363] Got endpoints: latency-svc-fmfcf [366.263217ms]
  I0115 18:21:27.825292 30 service_latency.go:356] Created: latency-svc-9t5f5
  I0115 18:21:27.850740 30 service_latency.go:356] Created: latency-svc-hntlz
  I0115 18:21:27.854153 30 service_latency.go:363] Got endpoints: latency-svc-9t5f5 [373.635173ms]
  I0115 18:21:27.863630 30 service_latency.go:363] Got endpoints: latency-svc-hntlz [369.124685ms]
  I0115 18:21:27.875518 30 service_latency.go:356] Created: latency-svc-kj5bp
  I0115 18:21:27.878886 30 service_latency.go:356] Created: latency-svc-78jjh
  I0115 18:21:27.892887 30 service_latency.go:363] Got endpoints: latency-svc-kj5bp [386.685484ms]
  I0115 18:21:27.903564 30 service_latency.go:363] Got endpoints: latency-svc-78jjh [383.844587ms]
  I0115 18:21:27.905107 30 service_latency.go:356] Created: latency-svc-tktkc
  I0115 18:21:27.919698 30 service_latency.go:363] Got endpoints: latency-svc-tktkc [381.610774ms]
  I0115 18:21:28.126462 30 service_latency.go:356] Created: latency-svc-ztvbq
  I0115 18:21:28.126469 30 service_latency.go:356] Created: latency-svc-cdv2d
  I0115 18:21:28.131474 30 service_latency.go:356] Created: latency-svc-52hxj
  I0115 18:21:28.131704 30 service_latency.go:356] Created: latency-svc-lbld6
  I0115 18:21:28.131784 30 service_latency.go:356] Created: latency-svc-sn2qh
  I0115 18:21:28.134831 30 service_latency.go:356] Created: latency-svc-gh692
  I0115 18:21:28.134922 30 service_latency.go:356] Created: latency-svc-fwnrd
  I0115 18:21:28.134943 30 service_latency.go:356] Created: latency-svc-fgmmd
  I0115 18:21:28.135602 30 service_latency.go:356] Created: latency-svc-wr5xs
  I0115 18:21:28.138903 30 service_latency.go:356] Created: latency-svc-frgxn
  I0115 18:21:28.140149 30 service_latency.go:356] Created: latency-svc-qzlc6
  I0115 18:21:28.140240 30 service_latency.go:356] Created: latency-svc-gn2nh
  I0115 18:21:28.140629 30 service_latency.go:356] Created: latency-svc-r2pvd
  I0115 18:21:28.141084 30 service_latency.go:356] Created: latency-svc-z6vgx
  I0115 18:21:28.141195 30 service_latency.go:356] Created: latency-svc-7km6z
  I0115 18:21:28.155358 30 service_latency.go:363] Got endpoints: latency-svc-cdv2d [355.787407ms]
  I0115 18:21:28.156379 30 service_latency.go:363] Got endpoints: latency-svc-ztvbq [512.035255ms]
  I0115 18:21:28.167293 30 service_latency.go:363] Got endpoints: latency-svc-sn2qh [274.354285ms]
  I0115 18:21:28.167603 30 service_latency.go:363] Got endpoints: latency-svc-fgmmd [350.818708ms]
  I0115 18:21:28.167835 30 service_latency.go:363] Got endpoints: latency-svc-52hxj [304.079034ms]
  I0115 18:21:28.189623 30 service_latency.go:363] Got endpoints: latency-svc-lbld6 [615.648377ms]
  I0115 18:21:28.189680 30 service_latency.go:363] Got endpoints: latency-svc-wr5xs [453.516289ms]
  I0115 18:21:28.216820 30 service_latency.go:363] Got endpoints: latency-svc-z6vgx [436.795729ms]
  I0115 18:21:28.216850 30 service_latency.go:363] Got endpoints: latency-svc-7km6z [362.632491ms]
  I0115 18:21:28.232618 30 service_latency.go:363] Got endpoints: latency-svc-qzlc6 [660.078326ms]
  I0115 18:21:28.241537 30 service_latency.go:363] Got endpoints: latency-svc-r2pvd [636.499514ms]
  I0115 18:21:28.241562 30 service_latency.go:363] Got endpoints: latency-svc-gn2nh [321.752456ms]
  I0115 18:21:28.247374 30 service_latency.go:363] Got endpoints: latency-svc-frgxn [659.930282ms]
  I0115 18:21:28.248850 30 service_latency.go:356] Created: latency-svc-xjb84
  I0115 18:21:28.252445 30 service_latency.go:363] Got endpoints: latency-svc-gh692 [348.79798ms]
  I0115 18:21:28.255837 30 service_latency.go:363] Got endpoints: latency-svc-fwnrd [630.217824ms]
  I0115 18:21:28.261143 30 service_latency.go:356] Created: latency-svc-dt8kj
  I0115 18:21:28.273657 30 service_latency.go:356] Created: latency-svc-m2h8p
  I0115 18:21:28.287072 30 service_latency.go:356] Created: latency-svc-qd2ct
  I0115 18:21:28.296815 30 service_latency.go:356] Created: latency-svc-vkjwz
  I0115 18:21:28.302945 30 service_latency.go:363] Got endpoints: latency-svc-xjb84 [147.5364ms]
  I0115 18:21:28.326924 30 service_latency.go:356] Created: latency-svc-bzccw
  I0115 18:21:28.333800 30 service_latency.go:356] Created: latency-svc-6fb9g
  I0115 18:21:28.348865 30 service_latency.go:356] Created: latency-svc-t986f
  I0115 18:21:28.357952 30 service_latency.go:363] Got endpoints: latency-svc-dt8kj [201.525587ms]
  I0115 18:21:28.368668 30 service_latency.go:356] Created: latency-svc-g7vpp
  I0115 18:21:28.376737 30 service_latency.go:356] Created: latency-svc-dzhqq
  I0115 18:21:28.390763 30 service_latency.go:356] Created: latency-svc-pfqwg
  I0115 18:21:28.405817 30 service_latency.go:363] Got endpoints: latency-svc-m2h8p [237.931316ms]
  I0115 18:21:28.409668 30 service_latency.go:356] Created: latency-svc-ktvvg
  I0115 18:21:28.432118 30 service_latency.go:356] Created: latency-svc-prfc5
  I0115 18:21:28.449229 30 service_latency.go:356] Created: latency-svc-dpmnf
  I0115 18:21:28.451921 30 service_latency.go:363] Got endpoints: latency-svc-qd2ct [284.277112ms]
  E0115 18:21:28.466181      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:28.468642 30 service_latency.go:356] Created: latency-svc-dz8sj
  I0115 18:21:28.489358 30 service_latency.go:356] Created: latency-svc-qwqhh
  I0115 18:21:28.499377 30 service_latency.go:356] Created: latency-svc-59dtf
  I0115 18:21:28.509787 30 service_latency.go:363] Got endpoints: latency-svc-vkjwz [342.441489ms]
  I0115 18:21:28.521050 30 service_latency.go:356] Created: latency-svc-p9p8b
  I0115 18:21:28.524485 30 service_latency.go:356] Created: latency-svc-jz8tk
  I0115 18:21:28.548417 30 service_latency.go:356] Created: latency-svc-hq4h5
  I0115 18:21:28.568658 30 service_latency.go:363] Got endpoints: latency-svc-bzccw [378.921589ms]
  I0115 18:21:28.585864 30 service_latency.go:356] Created: latency-svc-b27z9
  I0115 18:21:28.615666 30 service_latency.go:363] Got endpoints: latency-svc-6fb9g [425.962712ms]
  I0115 18:21:28.634274 30 service_latency.go:356] Created: latency-svc-fbkzw
  I0115 18:21:28.656446 30 service_latency.go:363] Got endpoints: latency-svc-t986f [439.554306ms]
  I0115 18:21:28.676095 30 service_latency.go:356] Created: latency-svc-tmthg
  I0115 18:21:28.705901 30 service_latency.go:363] Got endpoints: latency-svc-g7vpp [488.959944ms]
  I0115 18:21:28.723738 30 service_latency.go:356] Created: latency-svc-bkthl
  I0115 18:21:28.768850 30 service_latency.go:363] Got endpoints: latency-svc-dzhqq [536.071118ms]
  I0115 18:21:28.799585 30 service_latency.go:356] Created: latency-svc-jbpn2
  I0115 18:21:28.804164 30 service_latency.go:363] Got endpoints: latency-svc-pfqwg [562.53079ms]
  I0115 18:21:28.829674 30 service_latency.go:356] Created: latency-svc-ffk4z
  I0115 18:21:28.854839 30 service_latency.go:363] Got endpoints: latency-svc-ktvvg [613.229018ms]
  I0115 18:21:28.886050 30 service_latency.go:356] Created: latency-svc-vd97s
  I0115 18:21:28.908589 30 service_latency.go:363] Got endpoints: latency-svc-prfc5 [661.126032ms]
  I0115 18:21:28.929919 30 service_latency.go:356] Created: latency-svc-bpvxw
  I0115 18:21:28.958245 30 service_latency.go:363] Got endpoints: latency-svc-dpmnf [705.736845ms]
  I0115 18:21:28.977381 30 service_latency.go:356] Created: latency-svc-g8rhp
  I0115 18:21:29.007263 30 service_latency.go:363] Got endpoints: latency-svc-dz8sj [751.334503ms]
  I0115 18:21:29.062565 30 service_latency.go:363] Got endpoints: latency-svc-qwqhh [759.539349ms]
  I0115 18:21:29.073462 30 service_latency.go:356] Created: latency-svc-d8fr8
  I0115 18:21:29.082954 30 service_latency.go:356] Created: latency-svc-tb9r6
  I0115 18:21:29.107083 30 service_latency.go:363] Got endpoints: latency-svc-59dtf [749.043779ms]
  I0115 18:21:29.125260 30 service_latency.go:356] Created: latency-svc-wj5qb
  I0115 18:21:29.153287 30 service_latency.go:363] Got endpoints: latency-svc-p9p8b [747.392999ms]
  I0115 18:21:29.176915 30 service_latency.go:356] Created: latency-svc-wd9nc
  I0115 18:21:29.211073 30 service_latency.go:363] Got endpoints: latency-svc-jz8tk [759.089188ms]
  I0115 18:21:29.235167 30 service_latency.go:356] Created: latency-svc-2dzbd
  I0115 18:21:29.261472 30 service_latency.go:363] Got endpoints: latency-svc-hq4h5 [751.527348ms]
  I0115 18:21:29.325741 30 service_latency.go:356] Created: latency-svc-zj65t
  I0115 18:21:29.329596 30 service_latency.go:363] Got endpoints: latency-svc-b27z9 [760.686266ms]
  I0115 18:21:29.351156 30 service_latency.go:356] Created: latency-svc-7h57l
  I0115 18:21:29.358992 30 service_latency.go:363] Got endpoints: latency-svc-fbkzw [743.110647ms]
  I0115 18:21:29.409633 30 service_latency.go:356] Created: latency-svc-ps77j
  I0115 18:21:29.409676 30 service_latency.go:363] Got endpoints: latency-svc-tmthg [753.111375ms]
  I0115 18:21:29.430626 30 service_latency.go:356] Created: latency-svc-q2kr9
  I0115 18:21:29.457317 30 service_latency.go:363] Got endpoints: latency-svc-bkthl [751.288763ms]
  E0115 18:21:29.466722      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:29.488298 30 service_latency.go:356] Created: latency-svc-4sp5w
  I0115 18:21:29.591020 30 service_latency.go:363] Got endpoints: latency-svc-jbpn2 [822.093921ms]
  I0115 18:21:29.591097 30 service_latency.go:363] Got endpoints: latency-svc-ffk4z [786.8514ms]
  I0115 18:21:29.603620 30 service_latency.go:363] Got endpoints: latency-svc-vd97s [748.722061ms]
  I0115 18:21:29.624212 30 service_latency.go:356] Created: latency-svc-l9vnq
  I0115 18:21:29.628726 30 service_latency.go:356] Created: latency-svc-8brvf
  I0115 18:21:29.639065 30 service_latency.go:356] Created: latency-svc-c2wqw
  I0115 18:21:29.657418 30 service_latency.go:363] Got endpoints: latency-svc-bpvxw [748.750102ms]
  I0115 18:21:29.674949 30 service_latency.go:356] Created: latency-svc-cwjls
  I0115 18:21:29.716841 30 service_latency.go:363] Got endpoints: latency-svc-g8rhp [758.518494ms]
  I0115 18:21:29.735338 30 service_latency.go:356] Created: latency-svc-nrxpb
  I0115 18:21:29.764708 30 service_latency.go:363] Got endpoints: latency-svc-d8fr8 [757.380587ms]
  I0115 18:21:29.791712 30 service_latency.go:356] Created: latency-svc-dpcj5
  I0115 18:21:29.808277 30 service_latency.go:363] Got endpoints: latency-svc-tb9r6 [745.638978ms]
  I0115 18:21:29.828393 30 service_latency.go:356] Created: latency-svc-bx8fb
  I0115 18:21:29.855259 30 service_latency.go:363] Got endpoints: latency-svc-wj5qb [748.097325ms]
  I0115 18:21:29.875516 30 service_latency.go:356] Created: latency-svc-5kgzw
  I0115 18:21:29.905695 30 service_latency.go:363] Got endpoints: latency-svc-wd9nc [752.328787ms]
  I0115 18:21:29.929298 30 service_latency.go:356] Created: latency-svc-c6vlg
  I0115 18:21:29.968855 30 service_latency.go:363] Got endpoints: latency-svc-2dzbd [757.711785ms]
  I0115 18:21:30.002576 30 service_latency.go:356] Created: latency-svc-knjv9
  I0115 18:21:30.004677 30 service_latency.go:363] Got endpoints: latency-svc-zj65t [743.125407ms]
  I0115 18:21:30.030964 30 service_latency.go:356] Created: latency-svc-2q4rw
  I0115 18:21:30.062167 30 service_latency.go:363] Got endpoints: latency-svc-7h57l [732.485303ms]
  I0115 18:21:30.085528 30 service_latency.go:356] Created: latency-svc-s5c2s
  I0115 18:21:30.107236 30 service_latency.go:363] Got endpoints: latency-svc-ps77j [748.173387ms]
  I0115 18:21:30.121154 30 service_latency.go:356] Created: latency-svc-fq6t6
  I0115 18:21:30.156638 30 service_latency.go:363] Got endpoints: latency-svc-q2kr9 [746.886507ms]
  I0115 18:21:30.174136 30 service_latency.go:356] Created: latency-svc-2c9rp
  I0115 18:21:30.215194 30 service_latency.go:363] Got endpoints: latency-svc-4sp5w [757.810128ms]
  I0115 18:21:30.249423 30 service_latency.go:356] Created: latency-svc-t6nd8
  I0115 18:21:30.254184 30 service_latency.go:363] Got endpoints: latency-svc-l9vnq [663.081088ms]
  I0115 18:21:30.274555 30 service_latency.go:356] Created: latency-svc-xtszv
  I0115 18:21:30.313785 30 service_latency.go:363] Got endpoints: latency-svc-8brvf [722.544337ms]
  I0115 18:21:30.329931 30 service_latency.go:356] Created: latency-svc-gvrl5
  I0115 18:21:30.358880 30 service_latency.go:363] Got endpoints: latency-svc-c2wqw [755.189515ms]
  I0115 18:21:30.397439 30 service_latency.go:356] Created: latency-svc-kpkfh
  I0115 18:21:30.411277 30 service_latency.go:363] Got endpoints: latency-svc-cwjls [753.787651ms]
  I0115 18:21:30.431157 30 service_latency.go:356] Created: latency-svc-r9f5r
  E0115 18:21:30.467244      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:30.471429 30 service_latency.go:363] Got endpoints: latency-svc-nrxpb [754.510829ms]
  I0115 18:21:30.488877 30 service_latency.go:356] Created: latency-svc-hxnzz
  I0115 18:21:30.515538 30 service_latency.go:363] Got endpoints: latency-svc-dpcj5 [750.74842ms]
  I0115 18:21:30.536133 30 service_latency.go:356] Created: latency-svc-rqkwp
  I0115 18:21:30.614686 30 service_latency.go:363] Got endpoints: latency-svc-5kgzw [759.336104ms]
  I0115 18:21:30.617518 30 service_latency.go:363] Got endpoints: latency-svc-bx8fb [809.128912ms]
  I0115 18:21:30.637564 30 service_latency.go:356] Created: latency-svc-bzgrl
  I0115 18:21:30.650874 30 service_latency.go:356] Created: latency-svc-cxnk9
  I0115 18:21:30.660746 30 service_latency.go:363] Got endpoints: latency-svc-c6vlg [754.97845ms]
  I0115 18:21:30.684642 30 service_latency.go:356] Created: latency-svc-dmkmn
  I0115 18:21:30.701716 30 service_latency.go:363] Got endpoints: latency-svc-knjv9 [732.773231ms]
  I0115 18:21:30.726628 30 service_latency.go:356] Created: latency-svc-bm46r
  I0115 18:21:30.754454 30 service_latency.go:363] Got endpoints: latency-svc-2q4rw [749.730205ms]
  I0115 18:21:30.771387 30 service_latency.go:356] Created: latency-svc-4k9q6
  I0115 18:21:30.804652 30 service_latency.go:363] Got endpoints: latency-svc-s5c2s [742.41807ms]
  I0115 18:21:30.827559 30 service_latency.go:356] Created: latency-svc-hfrxn
  I0115 18:21:30.857865 30 service_latency.go:363] Got endpoints: latency-svc-fq6t6 [750.572345ms]
  I0115 18:21:30.875835 30 service_latency.go:356] Created: latency-svc-vpscc
  I0115 18:21:30.909171 30 service_latency.go:363] Got endpoints: latency-svc-2c9rp [752.46316ms]
  I0115 18:21:30.923560 30 service_latency.go:356] Created: latency-svc-zl9d4
  I0115 18:21:30.962678 30 service_latency.go:363] Got endpoints: latency-svc-t6nd8 [747.370329ms]
  I0115 18:21:30.982766 30 service_latency.go:356] Created: latency-svc-9c8bn
  I0115 18:21:31.012478 30 service_latency.go:363] Got endpoints: latency-svc-xtszv [758.221617ms]
  I0115 18:21:31.033327 30 service_latency.go:356] Created: latency-svc-68dvx
  I0115 18:21:31.056643 30 service_latency.go:363] Got endpoints: latency-svc-gvrl5 [742.7869ms]
  I0115 18:21:31.073191 30 service_latency.go:356] Created: latency-svc-9d4lq
  I0115 18:21:31.107401 30 service_latency.go:363] Got endpoints: latency-svc-kpkfh [748.28684ms]
  I0115 18:21:31.218472 30 service_latency.go:363] Got endpoints: latency-svc-r9f5r [806.94849ms]
  I0115 18:21:31.218678 30 service_latency.go:363] Got endpoints: latency-svc-hxnzz [747.188104ms]
  I0115 18:21:31.233638 30 service_latency.go:356] Created: latency-svc-ztnjh
  I0115 18:21:31.243452 30 service_latency.go:356] Created: latency-svc-sqdlb
  I0115 18:21:31.257468 30 service_latency.go:363] Got endpoints: latency-svc-rqkwp [741.628781ms]
  I0115 18:21:31.264909 30 service_latency.go:356] Created: latency-svc-f67hv
  I0115 18:21:31.280014 30 service_latency.go:356] Created: latency-svc-mw7xj
  I0115 18:21:31.311685 30 service_latency.go:363] Got endpoints: latency-svc-bzgrl [696.934026ms]
  I0115 18:21:31.332105 30 service_latency.go:356] Created: latency-svc-bc24c
  I0115 18:21:31.365117 30 service_latency.go:363] Got endpoints: latency-svc-cxnk9 [747.508142ms]
  I0115 18:21:31.385092 30 service_latency.go:356] Created: latency-svc-zdq79
  I0115 18:21:31.405880 30 service_latency.go:363] Got endpoints: latency-svc-dmkmn [744.92163ms]
  I0115 18:21:31.428743 30 service_latency.go:356] Created: latency-svc-ngxpj
  I0115 18:21:31.451084 30 service_latency.go:363] Got endpoints: latency-svc-bm46r [749.314295ms]
  E0115 18:21:31.468230      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:31.474871 30 service_latency.go:356] Created: latency-svc-htzfj
  I0115 18:21:31.504691 30 service_latency.go:363] Got endpoints: latency-svc-4k9q6 [750.175756ms]
  I0115 18:21:31.537683 30 service_latency.go:356] Created: latency-svc-4kt6c
  I0115 18:21:31.552854 30 service_latency.go:363] Got endpoints: latency-svc-hfrxn [748.134797ms]
  I0115 18:21:31.574963 30 service_latency.go:356] Created: latency-svc-lfstw
  I0115 18:21:31.605333 30 service_latency.go:363] Got endpoints: latency-svc-vpscc [747.381859ms]
  I0115 18:21:31.626696 30 service_latency.go:356] Created: latency-svc-vz4bf
  I0115 18:21:31.659527 30 service_latency.go:363] Got endpoints: latency-svc-zl9d4 [750.121805ms]
  I0115 18:21:31.681716 30 service_latency.go:356] Created: latency-svc-q2z6v
  I0115 18:21:31.702999 30 service_latency.go:363] Got endpoints: latency-svc-9c8bn [740.025164ms]
  I0115 18:21:31.723889 30 service_latency.go:356] Created: latency-svc-7k6pc
  I0115 18:21:31.756805 30 service_latency.go:363] Got endpoints: latency-svc-68dvx [744.270355ms]
  I0115 18:21:31.779243 30 service_latency.go:356] Created: latency-svc-w2l2w
  I0115 18:21:31.811174 30 service_latency.go:363] Got endpoints: latency-svc-9d4lq [754.457928ms]
  I0115 18:21:31.828497 30 service_latency.go:356] Created: latency-svc-xns8z
  I0115 18:21:31.857323 30 service_latency.go:363] Got endpoints: latency-svc-ztnjh [749.858338ms]
  I0115 18:21:31.878273 30 service_latency.go:356] Created: latency-svc-c7rzw
  I0115 18:21:31.913746 30 service_latency.go:363] Got endpoints: latency-svc-sqdlb [695.193504ms]
  I0115 18:21:31.934575 30 service_latency.go:356] Created: latency-svc-rqkkr
  I0115 18:21:31.953162 30 service_latency.go:363] Got endpoints: latency-svc-f67hv [734.268456ms]
  I0115 18:21:31.973102 30 service_latency.go:356] Created: latency-svc-t26pv
  I0115 18:21:32.016590 30 service_latency.go:363] Got endpoints: latency-svc-mw7xj [759.059597ms]
  I0115 18:21:32.041839 30 service_latency.go:356] Created: latency-svc-9lttt
  I0115 18:21:32.052530 30 service_latency.go:363] Got endpoints: latency-svc-bc24c [740.778572ms]
  I0115 18:21:32.074845 30 service_latency.go:356] Created: latency-svc-kqx54
  I0115 18:21:32.109698 30 service_latency.go:363] Got endpoints: latency-svc-zdq79 [744.505441ms]
  I0115 18:21:32.127352 30 service_latency.go:356] Created: latency-svc-wb65f
  I0115 18:21:32.156213 30 service_latency.go:363] Got endpoints: latency-svc-ngxpj [750.263078ms]
  I0115 18:21:32.175559 30 service_latency.go:356] Created: latency-svc-wls9h
  I0115 18:21:32.209412 30 service_latency.go:363] Got endpoints: latency-svc-htzfj [758.266748ms]
  I0115 18:21:32.236219 30 service_latency.go:356] Created: latency-svc-nkg29
  I0115 18:21:32.258071 30 service_latency.go:363] Got endpoints: latency-svc-4kt6c [753.311911ms]
  I0115 18:21:32.274785 30 service_latency.go:356] Created: latency-svc-vg4ld
  I0115 18:21:32.303464 30 service_latency.go:363] Got endpoints: latency-svc-lfstw [750.548815ms]
  I0115 18:21:32.333230 30 service_latency.go:356] Created: latency-svc-8d82v
  I0115 18:21:32.357631 30 service_latency.go:363] Got endpoints: latency-svc-vz4bf [752.225065ms]
  I0115 18:21:32.396101 30 service_latency.go:356] Created: latency-svc-ctgqs
  I0115 18:21:32.420348 30 service_latency.go:363] Got endpoints: latency-svc-q2z6v [760.744258ms]
  I0115 18:21:32.448761 30 service_latency.go:356] Created: latency-svc-tm59f
  I0115 18:21:32.459449 30 service_latency.go:363] Got endpoints: latency-svc-7k6pc [756.383834ms]
  E0115 18:21:32.468563      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:32.479031 30 service_latency.go:356] Created: latency-svc-c962g
  I0115 18:21:32.508198 30 service_latency.go:363] Got endpoints: latency-svc-w2l2w [751.326733ms]
  I0115 18:21:32.531298 30 service_latency.go:356] Created: latency-svc-vs55x
  I0115 18:21:32.553764 30 service_latency.go:363] Got endpoints: latency-svc-xns8z [742.508203ms]
  I0115 18:21:32.612194 30 service_latency.go:356] Created: latency-svc-w6vfj
  I0115 18:21:32.620172 30 service_latency.go:363] Got endpoints: latency-svc-c7rzw [762.753166ms]
  I0115 18:21:32.640767 30 service_latency.go:356] Created: latency-svc-6brzd
  I0115 18:21:32.664116 30 service_latency.go:363] Got endpoints: latency-svc-rqkkr [750.310469ms]
  I0115 18:21:32.689589 30 service_latency.go:356] Created: latency-svc-p9pk2
  I0115 18:21:32.712897 30 service_latency.go:363] Got endpoints: latency-svc-t26pv [759.654782ms]
  I0115 18:21:32.728392 30 service_latency.go:356] Created: latency-svc-s4cpq
  I0115 18:21:32.758664 30 service_latency.go:363] Got endpoints: latency-svc-9lttt [741.99199ms]
  I0115 18:21:32.778798 30 service_latency.go:356] Created: latency-svc-m5bdj
  I0115 18:21:32.801627 30 service_latency.go:363] Got endpoints: latency-svc-kqx54 [749.037219ms]
  I0115 18:21:32.820982 30 service_latency.go:356] Created: latency-svc-sqd2t
  I0115 18:21:32.874698 30 service_latency.go:363] Got endpoints: latency-svc-wb65f [764.927248ms]
  I0115 18:21:32.897480 30 service_latency.go:356] Created: latency-svc-rlzvv
  I0115 18:21:32.907785 30 service_latency.go:363] Got endpoints: latency-svc-wls9h [751.489937ms]
  I0115 18:21:32.932442 30 service_latency.go:356] Created: latency-svc-kw9q5
  I0115 18:21:32.953827 30 service_latency.go:363] Got endpoints: latency-svc-nkg29 [744.328216ms]
  I0115 18:21:33.000873 30 service_latency.go:356] Created: latency-svc-nxhll
  I0115 18:21:33.012686 30 service_latency.go:363] Got endpoints: latency-svc-vg4ld [754.483448ms]
  I0115 18:21:33.032585 30 service_latency.go:356] Created: latency-svc-6clx6
  I0115 18:21:33.057092 30 service_latency.go:363] Got endpoints: latency-svc-8d82v [753.356072ms]
  I0115 18:21:33.089909 30 service_latency.go:356] Created: latency-svc-s5vm6
  I0115 18:21:33.105134 30 service_latency.go:363] Got endpoints: latency-svc-ctgqs [747.385409ms]
  I0115 18:21:33.128269 30 service_latency.go:356] Created: latency-svc-r4b9d
  I0115 18:21:33.155936 30 service_latency.go:363] Got endpoints: latency-svc-tm59f [735.500916ms]
  I0115 18:21:33.173574 30 service_latency.go:356] Created: latency-svc-bthml
  I0115 18:21:33.242822 30 service_latency.go:363] Got endpoints: latency-svc-c962g [783.301776ms]
  I0115 18:21:33.256683 30 service_latency.go:363] Got endpoints: latency-svc-vs55x [748.405003ms]
  I0115 18:21:33.276922 30 service_latency.go:356] Created: latency-svc-66gg6
  I0115 18:21:33.295115 30 service_latency.go:356] Created: latency-svc-ll6q7
  I0115 18:21:33.311100 30 service_latency.go:363] Got endpoints: latency-svc-w6vfj [756.952137ms]
  I0115 18:21:33.330804 30 service_latency.go:356] Created: latency-svc-mfpld
  I0115 18:21:33.354101 30 service_latency.go:363] Got endpoints: latency-svc-6brzd [733.306893ms]
  I0115 18:21:33.372451 30 service_latency.go:356] Created: latency-svc-vnd6n
  I0115 18:21:33.409980 30 service_latency.go:363] Got endpoints: latency-svc-p9pk2 [745.785681ms]
  I0115 18:21:33.428722 30 service_latency.go:356] Created: latency-svc-rmj9g
  I0115 18:21:33.461138 30 service_latency.go:363] Got endpoints: latency-svc-s4cpq [748.107417ms]
  E0115 18:21:33.469262      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:33.482935 30 service_latency.go:356] Created: latency-svc-mt8dm
  I0115 18:21:33.500559 30 service_latency.go:363] Got endpoints: latency-svc-m5bdj [741.781795ms]
  I0115 18:21:33.520716 30 service_latency.go:356] Created: latency-svc-k2zml
  I0115 18:21:33.556567 30 service_latency.go:363] Got endpoints: latency-svc-sqd2t [754.582351ms]
  I0115 18:21:33.575105 30 service_latency.go:356] Created: latency-svc-d982f
  I0115 18:21:33.607494 30 service_latency.go:363] Got endpoints: latency-svc-rlzvv [732.547445ms]
  I0115 18:21:33.629265 30 service_latency.go:356] Created: latency-svc-85f96
  I0115 18:21:33.659486 30 service_latency.go:363] Got endpoints: latency-svc-kw9q5 [751.519068ms]
  I0115 18:21:33.680396 30 service_latency.go:356] Created: latency-svc-gdb6q
  I0115 18:21:33.701503 30 service_latency.go:363] Got endpoints: latency-svc-nxhll [747.575014ms]
  I0115 18:21:33.721690 30 service_latency.go:356] Created: latency-svc-gkc25
  I0115 18:21:33.760113 30 service_latency.go:363] Got endpoints: latency-svc-6clx6 [747.302257ms]
  I0115 18:21:33.782626 30 service_latency.go:356] Created: latency-svc-rzmd6
  I0115 18:21:33.800835 30 service_latency.go:363] Got endpoints: latency-svc-s5vm6 [743.634959ms]
  I0115 18:21:33.819268 30 service_latency.go:356] Created: latency-svc-7fhv2
  I0115 18:21:33.858321 30 service_latency.go:363] Got endpoints: latency-svc-r4b9d [753.100426ms]
  I0115 18:21:33.882351 30 service_latency.go:356] Created: latency-svc-nhqbz
  I0115 18:21:33.906674 30 service_latency.go:363] Got endpoints: latency-svc-bthml [749.746515ms]
  I0115 18:21:33.926120 30 service_latency.go:356] Created: latency-svc-j8fwh
  I0115 18:21:33.952891 30 service_latency.go:363] Got endpoints: latency-svc-66gg6 [709.965477ms]
  I0115 18:21:33.975524 30 service_latency.go:356] Created: latency-svc-k7r95
  I0115 18:21:34.016041 30 service_latency.go:363] Got endpoints: latency-svc-ll6q7 [759.259772ms]
  I0115 18:21:34.055266 30 service_latency.go:356] Created: latency-svc-sw9z8
  I0115 18:21:34.058907 30 service_latency.go:363] Got endpoints: latency-svc-mfpld [747.691356ms]
  I0115 18:21:34.087305 30 service_latency.go:356] Created: latency-svc-2pcwt
  I0115 18:21:34.109124 30 service_latency.go:363] Got endpoints: latency-svc-vnd6n [754.870688ms]
  I0115 18:21:34.131324 30 service_latency.go:356] Created: latency-svc-hqq5x
  I0115 18:21:34.152641 30 service_latency.go:363] Got endpoints: latency-svc-rmj9g [742.546744ms]
  I0115 18:21:34.176426 30 service_latency.go:356] Created: latency-svc-qjxmn
  I0115 18:21:34.208407 30 service_latency.go:363] Got endpoints: latency-svc-mt8dm [747.186064ms]
  I0115 18:21:34.229133 30 service_latency.go:356] Created: latency-svc-grms8
  I0115 18:21:34.255435 30 service_latency.go:363] Got endpoints: latency-svc-k2zml [754.815757ms]
  I0115 18:21:34.273627 30 service_latency.go:356] Created: latency-svc-pmg2n
  I0115 18:21:34.305218 30 service_latency.go:363] Got endpoints: latency-svc-d982f [748.575317ms]
  I0115 18:21:34.325817 30 service_latency.go:356] Created: latency-svc-72gm5
  I0115 18:21:34.355868 30 service_latency.go:363] Got endpoints: latency-svc-85f96 [748.25897ms]
  I0115 18:21:34.384266 30 service_latency.go:356] Created: latency-svc-qmtc8
  I0115 18:21:34.420241 30 service_latency.go:363] Got endpoints: latency-svc-gdb6q [760.641045ms]
  I0115 18:21:34.444300 30 service_latency.go:356] Created: latency-svc-57r6m
  I0115 18:21:34.458917 30 service_latency.go:363] Got endpoints: latency-svc-gkc25 [757.327616ms]
  E0115 18:21:34.470126      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:34.481571 30 service_latency.go:356] Created: latency-svc-qssgz
  I0115 18:21:34.502918 30 service_latency.go:363] Got endpoints: latency-svc-rzmd6 [742.713078ms]
  I0115 18:21:34.521492 30 service_latency.go:356] Created: latency-svc-nk42z
  I0115 18:21:34.555165 30 service_latency.go:363] Got endpoints: latency-svc-7fhv2 [754.250063ms]
  I0115 18:21:34.568693 30 service_latency.go:356] Created: latency-svc-28rr2
  I0115 18:21:34.611298 30 service_latency.go:363] Got endpoints: latency-svc-nhqbz [752.89147ms]
  I0115 18:21:34.633384 30 service_latency.go:356] Created: latency-svc-tcfx8
  I0115 18:21:34.660296 30 service_latency.go:363] Got endpoints: latency-svc-j8fwh [753.538156ms]
  I0115 18:21:34.677140 30 service_latency.go:356] Created: latency-svc-fw7xl
  I0115 18:21:34.704376 30 service_latency.go:363] Got endpoints: latency-svc-k7r95 [751.407236ms]
  I0115 18:21:34.733601 30 service_latency.go:356] Created: latency-svc-l7thx
  I0115 18:21:34.756293 30 service_latency.go:363] Got endpoints: latency-svc-sw9z8 [740.159077ms]
  I0115 18:21:34.775896 30 service_latency.go:356] Created: latency-svc-qh92r
  I0115 18:21:34.805714 30 service_latency.go:363] Got endpoints: latency-svc-2pcwt [746.715503ms]
  I0115 18:21:34.829258 30 service_latency.go:356] Created: latency-svc-g5nk4
  I0115 18:21:34.860124 30 service_latency.go:363] Got endpoints: latency-svc-hqq5x [750.696788ms]
  I0115 18:21:34.878206 30 service_latency.go:356] Created: latency-svc-b72zr
  I0115 18:21:34.908095 30 service_latency.go:363] Got endpoints: latency-svc-qjxmn [755.377129ms]
  I0115 18:21:34.957608 30 service_latency.go:363] Got endpoints: latency-svc-grms8 [748.861844ms]
  I0115 18:21:34.959087 30 service_latency.go:356] Created: latency-svc-w7mtn
  I0115 18:21:35.005967 30 service_latency.go:363] Got endpoints: latency-svc-pmg2n [750.437322ms]
  I0115 18:21:35.057576 30 service_latency.go:363] Got endpoints: latency-svc-72gm5 [752.281366ms]
  I0115 18:21:35.102655 30 service_latency.go:363] Got endpoints: latency-svc-qmtc8 [746.715364ms]
  I0115 18:21:35.167727 30 service_latency.go:363] Got endpoints: latency-svc-57r6m [747.40206ms]
  I0115 18:21:35.209821 30 service_latency.go:363] Got endpoints: latency-svc-qssgz [750.825631ms]
  I0115 18:21:35.252961 30 service_latency.go:363] Got endpoints: latency-svc-nk42z [749.959971ms]
  I0115 18:21:35.306038 30 service_latency.go:363] Got endpoints: latency-svc-28rr2 [750.78167ms]
  I0115 18:21:35.360599 30 service_latency.go:363] Got endpoints: latency-svc-tcfx8 [749.223713ms]
  I0115 18:21:35.411646 30 service_latency.go:363] Got endpoints: latency-svc-fw7xl [750.976505ms]
  I0115 18:21:35.458528 30 service_latency.go:363] Got endpoints: latency-svc-l7thx [754.082319ms]
  E0115 18:21:35.472106      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:35.504534 30 service_latency.go:363] Got endpoints: latency-svc-qh92r [748.160048ms]
  I0115 18:21:35.557330 30 service_latency.go:363] Got endpoints: latency-svc-g5nk4 [751.479027ms]
  I0115 18:21:35.607097 30 service_latency.go:363] Got endpoints: latency-svc-b72zr [746.839846ms]
  I0115 18:21:35.664105 30 service_latency.go:363] Got endpoints: latency-svc-w7mtn [755.928773ms]
  I0115 18:21:35.664363 30 service_latency.go:114] Latencies: [39.450121ms 62.535372ms 85.166401ms 124.177763ms 136.384543ms 147.5364ms 169.37203ms 181.432788ms 201.525587ms 201.874316ms 223.218475ms 237.931316ms 239.37622ms 242.003523ms 242.636628ms 246.122722ms 247.75484ms 248.021416ms 253.330623ms 254.794238ms 262.776429ms 267.325377ms 267.831309ms 267.905551ms 274.354285ms 276.807313ms 284.277112ms 285.90822ms 288.099882ms 292.768934ms 293.086531ms 304.079034ms 316.622483ms 316.725796ms 321.752456ms 332.313787ms 342.441489ms 344.99441ms 348.79798ms 350.818708ms 355.787407ms 362.632491ms 364.689079ms 366.263217ms 369.124685ms 373.635173ms 378.921589ms 381.610774ms 383.844587ms 386.685484ms 425.962712ms 436.795729ms 439.554306ms 453.516289ms 488.959944ms 512.035255ms 536.071118ms 562.53079ms 613.229018ms 615.648377ms 630.217824ms 636.499514ms 659.930282ms 660.078326ms 661.126032ms 663.081088ms 695.193504ms 696.934026ms 705.736845ms 709.965477ms 722.544337ms 732.485303ms 732.547445ms 732.773231ms 733.306893ms 734.268456ms 735.500916ms 740.025164ms 740.159077ms 740.778572ms 741.628781ms 741.781795ms 741.99199ms 742.41807ms 742.508203ms 742.546744ms 742.713078ms 742.7869ms 743.110647ms 743.125407ms 743.634959ms 744.270355ms 744.328216ms 744.505441ms 744.92163ms 745.638978ms 745.785681ms 746.715364ms 746.715503ms 746.839846ms 746.886507ms 747.186064ms 747.188104ms 747.302257ms 747.370329ms 747.381859ms 747.385409ms 747.392999ms 747.40206ms 747.508142ms 747.575014ms 747.691356ms 748.097325ms 748.107417ms 748.134797ms 748.160048ms 748.173387ms 748.25897ms 748.28684ms 748.405003ms 748.575317ms 748.722061ms 748.750102ms 748.861844ms 749.037219ms 749.043779ms 749.223713ms 749.314295ms 749.730205ms 749.746515ms 749.858338ms 749.959971ms 750.121805ms 750.175756ms 750.263078ms 750.310469ms 750.437322ms 750.548815ms 750.572345ms 750.696788ms 750.74842ms 750.78167ms 750.825631ms 750.976505ms 751.288763ms 751.326733ms 751.334503ms 751.407236ms 751.479027ms 751.489937ms 751.519068ms 751.527348ms 752.225065ms 752.281366ms 752.328787ms 752.46316ms 752.89147ms 753.100426ms 753.111375ms 753.311911ms 753.356072ms 753.538156ms 753.787651ms 754.082319ms 754.250063ms 754.457928ms 754.483448ms 754.510829ms 754.582351ms 754.815757ms 754.870688ms 754.97845ms 755.189515ms 755.377129ms 755.928773ms 756.383834ms 756.952137ms 757.327616ms 757.380587ms 757.711785ms 757.810128ms 758.221617ms 758.266748ms 758.518494ms 759.059597ms 759.089188ms 759.259772ms 759.336104ms 759.539349ms 759.654782ms 760.641045ms 760.686266ms 760.744258ms 762.753166ms 764.927248ms 783.301776ms 786.8514ms 806.94849ms 809.128912ms 822.093921ms]
  I0115 18:21:35.664401 30 service_latency.go:118] 50 %ile: 746.886507ms
  I0115 18:21:35.664415 30 service_latency.go:119] 90 %ile: 757.810128ms
  I0115 18:21:35.664427 30 service_latency.go:120] 99 %ile: 809.128912ms
  I0115 18:21:35.664439 30 service_latency.go:121] Total sample count: 200
  I0115 18:21:35.664714 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7903" for this suite. @ 01/15/25 18:21:35.672
• [9.825 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/15/25 18:21:35.684
  I0115 18:21:35.684140 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 18:21:35.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:35.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:35.725
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/15/25 18:21:35.796
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/15/25 18:21:35.817
  I0115 18:21:35.883033 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:35.883654 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:35.884238 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:35.907674 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:21:35.907744 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:21:36.473301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:36.825513 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:36.825608 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:36.825675 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:36.831031 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0115 18:21:36.831255 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:21:37.473614      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:37.827452 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:37.827536 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:37.827569 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:37.833984 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 18:21:37.834025 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/15/25 18:21:37.838
  I0115 18:21:37.927665 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:37.927749 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:37.927783 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:37.940795 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0115 18:21:37.940848 30 fixtures.go:131] Node node6 is running 0 daemon pod, expected 1
  E0115 18:21:38.473996      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:38.863577 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:38.863658 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:38.863693 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:21:38.868887 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 18:21:38.868929 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/15/25 18:21:38.868
  STEP: Deleting DaemonSet "daemon-set" @ 01/15/25 18:21:38.876
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9015, will wait for the garbage collector to delete the pods @ 01/15/25 18:21:38.876
  I0115 18:21:38.941886 30 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.010667ms
  I0115 18:21:39.042327 30 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.437612ms
  E0115 18:21:39.474595      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:40.475227      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:40.861442 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:21:40.861506 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0115 18:21:40.884243 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"234805"},"items":null}

  I0115 18:21:40.958585 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"234827"},"items":null}

  I0115 18:21:41.092269 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9015" for this suite. @ 01/15/25 18:21:41.099
• [5.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/15/25 18:21:41.115
  I0115 18:21:41.115932 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename runtimeclass @ 01/15/25 18:21:41.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:41.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:41.161
  STEP: Deleting RuntimeClass runtimeclass-7170-delete-me @ 01/15/25 18:21:41.178
  STEP: Waiting for the RuntimeClass to disappear @ 01/15/25 18:21:41.192
  I0115 18:21:41.205918 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7170" for this suite. @ 01/15/25 18:21:41.211
• [0.106 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/15/25 18:21:41.222
  I0115 18:21:41.223038 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename endpointslice @ 01/15/25 18:21:41.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:41.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:41.265
  E0115 18:21:41.475324      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:42.475630      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/15/25 18:21:43.457
  I0115 18:21:43.462706 30 endpointslice.go:938] EndpointSlice for Service endpointslice-2099/example-int-port not found
  E0115 18:21:43.477516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:44.478071      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:45.478411      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:45.480448 30 endpointslice.go:938] EndpointSlice for Service endpointslice-2099/example-int-port not found
  E0115 18:21:46.478844      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:47.465078 30 endpointslice.go:938] EndpointSlice for Service endpointslice-2099/example-int-port not found
  E0115 18:21:47.479292      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:48.479398      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:49.469183 30 endpointslice.go:980] Endpoints for endpointslice-2099/example-int-port Service not found
  I0115 18:21:49.469245 30 endpointslice.go:769] Matching Endpoints not found
  E0115 18:21:49.480364      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:50.481105      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:51.469528 30 endpointslice.go:980] Endpoints for endpointslice-2099/example-int-port Service not found
  I0115 18:21:51.469832 30 endpointslice.go:769] Matching Endpoints not found
  E0115 18:21:51.481826      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:52.482600      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 01/15/25 18:21:53.469
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/15/25 18:21:53.478
  E0115 18:21:53.482652      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 01/15/25 18:21:53.486
  I0115 18:21:53.514866 30 endpointslice.go:938] EndpointSlice for Service endpointslice-2099/example-named-port not found
  E0115 18:21:54.482983      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:55.483355      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:21:55.522082 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2099" for this suite. @ 01/15/25 18:21:55.528
• [14.317 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/15/25 18:21:55.539
  I0115 18:21:55.539926 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:21:55.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:55.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:55.568
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:21:55.572
  E0115 18:21:56.483612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:57.483956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:58.484764      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:21:59.485196      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:21:59.6
  I0115 18:21:59.605046 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-b2c7ef41-55b3-4e39-a56a-9c63e939db5a container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:21:59.613
  I0115 18:21:59.646885 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5465" for this suite. @ 01/15/25 18:21:59.652
• [4.121 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/15/25 18:21:59.66
  I0115 18:21:59.661018 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 18:21:59.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:21:59.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:21:59.687
  STEP: create the rc1 @ 01/15/25 18:21:59.753
  STEP: create the rc2 @ 01/15/25 18:21:59.76
  E0115 18:22:00.485814      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:01.486119      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:02.487421      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:03.487408      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:04.488411      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:05.488201      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/15/25 18:22:05.775
  E0115 18:22:06.488826      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/15/25 18:22:06.547
  STEP: wait for the rc to be deleted @ 01/15/25 18:22:06.564
  E0115 18:22:07.489613      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:08.489801      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:09.490232      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:10.490616      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:11.490910      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:11.587148 30 garbage_collector.go:762] 68 pods remaining
  I0115 18:22:11.587224 30 garbage_collector.go:769] 68 pods has nil DeletionTimestamp
  I0115 18:22:11.587237 30 garbage_collector.go:770] 
  E0115 18:22:12.492879      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:13.492113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:14.493107      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:15.493576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:16.493972      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/15/25 18:22:16.578
  I0115 18:22:16.701355 30 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0115 18:22:16.701532 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-226gl" in namespace "gc-3090"
  I0115 18:22:16.730615 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-24kqh" in namespace "gc-3090"
  I0115 18:22:16.752997 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2787b" in namespace "gc-3090"
  I0115 18:22:16.798393 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2mtf6" in namespace "gc-3090"
  I0115 18:22:16.826694 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2n6s7" in namespace "gc-3090"
  I0115 18:22:16.860154 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-42zrb" in namespace "gc-3090"
  I0115 18:22:16.923176 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-44q4s" in namespace "gc-3090"
  I0115 18:22:16.954600 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-472k7" in namespace "gc-3090"
  I0115 18:22:16.992256 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57xd9" in namespace "gc-3090"
  I0115 18:22:17.029836 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5924n" in namespace "gc-3090"
  I0115 18:22:17.061783 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jwjf" in namespace "gc-3090"
  I0115 18:22:17.136533 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5q5qn" in namespace "gc-3090"
  I0115 18:22:17.158977 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5q8nr" in namespace "gc-3090"
  I0115 18:22:17.179861 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rgvg" in namespace "gc-3090"
  I0115 18:22:17.208555 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5s5gr" in namespace "gc-3090"
  I0115 18:22:17.247876 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66hfr" in namespace "gc-3090"
  I0115 18:22:17.268182 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6bck9" in namespace "gc-3090"
  I0115 18:22:17.364770 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lmh7" in namespace "gc-3090"
  I0115 18:22:17.397687 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7pvnq" in namespace "gc-3090"
  I0115 18:22:17.425567 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7t825" in namespace "gc-3090"
  I0115 18:22:17.451584 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86dff" in namespace "gc-3090"
  E0115 18:22:17.494064      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:17.494095 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-99s2d" in namespace "gc-3090"
  I0115 18:22:17.527356 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9d96f" in namespace "gc-3090"
  I0115 18:22:17.554647 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9lsmf" in namespace "gc-3090"
  I0115 18:22:17.586102 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mbp5" in namespace "gc-3090"
  I0115 18:22:17.618049 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9r45b" in namespace "gc-3090"
  I0115 18:22:17.644637 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9x9t6" in namespace "gc-3090"
  I0115 18:22:17.679165 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9cdd" in namespace "gc-3090"
  I0115 18:22:17.709846 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhsmc" in namespace "gc-3090"
  I0115 18:22:17.739784 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmnsg" in namespace "gc-3090"
  I0115 18:22:17.781183 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btnpq" in namespace "gc-3090"
  I0115 18:22:17.807742 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9cvc" in namespace "gc-3090"
  I0115 18:22:17.834981 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqtsh" in namespace "gc-3090"
  I0115 18:22:17.868397 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctz5h" in namespace "gc-3090"
  I0115 18:22:17.912428 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d25g7" in namespace "gc-3090"
  I0115 18:22:17.945140 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddm5k" in namespace "gc-3090"
  I0115 18:22:17.977725 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dr9dc" in namespace "gc-3090"
  I0115 18:22:18.008970 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxjs2" in namespace "gc-3090"
  I0115 18:22:18.053513 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxr7w" in namespace "gc-3090"
  I0115 18:22:18.077948 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f9cng" in namespace "gc-3090"
  I0115 18:22:18.117435 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fbbcf" in namespace "gc-3090"
  I0115 18:22:18.150302 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fbrgl" in namespace "gc-3090"
  I0115 18:22:18.172642 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fjt7z" in namespace "gc-3090"
  I0115 18:22:18.228721 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g96fr" in namespace "gc-3090"
  I0115 18:22:18.252656 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gl2fz" in namespace "gc-3090"
  I0115 18:22:18.277230 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gsvnr" in namespace "gc-3090"
  I0115 18:22:18.304532 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gtdtr" in namespace "gc-3090"
  I0115 18:22:18.344109 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h55d5" in namespace "gc-3090"
  I0115 18:22:18.376759 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h72rj" in namespace "gc-3090"
  I0115 18:22:18.407951 30 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgf2l" in namespace "gc-3090"
  I0115 18:22:18.444603 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3090" for this suite. @ 01/15/25 18:22:18.457
• [18.810 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/15/25 18:22:18.472
  I0115 18:22:18.472542 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:22:18.474
  E0115 18:22:18.494198      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:22:18.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:22:18.516
  STEP: Creating the pod @ 01/15/25 18:22:18.52
  E0115 18:22:19.494979      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:20.495413      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:21.091876 30 pod_client.go:173] Successfully updated pod "annotationupdateca7721e3-6815-4696-bb51-52a7ae6c0043"
  E0115 18:22:21.496335      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:22.497112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:23.497205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:24.497617      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:25.121986 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7525" for this suite. @ 01/15/25 18:22:25.128
• [6.665 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/15/25 18:22:25.137
  I0115 18:22:25.137184 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:22:25.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:22:25.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:22:25.165
  STEP: creating service endpoint-test2 in namespace services-5397 @ 01/15/25 18:22:25.169
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5397 to expose endpoints map[] @ 01/15/25 18:22:25.186
  I0115 18:22:25.195046 30 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0115 18:22:25.498524      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:26.207832 30 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5397 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5397 @ 01/15/25 18:22:26.207
  E0115 18:22:26.498656      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:27.499884      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5397 to expose endpoints map[pod1:[80]] @ 01/15/25 18:22:28.254
  I0115 18:22:28.271171 30 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5397 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/15/25 18:22:28.271
  I0115 18:22:28.271259 30 resource.go:361] Creating new exec pod
  E0115 18:22:28.499910      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:29.500470      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:30.500871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:31.293208 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0115 18:22:31.501799      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:32.502439      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:33.477365 30 builder.go:135] rc: 1
  I0115 18:22:33.477488 30 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.233.38.56) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0115 18:22:33.477627 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0115 18:22:33.503195      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:34.504136      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:35.504466      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:35.624485 30 builder.go:135] rc: 1
  I0115 18:22:35.624566 30 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.233.38.56) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0115 18:22:35.624693 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0115 18:22:36.505055      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:37.505881      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:37.772444 30 builder.go:135] rc: 1
  I0115 18:22:37.772532 30 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.233.38.56) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0115 18:22:37.772659 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0115 18:22:38.506048      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:39.506425      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:39.908848 30 builder.go:135] rc: 1
  I0115 18:22:39.908941 30 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.233.38.56) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0115 18:22:39.909059 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0115 18:22:40.053954 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.38.56) 80 port [tcp/http] succeeded!\n"
  I0115 18:22:40.054024 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:22:40.054133 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.38.56 80'
  I0115 18:22:40.195010 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.38.56 80\nConnection to 10.233.38.56 80 port [tcp/http] succeeded!\n"
  I0115 18:22:40.195096 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5397 @ 01/15/25 18:22:40.195
  E0115 18:22:40.506530      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:41.507411      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5397 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/15/25 18:22:42.222
  I0115 18:22:42.240010 30 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5397 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/15/25 18:22:42.24
  E0115 18:22:42.507574      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:43.240537 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0115 18:22:43.396099 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.38.56) 80 port [tcp/http] succeeded!\n"
  I0115 18:22:43.396309 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:22:43.396443 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.38.56 80'
  E0115 18:22:43.508017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:43.536860 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.38.56 80\nConnection to 10.233.38.56 80 port [tcp/http] succeeded!\n"
  I0115 18:22:43.536925 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5397 @ 01/15/25 18:22:43.536
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5397 to expose endpoints map[pod2:[80]] @ 01/15/25 18:22:43.564
  I0115 18:22:43.595537 30 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5397 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/15/25 18:22:43.595
  E0115 18:22:44.508419      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:44.596891 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0115 18:22:44.737754 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.38.56) 80 port [tcp/http] succeeded!\n"
  I0115 18:22:44.737818 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:22:44.737921 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5397 exec execpodx9cjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.38.56 80'
  I0115 18:22:44.878342 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.38.56 80\nConnection to 10.233.38.56 80 port [tcp/http] succeeded!\n"
  I0115 18:22:44.878408 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5397 @ 01/15/25 18:22:44.878
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5397 to expose endpoints map[] @ 01/15/25 18:22:44.93
  I0115 18:22:44.946642 30 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5397 exposes endpoints map[]
  I0115 18:22:44.975951 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5397" for this suite. @ 01/15/25 18:22:44.982
• [19.884 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/15/25 18:22:45.021
  I0115 18:22:45.021840 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:22:45.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:22:45.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:22:45.061
  STEP: creating service nodeport-test with type=NodePort in namespace services-5818 @ 01/15/25 18:22:45.065
  STEP: creating replication controller nodeport-test in namespace services-5818 @ 01/15/25 18:22:45.089
  I0115 18:22:45.098254      30 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5818, replica count: 2
  E0115 18:22:45.508831      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:46.510650      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:47.510395      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:48.150348      30 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 18:22:48.150490 30 resource.go:361] Creating new exec pod
  E0115 18:22:48.510597      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:49.510987      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:50.511240      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:51.185374 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5818 exec execpodl5f2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0115 18:22:51.342413 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.57.168) 80 port [tcp/http] succeeded!\n"
  I0115 18:22:51.342494 30 builder.go:147] stdout: "nodeport-test-klfjw"
  I0115 18:22:51.342767 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5818 exec execpodl5f2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.57.168 80'
  I0115 18:22:51.496218 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.57.168 80\nConnection to 10.233.57.168 80 port [tcp/http] succeeded!\n"
  I0115 18:22:51.496283 30 builder.go:147] stdout: "nodeport-test-wgxh5"
  I0115 18:22:51.496571 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5818 exec execpodl5f2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.222 30703'
  E0115 18:22:51.512079      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:51.646263 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.222 30703\nConnection to 192.168.111.222 30703 port [tcp/*] succeeded!\n"
  I0115 18:22:51.646382 30 builder.go:147] stdout: "nodeport-test-klfjw"
  I0115 18:22:51.646521 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-5818 exec execpodl5f2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.55 30703'
  I0115 18:22:51.807094 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.55 30703\nConnection to 192.168.111.55 30703 port [tcp/*] succeeded!\n"
  I0115 18:22:51.807168 30 builder.go:147] stdout: "nodeport-test-klfjw"
  I0115 18:22:51.807634 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5818" for this suite. @ 01/15/25 18:22:51.814
• [6.803 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 01/15/25 18:22:51.825
  I0115 18:22:51.825286 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 18:22:51.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:22:51.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:22:51.855
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/15/25 18:22:51.859
  I0115 18:22:51.874088 30 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9772  6f731adc-2514-42f1-a7a6-b3068f2b252a 238166 0 2025-01-15 18:22:51 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-15 18:22:51 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h52h9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h52h9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0115 18:22:52.512727      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:53.513425      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/15/25 18:22:53.885
  I0115 18:22:53.885678 30 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9772 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:22:53.885719 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:22:53.885842 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9772/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/15/25 18:22:53.976
  I0115 18:22:53.976780 30 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9772 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0115 18:22:53.976839 30 exec_util.go:64] ExecWithOptions: Clientset creation
  I0115 18:22:53.976935 30 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9772/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0115 18:22:54.059737 30 dns.go:450] Deleting pod test-dns-nameservers...
  I0115 18:22:54.081022 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9772" for this suite. @ 01/15/25 18:22:54.088
• [2.274 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/15/25 18:22:54.099
  I0115 18:22:54.099689 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:22:54.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:22:54.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:22:54.148
  STEP: Creating configMap with name cm-test-opt-del-da35a1de-7d18-46a2-a075-eb2b68c180ba @ 01/15/25 18:22:54.189
  STEP: Creating configMap with name cm-test-opt-upd-63af99b4-9b69-4bfe-a906-1f9d568090ab @ 01/15/25 18:22:54.198
  STEP: Creating the pod @ 01/15/25 18:22:54.208
  E0115 18:22:54.513327      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:55.513750      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-da35a1de-7d18-46a2-a075-eb2b68c180ba @ 01/15/25 18:22:56.28
  STEP: Updating configmap cm-test-opt-upd-63af99b4-9b69-4bfe-a906-1f9d568090ab @ 01/15/25 18:22:56.289
  STEP: Creating configMap with name cm-test-opt-create-7cff6bc5-863d-4f46-85f8-c27ea56b36e9 @ 01/15/25 18:22:56.298
  STEP: waiting to observe update in volume @ 01/15/25 18:22:56.305
  E0115 18:22:56.514754      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:57.515466      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:22:58.338467 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5387" for this suite. @ 01/15/25 18:22:58.344
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/15/25 18:22:58.355
  I0115 18:22:58.355165 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:22:58.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:22:58.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:22:58.388
  I0115 18:22:58.392243 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: creating the pod @ 01/15/25 18:22:58.393
  STEP: submitting the pod to kubernetes @ 01/15/25 18:22:58.393
  E0115 18:22:58.516097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:22:59.516642      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:23:00.436389 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1205" for this suite. @ 01/15/25 18:23:00.441
• [2.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/15/25 18:23:00.453
  I0115 18:23:00.453633 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:23:00.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:00.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:00.481
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:23:00.485
  E0115 18:23:00.516536      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:01.516829      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:02.517170      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:03.517595      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:04.517667      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:23:04.517
  I0115 18:23:04.522617 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-c238633e-2a98-4801-9a04-e99929ec4406 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:23:04.531
  I0115 18:23:04.556365 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5514" for this suite. @ 01/15/25 18:23:04.561
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/15/25 18:23:04.571
  I0115 18:23:04.571067 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:23:04.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:04.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:04.601
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/15/25 18:23:04.605
  I0115 18:23:04.605225 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9682 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0115 18:23:04.711649 30 builder.go:146] stderr: ""
  I0115 18:23:04.711713 30 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/15/25 18:23:04.711
  I0115 18:23:04.711889 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9682 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0115 18:23:04.808844 30 builder.go:146] stderr: ""
  I0115 18:23:04.808943 30 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/15/25 18:23:04.808
  I0115 18:23:04.814938 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-9682 delete pods e2e-test-httpd-pod'
  E0115 18:23:05.518773      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:06.518886      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:23:06.694859 30 builder.go:146] stderr: ""
  I0115 18:23:06.694946 30 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0115 18:23:06.695156 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9682" for this suite. @ 01/15/25 18:23:06.701
• [2.140 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/15/25 18:23:06.711
  I0115 18:23:06.711655 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:23:06.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:06.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:06.741
  STEP: Setting up server cert @ 01/15/25 18:23:06.839
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:23:07.504
  STEP: Deploying the webhook pod @ 01/15/25 18:23:07.517
  E0115 18:23:07.519015      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 01/15/25 18:23:07.539
  I0115 18:23:07.547012 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:23:08.519124      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:09.519619      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:23:09.56
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:23:09.581
  E0115 18:23:10.520174      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:23:10.582258 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/15/25 18:23:10.592
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/15/25 18:23:10.593
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/15/25 18:23:10.593
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/15/25 18:23:10.594
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/15/25 18:23:10.596
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/15/25 18:23:10.596
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/15/25 18:23:10.597
  I0115 18:23:10.661578 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2034" for this suite. @ 01/15/25 18:23:10.669
  STEP: Destroying namespace "webhook-markers-4936" for this suite. @ 01/15/25 18:23:10.687
• [3.984 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 01/15/25 18:23:10.697
  I0115 18:23:10.697527 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 18:23:10.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:10.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:10.731
  STEP: Creating a test headless service @ 01/15/25 18:23:10.735
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5251.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5251.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5251.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5251.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 13.17.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.17.13_udp@PTR;check="$$(dig +tcp +noall +answer +search 13.17.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.17.13_tcp@PTR;sleep 1; done
   @ 01/15/25 18:23:10.768
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5251.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5251.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5251.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5251.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5251.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 13.17.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.17.13_udp@PTR;check="$$(dig +tcp +noall +answer +search 13.17.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.17.13_tcp@PTR;sleep 1; done
   @ 01/15/25 18:23:10.768
  STEP: creating a pod to probe DNS @ 01/15/25 18:23:10.768
  STEP: submitting the pod to kubernetes @ 01/15/25 18:23:10.768
  E0115 18:23:11.520882      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:12.521358      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/15/25 18:23:12.803
  STEP: looking for the results for each expected name from probers @ 01/15/25 18:23:12.808
  I0115 18:23:12.815880 30 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.820518 30 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.825562 30 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.832202 30 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.854328 30 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.858995 30 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.863816 30 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.868441 30 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local from pod dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9: the server could not find the requested resource (get pods dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9)
  I0115 18:23:12.885882 30 dns_common.go:506] Lookups using dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9 failed for: [agnhost_udp@dns-test-service.dns-5251.svc.cluster.local agnhost_tcp@dns-test-service.dns-5251.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local jessie_udp@dns-test-service.dns-5251.svc.cluster.local jessie_tcp@dns-test-service.dns-5251.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5251.svc.cluster.local]

  I0115 18:23:12.894055 30 dns_common.go:514] Pod client logs for webserver: 
  I0115 18:23:12.902456 30 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0115 18:23:12.920758 30 dns_common.go:514] Pod client logs for jessie-querier: 
  E0115 18:23:13.521485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:14.521816      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:15.522369      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:16.522929      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:17.523598      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:23:17.887281 30 dns_common.go:546] DNS probes using dns-5251/dns-test-c9153048-fa59-4803-8616-e81aa7ab02f9 succeeded

  STEP: deleting the pod @ 01/15/25 18:23:17.887
  STEP: deleting the test service @ 01/15/25 18:23:17.925
  STEP: deleting the test headless service @ 01/15/25 18:23:17.975
  I0115 18:23:17.990817 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5251" for this suite. @ 01/15/25 18:23:17.999
• [7.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/15/25 18:23:18.013
  I0115 18:23:18.013714 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:23:18.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:18.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:18.048
  STEP: creating a ConfigMap @ 01/15/25 18:23:18.052
  STEP: fetching the ConfigMap @ 01/15/25 18:23:18.066
  STEP: patching the ConfigMap @ 01/15/25 18:23:18.071
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/15/25 18:23:18.089
  STEP: deleting the ConfigMap by collection with a label selector @ 01/15/25 18:23:18.093
  STEP: listing all ConfigMaps in test namespace @ 01/15/25 18:23:18.104
  I0115 18:23:18.108844 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9462" for this suite. @ 01/15/25 18:23:18.114
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/15/25 18:23:18.128
  I0115 18:23:18.128987 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename csi-storageclass @ 01/15/25 18:23:18.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:18.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:18.165
  STEP: Creating a StorageClass @ 01/15/25 18:23:18.171
  STEP: Get StorageClass "e2e-kxldz" @ 01/15/25 18:23:18.214
  STEP: Patching the StorageClass "e2e-kxldz" @ 01/15/25 18:23:18.22
  STEP: Delete StorageClass "e2e-kxldz" @ 01/15/25 18:23:18.239
  STEP: Confirm deletion of StorageClass "e2e-kxldz" @ 01/15/25 18:23:18.251
  STEP: Create a replacement StorageClass @ 01/15/25 18:23:18.254
  STEP: Updating StorageClass "e2e-v2-zn8v8" @ 01/15/25 18:23:18.261
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-zn8v8=updated" @ 01/15/25 18:23:18.272
  STEP: Deleting StorageClass "e2e-v2-zn8v8" via DeleteCollection @ 01/15/25 18:23:18.276
  STEP: Confirm deletion of StorageClass "e2e-v2-zn8v8" @ 01/15/25 18:23:18.288
  I0115 18:23:18.293443 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4191" for this suite. @ 01/15/25 18:23:18.299
• [0.179 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/15/25 18:23:18.308
  I0115 18:23:18.308436 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:23:18.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:18.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:18.423
  STEP: Setting up server cert @ 01/15/25 18:23:18.521
  E0115 18:23:18.524030      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:23:19.055
  STEP: Deploying the webhook pod @ 01/15/25 18:23:19.062
  STEP: Wait for the deployment to be ready @ 01/15/25 18:23:19.088
  I0115 18:23:19.102477 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:23:19.525285      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:20.525632      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:23:21.12
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:23:21.137
  E0115 18:23:21.526704      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:23:22.138124 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/15/25 18:23:22.149
  I0115 18:23:22.212725 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3231" for this suite. @ 01/15/25 18:23:22.22
  STEP: Destroying namespace "webhook-markers-3985" for this suite. @ 01/15/25 18:23:22.237
• [3.943 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 01/15/25 18:23:22.252
  I0115 18:23:22.252866 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption @ 01/15/25 18:23:22.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:23:22.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:23:22.29
  I0115 18:23:22.315376 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:23:22.527247      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:23.527631      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:24.528413      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:25.528784      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:26.529758      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:27.530581      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:28.531273      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:29.531620      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:30.532506      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:31.533108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:32.533811      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:33.534266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:34.534682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:35.535126      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:36.535839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:37.535994      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:38.537020      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:39.537293      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:40.537569      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:41.538315      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:42.539111      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:43.539461      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:44.539771      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:45.540145      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:46.540314      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:47.541438      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:48.541890      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:49.542322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:50.543192      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:51.543493      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:52.543821      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:53.544471      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:54.544936      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:55.545292      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:56.546085      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:57.546384      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:58.546917      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:23:59.547080      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:00.547509      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:01.547848      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:02.548516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:03.548854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:04.549481      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:05.549816      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:06.550501      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:07.550863      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:08.551907      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:09.552296      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:10.552534      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:11.553296      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:12.554046      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:13.554616      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:14.555105      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:15.555563      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:16.556567      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:17.557006      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:18.557767      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:19.558247      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:20.558612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:21.558933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:24:22.322786 30 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/15/25 18:24:22.328
  STEP: Adding a custom resource @ 01/15/25 18:24:22.328
  I0115 18:24:22.362843 30 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0115 18:24:22.377857 30 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/15/25 18:24:22.377
  I0115 18:24:22.412470 30 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0115 18:24:22.437767 30 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/15/25 18:24:22.437
  I0115 18:24:22.466622 30 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0115 18:24:22.489973 30 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/15/25 18:24:22.49
  E0115 18:24:22.560016      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:23.560513      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/15/25 18:24:24.55
  E0115 18:24:24.560655      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:25.560906      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:26.561723      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:27.561819      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:28.562203      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/15/25 18:24:28.636
  STEP: Removing a custom resource @ 01/15/25 18:24:28.655
  STEP: Removing a custom resource @ 01/15/25 18:24:28.682
  I0115 18:24:28.702869 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-591" for this suite. @ 01/15/25 18:24:28.708
• [66.467 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/15/25 18:24:28.719
  I0115 18:24:28.719472 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 18:24:28.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:24:28.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:24:28.759
  I0115 18:24:28.763034 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  W0115 18:24:28.764417      30 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0x4001182820 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0115 18:24:29.562613      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:30.562558      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:31.563377      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:32.563485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:33.563654      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:34.564611      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:35.565298      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0115 18:24:36.331538      30 warnings.go:70] unknown field "alpha"
  W0115 18:24:36.331582      30 warnings.go:70] unknown field "beta"
  W0115 18:24:36.331590      30 warnings.go:70] unknown field "delta"
  W0115 18:24:36.331597      30 warnings.go:70] unknown field "epsilon"
  W0115 18:24:36.331605      30 warnings.go:70] unknown field "gamma"
  E0115 18:24:36.565797      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:24:36.885400 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6126" for this suite. @ 01/15/25 18:24:36.891
• [8.181 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/15/25 18:24:36.9
  I0115 18:24:36.900773 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:24:36.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:24:36.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:24:36.934
  STEP: Setting up server cert @ 01/15/25 18:24:37.03
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:24:37.413
  STEP: Deploying the webhook pod @ 01/15/25 18:24:37.426
  STEP: Wait for the deployment to be ready @ 01/15/25 18:24:37.451
  I0115 18:24:37.466786 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:24:37.566860      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:38.567741      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:24:39.481
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:24:39.496
  E0115 18:24:39.568440      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:24:40.497284 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/15/25 18:24:40.507
  E0115 18:24:40.568788      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:24:40.578133 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4417" for this suite. @ 01/15/25 18:24:40.585
  STEP: Destroying namespace "webhook-markers-974" for this suite. @ 01/15/25 18:24:40.602
• [3.713 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/15/25 18:24:40.613
  I0115 18:24:40.613665 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:24:40.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:24:40.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:24:40.644
  STEP: Creating a ResourceQuota with terminating scope @ 01/15/25 18:24:40.649
  STEP: Ensuring ResourceQuota status is calculated @ 01/15/25 18:24:40.668
  E0115 18:24:41.569195      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:42.570077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 01/15/25 18:24:42.673
  STEP: Ensuring ResourceQuota status is calculated @ 01/15/25 18:24:42.684
  E0115 18:24:43.570501      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:44.570944      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 01/15/25 18:24:44.689
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/15/25 18:24:44.76
  E0115 18:24:45.571225      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:46.571581      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/15/25 18:24:46.765
  E0115 18:24:47.571686      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:48.572063      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/15/25 18:24:48.771
  STEP: Ensuring resource quota status released the pod usage @ 01/15/25 18:24:48.79
  E0115 18:24:49.572449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:50.572871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 01/15/25 18:24:50.799
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/15/25 18:24:50.819
  E0115 18:24:51.573804      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:52.574207      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/15/25 18:24:52.826
  E0115 18:24:53.574832      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:54.575261      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/15/25 18:24:54.836
  STEP: Ensuring resource quota status released the pod usage @ 01/15/25 18:24:54.859
  E0115 18:24:55.576011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:56.576482      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:24:56.867584 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6977" for this suite. @ 01/15/25 18:24:56.873
• [16.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/15/25 18:24:56.884
  I0115 18:24:56.884677 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:24:56.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:24:56.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:24:56.921
  STEP: Setting up server cert @ 01/15/25 18:24:57.012
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:24:57.575
  E0115 18:24:57.576503      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 01/15/25 18:24:57.587
  STEP: Wait for the deployment to be ready @ 01/15/25 18:24:57.609
  I0115 18:24:57.619199 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:24:58.577251      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:24:59.577772      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:24:59.639
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:24:59.657
  E0115 18:25:00.578534      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:25:00.657755 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/15/25 18:25:00.67
  STEP: create a configmap that should be updated by the webhook @ 01/15/25 18:25:00.698
  I0115 18:25:00.800503 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4133" for this suite. @ 01/15/25 18:25:00.811
  STEP: Destroying namespace "webhook-markers-8474" for this suite. @ 01/15/25 18:25:00.825
• [3.957 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/15/25 18:25:00.842
  I0115 18:25:00.842969 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:25:00.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:25:00.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:25:00.924
  E0115 18:25:01.578697      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:02.579221      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 01/15/25 18:25:03.01
  I0115 18:25:03.010782 30 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1649 pod-service-account-e08bfe1b-c882-4459-904d-be1700b698da -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/15/25 18:25:03.184
  I0115 18:25:03.185068 30 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1649 pod-service-account-e08bfe1b-c882-4459-904d-be1700b698da -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/15/25 18:25:03.336
  I0115 18:25:03.336356 30 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1649 pod-service-account-e08bfe1b-c882-4459-904d-be1700b698da -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0115 18:25:03.505238 30 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-1649"
  I0115 18:25:03.509439 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1649" for this suite. @ 01/15/25 18:25:03.515
• [2.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/15/25 18:25:03.525
  I0115 18:25:03.525546 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 18:25:03.526
  E0115 18:25:03.580065      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:25:03.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:25:03.651
  I0115 18:25:03.656560 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:25:04.580289      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:05.581374      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:06.581452      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:07.581595      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:08.581812      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:09.582217      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/15/25 18:25:10.342
  I0115 18:25:10.343089 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-2642 --namespace=crd-publish-openapi-2642 create -f -'
  I0115 18:25:10.515108 30 builder.go:146] stderr: ""
  I0115 18:25:10.515174 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0115 18:25:10.515267 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-2642 --namespace=crd-publish-openapi-2642 delete e2e-test-crd-publish-openapi-5959-crds test-cr'
  E0115 18:25:10.582865      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:25:10.628768 30 builder.go:146] stderr: ""
  I0115 18:25:10.629009 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0115 18:25:10.629108 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-2642 --namespace=crd-publish-openapi-2642 apply -f -'
  I0115 18:25:10.756537 30 builder.go:146] stderr: ""
  I0115 18:25:10.756611 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0115 18:25:10.756698 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-2642 --namespace=crd-publish-openapi-2642 delete e2e-test-crd-publish-openapi-5959-crds test-cr'
  I0115 18:25:10.848013 30 builder.go:146] stderr: ""
  I0115 18:25:10.848069 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/15/25 18:25:10.848
  I0115 18:25:10.848205 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-2642 explain e2e-test-crd-publish-openapi-5959-crds'
  I0115 18:25:10.939170 30 builder.go:146] stderr: ""
  I0115 18:25:10.939254 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5959-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0115 18:25:11.583575      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:12.584550      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:25:12.658748 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2642" for this suite. @ 01/15/25 18:25:12.67
• [9.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/15/25 18:25:12.682
  I0115 18:25:12.682233 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:25:12.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:25:12.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:25:12.731
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:25:12.734
  E0115 18:25:13.584993      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:14.585660      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:15.585756      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:16.586511      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:25:16.822
  I0115 18:25:16.826624 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-4b0afcf9-00dd-46d4-8a9e-7baaf92e2a04 container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:25:16.847
  I0115 18:25:16.882487 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1009" for this suite. @ 01/15/25 18:25:16.888
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/15/25 18:25:16.898
  I0115 18:25:16.898630 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename taint-single-pod @ 01/15/25 18:25:16.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:25:16.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:25:16.931
  I0115 18:25:16.934990 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:25:17.586660      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:18.587007      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:19.587727      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:20.588138      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:21.588559      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:22.588903      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:23.589480      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:24.589819      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:25.589971      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:26.590220      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:27.590419      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:28.590795      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:29.591852      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:30.591925      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:31.592178      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:32.592398      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:33.592565      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:34.592897      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:35.592956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:36.594178      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:37.593344      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:38.593472      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:39.594387      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:40.595465      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:41.596488      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:42.597392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:43.597826      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:44.597940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:45.598913      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:46.598996      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:47.599402      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:48.599583      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:49.600687      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:50.601023      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:51.601112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:52.601450      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:53.601933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:54.602455      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:55.602739      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:56.603168      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:57.603740      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:58.604165      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:25:59.604902      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:00.605306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:01.605651      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:02.605946      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:03.606256      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:04.606813      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:05.607678      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:06.608011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:07.608763      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:08.608926      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:09.609912      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:10.610256      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:11.610407      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:12.610866      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:13.611603      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:14.612067      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:15.613102      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:16.613878      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:26:16.935383 30 util.go:396] Waiting for terminating namespaces to be deleted...
  I0115 18:26:16.942039 30 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/15/25 18:26:16.942
  I0115 18:26:17.171771 30 taints.go:294] Pod is running on node6. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/15/25 18:26:17.171
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/15/25 18:26:17.197
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/15/25 18:26:17.201
  I0115 18:26:17.201953 30 taints.go:313] Pod wasn't evicted. Proceeding
  I0115 18:26:17.202011 30 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/15/25 18:26:17.226
  STEP: Waiting some time to make sure that toleration time passed. @ 01/15/25 18:26:17.231
  E0115 18:26:17.614737      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:18.614890      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:19.615239      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:20.615639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:21.616187      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:22.616529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:23.616956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:24.617412      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:25.617805      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:26.618288      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:27.618689      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:28.619130      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:29.619635      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:30.620148      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:31.620248      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:32.620557      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:33.621062      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:34.621356      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:35.621660      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:36.621940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:37.622271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:38.622871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:39.623225      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:40.623563      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:41.623944      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:42.624249      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:43.624575      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:44.625657      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:45.625938      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:46.626250      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:47.626547      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:48.626637      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:49.627104      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:50.627454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:51.627755      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:52.628090      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:53.628444      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:54.628745      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:55.629077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:56.629363      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:57.629695      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:58.630057      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:26:59.630391      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:00.630695      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:01.631019      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:02.631306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:03.631616      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:04.631813      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:05.632131      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:06.632288      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:07.633087      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:08.633420      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:09.633886      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:10.634067      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:11.634419      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:12.634887      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:13.635282      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:14.635448      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:15.635778      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:16.636116      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:17.636395      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:18.636652      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:19.640945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:20.641188      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:21.641459      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:22.641695      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:23.642072      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:24.642293      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:25.642761      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:26.642922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:27.643338      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:28.643489      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:29.643938      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:30.644081      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:31.644441      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:27:32.231545 30 taints.go:329] Pod wasn't evicted. Test successful
  I0115 18:27:32.231918 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-227" for this suite. @ 01/15/25 18:27:32.239
• [135.353 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/15/25 18:27:32.252
  I0115 18:27:32.252313 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/15/25 18:27:32.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:27:32.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:27:32.292
  STEP: creating the policy @ 01/15/25 18:27:32.304
  STEP: waiting until the marker is denied @ 01/15/25 18:27:32.495
  E0115 18:27:32.645408      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 01/15/25 18:27:32.93
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/15/25 18:27:32.98
  I0115 18:27:33.088319 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3481" for this suite. @ 01/15/25 18:27:33.094
• [0.853 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/15/25 18:27:33.105
  I0115 18:27:33.105360 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:27:33.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:27:33.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:27:33.132
  STEP: Creating configMap with name configmap-test-volume-map-7690d3a2-36ab-48f2-b4d5-4d2b661c4fd7 @ 01/15/25 18:27:33.136
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:27:33.149
  E0115 18:27:33.646573      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:34.647113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:35.647268      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:36.647631      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:27:37.178
  I0115 18:27:37.182928 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-bee0f259-318e-46e3-a15c-3380a6666b6e container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:27:37.198
  I0115 18:27:37.222393 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2627" for this suite. @ 01/15/25 18:27:37.227
• [4.132 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/15/25 18:27:37.237
  I0115 18:27:37.237771 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename disruption @ 01/15/25 18:27:37.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:27:37.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:27:37.286
  STEP: creating the pdb @ 01/15/25 18:27:37.29
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:27:37.303
  E0115 18:27:37.647576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:38.647940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 01/15/25 18:27:39.308
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:27:39.319
  E0115 18:27:39.648901      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:40.649485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 01/15/25 18:27:41.325
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:27:41.336
  E0115 18:27:41.650239      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:42.650584      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 01/15/25 18:27:43.355
  I0115 18:27:43.359159 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4283" for this suite. @ 01/15/25 18:27:43.364
• [6.136 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 01/15/25 18:27:43.373
  I0115 18:27:43.373565 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename dns @ 01/15/25 18:27:43.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:27:43.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:27:43.404
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-203.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-203.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 01/15/25 18:27:43.408
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-203.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-203.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/15/25 18:27:43.408
  STEP: creating a pod to probe /etc/hosts @ 01/15/25 18:27:43.408
  STEP: submitting the pod to kubernetes @ 01/15/25 18:27:43.408
  E0115 18:27:43.651359      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:44.651475      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/15/25 18:27:45.437
  STEP: looking for the results for each expected name from probers @ 01/15/25 18:27:45.442
  I0115 18:27:45.464109 30 dns_common.go:546] DNS probes using dns-203/dns-test-ee81ea85-5d94-469c-befd-42aa73d87be3 succeeded

  STEP: deleting the pod @ 01/15/25 18:27:45.464
  I0115 18:27:45.481972 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-203" for this suite. @ 01/15/25 18:27:45.488
• [2.132 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 01/15/25 18:27:45.506
  I0115 18:27:45.506134 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename containers @ 01/15/25 18:27:45.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:27:45.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:27:45.537
  STEP: Creating a pod to test override arguments @ 01/15/25 18:27:45.541
  E0115 18:27:45.651623      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:46.651764      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:47.653027      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:48.652990      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:27:49.577
  I0115 18:27:49.582490 30 output.go:207] Trying to get logs from node node6 pod client-containers-29bc32dd-e93c-4b4d-b39a-53f46a584289 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:27:49.591
  I0115 18:27:49.616710 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7444" for this suite. @ 01/15/25 18:27:49.623
• [4.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/15/25 18:27:49.635
  I0115 18:27:49.635263 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-runtime @ 01/15/25 18:27:49.636
  E0115 18:27:49.653233      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:27:49.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:27:49.662
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/15/25 18:27:49.68
  E0115 18:27:50.653474      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:51.654237      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:52.655226      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:53.655388      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:54.656373      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:55.656672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:56.657145      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:57.657830      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:58.658242      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:27:59.658769      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:00.659430      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:01.659506      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:02.659758      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:03.660477      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:04.661510      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:05.662135      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:06.662279      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:07.662777      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/15/25 18:28:07.831
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/15/25 18:28:07.837
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/15/25 18:28:07.844
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/15/25 18:28:07.844
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/15/25 18:28:07.881
  E0115 18:28:08.663691      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:09.664085      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/15/25 18:28:09.904
  E0115 18:28:10.664481      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:11.664914      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/15/25 18:28:11.922
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/15/25 18:28:11.93
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/15/25 18:28:11.93
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/15/25 18:28:11.975
  E0115 18:28:12.665343      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/15/25 18:28:12.985
  E0115 18:28:13.666484      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/15/25 18:28:14.014
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/15/25 18:28:14.022
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/15/25 18:28:14.022
  I0115 18:28:14.068771 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1616" for this suite. @ 01/15/25 18:28:14.076
• [24.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/15/25 18:28:14.087
  I0115 18:28:14.087741 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename init-container @ 01/15/25 18:28:14.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:28:14.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:28:14.125
  STEP: creating the pod @ 01/15/25 18:28:14.128
  I0115 18:28:14.128481 30 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0115 18:28:14.667248      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:15.668104      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:16.668948      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:17.669605      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:18.670106      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:19.670705      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:20.670993      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:21.671537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:22.671999      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:23.672684      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:24.673110      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:25.673584      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:26.674540      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:27.675253      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:28.675736      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:29.676302      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:30.676725      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:31.677347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:32.677788      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:33.678207      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:34.678900      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:35.679396      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:36.679944      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:37.680347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:38.680839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:39.681261      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:40.682340      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:41.682847      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:42.683412      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:43.683908      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:44.684270      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:45.684527      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:46.685048      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:47.685642      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:48.686102      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:49.686661      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:50.686963      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:51.687118      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:52.687537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:53.687727      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:54.688173      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:55.688451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:56.689518      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:57.689652      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:28:58.690103      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:28:58.965950 30 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bc41037b-4253-4b6a-84be-9c1987b82bcd", GenerateName:"", Namespace:"init-container-5265", SelfLink:"", UID:"0ccb1ff6-9a0a-4eb2-a428-bb6e2c22efe0", ResourceVersion:"240315", Generation:0, CreationTimestamp:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"128442297"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40046d2960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 15, 18, 28, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0x40046d2990), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-fgr6f", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0x4000e71e20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-fgr6f", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-fgr6f", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-fgr6f", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0x4005192910), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"node6", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0x40044757a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0x4005192ba0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0x4005192bc0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0x4005192bc8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0x4005192bcc), PreemptionPolicy:(*v1.PreemptionPolicy)(0x40036345d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 15, 18, 28, 15, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.111.222", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.111.222"}}, PodIP:"10.233.68.84", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.68.84"}}, StartTime:time.Date(2025, time.January, 15, 18, 28, 14, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0x4002b72620)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0x4002b72690)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"sha256:6d0099de92b2a095017ed32499154f16eec2df38f0d2e9192bcf6ae7d241ac75", ContainerID:"containerd://1564d72f7a33521496687e775672e43ab6d3fb565cc584409eb09ff2f39f0f6e", Started:(*bool)(0x4005192e5a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-fgr6f", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x4003634600)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0x4000e71e80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0x4005192e6d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-fgr6f", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x4003634620)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0x4000e71e60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0x4005192d9f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-fgr6f", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0x40036345e0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0115 18:28:58.966253 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5265" for this suite. @ 01/15/25 18:28:58.972
• [44.898 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/15/25 18:28:58.987
  I0115 18:28:58.987124 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:28:58.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:28:59.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:28:59.054
  STEP: Create a pod @ 01/15/25 18:28:59.059
  E0115 18:28:59.690939      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:00.691208      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/15/25 18:29:01.091
  I0115 18:29:01.109241 30 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0115 18:29:01.109578 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1120" for this suite. @ 01/15/25 18:29:01.12
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/15/25 18:29:01.134
  I0115 18:29:01.134206 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:29:01.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:01.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:01.167
  STEP: creating pod @ 01/15/25 18:29:01.171
  E0115 18:29:01.692016      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:02.692340      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:29:03.205806 30 pods.go:83] Pod pod-hostip-ab2957a8-1dbb-48cb-a490-ddd42beefe3a has hostIP: 192.168.111.222
  I0115 18:29:03.206035 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5974" for this suite. @ 01/15/25 18:29:03.212
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/15/25 18:29:03.224
  I0115 18:29:03.224404 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename apf @ 01/15/25 18:29:03.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:03.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:03.26
  STEP: getting /apis @ 01/15/25 18:29:03.264
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/15/25 18:29:03.269
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/15/25 18:29:03.271
  STEP: creating @ 01/15/25 18:29:03.272
  STEP: getting @ 01/15/25 18:29:03.37
  STEP: listing @ 01/15/25 18:29:03.374
  STEP: watching @ 01/15/25 18:29:03.382
  I0115 18:29:03.382224 30 flowcontrol.go:394] starting watch
  STEP: patching @ 01/15/25 18:29:03.383
  STEP: updating @ 01/15/25 18:29:03.406
  I0115 18:29:03.417314 30 flowcontrol.go:422] waiting for watch events with expected annotations
  I0115 18:29:03.417504 30 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/15/25 18:29:03.417
  STEP: patching /status @ 01/15/25 18:29:03.422
  STEP: updating /status @ 01/15/25 18:29:03.432
  STEP: deleting @ 01/15/25 18:29:03.481
  STEP: deleting a collection @ 01/15/25 18:29:03.496
  I0115 18:29:03.521345 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1155" for this suite. @ 01/15/25 18:29:03.528
• [0.315 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/15/25 18:29:03.539
  I0115 18:29:03.539367 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:29:03.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:03.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:03.595
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4171 @ 01/15/25 18:29:03.599
  STEP: changing the ExternalName service to type=ClusterIP @ 01/15/25 18:29:03.606
  STEP: creating replication controller externalname-service in namespace services-4171 @ 01/15/25 18:29:03.64
  I0115 18:29:03.659887      30 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4171, replica count: 2
  E0115 18:29:03.707551      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:04.707516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:05.708206      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:06.709276      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:29:06.712355      30 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 18:29:06.712431 30 resource.go:361] Creating new exec pod
  E0115 18:29:07.710157      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:08.710490      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:09.710864      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:29:09.737559 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-4171 exec execpod7sfnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0115 18:29:09.919106 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.2.54) 80 port [tcp/http] succeeded!\n"
  I0115 18:29:09.919212 30 builder.go:147] stdout: "externalname-service-bx652"
  I0115 18:29:09.919416 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-4171 exec execpod7sfnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.2.54 80'
  I0115 18:29:10.074943 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.2.54 80\nConnection to 10.233.2.54 80 port [tcp/http] succeeded!\n"
  I0115 18:29:10.075096 30 builder.go:147] stdout: "externalname-service-k89tq"
  I0115 18:29:10.075474 30 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0115 18:29:10.110493 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4171" for this suite. @ 01/15/25 18:29:10.117
• [6.590 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/15/25 18:29:10.129
  I0115 18:29:10.129523 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:29:10.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:10.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:10.166
  I0115 18:29:10.242444 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4571" for this suite. @ 01/15/25 18:29:10.249
• [0.129 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/15/25 18:29:10.258
  I0115 18:29:10.258501 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename podtemplate @ 01/15/25 18:29:10.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:10.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:10.291
  STEP: Create set of pod templates @ 01/15/25 18:29:10.295
  I0115 18:29:10.304074 30 podtemplates.go:143] created test-podtemplate-1
  I0115 18:29:10.314533 30 podtemplates.go:143] created test-podtemplate-2
  I0115 18:29:10.321808 30 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/15/25 18:29:10.321
  STEP: delete collection of pod templates @ 01/15/25 18:29:10.326
  I0115 18:29:10.326516 30 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/15/25 18:29:10.359
  I0115 18:29:10.359694 30 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0115 18:29:10.364458 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3146" for this suite. @ 01/15/25 18:29:10.37
• [0.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/15/25 18:29:10.378
  I0115 18:29:10.378898 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename conformance-tests @ 01/15/25 18:29:10.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:10.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:10.416
  STEP: Getting node addresses @ 01/15/25 18:29:10.419
  I0115 18:29:10.420090 30 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0115 18:29:10.470273 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3613" for this suite. @ 01/15/25 18:29:10.476
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/15/25 18:29:10.486
  I0115 18:29:10.486770 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:29:10.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:10.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:10.526
  STEP: Creating configMap with name configmap-test-volume-a5e7c498-d7ce-495d-964f-f93d4130dbb5 @ 01/15/25 18:29:10.53
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:29:10.536
  E0115 18:29:10.711419      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:11.711784      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:12.711906      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:13.712369      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:29:14.577
  I0115 18:29:14.581934 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-17e13c55-ada4-4399-bc34-f7629338799d container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:29:14.59
  I0115 18:29:14.634009 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9727" for this suite. @ 01/15/25 18:29:14.652
• [4.177 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 01/15/25 18:29:14.664
  I0115 18:29:14.664124 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename cronjob @ 01/15/25 18:29:14.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:14.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:14.699
  STEP: Creating a cronjob @ 01/15/25 18:29:14.704
  STEP: creating @ 01/15/25 18:29:14.704
  E0115 18:29:14.713134      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting @ 01/15/25 18:29:14.739
  STEP: listing @ 01/15/25 18:29:14.743
  STEP: watching @ 01/15/25 18:29:14.747
  I0115 18:29:14.747258 30 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 01/15/25 18:29:14.748
  STEP: cluster-wide watching @ 01/15/25 18:29:14.752
  I0115 18:29:14.752822 30 cronjob.go:407] starting watch
  STEP: patching @ 01/15/25 18:29:14.754
  STEP: updating @ 01/15/25 18:29:14.767
  I0115 18:29:14.785401 30 cronjob.go:431] waiting for watch events with expected annotations
  I0115 18:29:14.785587 30 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 01/15/25 18:29:14.785
  STEP: updating /status @ 01/15/25 18:29:14.793
  STEP: get /status @ 01/15/25 18:29:14.803
  STEP: deleting @ 01/15/25 18:29:14.808
  STEP: deleting a collection @ 01/15/25 18:29:14.826
  I0115 18:29:14.852000 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1337" for this suite. @ 01/15/25 18:29:14.858
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 01/15/25 18:29:14.868
  I0115 18:29:14.869031 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:29:14.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:14.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:14.9
  I0115 18:29:14.931750 30 service_accounts.go:647] created pod
  E0115 18:29:15.713653      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:16.714438      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:17.715344      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:18.715909      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:29:18.948
  E0115 18:29:19.715991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:20.716521      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:21.716891      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:22.717245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:23.717764      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:24.718141      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:25.718682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:26.719069      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:27.719523      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:28.719899      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:29.720426      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:30.720632      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:31.721127      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:32.721301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:33.721799      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:34.722193      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:35.722699      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:36.723063      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:37.723523      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:38.723901      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:39.724290      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:40.724727      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:41.725183      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:42.725569      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:43.725929      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:44.726259      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:45.727058      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:46.727442      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:47.728580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:48.729060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:29:48.949010 30 service_accounts.go:653] polling logs
  I0115 18:29:48.960286 30 service_accounts.go:663] Pod logs: 
  I0115 18:29:15.593933       1 log.go:245] OK: Got token
  I0115 18:29:15.594073       1 log.go:245] validating with in-cluster discovery
  I0115 18:29:15.594639       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0115 18:29:15.594694       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8492:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0x4000522530), NotBefore:(*jwt.NumericDate)(0x4000522620), IssuedAt:(*jwt.NumericDate)(0x4000522540), ID:"97ad07bd-866c-4725-a1f2-44d48b2f7a93"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8492", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ec521658-d96b-43cd-81ee-092c3efc659e"}}}
  I0115 18:29:15.610675       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0115 18:29:15.621814       1 log.go:245] OK: Validated signature on JWT
  I0115 18:29:15.621967       1 log.go:245] OK: Got valid claims from token!
  I0115 18:29:15.622019       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8492:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0x4000523a08), NotBefore:(*jwt.NumericDate)(0x4000523a30), IssuedAt:(*jwt.NumericDate)(0x4000523a10), ID:"97ad07bd-866c-4725-a1f2-44d48b2f7a93"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8492", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ec521658-d96b-43cd-81ee-092c3efc659e"}}}

  I0115 18:29:48.960368 30 service_accounts.go:667] completed pod
  I0115 18:29:48.970305 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8492" for this suite. @ 01/15/25 18:29:48.976
• [34.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/15/25 18:29:48.998
  I0115 18:29:48.998693 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename cronjob @ 01/15/25 18:29:49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:29:49.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:29:49.039
  STEP: Creating a ForbidConcurrent cronjob @ 01/15/25 18:29:49.043
  STEP: Ensuring a job is scheduled @ 01/15/25 18:29:49.051
  E0115 18:29:49.729499      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:50.729833      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:51.730221      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:52.730594      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:53.730754      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:54.730907      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:55.730979      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:56.731436      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:57.731566      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:58.732073      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:29:59.732253      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:00.732478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/15/25 18:30:01.057
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/15/25 18:30:01.062
  STEP: Ensuring no more jobs are scheduled @ 01/15/25 18:30:01.067
  STEP: Removing cronjob @ 01/15/25 18:30:01.07
  I0115 18:30:01.081551 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4815" for this suite. @ 01/15/25 18:30:01.088
• [12.098 seconds]
------------------------------
SSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 01/15/25 18:30:01.097
  I0115 18:30:01.097469 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename volumeattachment @ 01/15/25 18:30:01.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:01.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:01.135
  STEP: Create VolumeAttachment "va-e2e-jxdwr" on node "node5" @ 01/15/25 18:30:01.19
  STEP: Patch VolumeAttachment "va-e2e-jxdwr" on node "node5" @ 01/15/25 18:30:01.214
  STEP: Reading "va-e2e-jxdwr" Status @ 01/15/25 18:30:01.256
  STEP: Patching "va-e2e-jxdwr" Status @ 01/15/25 18:30:01.262
  I0115 18:30:01.270383 30 volume_attachment.go:224] "va-e2e-jxdwr" Status.Attached: true
  STEP: Updating "va-e2e-jxdwr" Status @ 01/15/25 18:30:01.27
  I0115 18:30:01.281188 30 volume_attachment.go:240] "va-e2e-jxdwr" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-jxdwr" on node "node5" @ 01/15/25 18:30:01.281
  STEP: Confirm deletion of VolumeAttachment "va-e2e-jxdwr" on node "node5" @ 01/15/25 18:30:01.29
  I0115 18:30:01.295183 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8437" for this suite. @ 01/15/25 18:30:01.309
• [0.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 01/15/25 18:30:01.319
  I0115 18:30:01.319517 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:30:01.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:01.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:01.363
  STEP: Creating a pod to test service account token:  @ 01/15/25 18:30:01.367
  E0115 18:30:01.733214      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:02.733769      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:03.738413      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:04.734102      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:30:05.399
  I0115 18:30:05.404580 30 output.go:207] Trying to get logs from node node6 pod test-pod-00ab256c-70a3-4a4b-9f18-cacea407da0e container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:30:05.414
  I0115 18:30:05.441582 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3247" for this suite. @ 01/15/25 18:30:05.448
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/15/25 18:30:05.466
  I0115 18:30:05.466570 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename events @ 01/15/25 18:30:05.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:05.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:05.502
  STEP: Create set of events @ 01/15/25 18:30:05.507
  STEP: get a list of Events with a label in the current namespace @ 01/15/25 18:30:05.532
  STEP: delete a list of events @ 01/15/25 18:30:05.536
  I0115 18:30:05.536868 30 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/15/25 18:30:05.569
  I0115 18:30:05.573867 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6206" for this suite. @ 01/15/25 18:30:05.579
• [0.132 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/15/25 18:30:05.598
  I0115 18:30:05.598505 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/15/25 18:30:05.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:05.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:05.64
  STEP: Creating 50 configmaps @ 01/15/25 18:30:05.644
  E0115 18:30:05.734069      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 01/15/25 18:30:06.091
  I0115 18:30:06.137579 30 resource.go:87] Pod name wrapped-volume-race-f4b8f4e4-102b-44df-9ec4-16c5436941c4: Found 0 pods out of 5
  E0115 18:30:06.734231      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:07.734955      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:08.734839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:09.735302      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:10.735601      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:11.150803 30 resource.go:87] Pod name wrapped-volume-race-f4b8f4e4-102b-44df-9ec4-16c5436941c4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/15/25 18:30:11.15
  STEP: Creating RC which spawns configmap-volume pods @ 01/15/25 18:30:11.191
  I0115 18:30:11.228255 30 resource.go:87] Pod name wrapped-volume-race-c99fc594-b058-4228-adbb-2db89025b878: Found 1 pods out of 5
  E0115 18:30:11.736531      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:12.736865      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:13.737284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:14.737679      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:15.737940      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:16.237256 30 resource.go:87] Pod name wrapped-volume-race-c99fc594-b058-4228-adbb-2db89025b878: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/15/25 18:30:16.237
  STEP: Creating RC which spawns configmap-volume pods @ 01/15/25 18:30:16.27
  I0115 18:30:16.305603 30 resource.go:87] Pod name wrapped-volume-race-4661c4b9-6d41-434d-ba1f-ac288a97e610: Found 1 pods out of 5
  E0115 18:30:16.738952      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:17.739615      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:18.740224      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:19.740929      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:20.741092      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:21.315182 30 resource.go:87] Pod name wrapped-volume-race-4661c4b9-6d41-434d-ba1f-ac288a97e610: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/15/25 18:30:21.315
  STEP: deleting ReplicationController wrapped-volume-race-4661c4b9-6d41-434d-ba1f-ac288a97e610 in namespace emptydir-wrapper-7018, will wait for the garbage collector to delete the pods @ 01/15/25 18:30:21.341
  I0115 18:30:21.446032 30 resources.go:139] Deleting ReplicationController wrapped-volume-race-4661c4b9-6d41-434d-ba1f-ac288a97e610 took: 48.394341ms
  I0115 18:30:21.546564 30 resources.go:163] Terminating ReplicationController wrapped-volume-race-4661c4b9-6d41-434d-ba1f-ac288a97e610 pods took: 100.526969ms
  E0115 18:30:21.741466      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:22.742375      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-c99fc594-b058-4228-adbb-2db89025b878 in namespace emptydir-wrapper-7018, will wait for the garbage collector to delete the pods @ 01/15/25 18:30:23.247
  I0115 18:30:23.315362 30 resources.go:139] Deleting ReplicationController wrapped-volume-race-c99fc594-b058-4228-adbb-2db89025b878 took: 11.147275ms
  I0115 18:30:23.416045 30 resources.go:163] Terminating ReplicationController wrapped-volume-race-c99fc594-b058-4228-adbb-2db89025b878 pods took: 100.661233ms
  E0115 18:30:23.743349      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f4b8f4e4-102b-44df-9ec4-16c5436941c4 in namespace emptydir-wrapper-7018, will wait for the garbage collector to delete the pods @ 01/15/25 18:30:24.616
  I0115 18:30:24.707174 30 resources.go:139] Deleting ReplicationController wrapped-volume-race-f4b8f4e4-102b-44df-9ec4-16c5436941c4 took: 11.003402ms
  E0115 18:30:24.743666      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:24.807761 30 resources.go:163] Terminating ReplicationController wrapped-volume-race-f4b8f4e4-102b-44df-9ec4-16c5436941c4 pods took: 100.585811ms
  E0115 18:30:25.744292      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 01/15/25 18:30:25.809
  I0115 18:30:26.272690 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7018" for this suite. @ 01/15/25 18:30:26.277
• [20.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/15/25 18:30:26.289
  I0115 18:30:26.289745 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 18:30:26.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:26.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:26.332
  STEP: create the rc @ 01/15/25 18:30:26.336
  W0115 18:30:26.343164      30 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0115 18:30:26.744850      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:27.745380      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:28.745734      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:29.746177      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:30.746484      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/15/25 18:30:31.352
  STEP: wait for all pods to be garbage collected @ 01/15/25 18:30:31.363
  E0115 18:30:31.747465      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:32.747820      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:33.748001      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:34.748407      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:35.748695      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/15/25 18:30:36.374
  I0115 18:30:36.481893 30 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0115 18:30:36.484186 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7510" for this suite. @ 01/15/25 18:30:36.491
• [10.215 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/15/25 18:30:36.505
  I0115 18:30:36.505398 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sysctl @ 01/15/25 18:30:36.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:36.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:36.54
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/15/25 18:30:36.546
  STEP: Watching for error events or started pod @ 01/15/25 18:30:36.562
  E0115 18:30:36.749762      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:37.750528      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 01/15/25 18:30:38.569
  E0115 18:30:38.751537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:39.751980      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 01/15/25 18:30:40.585
  STEP: Getting logs from the pod @ 01/15/25 18:30:40.585
  STEP: Checking that the sysctl is actually updated @ 01/15/25 18:30:40.597
  I0115 18:30:40.598414 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4364" for this suite. @ 01/15/25 18:30:40.605
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 01/15/25 18:30:40.616
  I0115 18:30:40.616770 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:30:40.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:40.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:40.656
  STEP: creating Agnhost RC @ 01/15/25 18:30:40.66
  I0115 18:30:40.661150 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-267 create -f -'
  E0115 18:30:40.752790      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:40.853205 30 builder.go:146] stderr: ""
  I0115 18:30:40.853269 30 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/15/25 18:30:40.853
  E0115 18:30:41.753071      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:41.861022 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 18:30:41.861079 30 framework.go:733] Found 0 / 1
  E0115 18:30:42.754119      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:42.860676 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 18:30:42.860762 30 framework.go:733] Found 1 / 1
  I0115 18:30:42.860795 30 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/15/25 18:30:42.86
  I0115 18:30:42.865971 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 18:30:42.866029 30 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0115 18:30:42.866117 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-267 patch pod agnhost-primary-ls26g -p {"metadata":{"annotations":{"x":"y"}}}'
  I0115 18:30:42.971252 30 builder.go:146] stderr: ""
  I0115 18:30:42.971314 30 builder.go:147] stdout: "pod/agnhost-primary-ls26g patched\n"
  STEP: checking annotations @ 01/15/25 18:30:42.971
  I0115 18:30:42.976960 30 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0115 18:30:42.977050 30 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0115 18:30:42.977321 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-267" for this suite. @ 01/15/25 18:30:42.993
• [2.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 01/15/25 18:30:43.011
  I0115 18:30:43.011489 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:30:43.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:43.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:43.043
  STEP: Creating a suspended job @ 01/15/25 18:30:43.052
  STEP: Patching the Job @ 01/15/25 18:30:43.064
  STEP: Watching for Job to be patched @ 01/15/25 18:30:43.152
  I0115 18:30:43.154959 30 job.go:1309] Event ADDED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-job-label:e2e-gtjbz] and annotations: map[]
  I0115 18:30:43.155080 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-job-label:e2e-gtjbz] and annotations: map[]
  I0115 18:30:43.155125 30 job.go:1312] Event MODIFIED found for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[]
  STEP: Updating the job @ 01/15/25 18:30:43.155
  STEP: Watching for Job to be updated @ 01/15/25 18:30:43.172
  I0115 18:30:43.174965 30 job.go:1312] Event MODIFIED found for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:43.175035 30 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/15/25 18:30:43.175
  I0115 18:30:43.179774 30 job.go:1187] Job: e2e-gtjbz as labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz]
  STEP: Waiting for job to complete @ 01/15/25 18:30:43.179
  E0115 18:30:43.755255      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:44.756480      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:45.756991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:46.757405      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:47.757937      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:48.758218      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:49.759109      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:50.759476      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 01/15/25 18:30:51.241
  STEP: Watching for Job to be deleted @ 01/15/25 18:30:51.253
  I0115 18:30:51.255373 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.255525 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.255569 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.255755 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.255806 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.256107 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.256266 30 job.go:1309] Event MODIFIED observed for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  I0115 18:30:51.256321 30 job.go:1312] Event DELETED found for Job e2e-gtjbz in namespace job-8530 with labels: map[e2e-gtjbz:patched e2e-job-label:e2e-gtjbz] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/15/25 18:30:51.256
  I0115 18:30:51.262019 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8530" for this suite. @ 01/15/25 18:30:51.274
• [8.285 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 01/15/25 18:30:51.296
  I0115 18:30:51.296825 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:30:51.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:51.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:51.321
  STEP: Looking for a node to schedule job pod @ 01/15/25 18:30:51.324
  STEP: Creating a job @ 01/15/25 18:30:51.374
  STEP: Ensuring job fails @ 01/15/25 18:30:51.386
  E0115 18:30:51.759657      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:52.760547      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:53.760690      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:54.761301      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:30:55.449158 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5996" for this suite. @ 01/15/25 18:30:55.458
• [4.175 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/15/25 18:30:55.472
  I0115 18:30:55.472222 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:30:55.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:55.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:55.504
  STEP: Creating secret with name secret-test-acff5f1f-707a-4be1-85bd-418ff563521a @ 01/15/25 18:30:55.508
  STEP: Creating a pod to test consume secrets @ 01/15/25 18:30:55.514
  E0115 18:30:55.762177      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:56.763022      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:57.763266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:30:58.763699      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:30:59.543
  I0115 18:30:59.547687 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-8bb266b1-fb0d-4663-8011-daccb2615f78 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:30:59.558
  I0115 18:30:59.580872 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3631" for this suite. @ 01/15/25 18:30:59.586
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/15/25 18:30:59.599
  I0115 18:30:59.599425 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:30:59.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:30:59.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:30:59.63
  STEP: Setting up server cert @ 01/15/25 18:30:59.726
  E0115 18:30:59.764451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:31:00.35
  STEP: Deploying the webhook pod @ 01/15/25 18:31:00.363
  STEP: Wait for the deployment to be ready @ 01/15/25 18:31:00.384
  I0115 18:31:00.398817 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:31:00.765335      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:01.766285      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:31:02.419
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:31:02.435
  E0115 18:31:02.767019      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:03.435655 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/15/25 18:31:03.445
  STEP: create a namespace for the webhook @ 01/15/25 18:31:03.468
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/15/25 18:31:03.496
  I0115 18:31:03.704511 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-119" for this suite. @ 01/15/25 18:31:03.711
  STEP: Destroying namespace "webhook-markers-5962" for this suite. @ 01/15/25 18:31:03.726
  STEP: Destroying namespace "fail-closed-namespace-9915" for this suite. @ 01/15/25 18:31:03.737
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/15/25 18:31:03.745
  I0115 18:31:03.745977 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:31:03.747
  E0115 18:31:03.767645      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:03.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:03.773
  STEP: Creating configMap with name projected-configmap-test-volume-952ce627-91cf-4b6c-85b2-44e59e0b4c42 @ 01/15/25 18:31:03.779
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:31:03.794
  E0115 18:31:04.768367      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:05.768487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:31:05.849
  I0115 18:31:05.854292 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-d54bf62d-b600-42ff-a027-1c80578a5a21 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:31:05.861
  I0115 18:31:05.889834 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4644" for this suite. @ 01/15/25 18:31:05.897
• [2.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 01/15/25 18:31:05.907
  I0115 18:31:05.907288 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:31:05.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:05.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:05.94
  STEP: Starting the proxy @ 01/15/25 18:31:05.944
  I0115 18:31:05.944949 30 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-7274 proxy --unix-socket=/tmp/kubectl-proxy-unix931351533/test'
  STEP: retrieving proxy /api/ output @ 01/15/25 18:31:06.02
  I0115 18:31:06.022625 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7274" for this suite. @ 01/15/25 18:31:06.029
• [0.133 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/15/25 18:31:06.04
  I0115 18:31:06.040441 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/15/25 18:31:06.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:06.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:06.073
  I0115 18:31:06.077571 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:31:06.769376      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:07.770014      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:08.770098      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:09.770558      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:10.771311      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:11.640459 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8713" for this suite. @ 01/15/25 18:31:11.656
• [5.628 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/15/25 18:31:11.668
  I0115 18:31:11.668728 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:31:11.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:11.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:11.699
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:31:11.703
  E0115 18:31:11.772003      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:12.772064      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:13.773078      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:14.773399      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:31:15.736
  I0115 18:31:15.741941 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-f163e999-48dd-49aa-a352-b54088e23f9e container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:31:15.75
  E0115 18:31:15.773971      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:15.793427 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2080" for this suite. @ 01/15/25 18:31:15.799
• [4.142 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/15/25 18:31:15.811
  I0115 18:31:15.811460 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename security-context @ 01/15/25 18:31:15.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:15.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:15.838
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/15/25 18:31:15.842
  E0115 18:31:16.774945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:17.775459      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:31:17.868
  I0115 18:31:17.873338 30 output.go:207] Trying to get logs from node node6 pod security-context-174007e0-9477-4485-96c6-f41d434e92c3 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 18:31:17.881
  I0115 18:31:17.906721 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1584" for this suite. @ 01/15/25 18:31:17.913
• [2.113 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/15/25 18:31:17.924
  I0115 18:31:17.924836 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename runtimeclass @ 01/15/25 18:31:17.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:17.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:17.96
  I0115 18:31:17.975662 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2791" for this suite. @ 01/15/25 18:31:18.014
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/15/25 18:31:18.03
  I0115 18:31:18.030537 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:31:18.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:18.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:18.064
  STEP: creating service in namespace services-3770 @ 01/15/25 18:31:18.068
  STEP: creating service affinity-nodeport in namespace services-3770 @ 01/15/25 18:31:18.068
  STEP: creating replication controller affinity-nodeport in namespace services-3770 @ 01/15/25 18:31:18.091
  I0115 18:31:18.104749      30 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-3770, replica count: 3
  E0115 18:31:18.775652      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:19.776036      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:20.776873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:21.156031      30 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 18:31:21.170598 30 resource.go:361] Creating new exec pod
  E0115 18:31:21.777215      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:22.777686      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:23.777901      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:24.207486 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3770 exec execpod-affinity9q2ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0115 18:31:24.369926 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.48.229) 80 port [tcp/http] succeeded!\n"
  I0115 18:31:24.369995 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:31:24.370177 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3770 exec execpod-affinity9q2ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.48.229 80'
  I0115 18:31:24.522584 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.48.229 80\nConnection to 10.233.48.229 80 port [tcp/http] succeeded!\n"
  I0115 18:31:24.522651 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:31:24.522796 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3770 exec execpod-affinity9q2ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.146 31067'
  I0115 18:31:24.678261 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.146 31067\nConnection to 192.168.111.146 31067 port [tcp/*] succeeded!\n"
  I0115 18:31:24.678335 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:31:24.678496 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3770 exec execpod-affinity9q2ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.222 31067'
  E0115 18:31:24.777931      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:24.823003 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.222 31067\nConnection to 192.168.111.222 31067 port [tcp/*] succeeded!\n"
  I0115 18:31:24.823071 30 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0115 18:31:24.823177 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-3770 exec execpod-affinity9q2ln -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.111.146:31067/ ; done'
  I0115 18:31:25.100328 30 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.146:31067/\n"
  I0115 18:31:25.100455 30 builder.go:147] stdout: "\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg\naffinity-nodeport-bldcg"
  I0115 18:31:25.100480 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100496 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100509 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100522 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100538 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100550 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100597 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100611 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100627 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100647 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100660 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100671 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100684 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100695 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100706 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100717 30 service.go:242] Received response from host: affinity-nodeport-bldcg
  I0115 18:31:25.100839 30 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3770, will wait for the garbage collector to delete the pods @ 01/15/25 18:31:25.124
  I0115 18:31:25.191444 30 resources.go:139] Deleting ReplicationController affinity-nodeport took: 10.884259ms
  I0115 18:31:25.291730 30 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.282364ms
  E0115 18:31:25.778434      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:26.779140      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:27.779692      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:28.430711 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3770" for this suite. @ 01/15/25 18:31:28.436
• [10.414 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/15/25 18:31:28.445
  I0115 18:31:28.445358 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename subjectreview @ 01/15/25 18:31:28.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:28.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:28.481
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4892" @ 01/15/25 18:31:28.487
  I0115 18:31:28.494507 30 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-4892:e2e"
  I0115 18:31:28.494674 30 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4892"}
  I0115 18:31:28.494770 30 subjectreviews.go:71] saUID: "6434522a-48a0-4386-af5b-d73b8073a352"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4892:e2e" @ 01/15/25 18:31:28.494
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4892:e2e" @ 01/15/25 18:31:28.495
  I0115 18:31:28.497877 30 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4892:e2e" api 'list' configmaps in "subjectreview-4892" namespace @ 01/15/25 18:31:28.498
  I0115 18:31:28.499982 30 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4892:e2e" @ 01/15/25 18:31:28.5
  I0115 18:31:28.502243 30 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0115 18:31:28.502273 30 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0115 18:31:28.502408 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4892" for this suite. @ 01/15/25 18:31:28.537
• [0.105 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/15/25 18:31:28.55
  I0115 18:31:28.550757 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename podtemplate @ 01/15/25 18:31:28.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:28.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:28.582
  I0115 18:31:28.633671 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4359" for this suite. @ 01/15/25 18:31:28.658
• [0.118 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/15/25 18:31:28.668
  I0115 18:31:28.668838 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/15/25 18:31:28.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:28.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:28.707
  STEP: create the container to handle the HTTPGet hook request. @ 01/15/25 18:31:28.759
  E0115 18:31:28.780235      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:29.781142      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:30.781515      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/15/25 18:31:30.791
  E0115 18:31:31.782209      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:32.784118      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 01/15/25 18:31:32.824
  STEP: delete the pod with lifecycle hook @ 01/15/25 18:31:32.85
  E0115 18:31:33.783591      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:34.784591      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:34.885117 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2580" for this suite. @ 01/15/25 18:31:34.893
• [6.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/15/25 18:31:34.91
  I0115 18:31:34.910191 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replication-controller @ 01/15/25 18:31:34.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:34.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:34.947
  STEP: Given a ReplicationController is created @ 01/15/25 18:31:34.951
  STEP: When the matched label of one of its pods change @ 01/15/25 18:31:34.965
  I0115 18:31:34.970649 30 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0115 18:31:35.785454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:36.786081      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:37.786469      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:38.787175      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:39.787566      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:39.979366 30 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/15/25 18:31:40
  E0115 18:31:40.788323      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:41.010391 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7514" for this suite. @ 01/15/25 18:31:41.017
• [6.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/15/25 18:31:41.029
  I0115 18:31:41.029285 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename certificates @ 01/15/25 18:31:41.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:41.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:41.062
  E0115 18:31:41.788389      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis @ 01/15/25 18:31:41.819
  STEP: getting /apis/certificates.k8s.io @ 01/15/25 18:31:41.825
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/15/25 18:31:41.826
  STEP: creating @ 01/15/25 18:31:41.828
  STEP: getting @ 01/15/25 18:31:41.887
  STEP: listing @ 01/15/25 18:31:41.891
  STEP: watching @ 01/15/25 18:31:41.894
  I0115 18:31:41.894909 30 certificates.go:316] starting watch
  STEP: patching @ 01/15/25 18:31:41.896
  STEP: updating @ 01/15/25 18:31:41.909
  I0115 18:31:41.920654 30 certificates.go:332] waiting for watch events with expected annotations
  I0115 18:31:41.920876 30 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/15/25 18:31:41.921
  STEP: patching /approval @ 01/15/25 18:31:41.924
  STEP: updating /approval @ 01/15/25 18:31:41.933
  STEP: getting /status @ 01/15/25 18:31:41.944
  STEP: patching /status @ 01/15/25 18:31:41.948
  STEP: updating /status @ 01/15/25 18:31:41.961
  STEP: deleting @ 01/15/25 18:31:41.972
  STEP: deleting a collection @ 01/15/25 18:31:41.993
  I0115 18:31:42.016301 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4348" for this suite. @ 01/15/25 18:31:42.022
• [1.002 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/15/25 18:31:42.032
  I0115 18:31:42.032399 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename ingress @ 01/15/25 18:31:42.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:42.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:42.065
  STEP: getting /apis @ 01/15/25 18:31:42.07
  STEP: getting /apis/networking.k8s.io @ 01/15/25 18:31:42.075
  STEP: getting /apis/networking.k8s.iov1 @ 01/15/25 18:31:42.076
  STEP: creating @ 01/15/25 18:31:42.078
  STEP: getting @ 01/15/25 18:31:42.126
  STEP: listing @ 01/15/25 18:31:42.13
  STEP: watching @ 01/15/25 18:31:42.142
  I0115 18:31:42.142505 30 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/15/25 18:31:42.143
  STEP: cluster-wide watching @ 01/15/25 18:31:42.148
  I0115 18:31:42.148268 30 ingress.go:198] starting watch
  STEP: patching @ 01/15/25 18:31:42.149
  STEP: updating @ 01/15/25 18:31:42.158
  I0115 18:31:42.172348 30 ingress.go:221] waiting for watch events with expected annotations
  I0115 18:31:42.172450 30 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/15/25 18:31:42.172
  STEP: updating /status @ 01/15/25 18:31:42.182
  STEP: get /status @ 01/15/25 18:31:42.209
  STEP: deleting @ 01/15/25 18:31:42.214
  STEP: deleting a collection @ 01/15/25 18:31:42.229
  I0115 18:31:42.247745 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5426" for this suite. @ 01/15/25 18:31:42.253
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 01/15/25 18:31:42.263
  I0115 18:31:42.263453 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:31:42.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:42.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:42.291
  STEP: Creating a job @ 01/15/25 18:31:42.295
  STEP: Ensuring active pods == parallelism @ 01/15/25 18:31:42.308
  E0115 18:31:42.789228      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:43.789676      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 01/15/25 18:31:44.322
  STEP: deleting Job.batch foo in namespace job-6899, will wait for the garbage collector to delete the pods @ 01/15/25 18:31:44.322
  I0115 18:31:44.388958 30 resources.go:139] Deleting Job.batch foo took: 11.088233ms
  I0115 18:31:44.489727 30 resources.go:163] Terminating Job.batch foo pods took: 100.768897ms
  E0115 18:31:44.789672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:45.790238      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 01/15/25 18:31:45.89
  I0115 18:31:45.895208 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6899" for this suite. @ 01/15/25 18:31:45.901
• [3.648 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/15/25 18:31:45.911
  I0115 18:31:45.911843 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename disruption @ 01/15/25 18:31:45.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:45.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:45.939
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/15/25 18:31:45.945
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:31:45.954
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/15/25 18:31:45.971
  STEP: Waiting for all pods to be running @ 01/15/25 18:31:45.971
  I0115 18:31:45.977238 30 disruption.go:680] pods: 0 < 3
  E0115 18:31:46.791131      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:47.791545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 01/15/25 18:31:47.979
  STEP: Updating the pdb to allow a pod to be evicted @ 01/15/25 18:31:48.006
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:31:48.018
  E0115 18:31:48.792576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:49.792686      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/15/25 18:31:50.023
  STEP: Waiting for all pods to be running @ 01/15/25 18:31:50.023
  STEP: Waiting for the pdb to observed all healthy pods @ 01/15/25 18:31:50.028
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/15/25 18:31:50.072
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:31:50.113
  E0115 18:31:50.792971      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:51.793115      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 01/15/25 18:31:52.119
  STEP: locating a running pod @ 01/15/25 18:31:52.124
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/15/25 18:31:52.136
  STEP: Waiting for the pdb to be deleted @ 01/15/25 18:31:52.146
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/15/25 18:31:52.154
  STEP: Waiting for all pods to be running @ 01/15/25 18:31:52.154
  I0115 18:31:52.251761 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8356" for this suite. @ 01/15/25 18:31:52.257
• [6.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/15/25 18:31:52.267
  I0115 18:31:52.267988 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:31:52.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:52.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:52.301
  STEP: validating api versions @ 01/15/25 18:31:52.305
  I0115 18:31:52.305335 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-585 api-versions'
  I0115 18:31:52.398159 30 builder.go:146] stderr: ""
  I0115 18:31:52.398223 30 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0115 18:31:52.398384 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-585" for this suite. @ 01/15/25 18:31:52.405
• [0.146 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/15/25 18:31:52.413
  I0115 18:31:52.413854 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 18:31:52.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:52.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:52.45
  STEP: creating a Deployment @ 01/15/25 18:31:52.459
  STEP: waiting for Deployment to be created @ 01/15/25 18:31:52.467
  STEP: waiting for all Replicas to be Ready @ 01/15/25 18:31:52.469
  I0115 18:31:52.471477 30 deployment.go:246] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.471541 30 deployment.go:248] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.496287 30 deployment.go:246] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.496346 30 deployment.go:248] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.525609 30 deployment.go:246] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.525700 30 deployment.go:248] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.571196 30 deployment.go:246] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0115 18:31:52.571261 30 deployment.go:248] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0115 18:31:52.793836      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:53.794228      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:53.849692 30 deployment.go:246] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0115 18:31:53.849778 30 deployment.go:248] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0115 18:31:54.101259 30 deployment.go:248] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/15/25 18:31:54.101
  I0115 18:31:54.139250 30 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/15/25 18:31:54.139
  I0115 18:31:54.141792 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.141944 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.142049 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.142140 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.142245 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.142328 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.142422 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.142503 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 0
  I0115 18:31:54.143418 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:54.143473 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:54.143500 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.143512 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.143544 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.143556 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.166673 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.166721 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.216085 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.216346 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:54.235763 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:54.235840 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:54.252918 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:54.253530 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  E0115 18:31:54.794548      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:55.794641      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:55.869794 30 deployment.go:309] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:55.869846 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:55.926326 30 deployment.go:311] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  STEP: listing Deployments @ 01/15/25 18:31:55.926
  I0115 18:31:55.932671 30 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/15/25 18:31:55.932
  I0115 18:31:55.958762 30 deployment.go:360] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/15/25 18:31:55.958
  I0115 18:31:55.969038 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0115 18:31:55.986816 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0115 18:31:56.037225 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0115 18:31:56.056245 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0115 18:31:56.079504 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0115 18:31:56.795626      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:56.882705 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0115 18:31:56.946751 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0115 18:31:56.964151 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0115 18:31:57.796176      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:31:58.159184 30 deployment.go:389] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/15/25 18:31:58.195
  STEP: fetching the DeploymentStatus @ 01/15/25 18:31:58.212
  I0115 18:31:58.219064 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:58.219247 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:58.219402 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:58.219955 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:58.220112 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 1
  I0115 18:31:58.220261 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:58.220417 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:58.220777 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 2
  I0115 18:31:58.220882 30 deployment.go:449] observed Deployment test-deployment in namespace deployment-115 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/15/25 18:31:58.221
  I0115 18:31:58.236718 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.236832 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.237118 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.237177 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.237493 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.237655 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.238076 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.238229 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.238524 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.238800 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.239072 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.239338 30 deployment.go:475] observed event type MODIFIED
  I0115 18:31:58.243176 30 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0115 18:31:58.278944 30 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65eec309-1a29-4fb2-911d-76e0c31d0f7c",
      ResourceVersion: (string) (len=6) "242533",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a475b5b9-4d8d-43cd-bc5e-5e4c4e436653",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 34 37 35  62 35 62 39 2d 34 64 38  |":\"a475b5b9-4d8|
              00000130  64 2d 34 33 63 64 2d 62  63 35 65 2d 35 65 34 63  |d-43cd-bc5e-5e4c|
              00000140  34 65 34 33 36 36 35 33  5c 22 7d 22 3a 7b 7d 7d  |4e436653\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0115 18:31:58.315243 30 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cccf0b1-f786-4258-aaa8-e44364b607f3",
      ResourceVersion: (string) (len=6) "242654",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a475b5b9-4d8d-43cd-bc5e-5e4c4e436653",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 34 37 35  62 35 62 39 2d 34 64 38  |":\"a475b5b9-4d8|
              00000130  64 2d 34 33 63 64 2d 62  63 35 65 2d 35 65 34 63  |d-43cd-bc5e-5e4c|
              00000140  34 65 34 33 36 36 35 33  5c 22 7d 22 3a 7b 7d 7d  |4e436653\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0115 18:31:58.390415 30 deployment.go:669] pod: "test-deployment-f78d658f9-7vfzb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-7vfzb",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=14) "deployment-115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d07879d-22fb-47b7-a5e2-e2cd59d4b230",
      ResourceVersion: (string) (len=6) "242649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562720,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "8cccf0b1-f786-4258-aaa8-e44364b607f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 63 63 63 66 30 62 31  |uid\":\"8cccf0b1|
              000000a0  2d 66 37 38 36 2d 34 32  35 38 2d 61 61 61 38 2d  |-f786-4258-aaa8-|
              000000b0  65 34 34 33 36 34 62 36  30 37 66 33 5c 22 7d 22  |e44364b607f3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  31 32 35 5c 22 7d 22 3a  |.233.68.125\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vtb79",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vtb79",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872562714,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=71) "sha256:afb61768ce381961ca0beff95337601f29dc70ff3ed14e5e4b3e5699057e6aa8",
          ContainerID: (string) (len=77) "containerd://c284e9a5882d54c0e35badfe56a0819acf3ebd2f01d0c189fde76f90dbd63aeb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vtb79",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0115 18:31:58.396052 30 deployment.go:669] pod: "test-deployment-f78d658f9-d5w9t":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-d5w9t",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=14) "deployment-115",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35a91926-37d2-4a72-8c94-952242e03b1e",
      ResourceVersion: (string) (len=6) "242626",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "8cccf0b1-f786-4258-aaa8-e44364b607f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 63 63 63 66 30 62 31  |uid\":\"8cccf0b1|
              000000a0  2d 66 37 38 36 2d 34 32  35 38 2d 61 61 61 38 2d  |-f786-4258-aaa8-|
              000000b0  65 34 34 33 36 34 62 36  30 37 66 33 5c 22 7d 22  |e44364b607f3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 30 2e 32 33 33 2e 36  |"ip\":\"10.233.6|
              00000290  37 2e 31 32 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |7.122\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppgcw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppgcw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872562715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872562716,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872562716,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872562717,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://2692d57f2995a7462c4e370c7661856d5d16b7d6a7024c08c96d75a766b7f71a"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=71) "sha256:afb61768ce381961ca0beff95337601f29dc70ff3ed14e5e4b3e5699057e6aa8",
          ContainerID: (string) (len=77) "containerd://2692d57f2995a7462c4e370c7661856d5d16b7d6a7024c08c96d75a766b7f71a",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ppgcw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0115 18:31:58.398576 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-115" for this suite. @ 01/15/25 18:31:58.404
• [6.000 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/15/25 18:31:58.415
  I0115 18:31:58.415101 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/15/25 18:31:58.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:31:58.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:31:58.451
  STEP: create the container to handle the HTTPGet hook request. @ 01/15/25 18:31:58.46
  E0115 18:31:58.796823      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:31:59.797312      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/15/25 18:32:00.512
  E0115 18:32:00.798341      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:01.798292      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 01/15/25 18:32:02.536
  STEP: delete the pod with lifecycle hook @ 01/15/25 18:32:02.558
  E0115 18:32:02.799017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:03.799418      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:04.580767 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7230" for this suite. @ 01/15/25 18:32:04.587
• [6.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/15/25 18:32:04.599
  I0115 18:32:04.599891 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 18:32:04.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:32:04.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:32:04.63
  I0115 18:32:04.634637 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:32:04.800297      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:05.801439      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:06.801886      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:07.802544      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:08.803233      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:09.803345      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:10.803883      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/15/25 18:32:11.372
  I0115 18:32:11.372703 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-484 --namespace=crd-publish-openapi-484 create -f -'
  I0115 18:32:11.515641 30 builder.go:146] stderr: ""
  I0115 18:32:11.515705 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5044-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0115 18:32:11.515838 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-484 --namespace=crd-publish-openapi-484 delete e2e-test-crd-publish-openapi-5044-crds test-cr'
  I0115 18:32:11.627565 30 builder.go:146] stderr: ""
  I0115 18:32:11.627640 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5044-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0115 18:32:11.627734 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-484 --namespace=crd-publish-openapi-484 apply -f -'
  I0115 18:32:11.765360 30 builder.go:146] stderr: ""
  I0115 18:32:11.765430 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5044-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0115 18:32:11.765524 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-484 --namespace=crd-publish-openapi-484 delete e2e-test-crd-publish-openapi-5044-crds test-cr'
  E0115 18:32:11.804031      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:11.860871 30 builder.go:146] stderr: ""
  I0115 18:32:11.860937 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5044-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/15/25 18:32:11.86
  I0115 18:32:11.861194 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-484 explain e2e-test-crd-publish-openapi-5044-crds'
  I0115 18:32:11.955908 30 builder.go:146] stderr: ""
  I0115 18:32:11.955993 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5044-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0115 18:32:12.805001      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:13.636572 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-484" for this suite. @ 01/15/25 18:32:13.647
• [9.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/15/25 18:32:13.658
  I0115 18:32:13.658882 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 18:32:13.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:32:13.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:32:13.766
  STEP: Creating a pod to test env composition @ 01/15/25 18:32:13.771
  E0115 18:32:13.805469      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:14.805801      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:15.806166      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:16.806603      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:32:17.8
  I0115 18:32:17.804678 30 output.go:207] Trying to get logs from node node6 pod var-expansion-a298e3d1-6afd-4d65-ba22-a85750ae52bd container dapi-container: <nil>
  E0115 18:32:17.806814      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 01/15/25 18:32:17.821
  I0115 18:32:17.858683 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6486" for this suite. @ 01/15/25 18:32:17.864
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/15/25 18:32:17.874
  I0115 18:32:17.874519 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename controllerrevisions @ 01/15/25 18:32:17.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:32:17.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:32:17.904
  STEP: Creating DaemonSet "e2e-m7p86-daemon-set" @ 01/15/25 18:32:17.978
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/15/25 18:32:17.989
  I0115 18:32:18.066486 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:18.066573 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:18.066636 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:18.073004 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-m7p86-daemon-set: 0
  I0115 18:32:18.073065 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:32:18.807430      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:18.997333 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:18.997411 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:18.997447 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:19.001979 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-m7p86-daemon-set: 1
  I0115 18:32:19.002021 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:32:19.807634      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:19.997731 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:19.997817 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:19.997880 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:32:20.003292 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-m7p86-daemon-set: 3
  I0115 18:32:20.003345 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-m7p86-daemon-set
  STEP: Confirm DaemonSet "e2e-m7p86-daemon-set" successfully created with "daemonset-name=e2e-m7p86-daemon-set" label @ 01/15/25 18:32:20.008
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-m7p86-daemon-set" @ 01/15/25 18:32:20.017
  I0115 18:32:20.021948 30 controller_revision.go:162] Located ControllerRevision: "e2e-m7p86-daemon-set-6d84d44db"
  STEP: Patching ControllerRevision "e2e-m7p86-daemon-set-6d84d44db" @ 01/15/25 18:32:20.025
  I0115 18:32:20.040904 30 controller_revision.go:173] e2e-m7p86-daemon-set-6d84d44db has been patched
  STEP: Create a new ControllerRevision @ 01/15/25 18:32:20.04
  I0115 18:32:20.065718 30 controller_revision.go:191] Created ControllerRevision: e2e-m7p86-daemon-set-6b7c89854d
  STEP: Confirm that there are two ControllerRevisions @ 01/15/25 18:32:20.065
  I0115 18:32:20.065832 30 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0115 18:32:20.069405 30 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-m7p86-daemon-set-6d84d44db" @ 01/15/25 18:32:20.069
  STEP: Confirm that there is only one ControllerRevision @ 01/15/25 18:32:20.078
  I0115 18:32:20.078258 30 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0115 18:32:20.081991 30 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-m7p86-daemon-set-6b7c89854d" @ 01/15/25 18:32:20.092
  I0115 18:32:20.106325 30 controller_revision.go:220] e2e-m7p86-daemon-set-6b7c89854d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/15/25 18:32:20.106
  W0115 18:32:20.121327      30 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/15/25 18:32:20.121
  I0115 18:32:20.121526 30 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0115 18:32:20.807862      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:21.122241 30 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0115 18:32:21.127921 30 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-m7p86-daemon-set-6b7c89854d=updated" @ 01/15/25 18:32:21.128
  STEP: Confirm that there is only one ControllerRevision @ 01/15/25 18:32:21.145
  I0115 18:32:21.145193 30 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0115 18:32:21.228059 30 controller_revision.go:265] Found 1 ControllerRevisions
  I0115 18:32:21.232171 30 controller_revision.go:246] ControllerRevision "e2e-m7p86-daemon-set-7674877c69" has revision 3
  STEP: Deleting DaemonSet "e2e-m7p86-daemon-set" @ 01/15/25 18:32:21.236
  STEP: deleting DaemonSet.extensions e2e-m7p86-daemon-set in namespace controllerrevisions-2700, will wait for the garbage collector to delete the pods @ 01/15/25 18:32:21.236
  I0115 18:32:21.302133 30 resources.go:139] Deleting DaemonSet.extensions e2e-m7p86-daemon-set took: 10.309725ms
  I0115 18:32:21.403304 30 resources.go:163] Terminating DaemonSet.extensions e2e-m7p86-daemon-set pods took: 101.165356ms
  E0115 18:32:21.808439      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:22.809436      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:32:23.311572 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-m7p86-daemon-set: 0
  I0115 18:32:23.311632 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-m7p86-daemon-set
  I0115 18:32:23.317249 30 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"242971"},"items":null}

  I0115 18:32:23.321442 30 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"242971"},"items":null}

  I0115 18:32:23.343055 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2700" for this suite. @ 01/15/25 18:32:23.428
• [5.566 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/15/25 18:32:23.44
  I0115 18:32:23.440963 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/15/25 18:32:23.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:32:23.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:32:23.47
  I0115 18:32:23.474551 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:32:23.809642      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:24.809992      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:25.810093      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:26.810425      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:27.810679      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:28.811139      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:29.811516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:30.811720      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:31.812347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:32.813238      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:33.813834      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:34.814156      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:35.814596      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:36.815156      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:37.815819      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:38.816139      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:39.817029      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:40.817368      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:41.817562      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:42.817725      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:43.818027      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:44.818008      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:45.818079      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:46.818300      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:47.818495      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:48.818809      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:49.819845      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:50.820604      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:51.820737      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:52.821021      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:53.821324      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:54.821489      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:55.822357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:56.822682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:57.823522      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:58.823676      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:32:59.824015      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:00.824339      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:01.825415      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:02.825991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:03.826170      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:04.826478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:05.827059      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:06.827529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:07.828387      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:08.828848      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:09.829494      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:10.829793      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:11.830205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:12.830514      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:13.831367      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:14.831689      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:15.832351      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:16.832665      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:17.832757      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:18.833304      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:19.833562      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:20.833847      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:21.834005      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:22.834364      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:33:23.475122 30 util.go:396] Waiting for terminating namespaces to be deleted...
  I0115 18:33:23.481658 30 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/15/25 18:33:23.481
  I0115 18:33:23.708045 30 taints.go:463] Pod1 is running on node6. Tainting Node
  E0115 18:33:23.835120      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:24.835755      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:25.836689      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:33:25.967618 30 taints.go:471] Pod2 is running on node6. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/15/25 18:33:25.967
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/15/25 18:33:25.992
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/15/25 18:33:25.997
  E0115 18:33:26.836995      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:27.837261      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:28.837483      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:29.837783      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:30.838601      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:31.839090      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:33:32.244043 30 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0115 18:33:32.839928      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:33.840412      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:34.841018      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:35.841385      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:36.842011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:37.842607      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:38.843247      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:39.843884      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:40.844402      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:41.844945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:42.845483      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:43.845845      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:44.846438      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:45.846655      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:46.847219      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:47.847808      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:48.848337      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:49.849260      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:50.849726      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:51.850560      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:33:52.320989 30 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/15/25 18:33:52.344
  I0115 18:33:52.349954 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1779" for this suite. @ 01/15/25 18:33:52.356
• [88.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/15/25 18:33:52.375
  I0115 18:33:52.375307 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename cronjob @ 01/15/25 18:33:52.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:33:52.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:33:52.409
  STEP: Creating a suspended cronjob @ 01/15/25 18:33:52.414
  STEP: Ensuring no jobs are scheduled @ 01/15/25 18:33:52.422
  E0115 18:33:52.851681      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:53.852089      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:54.853207      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:55.853551      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:56.854877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:57.855306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:58.856343      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:33:59.857264      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:00.858077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:01.858659      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:02.858928      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:03.859323      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:04.860067      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:05.860548      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:06.861399      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:07.861731      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:08.861935      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:09.862366      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:10.863080      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:11.863403      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:12.864140      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:13.864539      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:14.864840      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:15.865027      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:16.865318      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:17.865661      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:18.866602      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:19.866987      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:20.867634      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:21.867984      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:22.868873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:23.869279      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:24.869916      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:25.870387      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:26.870506      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:27.870837      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:28.871898      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:29.872254      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:30.873275      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:31.873664      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:32.874031      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:33.874434      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:34.875147      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:35.875879      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:36.876141      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:37.876854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:38.877417      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:39.877812      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:40.878831      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:41.879238      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:42.879581      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:43.880216      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:44.881112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:45.881518      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:46.881735      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:47.882097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:48.882990      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:49.883387      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:50.883593      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:51.883971      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:52.884936      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:53.885282      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:54.886166      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:55.886473      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:56.887102      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:57.887417      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:58.887879      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:34:59.890220      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:00.889494      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:01.889801      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:02.890234      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:03.890573      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:04.891092      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:05.891568      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:06.892780      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:07.893146      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:08.893728      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:09.894097      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:10.894547      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:11.894880      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:12.895478      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:13.895860      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:14.896117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:15.896573      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:16.896886      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:17.897211      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:18.898086      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:19.898385      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:20.898881      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:21.899192      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:22.899449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:23.899782      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:24.900622      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:25.900874      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:26.901200      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:27.901546      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:28.901822      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:29.902122      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:30.902921      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:31.903239      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:32.903324      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:33.903658      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:34.904618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:35.904857      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:36.905207      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:37.905507      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:38.906099      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:39.906449      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:40.907356      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:41.907640      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:42.908120      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:43.908433      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:44.908841      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:45.909080      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:46.909202      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:47.909469      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:48.910528      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:49.910889      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:50.911270      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:51.911680      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:52.912680      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:53.912995      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:54.913469      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:55.913740      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:56.914549      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:57.914839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:58.915924      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:35:59.916259      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:00.917050      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:01.917357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:02.917597      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:03.917894      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:04.917989      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:05.918840      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:06.919466      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:07.919833      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:08.920399      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:09.920697      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:10.921314      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:11.921628      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:12.921719      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:13.922042      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:14.922727      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:15.922989      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:16.924172      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:17.924529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:18.924899      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:19.925217      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:20.926290      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:21.926614      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:22.927374      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:23.927783      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:24.928094      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:25.928776      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:26.929499      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:27.929859      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:28.929871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:29.930373      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:30.930716      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:31.930998      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:32.931537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:33.932589      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:34.932238      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:35.933138      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:36.933548      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:37.933670      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:38.934264      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:39.934839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:40.935336      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:41.935766      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:42.936093      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:43.937029      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:44.937487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:45.937583      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:46.940233      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:47.940352      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:48.940668      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:49.941662      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:50.941839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:51.942420      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:52.942852      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:53.943825      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:54.945697      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:55.946305      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:56.946655      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:57.947458      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:58.947780      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:36:59.948969      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:00.949886      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:01.950514      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:02.950683      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:03.950805      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:04.950961      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:05.951759      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:06.951989      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:07.952048      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:08.952211      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:09.953158      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:10.953328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:11.953495      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:12.953863      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:13.953992      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:14.954319      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:15.955128      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:16.955310      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:17.955460      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:18.955631      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:19.956709      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:20.957786      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:21.957950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:22.958139      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:23.958334      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:24.958509      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:25.958612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:26.958861      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:27.959026      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:28.959212      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:29.959373      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:30.960443      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:31.960546      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:32.960729      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:33.960920      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:34.961123      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:35.962067      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:36.962455      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:37.963033      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:38.963392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:39.963662      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:40.963871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:41.963908      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:42.964036      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:43.964491      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:44.964791      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:45.965291      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:46.965632      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:47.966422      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:48.966692      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:49.967428      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:50.968009      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:51.968500      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:52.968832      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:53.969222      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:54.969580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:55.969647      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:56.970112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:57.970827      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:58.971206      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:37:59.972132      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:00.972360      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:01.972735      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:02.973057      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:03.973638      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:04.973969      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:05.974502      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:06.974775      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:07.975784      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:08.976199      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:09.977239      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:10.977969      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:11.978049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:12.978424      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:13.979342      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:14.979669      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:15.980299      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:16.980624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:17.980992      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:18.981322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:19.981964      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:20.982191      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:21.982801      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:22.983156      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:23.984241      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:24.984562      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:25.985505      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:26.985826      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:27.986200      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:28.986436      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:29.986803      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:30.987772      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:31.988334      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:32.988649      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:33.988873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:34.989256      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:35.989487      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:36.989816      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:37.990197      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:38.990473      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:39.990660      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:40.991818      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:41.992800      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:42.993159      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:43.993335      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:44.993736      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:45.994677      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:46.995185      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:47.995902      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:48.996108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:49.996455      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:50.996695      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:51.997296      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/15/25 18:38:52.424
  STEP: Removing cronjob @ 01/15/25 18:38:52.43
  I0115 18:38:52.441146 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8004" for this suite. @ 01/15/25 18:38:52.449
• [300.089 seconds]
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/15/25 18:38:52.464
  I0115 18:38:52.464685 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename limitrange @ 01/15/25 18:38:52.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:38:52.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:38:52.493
  STEP: Creating LimitRange "e2e-limitrange-bzhlh" in namespace "limitrange-8359" @ 01/15/25 18:38:52.497
  STEP: Creating another limitRange in another namespace @ 01/15/25 18:38:52.509
  I0115 18:38:52.588862 30 limit_range.go:299] Namespace "e2e-limitrange-bzhlh-6498" created
  I0115 18:38:52.588920 30 limit_range.go:300] Creating LimitRange "e2e-limitrange-bzhlh" in namespace "e2e-limitrange-bzhlh-6498"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bzhlh" @ 01/15/25 18:38:52.6
  I0115 18:38:52.605774 30 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bzhlh" in "limitrange-8359" namespace @ 01/15/25 18:38:52.605
  I0115 18:38:52.616872 30 limit_range.go:335] LimitRange "e2e-limitrange-bzhlh" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bzhlh" by Collection with labelSelector: "e2e-limitrange-bzhlh=patched" @ 01/15/25 18:38:52.616
  STEP: Confirm that the limitRange "e2e-limitrange-bzhlh" has been deleted @ 01/15/25 18:38:52.638
  I0115 18:38:52.638821 30 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0115 18:38:52.645029 30 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-bzhlh=patched"
  I0115 18:38:52.645146 30 limit_range.go:344] LimitRange "e2e-limitrange-bzhlh" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bzhlh" @ 01/15/25 18:38:52.645
  I0115 18:38:52.650539 30 limit_range.go:350] Found 1 limitRange
  I0115 18:38:52.650716 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8359" for this suite. @ 01/15/25 18:38:52.657
  STEP: Destroying namespace "e2e-limitrange-bzhlh-6498" for this suite. @ 01/15/25 18:38:52.666
• [0.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 01/15/25 18:38:52.679
  I0115 18:38:52.679324 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:38:52.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:38:52.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:38:52.703
  STEP: Looking for a node to schedule job pods @ 01/15/25 18:38:52.708
  STEP: Creating a job @ 01/15/25 18:38:52.757
  STEP: Waiting for all the pods to be ready @ 01/15/25 18:38:52.768
  E0115 18:38:52.997439      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:53.997912      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:54.998658      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:55.999072      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 01/15/25 18:38:56.785
  STEP: Evict all the Pods @ 01/15/25 18:38:56.792
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-k9p22/job-3395 @ 01/15/25 18:38:56.792
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-8whd9/job-3395 @ 01/15/25 18:38:56.792
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-xbw8p/job-3395 @ 01/15/25 18:38:56.792
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-k9p22/job-3395 to be deleted @ 01/15/25 18:38:56.847
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-xbw8p/job-3395 to be deleted @ 01/15/25 18:38:56.854
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-8whd9/job-3395 to be deleted @ 01/15/25 18:38:56.854
  E0115 18:38:56.999468      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:57.999875      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:38:58.999924      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:00.000761      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:01.001245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:02.001361      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 01/15/25 18:39:02.877
  E0115 18:39:03.002266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:04.002575      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:05.003576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:06.003928      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:07.004787      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:08.005115      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:09.006056      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:10.006547      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:11.007574      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:12.007936      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:13.008824      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:14.009232      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:15.009471      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:16.009762      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:17.010155      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:18.010470      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:19.010734      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:20.011034      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:21.011017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:22.011328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:23.012208      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:24.012509      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:25.012655      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:26.012859      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:27.013829      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:28.014132      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:29.014311      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:30.014643      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:31.015529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:32.015930      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:33.016639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:34.017160      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:35.017400      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:36.017842      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:37.018835      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:38.019766      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:39.019430      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:40.020054      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:41.020157      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:42.020496      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:43.021136      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:44.021616      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:45.022053      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:39:45.023133 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3395" for this suite. @ 01/15/25 18:39:45.03
• [52.363 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 01/15/25 18:39:45.042
  I0115 18:39:45.042737 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 18:39:45.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:39:45.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:39:45.07
  STEP: Creating service test in namespace statefulset-7259 @ 01/15/25 18:39:45.074
  STEP: Creating statefulset ss in namespace statefulset-7259 @ 01/15/25 18:39:45.084
  I0115 18:39:45.175063 30 wait.go:40] Found 0 stateful pods, waiting for 1
  E0115 18:39:46.022319      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:47.022691      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:48.023035      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:49.023347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:50.023739      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:51.023919      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:52.024440      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:53.024841      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:54.025322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:55.025682      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:39:55.156748 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0115 18:39:56.026545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:57.026943      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:58.027290      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:39:59.027688      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:00.028060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:01.028390      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:02.028801      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:03.029322      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:04.029657      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:05.030020      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:05.156159 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/15/25 18:40:05.165
  STEP: updating a scale subresource @ 01/15/25 18:40:05.169
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/15/25 18:40:05.18
  STEP: Patch a scale subresource @ 01/15/25 18:40:05.186
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/15/25 18:40:05.204
  I0115 18:40:05.215736 30 statefulset.go:138] Deleting all statefulset in ns statefulset-7259
  I0115 18:40:05.225308 30 rest.go:152] Scaling statefulset ss to 0
  E0115 18:40:06.031023      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:07.031377      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:08.031771      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:09.032199      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:10.032576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:11.032905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:12.033255      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:13.033584      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:14.033948      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:15.034311      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:15.347511 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 18:40:15.352900 30 rest.go:90] Deleting statefulset ss
  I0115 18:40:15.376321 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7259" for this suite. @ 01/15/25 18:40:15.387
• [30.354 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/15/25 18:40:15.397
  I0115 18:40:15.397362 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 18:40:15.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:40:15.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:40:15.458
  I0115 18:40:15.509605 30 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0115 18:40:15.657683 30 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0115 18:40:15.665387 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:15.665567 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:15.665613 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:15.669364 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:40:15.669411 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:40:16.035003      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:16.666583 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:16.666668 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:16.666708 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:16.672425 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0115 18:40:16.672506 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:40:17.035392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:17.665378 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:17.665498 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:17.665540 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:17.670926 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 18:40:17.671001 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0115 18:40:17.671032 30 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0115 18:40:17.685022 30 daemon_set.go:102] Updating DaemonSet daemon-set
  E0115 18:40:18.036050      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:18.706366 30 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0115 18:40:18.745216 30 daemon_set.go:102] Updating DaemonSet daemon-set
  I0115 18:40:18.745286 30 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0115 18:40:18.808031 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:18.808127 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:18.808162 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:19.036612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:19.760356 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:19.760445 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:19.760484 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:20.037704      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:20.761044 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:20.761123 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:20.761162 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:21.038536      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:21.757765 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:21.757839 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:21.757874 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:22.039286      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:22.758612 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:22.758692 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:22.758730 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:23.040400      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:23.758139 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:23.758215 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:23.758281 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:24.040687      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:24.757756 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:24.757833 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:24.757875 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:25.041612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:25.762774 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:25.762849 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:25.762885 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:26.042138      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:26.758089 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:26.758174 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:26.758251 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:27.042808      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:27.759459 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:27.759568 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:27.759611 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:28.043766      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:28.759114 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:28.759220 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:28.759261 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:29.044516      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:29.757524 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:29.757633 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:29.757681 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:30.045265      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:30.764722 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:30.764825 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:30.764868 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:31.045889      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:31.757973 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:31.758080 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:31.758123 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:32.046568      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:32.758519 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:32.758592 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:32.758667 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:33.047282      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:33.759220 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:33.759313 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:33.759347 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:34.047844      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:34.763018 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:34.763295 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:34.763385 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:35.048543      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:35.759300 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:35.759401 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:35.759434 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:36.049622      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:36.760530 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:36.760653 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:36.760697 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:37.050351      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:37.758685 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:37.758795 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:37.758847 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:38.051100      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:38.757423 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:38.757512 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:38.757548 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:39.051585      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:39.757021 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:39.757133 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:39.757175 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:40.052507      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:40.767868 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:40.767959 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:40.768011 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:41.053633      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:41.759111 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:41.759184 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:41.759226 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:42.053643      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:42.765062 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:42.765157 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:42.765192 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:43.053733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:43.758486 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:43.758580 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:43.758620 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:44.054100      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:44.758318 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:44.758430 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:44.758479 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:45.053953      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:45.756499 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:45.756590 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:45.756626 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:46.054994      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:46.760091 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:46.760194 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:46.760228 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:47.055456      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:47.756987 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:47.757067 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:47.757114 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:48.056294      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:48.760657 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:48.760773 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:48.760817 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:49.056603      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:49.760402 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:49.760485 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:49.760520 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:50.056897      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:50.757432 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:50.757520 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:50.757566 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0115 18:40:51.056908      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:51.752088 30 daemon_set.go:1198] Pod daemon-set-2w5km is not available
  I0115 18:40:51.759343 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:51.759471 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:40:51.759517 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 01/15/25 18:40:51.769
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6853, will wait for the garbage collector to delete the pods @ 01/15/25 18:40:51.769
  I0115 18:40:51.834843 30 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.56803ms
  I0115 18:40:51.935463 30 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.605009ms
  E0115 18:40:52.056994      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:53.057152      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:40:53.945385 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:40:53.945459 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0115 18:40:53.949998 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"244832"},"items":null}

  I0115 18:40:53.953953 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"244832"},"items":null}

  I0115 18:40:53.972984 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6853" for this suite. @ 01/15/25 18:40:53.978
• [38.592 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/15/25 18:40:53.989
  I0115 18:40:53.989558 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:40:53.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:40:54.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:40:54.026
  STEP: Creating secret with name projected-secret-test-11a2e477-39cc-47d0-83cf-34110aba5264 @ 01/15/25 18:40:54.033
  STEP: Creating a pod to test consume secrets @ 01/15/25 18:40:54.042
  E0115 18:40:54.057985      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:55.058815      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:56.059164      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:57.059517      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:40:58.059529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:40:58.073
  I0115 18:40:58.077908 30 output.go:207] Trying to get logs from node node6 pod pod-projected-secrets-0b39abb9-3546-45e0-9030-9d49afd039e2 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:40:58.089
  I0115 18:40:58.118382 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4800" for this suite. @ 01/15/25 18:40:58.124
• [4.147 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 01/15/25 18:40:58.136
  I0115 18:40:58.136899 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:40:58.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:40:58.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:40:58.167
  STEP: Creating a job @ 01/15/25 18:40:58.17
  STEP: Ensuring job reaches completions @ 01/15/25 18:40:58.181
  E0115 18:40:59.060205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:00.061761      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:01.061099      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:02.061406      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:03.061930      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:04.062235      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:05.063173      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:06.064096      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:07.064454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:08.064857      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:08.226864 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6247" for this suite. @ 01/15/25 18:41:08.232
• [10.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/15/25 18:41:08.24
  I0115 18:41:08.240982 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 18:41:08.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:41:08.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:41:08.268
  STEP: set up a multi version CRD @ 01/15/25 18:41:08.272
  I0115 18:41:08.273527 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:41:09.065781      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:10.066752      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:11.067094      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:12.067157      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:13.068119      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:14.069139      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:15.069366      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:16.069832      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:17.070051      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 01/15/25 18:41:17.318
  STEP: check the new version name is served @ 01/15/25 18:41:17.34
  E0115 18:41:18.070402      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 01/15/25 18:41:18.51
  E0115 18:41:19.070592      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 01/15/25 18:41:19.245
  E0115 18:41:20.071334      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:21.071382      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:22.071785      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:22.428516 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7037" for this suite. @ 01/15/25 18:41:22.44
• [14.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/15/25 18:41:22.453
  I0115 18:41:22.453942 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:41:22.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:41:22.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:41:22.481
  STEP: Creating configMap that has name configmap-test-emptyKey-dfb7d4f0-79a7-4913-8473-3ba8104cb41a @ 01/15/25 18:41:22.485
  I0115 18:41:22.488202 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8176" for this suite. @ 01/15/25 18:41:22.541
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/15/25 18:41:22.554
  I0115 18:41:22.554924 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:41:22.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:41:22.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:41:22.581
  STEP: Creating secret with name secret-test-map-d635da1c-f363-43ec-af91-08e93ef265f4 @ 01/15/25 18:41:22.584
  STEP: Creating a pod to test consume secrets @ 01/15/25 18:41:22.592
  E0115 18:41:23.072300      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:24.072560      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:25.072877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:26.072961      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:41:26.622
  I0115 18:41:26.626899 30 output.go:207] Trying to get logs from node node6 pod pod-secrets-1df78a0e-e12f-4f05-8193-19a0220797fa container secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:41:26.635
  I0115 18:41:26.663093 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6793" for this suite. @ 01/15/25 18:41:26.668
• [4.125 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/15/25 18:41:26.679
  I0115 18:41:26.679896 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:41:26.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:41:26.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:41:26.707
  STEP: Counting existing ResourceQuota @ 01/15/25 18:41:26.711
  E0115 18:41:27.073907      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:28.074259      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:29.074857      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:30.075784      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:31.076881      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/15/25 18:41:31.717
  STEP: Ensuring resource quota status is calculated @ 01/15/25 18:41:31.73
  E0115 18:41:32.077562      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:33.077912      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 01/15/25 18:41:33.736
  STEP: Ensuring resource quota status captures replicaset creation @ 01/15/25 18:41:33.761
  E0115 18:41:34.078785      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:35.079127      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 01/15/25 18:41:35.768
  STEP: Ensuring resource quota status released usage @ 01/15/25 18:41:35.782
  E0115 18:41:36.080043      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:37.080368      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:37.823912 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8092" for this suite. @ 01/15/25 18:41:37.834
• [11.168 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/15/25 18:41:37.847
  I0115 18:41:37.847940 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:41:37.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:41:37.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:41:37.878
  I0115 18:41:37.963301 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5995" for this suite. @ 01/15/25 18:41:37.968
• [0.130 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 01/15/25 18:41:37.978
  I0115 18:41:37.978449 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 18:41:37.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:41:38.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:41:38.006
  STEP: Creating service test in namespace statefulset-9637 @ 01/15/25 18:41:38.011
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/15/25 18:41:38.022
  STEP: Creating stateful set ss in namespace statefulset-9637 @ 01/15/25 18:41:38.028
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9637 @ 01/15/25 18:41:38.041
  I0115 18:41:38.069260 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0115 18:41:38.080594      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:39.081545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:40.081858      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:41.082115      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:42.082423      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:43.082816      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:44.083128      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:45.083334      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:46.083692      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:47.084480      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:48.049619 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/15/25 18:41:48.049
  I0115 18:41:48.054533 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0115 18:41:48.085061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:48.232662 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:41:48.232721 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:41:48.232739 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:41:48.240889 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0115 18:41:49.086141      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:50.087075      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:51.087226      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:52.088080      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:53.088671      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:54.089065      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:55.089357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:56.089615      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:57.089945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:41:58.090380      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:58.240223 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:41:58.240292 30 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0115 18:41:58.341160 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.99999958s
  E0115 18:41:59.090911      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:41:59.348554 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.921618087s
  E0115 18:42:00.091167      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:00.356335 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.914389748s
  E0115 18:42:01.091332      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:01.368264 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.90721909s
  E0115 18:42:02.091973      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:02.378413 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.894334546s
  E0115 18:42:03.093103      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:03.385317 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.884575997s
  E0115 18:42:04.093880      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:04.392295 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.877749277s
  E0115 18:42:05.094048      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:05.400199 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.870623129s
  E0115 18:42:06.094791      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:06.407489 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.862702933s
  E0115 18:42:07.094925      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:07.415662 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 855.526804ms
  E0115 18:42:08.095154      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9637 @ 01/15/25 18:42:08.416
  I0115 18:42:08.425006 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 18:42:08.588433 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 18:42:08.588496 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:42:08.588517 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:42:08.595057 30 wait.go:40] Found 1 stateful pods, waiting for 3
  E0115 18:42:09.095729      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:10.096120      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:11.096493      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:12.096851      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:13.097213      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:14.097583      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:15.097933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:16.098363      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:17.098734      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:18.099127      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:18.596317 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:42:18.596382 30 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:42:18.596399 30 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/15/25 18:42:18.596
  STEP: Scale down will halt with unhealthy stateful pod @ 01/15/25 18:42:18.596
  I0115 18:42:18.606347 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 18:42:18.775507 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:42:18.775567 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:42:18.775586 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:42:18.775663 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 18:42:18.931571 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:42:18.931635 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:42:18.931654 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:42:18.931761 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0115 18:42:19.099360      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:19.210650 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:42:19.210745 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:42:19.210801 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:42:19.210884 30 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0115 18:42:19.218644 30 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0115 18:42:20.100088      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:21.100244      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:22.100885      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:23.101325      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:24.101866      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:25.102289      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:26.102864      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:27.103269      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:28.103761      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:29.104202      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:29.222195 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:42:29.222256 30 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:42:29.222274 30 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:42:29.336586 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.99999943s
  E0115 18:42:30.104946      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:30.343309 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.903400523s
  E0115 18:42:31.105355      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:31.349321 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.896961888s
  E0115 18:42:32.105515      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:32.356621 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.890982885s
  E0115 18:42:33.106178      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:33.365606 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.883016474s
  E0115 18:42:34.107218      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:34.374761 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.874011209s
  E0115 18:42:35.108224      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:35.382139 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.864937312s
  E0115 18:42:36.108411      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:36.390037 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.857904133s
  E0115 18:42:37.109374      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:37.397105 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.849961432s
  E0115 18:42:38.109522      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:38.403442 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 842.765989ms
  E0115 18:42:39.109902      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9637 @ 01/15/25 18:42:39.404
  I0115 18:42:39.411483 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 18:42:39.558756 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 18:42:39.558818 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:42:39.558837 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:42:39.558919 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 18:42:39.755473 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 18:42:39.755544 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:42:39.755561 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:42:39.755652 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-9637 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 18:42:39.937052 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 18:42:39.937116 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:42:39.937136 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:42:39.937154 30 rest.go:152] Scaling statefulset ss to 0
  E0115 18:42:40.110966      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:41.112073      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:42.113121      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:43.114035      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:44.114542      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:45.114906      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:46.115533      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:47.116473      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:48.116938      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:49.117481      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/15/25 18:42:49.968
  I0115 18:42:49.969032 30 statefulset.go:138] Deleting all statefulset in ns statefulset-9637
  I0115 18:42:49.975677 30 rest.go:152] Scaling statefulset ss to 0
  I0115 18:42:49.982808 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 18:42:49.986495 30 rest.go:90] Deleting statefulset ss
  I0115 18:42:50.005322 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9637" for this suite. @ 01/15/25 18:42:50.013
• [72.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/15/25 18:42:50.025
  I0115 18:42:50.025055 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 18:42:50.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:42:50.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:42:50.054
  I0115 18:42:50.091400 30 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0115 18:42:50.117728      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:51.118890      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:52.119265      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:53.119593      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:54.120006      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:55.103082 30 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/15/25 18:42:55.103
  I0115 18:42:55.103266 30 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0115 18:42:55.120112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:56.120415      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:57.109044 30 deployment.go:921] Creating deployment "test-rollover-deployment"
  E0115 18:42:57.121328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:57.125692 30 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0115 18:42:58.121476      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:42:59.121857      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:42:59.136389 30 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0115 18:42:59.185063 30 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0115 18:42:59.196115 30 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0115 18:42:59.212177 30 deployment.go:314] Updating deployment test-rollover-deployment
  I0115 18:42:59.212277 30 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0115 18:43:00.122639      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:01.122887      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:01.221941 30 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0115 18:43:01.230499 30 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0115 18:43:01.239205 30 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0115 18:43:01.239431 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:43:02.123015      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:03.123392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:03.250489 30 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0115 18:43:03.250581 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:43:04.124282      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:05.125073      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:05.250989 30 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0115 18:43:05.251087 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:43:06.125867      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:07.126218      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:07.250341 30 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0115 18:43:07.250441 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:43:08.127014      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:09.127328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:09.250734 30 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0115 18:43:09.250986 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 42, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:43:10.127495      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:11.127722      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:11.251206 30 deployment.go:95] 
  I0115 18:43:11.251283 30 deployment.go:974] Ensure that both old replica sets have no replicas
  I0115 18:43:11.265779 30 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47efd4d7-d78d-48d1-8cb2-d1e2c2f6bcbe",
      ResourceVersion: (string) (len=6) "245781",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 18:43:11.273644 30 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "308b97db-0bf1-49f7-9315-362edcf816ca",
      ResourceVersion: (string) (len=6) "245771",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563379,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "47efd4d7-d78d-48d1-8cb2-d1e2c2f6bcbe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 37 65 66 64 34  64 37 2d 64 37 38 64 2d  |\"47efd4d7-d78d-|
              00000120  34 38 64 31 2d 38 63 62  32 2d 64 31 65 32 63 32  |48d1-8cb2-d1e2c2|
              00000130  66 36 62 63 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f6bcbe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:43:11.274734 30 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0115 18:43:11.275006 30 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7e7a435-eb85-4fbc-9fe7-8b7ddf0e8d59",
      ResourceVersion: (string) (len=6) "245780",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563370,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "47efd4d7-d78d-48d1-8cb2-d1e2c2f6bcbe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 37 65 66 64 34 64 37  2d 64 37 38 64 2d 34 38  |47efd4d7-d78d-48|
              000000c0  64 31 2d 38 63 62 32 2d  64 31 65 32 63 32 66 36  |d1-8cb2-d1e2c2f6|
              000000d0  62 63 62 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bcbe\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:43:11.276369 30 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fde931e-f8d2-4f94-8880-3ea9ea89e641",
      ResourceVersion: (string) (len=6) "245724",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "47efd4d7-d78d-48d1-8cb2-d1e2c2f6bcbe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 37 65 66 64 34  64 37 2d 64 37 38 64 2d  |\"47efd4d7-d78d-|
              00000120  34 38 64 31 2d 38 63 62  32 2d 64 31 65 32 63 32  |48d1-8cb2-d1e2c2|
              00000130  66 36 62 63 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f6bcbe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:43:11.291864 30 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-fg7g9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-fg7g9",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-9404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff2836d1-2f5e-42ce-b260-f59cab07a792",
      ResourceVersion: (string) (len=6) "245738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563379,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "308b97db-0bf1-49f7-9315-362edcf816ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  38 62 39 37 64 62 2d 30  |d\":\"308b97db-0|
              00000090  62 66 31 2d 34 39 66 37  2d 39 33 31 35 2d 33 36  |bf1-49f7-9315-36|
              000000a0  32 65 64 63 66 38 31 36  63 61 5c 22 7d 22 3a 7b  |2edcf816ca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  31 34 33 5c 22 7d 22 3a  |.233.68.143\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ln897",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ln897",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563379,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563379,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://4a0e9d4abf8ec0a45b52036b28062a57e6f7abdfda1fd360ee93a16c47d46cd4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ln897",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:43:11.294210 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9404" for this suite. @ 01/15/25 18:43:11.302
• [21.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/15/25 18:43:11.325
  I0115 18:43:11.325275 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/15/25 18:43:11.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:43:11.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:43:11.354
  I0115 18:43:11.358878 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:43:12.128680      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:13.129113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:14.129905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:15.130823      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:16.131154      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:17.131961      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/15/25 18:43:18.066
  I0115 18:43:18.066392 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 create -f -'
  E0115 18:43:18.133017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:18.194843 30 builder.go:146] stderr: ""
  I0115 18:43:18.194915 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0115 18:43:18.195013 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 delete e2e-test-crd-publish-openapi-883-crds test-foo'
  I0115 18:43:18.303374 30 builder.go:146] stderr: ""
  I0115 18:43:18.303437 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0115 18:43:18.303510 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 apply -f -'
  I0115 18:43:18.422985 30 builder.go:146] stderr: ""
  I0115 18:43:18.423049 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0115 18:43:18.423130 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 delete e2e-test-crd-publish-openapi-883-crds test-foo'
  I0115 18:43:18.510905 30 builder.go:146] stderr: ""
  I0115 18:43:18.510967 30 builder.go:147] stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/15/25 18:43:18.51
  I0115 18:43:18.511335 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 create -f -'
  I0115 18:43:18.594381 30 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/15/25 18:43:18.594
  I0115 18:43:18.594705 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 create -f -'
  I0115 18:43:18.674453 30 builder.go:135] rc: 1
  I0115 18:43:18.674582 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 apply -f -'
  I0115 18:43:18.765094 30 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/15/25 18:43:18.765
  I0115 18:43:18.765324 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 create -f -'
  I0115 18:43:18.848449 30 builder.go:135] rc: 1
  I0115 18:43:18.848577 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 --namespace=crd-publish-openapi-6229 apply -f -'
  I0115 18:43:18.939057 30 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/15/25 18:43:18.939
  I0115 18:43:18.939230 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 explain e2e-test-crd-publish-openapi-883-crds'
  I0115 18:43:19.025426 30 builder.go:146] stderr: ""
  I0115 18:43:19.025523 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-883-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/15/25 18:43:19.025
  I0115 18:43:19.025925 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 explain e2e-test-crd-publish-openapi-883-crds.metadata'
  I0115 18:43:19.106912 30 builder.go:146] stderr: ""
  I0115 18:43:19.107063 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-883-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0115 18:43:19.107376 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 explain e2e-test-crd-publish-openapi-883-crds.spec'
  E0115 18:43:19.133881      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:19.187920 30 builder.go:146] stderr: ""
  I0115 18:43:19.187989 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-883-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0115 18:43:19.188130 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 explain e2e-test-crd-publish-openapi-883-crds.spec.bars'
  I0115 18:43:19.270822 30 builder.go:146] stderr: ""
  I0115 18:43:19.270886 30 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-883-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/15/25 18:43:19.271
  I0115 18:43:19.271132 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=crd-publish-openapi-6229 explain e2e-test-crd-publish-openapi-883-crds.spec.bars2'
  I0115 18:43:19.352163 30 builder.go:135] rc: 1
  E0115 18:43:20.135003      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:21.053828 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6229" for this suite. @ 01/15/25 18:43:21.066
• [9.752 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 01/15/25 18:43:21.078
  I0115 18:43:21.078295 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption @ 01/15/25 18:43:21.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:43:21.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:43:21.113
  E0115 18:43:21.135344      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:43:21.138492 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:43:22.136255      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:23.136580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:24.136761      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:25.137129      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:26.137904      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:27.138213      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:28.138618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:29.138980      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:30.139920      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:31.140289      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:32.141222      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:33.141455      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:34.141945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:35.142151      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:36.143255      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:37.143108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:38.143249      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:39.143540      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:40.144594      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:41.145056      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:42.145571      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:43.146063      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:44.146266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:45.147185      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:46.147734      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:47.147772      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:48.148098      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:49.148334      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:50.148787      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:51.148975      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:52.149257      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:53.149252      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:54.150016      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:55.151023      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:56.151285      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:57.151385      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:58.152440      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:43:59.152466      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:00.152797      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:01.153242      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:02.153799      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:03.154054      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:04.154417      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:05.154627      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:06.154891      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:07.155529      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:08.155846      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:09.156169      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:10.156502      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:11.157501      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:12.157859      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:13.158345      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:14.158735      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:15.171712      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:16.172499      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:17.173138      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:18.173453      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:19.174349      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:20.174624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:44:21.146599 30 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/15/25 18:44:21.151
  I0115 18:44:21.151812 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/15/25 18:44:21.153
  E0115 18:44:21.174865      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:21.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:21.188
  I0115 18:44:21.212372 30 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0115 18:44:21.216966 30 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 01/15/25 18:44:21.29
  STEP: Removing a custom resource @ 01/15/25 18:44:21.303
  STEP: Removing a custom resource @ 01/15/25 18:44:21.318
  I0115 18:44:21.332033 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2774" for this suite. @ 01/15/25 18:44:21.337
  I0115 18:44:21.391984 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7891" for this suite. @ 01/15/25 18:44:21.438
• [60.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/15/25 18:44:21.449
  I0115 18:44:21.449749 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 18:44:21.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:21.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:21.484
  E0115 18:44:22.176076      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:23.176456      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:44:23.550523 30 delete.go:62] Deleting pod "var-expansion-a02d9395-535d-413f-ba90-8fcb6689ca52" in namespace "var-expansion-2973"
  I0115 18:44:23.566045 30 delete.go:70] Wait up to 5m0s for pod "var-expansion-a02d9395-535d-413f-ba90-8fcb6689ca52" to be fully deleted
  E0115 18:44:24.177451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:25.177828      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:44:25.577582 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2973" for this suite. @ 01/15/25 18:44:25.584
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/15/25 18:44:25.597
  I0115 18:44:25.597655 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:44:25.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:25.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:25.63
  STEP: Creating configMap with name projected-configmap-test-volume-e007a980-4a6f-49af-9d4d-0509150c40c3 @ 01/15/25 18:44:25.634
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:44:25.644
  E0115 18:44:26.178247      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:27.178565      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:28.178870      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:29.180392      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:44:29.683
  I0115 18:44:29.688035 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-d5c709b2-b5dd-48f3-bd70-04a754d3fe5b container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:44:29.708
  I0115 18:44:29.731030 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6136" for this suite. @ 01/15/25 18:44:29.737
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/15/25 18:44:29.747
  I0115 18:44:29.747375 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename watch @ 01/15/25 18:44:29.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:29.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:29.782
  STEP: creating a new configmap @ 01/15/25 18:44:29.786
  STEP: modifying the configmap once @ 01/15/25 18:44:29.794
  STEP: modifying the configmap a second time @ 01/15/25 18:44:29.804
  STEP: deleting the configmap @ 01/15/25 18:44:29.817
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/15/25 18:44:29.824
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/15/25 18:44:29.826
  I0115 18:44:29.826277 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5649  66af8b73-a41d-49f8-a88e-85bf18ba189d 246123 0 2025-01-15 18:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-15 18:44:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:44:29.829231 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5649  66af8b73-a41d-49f8-a88e-85bf18ba189d 246124 0 2025-01-15 18:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-15 18:44:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:44:29.829430 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5649" for this suite. @ 01/15/25 18:44:29.836
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/15/25 18:44:29.846
  I0115 18:44:29.846557 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:44:29.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:29.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:29.884
  STEP: Creating configMap with name configmap-test-volume-b26fe4e7-75d9-4ba8-9d9d-4c70bc58414b @ 01/15/25 18:44:29.888
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:44:29.894
  E0115 18:44:30.180217      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:31.180489      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:32.180633      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:33.181010      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:44:33.946
  I0115 18:44:33.951035 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-ff28c2c5-056a-4d3b-bed1-ddd02a5e62ac container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:44:33.96
  I0115 18:44:33.985217 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7954" for this suite. @ 01/15/25 18:44:33.994
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/15/25 18:44:34.004
  I0115 18:44:34.004148 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 18:44:34.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:34.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:34.038
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/15/25 18:44:34.041
  E0115 18:44:34.182171      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:35.182606      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:36.182728      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:37.183300      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:44:38.074
  I0115 18:44:38.078983 30 output.go:207] Trying to get logs from node node6 pod pod-f0639b83-c808-4866-86a4-3e634dd321d5 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 18:44:38.087
  I0115 18:44:38.113138 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4725" for this suite. @ 01/15/25 18:44:38.12
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/15/25 18:44:38.129
  I0115 18:44:38.130031 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:44:38.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:38.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:38.165
  STEP: Counting existing ResourceQuota @ 01/15/25 18:44:38.169
  E0115 18:44:38.184117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:39.184202      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:40.184552      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:41.185270      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:42.186209      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/15/25 18:44:43.175
  E0115 18:44:43.186678      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status is calculated @ 01/15/25 18:44:43.187
  E0115 18:44:44.187542      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:45.188086      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:44:45.195981 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6297" for this suite. @ 01/15/25 18:44:45.203
• [7.172 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/15/25 18:44:45.302
  I0115 18:44:45.302478 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubelet-test @ 01/15/25 18:44:45.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:45.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:45.342
  E0115 18:44:46.188302      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:47.188277      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:48.188667      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:49.188696      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:44:49.372784 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3182" for this suite. @ 01/15/25 18:44:49.379
• [4.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 01/15/25 18:44:49.391
  I0115 18:44:49.392014 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 18:44:49.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:44:49.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:44:49.422
  STEP: Creating service test in namespace statefulset-2127 @ 01/15/25 18:44:49.426
  STEP: Creating a new StatefulSet @ 01/15/25 18:44:49.442
  I0115 18:44:49.460486 30 wait.go:40] Found 0 stateful pods, waiting for 3
  E0115 18:44:50.189630      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:51.189814      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:52.190372      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:53.190361      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:54.190919      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:55.191279      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:56.191970      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:57.192361      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:58.192742      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:44:59.192790      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:44:59.464668 30 wait.go:40] Found 2 stateful pods, waiting for 3
  E0115 18:45:00.193175      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:01.193815      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:02.194302      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:03.194703      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:04.195229      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:05.195748      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:06.195992      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:07.196154      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:08.197232      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:09.197545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:45:09.463217 30 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:45:09.463321 30 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:45:09.463340 30 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/15/25 18:45:09.476
  I0115 18:45:09.489482 30 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/15/25 18:45:09.489
  E0115 18:45:10.198071      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:11.198227      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:12.198619      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:13.199060      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:14.199703      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:15.200049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:16.200290      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:17.201077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:18.201770      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:19.202099      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/15/25 18:45:19.5
  STEP: Performing a canary update @ 01/15/25 18:45:19.5
  I0115 18:45:19.516511 30 statefulset.go:2510] Updating stateful set ss2
  I0115 18:45:19.530768 30 wait.go:74] Waiting for Pod statefulset-2127/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0115 18:45:20.202581      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:21.202792      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:22.203147      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:23.203492      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:24.203828      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:25.203991      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:26.205087      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:27.205575      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:28.205945      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:29.206323      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/15/25 18:45:29.53
  I0115 18:45:29.622789 30 wait.go:40] Found 2 stateful pods, waiting for 3
  E0115 18:45:30.207369      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:31.207742      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:32.208127      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:33.209187      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:34.209474      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:35.209779      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:36.210132      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:37.210480      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:38.210747      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:39.211102      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:45:39.599418 30 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:45:39.599479 30 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:45:39.599497 30 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/15/25 18:45:39.608
  I0115 18:45:39.625834 30 statefulset.go:2510] Updating stateful set ss2
  I0115 18:45:39.641903 30 wait.go:74] Waiting for Pod statefulset-2127/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0115 18:45:40.211601      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:41.211839      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:42.212204      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:43.212531      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:44.212855      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:45.213191      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:46.213521      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:47.213824      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:48.214350      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:49.214643      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:45:49.658222 30 statefulset.go:2510] Updating stateful set ss2
  I0115 18:45:49.673902 30 wait.go:56] Waiting for StatefulSet statefulset-2127/ss2 to complete update
  I0115 18:45:49.673975 30 wait.go:63] Waiting for Pod statefulset-2127/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0115 18:45:50.215446      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:51.215712      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:52.215942      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:53.216025      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:54.216341      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:55.216740      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:56.218299      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:57.217756      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:58.218100      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:45:59.218468      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:45:59.672369 30 statefulset.go:138] Deleting all statefulset in ns statefulset-2127
  I0115 18:45:59.677528 30 rest.go:152] Scaling statefulset ss2 to 0
  E0115 18:46:00.218804      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:01.218854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:02.219283      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:03.219422      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:04.220043      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:05.219984      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:06.220034      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:07.220171      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:08.220558      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:09.220871      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:46:09.704955 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 18:46:09.709374 30 rest.go:90] Deleting statefulset ss2
  I0115 18:46:09.738189 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2127" for this suite. @ 01/15/25 18:46:09.75
• [80.368 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 01/15/25 18:46:09.761
  I0115 18:46:09.761277 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:46:09.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:09.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:09.824
  I0115 18:46:09.828784 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-8234 version'
  I0115 18:46:09.919263 30 builder.go:146] stderr: ""
  I0115 18:46:09.919334 30 builder.go:147] stdout: "Client Version: v1.32.0\nKustomize Version: v5.5.0\nServer Version: v1.32.0\n"
  I0115 18:46:09.919662 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8234" for this suite. @ 01/15/25 18:46:09.926
• [0.177 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/15/25 18:46:09.938
  I0115 18:46:09.938854 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename disruption @ 01/15/25 18:46:09.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:09.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:09.974
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:46:10.004
  STEP: Waiting for all pods to be running @ 01/15/25 18:46:10.053
  I0115 18:46:10.065799 30 disruption.go:691] running pods: 0 < 3
  E0115 18:46:10.221880      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:11.222064      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:46:12.064704 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4252" for this suite. @ 01/15/25 18:46:12.071
• [2.142 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/15/25 18:46:12.081
  I0115 18:46:12.082096 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename daemonsets @ 01/15/25 18:46:12.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:12.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:12.119
  STEP: Creating simple DaemonSet "daemon-set" @ 01/15/25 18:46:12.192
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/15/25 18:46:12.215
  E0115 18:46:12.222848      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:46:12.274228 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:12.274432 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:12.274491 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:12.306467 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:46:12.306719 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:46:13.223049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:46:13.225528 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:13.225628 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:13.225702 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:13.232841 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:46:13.232906 30 fixtures.go:131] Node node4 is running 0 daemon pod, expected 1
  E0115 18:46:14.223331      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:46:14.225581 30 fixtures.go:90] DaemonSet pods can't tolerate node node1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:14.225679 30 fixtures.go:90] DaemonSet pods can't tolerate node node2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:14.225790 30 fixtures.go:90] DaemonSet pods can't tolerate node node3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0115 18:46:14.232603 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0115 18:46:14.232673 30 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 01/15/25 18:46:14.237
  I0115 18:46:14.242823 30 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/15/25 18:46:14.242
  I0115 18:46:14.260754 30 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/15/25 18:46:14.26
  I0115 18:46:14.264152 30 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0115 18:46:14.264583 30 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.264915 30 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.265220 30 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.265556 30 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.266101 30 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3127 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0115 18:46:14.266183 30 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/15/25 18:46:14.266
  STEP: watching for the daemon set status to be patched @ 01/15/25 18:46:14.277
  I0115 18:46:14.279747 30 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0115 18:46:14.280826 30 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.281355 30 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.281531 30 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.281706 30 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.281754 30 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3127 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0115 18:46:14.281944 30 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0115 18:46:14.281995 30 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3127 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0115 18:46:14.282016 30 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/15/25 18:46:14.291
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3127, will wait for the garbage collector to delete the pods @ 01/15/25 18:46:14.291
  I0115 18:46:14.361731 30 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.478683ms
  I0115 18:46:14.462532 30 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.788857ms
  E0115 18:46:15.224398      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:46:15.771994 30 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0115 18:46:15.772048 30 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0115 18:46:15.777249 30 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"246918"},"items":null}

  I0115 18:46:15.782284 30 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"246918"},"items":null}

  I0115 18:46:15.806141 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3127" for this suite. @ 01/15/25 18:46:15.811
• [3.743 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/15/25 18:46:15.832
  I0115 18:46:15.832497 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename downward-api @ 01/15/25 18:46:15.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:15.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:15.869
  STEP: Creating a pod to test downward api env vars @ 01/15/25 18:46:15.873
  E0115 18:46:16.224385      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:17.224930      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:46:17.905
  I0115 18:46:17.909311 30 output.go:207] Trying to get logs from node node6 pod downward-api-3b4cecf5-70a5-443c-ae70-9f207f03994d container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 18:46:17.928
  I0115 18:46:17.952214 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3510" for this suite. @ 01/15/25 18:46:17.958
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/15/25 18:46:17.968
  I0115 18:46:17.968882 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:46:17.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:18.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:18.078
  STEP: Creating configMap with name projected-configmap-test-volume-map-8d2a76e3-859d-4046-90e6-ad4ea7635167 @ 01/15/25 18:46:18.083
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:46:18.091
  E0115 18:46:18.225775      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:19.226098      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:20.230505      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:21.230763      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:46:22.132
  I0115 18:46:22.137991 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-2a5fd386-1ec1-4432-a91f-daac7fe62354 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:46:22.147
  I0115 18:46:22.177193 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7183" for this suite. @ 01/15/25 18:46:22.185
• [4.230 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/15/25 18:46:22.199
  I0115 18:46:22.199960 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:46:22.202
  E0115 18:46:22.231268      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:22.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:22.259
  STEP: Creating a pod to test downward API volume plugin @ 01/15/25 18:46:22.263
  E0115 18:46:23.232236      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:24.232613      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:25.233473      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:26.233724      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:46:26.373
  I0115 18:46:26.378309 30 output.go:207] Trying to get logs from node node6 pod downwardapi-volume-0c8eab70-aa45-455e-8462-82d0595386ab container client-container: <nil>
  STEP: delete the pod @ 01/15/25 18:46:26.387
  I0115 18:46:26.414975 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8987" for this suite. @ 01/15/25 18:46:26.422
• [4.239 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 01/15/25 18:46:26.438
  I0115 18:46:26.438207 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename fake-node @ 01/15/25 18:46:26.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:26.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:26.474
  STEP: Create "e2e-fake-node-hrd7d" @ 01/15/25 18:46:26.478
  STEP: Getting "e2e-fake-node-hrd7d" @ 01/15/25 18:46:26.485
  STEP: Patching "e2e-fake-node-hrd7d" @ 01/15/25 18:46:26.49
  STEP: Listing nodes with LabelSelector "e2e-fake-node-hrd7d=patched" @ 01/15/25 18:46:26.515
  STEP: Updating "e2e-fake-node-hrd7d" @ 01/15/25 18:46:26.524
  STEP: Delete "e2e-fake-node-hrd7d" @ 01/15/25 18:46:26.572
  STEP: Confirm deletion of "e2e-fake-node-hrd7d" @ 01/15/25 18:46:26.582
  I0115 18:46:26.586397 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-2855" for this suite. @ 01/15/25 18:46:26.591
• [0.164 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/15/25 18:46:26.602
  I0115 18:46:26.602713 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:46:26.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:26.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:26.635
  STEP: Creating configMap with name projected-configmap-test-volume-2fb3b176-ec9b-499a-9517-b1b1558c7ecf @ 01/15/25 18:46:26.639
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:46:26.646
  E0115 18:46:27.234286      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:28.234659      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:29.235930      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:30.236319      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:46:30.685
  I0115 18:46:30.689210 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-f4e8e65b-1b41-4c0b-ab3d-4f65699b3b04 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:46:30.697
  I0115 18:46:30.751001 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8005" for this suite. @ 01/15/25 18:46:30.757
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/15/25 18:46:30.769
  I0115 18:46:30.769494 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename subpath @ 01/15/25 18:46:30.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:30.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:30.816
  STEP: Setting up data @ 01/15/25 18:46:30.82
  STEP: Creating pod pod-subpath-test-secret-c5p8 @ 01/15/25 18:46:30.835
  STEP: Creating a pod to test atomic-volume-subpath @ 01/15/25 18:46:30.835
  E0115 18:46:31.236535      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:32.236898      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:33.237113      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:34.237418      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:35.237554      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:36.237814      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:37.238531      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:38.238877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:39.238956      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:40.239306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:41.240432      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:42.240744      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:43.241649      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:44.241986      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:45.242146      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:46.242342      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:47.243054      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:48.243407      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:49.244047      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:50.244368      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:51.244484      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:52.244837      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:53.245636      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:54.245943      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:46:54.919
  I0115 18:46:54.925948 30 output.go:207] Trying to get logs from node node6 pod pod-subpath-test-secret-c5p8 container test-container-subpath-secret-c5p8: <nil>
  STEP: delete the pod @ 01/15/25 18:46:54.934
  STEP: Deleting pod pod-subpath-test-secret-c5p8 @ 01/15/25 18:46:54.972
  I0115 18:46:54.973051 30 delete.go:62] Deleting pod "pod-subpath-test-secret-c5p8" in namespace "subpath-6503"
  I0115 18:46:54.976700 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6503" for this suite. @ 01/15/25 18:46:54.982
• [24.222 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/15/25 18:46:54.991
  I0115 18:46:54.991317 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:46:54.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:46:55.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:46:55.023
  STEP: Counting existing ResourceQuota @ 01/15/25 18:46:55.027
  E0115 18:46:55.246900      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:56.247053      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:57.248003      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:58.248729      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:46:59.249283      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/15/25 18:47:00.034
  STEP: Ensuring resource quota status is calculated @ 01/15/25 18:47:00.047
  E0115 18:47:00.249454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:01.249824      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 01/15/25 18:47:02.053
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/15/25 18:47:02.114
  E0115 18:47:02.250546      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:03.250882      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/15/25 18:47:04.12
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/15/25 18:47:04.124
  STEP: Ensuring a pod cannot update its resource requirements @ 01/15/25 18:47:04.127
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/15/25 18:47:04.133
  E0115 18:47:04.251295      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:05.251670      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/15/25 18:47:06.14
  STEP: Ensuring resource quota status released the pod usage @ 01/15/25 18:47:06.166
  E0115 18:47:06.251978      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:07.252338      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:08.172986 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2483" for this suite. @ 01/15/25 18:47:08.179
• [13.200 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/15/25 18:47:08.191
  I0115 18:47:08.191999 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename replicaset @ 01/15/25 18:47:08.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:08.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:08.223
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/15/25 18:47:08.227
  E0115 18:47:08.252585      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:09.253618      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:10.253952      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 01/15/25 18:47:10.268
  STEP: Then the orphan pod is adopted @ 01/15/25 18:47:10.276
  E0115 18:47:11.254057      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 01/15/25 18:47:11.287
  I0115 18:47:11.292842 30 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/15/25 18:47:11.312
  E0115 18:47:12.254856      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:12.323406 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4820" for this suite. @ 01/15/25 18:47:12.33
• [4.161 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/15/25 18:47:12.353
  I0115 18:47:12.353301 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:47:12.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:12.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:12.387
  STEP: Creating configMap with name configmap-test-upd-f2df5a49-649f-4709-af70-8b1a11d08fd3 @ 01/15/25 18:47:12.43
  STEP: Creating the pod @ 01/15/25 18:47:12.437
  E0115 18:47:13.255300      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:14.256022      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 01/15/25 18:47:14.465
  STEP: Waiting for pod with binary data @ 01/15/25 18:47:14.475
  I0115 18:47:14.484792 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7283" for this suite. @ 01/15/25 18:47:14.491
• [2.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/15/25 18:47:14.508
  I0115 18:47:14.508722 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:47:14.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:14.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:14.548
  STEP: Setting up server cert @ 01/15/25 18:47:14.674
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:47:14.927
  STEP: Deploying the webhook pod @ 01/15/25 18:47:14.944
  STEP: Wait for the deployment to be ready @ 01/15/25 18:47:14.97
  I0115 18:47:14.980615 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:47:15.256371      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:16.256545      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:47:16.998
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:47:17.016
  E0115 18:47:17.257138      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:18.017695 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/15/25 18:47:18.028
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/15/25 18:47:18.058
  STEP: Creating a configMap that should not be mutated @ 01/15/25 18:47:18.072
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/15/25 18:47:18.088
  STEP: Creating a configMap that should be mutated @ 01/15/25 18:47:18.099
  I0115 18:47:18.193050 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8720" for this suite. @ 01/15/25 18:47:18.204
  STEP: Destroying namespace "webhook-markers-7791" for this suite. @ 01/15/25 18:47:18.213
• [3.728 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/15/25 18:47:18.237
  I0115 18:47:18.237818 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename gc @ 01/15/25 18:47:18.239
  E0115 18:47:18.257637      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:18.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:18.27
  STEP: create the rc @ 01/15/25 18:47:18.305
  W0115 18:47:18.316173      30 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0115 18:47:19.258015      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:20.258634      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:21.260275      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:22.260350      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:23.261288      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:24.262053      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/15/25 18:47:24.322
  STEP: wait for the rc to be deleted @ 01/15/25 18:47:24.336
  E0115 18:47:25.262588      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:25.353926 30 garbage_collector.go:670] 80 pods remaining
  I0115 18:47:25.354035 30 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0115 18:47:25.354053 30 garbage_collector.go:678] 
  E0115 18:47:26.262868      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:26.364101 30 garbage_collector.go:670] 71 pods remaining
  I0115 18:47:26.364196 30 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0115 18:47:26.364213 30 garbage_collector.go:678] 
  E0115 18:47:27.263645      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:27.351058 30 garbage_collector.go:670] 60 pods remaining
  I0115 18:47:27.351142 30 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0115 18:47:27.351158 30 garbage_collector.go:678] 
  E0115 18:47:28.264165      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:28.351335 30 garbage_collector.go:670] 40 pods remaining
  I0115 18:47:28.351417 30 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0115 18:47:28.351433 30 garbage_collector.go:678] 
  E0115 18:47:29.265271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:29.370548 30 garbage_collector.go:670] 32 pods remaining
  I0115 18:47:29.370630 30 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0115 18:47:29.370646 30 garbage_collector.go:678] 
  E0115 18:47:30.265582      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:30.347411 30 garbage_collector.go:670] 20 pods remaining
  I0115 18:47:30.347481 30 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0115 18:47:30.347498 30 garbage_collector.go:678] 
  E0115 18:47:31.265774      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/15/25 18:47:31.346
  I0115 18:47:31.463567 30 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0115 18:47:31.463908 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3372" for this suite. @ 01/15/25 18:47:31.47
• [13.243 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/15/25 18:47:31.48
  I0115 18:47:31.480824 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/15/25 18:47:31.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:31.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:31.521
  STEP: creating a policy with variables @ 01/15/25 18:47:31.534
  STEP: waiting until the marker is denied @ 01/15/25 18:47:31.574
  STEP: testing a replicated Deployment to be allowed @ 01/15/25 18:47:31.893
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/15/25 18:47:31.924
  I0115 18:47:32.062268 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5210" for this suite. @ 01/15/25 18:47:32.068
• [0.608 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/15/25 18:47:32.09
  I0115 18:47:32.090397 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename disruption @ 01/15/25 18:47:32.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:32.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:32.124
  STEP: Creating a kubernetes client @ 01/15/25 18:47:32.128
  I0115 18:47:32.128800 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename disruption-2 @ 01/15/25 18:47:32.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:32.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:32.228
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:47:32.247
  E0115 18:47:32.266165      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:33.266606      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:47:34.264
  E0115 18:47:34.267439      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:35.269033      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:36.269074      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 01/15/25 18:47:36.278
  E0115 18:47:37.269126      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:38.269731      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 01/15/25 18:47:38.284
  STEP: listing a collection of PDBs in namespace disruption-1974 @ 01/15/25 18:47:38.292
  STEP: deleting a collection of PDBs @ 01/15/25 18:47:38.295
  STEP: Waiting for the PDB collection to be deleted @ 01/15/25 18:47:38.418
  I0115 18:47:38.422539 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3654" for this suite. @ 01/15/25 18:47:38.429
  I0115 18:47:38.443564 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1974" for this suite. @ 01/15/25 18:47:38.529
• [6.451 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/15/25 18:47:38.541
  I0115 18:47:38.542130 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 18:47:38.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:38.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:38.594
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/15/25 18:47:38.598
  E0115 18:47:39.270419      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:40.270889      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:41.271367      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:42.272034      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:47:42.636
  I0115 18:47:42.640538 30 output.go:207] Trying to get logs from node node6 pod pod-b87e82bb-0223-467b-92fd-e67ef8360570 container test-container: <nil>
  STEP: delete the pod @ 01/15/25 18:47:42.648
  I0115 18:47:42.682771 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3153" for this suite. @ 01/15/25 18:47:42.69
• [4.159 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/15/25 18:47:42.701
  I0115 18:47:42.701820 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename security-context-test @ 01/15/25 18:47:42.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:42.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:42.735
  E0115 18:47:43.273038      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:44.273359      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:45.273827      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:46.274098      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:46.768733 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1983" for this suite. @ 01/15/25 18:47:46.775
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/15/25 18:47:46.784
  I0115 18:47:46.784599 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:47:46.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:47:46.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:47:46.824
  STEP: Setting up server cert @ 01/15/25 18:47:46.917
  E0115 18:47:47.274215      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:47:47.635
  STEP: Deploying the webhook pod @ 01/15/25 18:47:47.649
  STEP: Wait for the deployment to be ready @ 01/15/25 18:47:47.667
  I0115 18:47:47.681037 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:47:48.274716      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:49.275429      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:49.697408 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:47:50.276208      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:51.276591      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:51.703063 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:47:52.276736      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:53.277079      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:53.703605 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:47:54.277268      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:55.277613      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:55.704464 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:47:56.277969      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:57.278039      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:47:57.704297 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 47, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:47:58.278877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:47:59.279291      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:47:59.705
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:47:59.727
  E0115 18:48:00.280004      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:48:00.728269 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/15/25 18:48:00.738
  STEP: create the configmap with a random name @ 01/15/25 18:48:00.772
  STEP: verify the configmap is mutated @ 01/15/25 18:48:00.791
  STEP: create the configmap with 'skip-me' name @ 01/15/25 18:48:00.791
  I0115 18:48:00.902989 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6514" for this suite. @ 01/15/25 18:48:00.916
  STEP: Destroying namespace "webhook-markers-3784" for this suite. @ 01/15/25 18:48:00.941
• [14.173 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/15/25 18:48:00.957
  I0115 18:48:00.957922 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:48:00.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:48:01.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:48:01.024
  I0115 18:48:01.028826 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: creating the pod @ 01/15/25 18:48:01.029
  STEP: submitting the pod to kubernetes @ 01/15/25 18:48:01.03
  E0115 18:48:01.280245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:02.281271      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:48:03.144972 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5342" for this suite. @ 01/15/25 18:48:03.151
• [2.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/15/25 18:48:03.163
  I0115 18:48:03.163403 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-runtime @ 01/15/25 18:48:03.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:48:03.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:48:03.2
  STEP: create the container @ 01/15/25 18:48:03.204
  W0115 18:48:03.217620      30 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/15/25 18:48:03.217
  E0115 18:48:03.281564      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:04.282274      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:05.282735      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/15/25 18:48:06.24
  STEP: the container should be terminated @ 01/15/25 18:48:06.244
  STEP: the termination message should be set @ 01/15/25 18:48:06.244
  I0115 18:48:06.244512 30 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/15/25 18:48:06.244
  I0115 18:48:06.276558 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0115 18:48:06.282829      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-runtime-2476" for this suite. @ 01/15/25 18:48:06.283
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/15/25 18:48:06.295
  I0115 18:48:06.295467 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:48:06.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:48:06.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:48:06.345
  STEP: Creating configMap with name projected-configmap-test-volume-map-ec93d5f0-b1ea-45de-a279-fab0fd28c035 @ 01/15/25 18:48:06.349
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:48:06.357
  E0115 18:48:07.283049      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:08.283580      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:09.284017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:10.284483      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:48:10.399
  I0115 18:48:10.403631 30 output.go:207] Trying to get logs from node node6 pod pod-projected-configmaps-512b6ac3-c4f0-44e0-9222-d3657a7e433f container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:48:10.412
  I0115 18:48:10.443675 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3557" for this suite. @ 01/15/25 18:48:10.45
• [4.165 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 01/15/25 18:48:10.46
  I0115 18:48:10.460596 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sched-preemption @ 01/15/25 18:48:10.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:48:10.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:48:10.5
  I0115 18:48:10.526035 30 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0115 18:48:11.285467      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:12.285593      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:13.285848      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:14.286175      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:15.286908      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:16.287037      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:17.287152      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:18.287525      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:19.288692      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:20.288992      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:21.289281      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:22.289511      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:23.290279      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:24.290761      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:25.291530      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:26.291758      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:27.292704      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:28.293135      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:29.293595      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:30.293723      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:31.294665      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:32.295418      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:33.295719      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:34.296006      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:35.297123      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:36.297261      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:37.297437      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:38.297873      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:39.299186      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:40.298630      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:41.299342      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:42.299476      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:43.299900      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:44.300295      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:45.300454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:46.301118      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:47.301427      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:48.301753      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:49.302147      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:50.302606      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:51.302754      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:52.303598      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:53.304637      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:54.305100      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:55.305456      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:56.305859      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:57.306626      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:58.306913      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:48:59.307357      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:00.307918      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:01.308384      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:02.309419      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:03.309933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:04.310107      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:05.310328      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:06.310619      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:07.310854      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:08.310882      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:09.311096      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:10.311452      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:10.533765 30 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/15/25 18:49:10.538
  STEP: Adding a custom resource @ 01/15/25 18:49:10.538
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/15/25 18:49:10.565
  I0115 18:49:10.586971 30 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/15/25 18:49:10.587
  E0115 18:49:11.311708      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:12.312108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/15/25 18:49:12.619
  I0115 18:49:12.647111 30 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/15/25 18:49:12.647
  E0115 18:49:13.312362      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:14.312877      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 01/15/25 18:49:14.658
  I0115 18:49:14.664042 30 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0115 18:49:15.199836 30 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 01/15/25 18:49:15.256
  STEP: Removing a custom resource @ 01/15/25 18:49:15.299
  STEP: Removing a custom resource @ 01/15/25 18:49:15.312
  E0115 18:49:15.313457      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:15.326880 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2468" for this suite. @ 01/15/25 18:49:15.332
• [64.898 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/15/25 18:49:15.358
  I0115 18:49:15.358812 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:49:15.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:49:15.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:49:15.394
  STEP: Setting up server cert @ 01/15/25 18:49:15.506
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:49:16.139
  STEP: Deploying the webhook pod @ 01/15/25 18:49:16.153
  STEP: Wait for the deployment to be ready @ 01/15/25 18:49:16.176
  I0115 18:49:16.186205 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:49:16.313654      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:17.314112      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:18.200573 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:49:18.314642      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:19.315074      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:20.206616 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:49:20.315760      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:21.316052      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:22.205550 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:49:22.316732      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:23.317017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:24.206873 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:49:24.318064      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:25.318404      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:26.206837 30 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 15, 18, 49, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0115 18:49:26.318951      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:27.319311      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:49:28.205
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:49:28.246
  E0115 18:49:28.319447      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:29.247331 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/15/25 18:49:29.258
  E0115 18:49:29.320096      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/15/25 18:49:29.377
  STEP: Creating a dummy validating-webhook-configuration object @ 01/15/25 18:49:29.397
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/15/25 18:49:29.414
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/15/25 18:49:29.428
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/15/25 18:49:29.444
  I0115 18:49:29.563728 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3390" for this suite. @ 01/15/25 18:49:29.575
  STEP: Destroying namespace "webhook-markers-8804" for this suite. @ 01/15/25 18:49:29.591
• [14.247 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/15/25 18:49:29.606
  I0115 18:49:29.606588 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/15/25 18:49:29.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:49:29.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:49:29.663
  I0115 18:49:29.667668 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  E0115 18:49:30.320880      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:31.321517      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:32.322371      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:33.322868      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:34.323032      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:35.324905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:36.325091      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:37.325299      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:37.958012 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4586" for this suite. @ 01/15/25 18:49:37.965
• [8.371 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/15/25 18:49:37.977
  I0115 18:49:37.977693 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-runtime @ 01/15/25 18:49:37.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:49:38.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:49:38.028
  STEP: create the container @ 01/15/25 18:49:38.032
  W0115 18:49:38.056263      30 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/15/25 18:49:38.056
  E0115 18:49:38.326043      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:39.326908      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:40.327656      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/15/25 18:49:41.089
  STEP: the container should be terminated @ 01/15/25 18:49:41.092
  STEP: the termination message should be set @ 01/15/25 18:49:41.093
  I0115 18:49:41.093065 30 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/15/25 18:49:41.093
  I0115 18:49:41.163948 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6514" for this suite. @ 01/15/25 18:49:41.169
• [3.201 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/15/25 18:49:41.178
  I0115 18:49:41.178903 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/15/25 18:49:41.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:49:41.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:49:41.225
  STEP: getting /apis @ 01/15/25 18:49:41.229
  STEP: getting /apis/storage.k8s.io @ 01/15/25 18:49:41.234
  STEP: getting /apis/storage.k8s.io/v1 @ 01/15/25 18:49:41.235
  STEP: creating @ 01/15/25 18:49:41.237
  STEP: watching @ 01/15/25 18:49:41.266
  I0115 18:49:41.266247 30 csistoragecapacity.go:143] starting watch
  E0115 18:49:41.328646      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting @ 01/15/25 18:49:41.334
  STEP: listing in namespace @ 01/15/25 18:49:41.338
  STEP: listing across namespaces @ 01/15/25 18:49:41.343
  STEP: patching @ 01/15/25 18:49:41.347
  STEP: updating @ 01/15/25 18:49:41.361
  I0115 18:49:41.370935 30 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0115 18:49:41.371104 30 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/15/25 18:49:41.371
  STEP: deleting a collection @ 01/15/25 18:49:41.388
  I0115 18:49:41.428630 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1188" for this suite. @ 01/15/25 18:49:41.434
• [0.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 01/15/25 18:49:41.452
  I0115 18:49:41.452596 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename containers @ 01/15/25 18:49:41.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:49:41.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:49:41.506
  STEP: Creating a pod to test override command @ 01/15/25 18:49:41.51
  E0115 18:49:42.328895      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:43.329284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:44.329454      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:45.329887      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:49:45.549
  I0115 18:49:45.552977 30 output.go:207] Trying to get logs from node node6 pod client-containers-d11b996c-88f9-4ff7-8cbe-bd25d1d85582 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:49:45.574
  I0115 18:49:45.617400 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-234" for this suite. @ 01/15/25 18:49:45.623
• [4.188 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 01/15/25 18:49:45.64
  I0115 18:49:45.640544 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename statefulset @ 01/15/25 18:49:45.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:49:45.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:49:45.685
  STEP: Creating service test in namespace statefulset-3811 @ 01/15/25 18:49:45.689
  STEP: Creating stateful set ss in namespace statefulset-3811 @ 01/15/25 18:49:45.696
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3811 @ 01/15/25 18:49:45.711
  I0115 18:49:45.716670 30 wait.go:40] Found 0 stateful pods, waiting for 1
  E0115 18:49:46.330423      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:47.330699      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:48.331077      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:49.331498      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:50.331907      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:51.332154      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:52.332536      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:53.333061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:54.333374      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:55.333676      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:49:55.718985 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/15/25 18:49:55.719
  I0115 18:49:55.723303 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 18:49:55.894911 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:49:55.894972 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:49:55.894991 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:49:55.899657 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0115 18:49:56.334283      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:57.334625      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:58.334764      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:49:59.335332      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:00.335323      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:01.335708      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:02.335905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:03.336016      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:04.336326      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:05.336703      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:05.903714 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:50:05.903784 30 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0115 18:50:06.004033 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.99999941s
  E0115 18:50:06.336974      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:07.029642 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.970375206s
  E0115 18:50:07.337017      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:08.037132 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.944243685s
  E0115 18:50:08.337270      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:09.044633 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.937005091s
  E0115 18:50:09.337903      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:10.053061 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.929387509s
  E0115 18:50:10.338295      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:11.060802 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.921707685s
  E0115 18:50:11.339013      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:12.068133 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.913224381s
  E0115 18:50:12.339245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:13.075080 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.90606864s
  E0115 18:50:13.340264      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:14.083765 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.8990292s
  E0115 18:50:14.340832      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:15.091142 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 890.444814ms
  E0115 18:50:15.341895      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3811 @ 01/15/25 18:50:16.091
  I0115 18:50:16.098082 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 18:50:16.266170 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0115 18:50:16.266241 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:50:16.266262 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:50:16.266357 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0115 18:50:16.342862      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:16.418624 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0115 18:50:16.418689 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:50:16.418708 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:50:16.418788 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0115 18:50:16.568234 30 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0115 18:50:16.568300 30 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0115 18:50:16.568317 30 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0115 18:50:16.574323 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0115 18:50:17.343922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:18.344451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:19.344879      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:20.345725      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:21.346253      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:22.346601      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:23.347096      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:24.347451      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:25.348006      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:26.348065      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:26.576752 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:50:26.576813 30 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0115 18:50:26.576830 30 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/15/25 18:50:26.576
  I0115 18:50:26.581664 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 18:50:26.727837 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:50:26.727927 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:50:26.727950 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:50:26.728022 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 18:50:26.981448 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:50:26.981513 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:50:26.981531 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:50:26.981612 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=statefulset-3811 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0115 18:50:27.141214 30 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0115 18:50:27.141307 30 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0115 18:50:27.141328 30 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0115 18:50:27.141344 30 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0115 18:50:27.146406 30 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0115 18:50:27.348720      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:28.349037      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:29.349347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:30.349675      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:31.349967      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:32.350299      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:33.350619      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:34.350754      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:35.351047      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:36.352108      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:37.351171 30 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:50:37.351235 30 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0115 18:50:37.351255 30 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0115 18:50:37.352899      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:37.378809 30 resource.go:168] POD   NODE   PHASE    GRACE  CONDITIONS
  I0115 18:50:37.378892 30 resource.go:175] ss-0  node6  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:49:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:49:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:49:45 +0000 UTC  }]
  I0115 18:50:37.378949 30 resource.go:175] ss-1  node4  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:05 +0000 UTC  }]
  I0115 18:50:37.378988 30 resource.go:175] ss-2  node5  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-15 18:50:05 +0000 UTC  }]
  I0115 18:50:37.379002 30 resource.go:178] 
  I0115 18:50:37.379015 30 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0115 18:50:38.353832      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:38.384944 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 8.986141496s
  E0115 18:50:39.354170      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:39.399899 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.980443446s
  E0115 18:50:40.354276      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:40.406710 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.965738582s
  E0115 18:50:41.354425      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:41.413134 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.958510246s
  E0115 18:50:42.354624      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:42.420862 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.952329244s
  E0115 18:50:43.355122      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:43.426195 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.945080697s
  E0115 18:50:44.355142      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:44.432699 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.938821963s
  E0115 18:50:45.355237      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:45.440087 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.932669621s
  E0115 18:50:46.355284      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:46.445671 30 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 925.548197ms
  E0115 18:50:47.355781      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3811 @ 01/15/25 18:50:47.445
  I0115 18:50:47.452264 30 rest.go:152] Scaling statefulset ss to 0
  I0115 18:50:47.459906 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 18:50:47.463678 30 statefulset.go:138] Deleting all statefulset in ns statefulset-3811
  I0115 18:50:47.468195 30 rest.go:152] Scaling statefulset ss to 0
  I0115 18:50:47.477427 30 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0115 18:50:47.480867 30 rest.go:90] Deleting statefulset ss
  I0115 18:50:47.502015 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3811" for this suite. @ 01/15/25 18:50:47.509
• [61.882 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/15/25 18:50:47.523
  I0115 18:50:47.523633 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:50:47.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:50:47.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:50:47.561
  STEP: Setting up server cert @ 01/15/25 18:50:47.657
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:50:48.083
  STEP: Deploying the webhook pod @ 01/15/25 18:50:48.1
  STEP: Wait for the deployment to be ready @ 01/15/25 18:50:48.124
  I0115 18:50:48.137965 30 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0115 18:50:48.356192      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:49.357134      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:50:50.153
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:50:50.171
  E0115 18:50:50.357497      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:51.171467 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/15/25 18:50:51.189
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/15/25 18:50:51.231
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/15/25 18:50:51.242
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/15/25 18:50:51.265
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/15/25 18:50:51.28
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/15/25 18:50:51.292
  E0115 18:50:51.357767      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:51.368655 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5245" for this suite. @ 01/15/25 18:50:51.375
  STEP: Destroying namespace "webhook-markers-4850" for this suite. @ 01/15/25 18:50:51.392
• [3.882 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/15/25 18:50:51.406
  I0115 18:50:51.407030 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:50:51.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:50:51.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:50:51.454
  STEP: creating the pod @ 01/15/25 18:50:51.458
  STEP: submitting the pod to kubernetes @ 01/15/25 18:50:51.458
  W0115 18:50:51.485416      30 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0115 18:50:52.358944      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:53.359314      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/15/25 18:50:53.508
  STEP: updating the pod @ 01/15/25 18:50:53.513
  I0115 18:50:54.034494 30 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-9e6c6672-355a-487c-997c-898feacf8f30"
  E0115 18:50:54.360243      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:55.360681      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:56.360818      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:57.361353      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:50:58.122305 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1172" for this suite. @ 01/15/25 18:50:58.128
• [6.735 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/15/25 18:50:58.142
  I0115 18:50:58.142237 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:50:58.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:50:58.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:50:58.177
  STEP: Creating projection with secret that has name projected-secret-test-a81c0f34-d3a9-4472-a8b5-44d2c69e13f5 @ 01/15/25 18:50:58.181
  STEP: Creating a pod to test consume secrets @ 01/15/25 18:50:58.195
  E0115 18:50:58.362039      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:50:59.362391      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:00.362679      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:01.363070      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:51:02.241
  I0115 18:51:02.245749 30 output.go:207] Trying to get logs from node node6 pod pod-projected-secrets-06fa4839-3b1b-4bd0-8193-bea486a24255 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/15/25 18:51:02.255
  I0115 18:51:02.282460 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8619" for this suite. @ 01/15/25 18:51:02.288
• [4.161 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/15/25 18:51:02.303
  I0115 18:51:02.303843 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename deployment @ 01/15/25 18:51:02.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:51:02.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:51:02.339
  I0115 18:51:02.342782 30 deployment.go:1196] Creating deployment "webserver-deployment"
  I0115 18:51:02.350546 30 deployment.go:1200] Waiting for observed generation 1
  E0115 18:51:02.363471      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:03.363852      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:04.360279 30 deployment.go:1205] Waiting for all required pods to come up
  E0115 18:51:04.364142      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:04.366162 30 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/15/25 18:51:04.366
  I0115 18:51:04.366496 30 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0115 18:51:04.375133 30 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0115 18:51:04.390223 30 deployment.go:314] Updating deployment webserver-deployment
  I0115 18:51:04.390398 30 deployment.go:1224] Waiting for observed generation 2
  E0115 18:51:05.364578      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:06.365000      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:06.400137 30 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0115 18:51:06.405801 30 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0115 18:51:06.409919 30 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0115 18:51:06.424589 30 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0115 18:51:06.424658 30 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0115 18:51:06.429127 30 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0115 18:51:06.436838 30 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0115 18:51:06.436895 30 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0115 18:51:06.462499 30 deployment.go:314] Updating deployment webserver-deployment
  I0115 18:51:06.462562 30 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0115 18:51:06.479269 30 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0115 18:51:06.485034 30 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0115 18:51:07.365381      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:08.366025      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:08.497900 30 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14febb5c-4e10-4a32-886a-7b4de0d600e7",
      ResourceVersion: (string) (len=6) "251091",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 16,
      AvailableReplicas: (int32) 16,
      UnavailableReplicas: (int32) 17,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0115 18:51:08.510815 30 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
      ResourceVersion: (string) (len=6) "250983",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "14febb5c-4e10-4a32-886a-7b4de0d600e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 34 66 65 62 62  35 63 2d 34 65 31 30 2d  |\"14febb5c-4e10-|
              00000120  34 61 33 32 2d 38 38 36  61 2d 37 62 34 64 65 30  |4a32-886a-7b4de0|
              00000130  64 36 30 30 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d600e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:51:08.511982 30 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0115 18:51:08.512322 30 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
      ResourceVersion: (string) (len=6) "251090",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "14febb5c-4e10-4a32-886a-7b4de0d600e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 34 66 65 62 62  35 63 2d 34 65 31 30 2d  |\"14febb5c-4e10-|
              00000120  34 61 33 32 2d 38 38 36  61 2d 37 62 34 64 65 30  |4a32-886a-7b4de0|
              00000130  64 36 30 30 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d600e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 16,
      AvailableReplicas: (int32) 16,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0115 18:51:08.521719 30 deployment.go:68] Pod "webserver-deployment-685b768f58-29v25" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-29v25",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cec7ed8e-b030-43aa-bedf-ee3700f45070",
      ResourceVersion: (string) (len=6) "251045",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 32 31 5c 22 7d 22 3a  |.233.68.221\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fdwl9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fdwl9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://700461cdd6d0a0bafd6d3c93d8466fef88aa395099f61ff86d51c10c8652ae86",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fdwl9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.524545 30 deployment.go:68] Pod "webserver-deployment-685b768f58-2nvjw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2nvjw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e473e6d-505f-4838-8ddd-ba8a6180ab3b",
      ResourceVersion: (string) (len=6) "250999",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mwf4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mwf4c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mwf4c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.527234 30 deployment.go:68] Pod "webserver-deployment-685b768f58-59zd8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-59zd8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abb26f0f-829b-48e1-8ad7-1c61c8aa2268",
      ResourceVersion: (string) (len=6) "251084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 37 33 5c 22 7d 22 3a  |.233.67.173\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-txvmv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-txvmv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://e95a9af2138997410c1ccb2a777f0b091a2b781c3f78bb3cb23cf1046c59f697",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-txvmv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.530137 30 deployment.go:68] Pod "webserver-deployment-685b768f58-5cztw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5cztw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7622473-0bae-476b-aa34-f6ab1f1b3f18",
      ResourceVersion: (string) (len=6) "250822",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 39 2e  31 35 38 5c 22 7d 22 3a  |.233.69.158\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8b9nv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8b9nv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) (len=13) "10.233.69.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://6133e116a50bb043882539354bbf5b9a0511c2b29f2d3baaf1ceef215f605b19",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8b9nv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.532914 30 deployment.go:68] Pod "webserver-deployment-685b768f58-84p9x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-84p9x",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ff8794c-bfb6-48d4-b4ac-9466f4f8289c",
      ResourceVersion: (string) (len=6) "250831",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 36 38 5c 22 7d 22 3a  |.233.67.168\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fxcvp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fxcvp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://853bbd07333d10f81bbf4fec00cf736dfba86821e4cb15e5565685147ba32fa7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fxcvp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.535667 30 deployment.go:68] Pod "webserver-deployment-685b768f58-bgq6l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bgq6l",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c94d732-3a79-4b21-9108-0b1f61d70f36",
      ResourceVersion: (string) (len=6) "250993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kh4p9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kh4p9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kh4p9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.538432 30 deployment.go:68] Pod "webserver-deployment-685b768f58-bwr8q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bwr8q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "916939ad-c075-4355-a3d8-3ca20b1f0d65",
      ResourceVersion: (string) (len=6) "250815",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 39 2e  31 35 37 5c 22 7d 22 3a  |.233.69.157\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hmjqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hmjqz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) (len=13) "10.233.69.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://740eedd6be689b007ecace1df70cc851eadc00d8e4d1eefc68085ac7d4231ad3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hmjqz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.541201 30 deployment.go:68] Pod "webserver-deployment-685b768f58-cmkjz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cmkjz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9807b125-e6f2-4f22-bd3e-fe54fd946a44",
      ResourceVersion: (string) (len=6) "251000",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfgds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfgds",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gfgds",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.545219 30 deployment.go:68] Pod "webserver-deployment-685b768f58-dj44m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dj44m",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48c43b29-ca66-45bb-978a-5a5808696a42",
      ResourceVersion: (string) (len=6) "251082",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 37 30 5c 22 7d 22 3a  |.233.67.170\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q84vz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q84vz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://a7a598ee704757e3194e7385e3d5a1deeeda80c3d4374065b2b889f5fa76a284",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q84vz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.549511 30 deployment.go:68] Pod "webserver-deployment-685b768f58-drpqm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-drpqm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fd71c1d-750f-4706-bb66-dca2de784dc2",
      ResourceVersion: (string) (len=6) "250818",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 39 2e  31 35 36 5c 22 7d 22 3a  |.233.69.156\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kxz7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kxz7p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) (len=13) "10.233.69.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://9b4978add9f7946d8765cd8f5a3e26390a368a0c3720980fd774dbf41db65ff8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kxz7p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.552489 30 deployment.go:68] Pod "webserver-deployment-685b768f58-j7nsr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j7nsr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c503a56-2f54-41c7-83dd-9a0ae2d7debb",
      ResourceVersion: (string) (len=6) "250827",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 36 37 5c 22 7d 22 3a  |.233.67.167\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6g8l6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6g8l6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://649789a891817e789fbc2f4471bea72a81fd49bb8e25258cfc8d00828ccd13bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6g8l6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.555175 30 deployment.go:68] Pod "webserver-deployment-685b768f58-jdtct" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jdtct",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4589383-2313-46b3-ad52-245c8c1465f7",
      ResourceVersion: (string) (len=6) "250825",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 36 36 5c 22 7d 22 3a  |.233.67.166\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nfpl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nfpl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://d6f2484947d4affc8c3d6b5c68c6b5140d3c5f1a0dceb01724d792b6e53f0cc2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5nfpl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.559765 30 deployment.go:68] Pod "webserver-deployment-685b768f58-kjqwb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kjqwb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46daa831-3741-4f49-880a-2a8e10a6ab25",
      ResourceVersion: (string) (len=6) "251075",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 39 2e  31 36 31 5c 22 7d 22 3a  |.233.69.161\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jnmt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jnmt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) (len=13) "10.233.69.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://8a8f4e4ba574a1c8b0b68ae9dc4132721e0b8ef582df899d68e9ac7bb7b52f7a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4jnmt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.566234 30 deployment.go:68] Pod "webserver-deployment-685b768f58-lfqrs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lfqrs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78bdb3db-885d-4a41-8736-f5440df733fd",
      ResourceVersion: (string) (len=6) "251078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 39 2e  31 36 35 5c 22 7d 22 3a  |.233.69.165\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vvlt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vvlt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) (len=13) "10.233.69.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://a960718d1870de88a2568173a475b288198b9622a7643a6263137701fd9a03b2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5vvlt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.568998 30 deployment.go:68] Pod "webserver-deployment-685b768f58-p4fc6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p4fc6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af813233-cca3-4548-aa3e-5ddab83b3cb3",
      ResourceVersion: (string) (len=6) "250801",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 31 36 5c 22 7d 22 3a  |.233.68.216\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mhlh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mhlh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://39194157f9f1f4ecc154533a6868df62bd7164a012e168c6a7f9d36420b623c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mhlh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.572079 30 deployment.go:68] Pod "webserver-deployment-685b768f58-pjqbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pjqbl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68dd8c55-9017-46b3-a4a3-3fcddb3090a6",
      ResourceVersion: (string) (len=6) "251039",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 32 32 5c 22 7d 22 3a  |.233.68.222\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v7spl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v7spl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://0d279889ab13eeba13e1cddb75e94acfa37c12ce8d8c7e57c2d0c0a11c263fab",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v7spl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.578619 30 deployment.go:68] Pod "webserver-deployment-685b768f58-pm6gp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pm6gp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8928d71-d384-44bc-92d7-81c463be5c4e",
      ResourceVersion: (string) (len=6) "250803",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 31 38 5c 22 7d 22 3a  |.233.68.218\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4dz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4dz4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) (len=13) "10.233.68.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://88cedd477f349c78e009cc7bf2885903cec9998204b6c4b034c063334b1555fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h4dz4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.582042 30 deployment.go:68] Pod "webserver-deployment-685b768f58-q8gdx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-q8gdx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46045ae1-4323-4935-aed7-839620cce105",
      ResourceVersion: (string) (len=6) "250996",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nnfmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nnfmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nnfmd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.584895 30 deployment.go:68] Pod "webserver-deployment-685b768f58-rw6wk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rw6wk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c04ee916-64d2-411c-8d6a-e58420229e3e",
      ResourceVersion: (string) (len=6) "251071",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 39 2e  31 36 32 5c 22 7d 22 3a  |.233.69.162\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dg5qb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dg5qb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) (len=13) "10.233.69.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.69.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://d279373a06a944572670eb860249eada91e86f1a7099e52c969037067a08ccd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dg5qb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.587696 30 deployment.go:68] Pod "webserver-deployment-685b768f58-t8ks6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-t8ks6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ca9de67-b1b5-414f-baab-e40110bea53c",
      ResourceVersion: (string) (len=6) "251088",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "d9afb166-61d7-41b3-a08e-ce461268a8b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  61 66 62 31 36 36 2d 36  |d\":\"d9afb166-6|
              00000090  31 64 37 2d 34 31 62 33  2d 61 30 38 65 2d 63 65  |1d7-41b3-a08e-ce|
              000000a0  34 36 31 32 36 38 61 38  62 37 5c 22 7d 22 3a 7b  |461268a8b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 37 31 5c 22 7d 22 3a  |.233.67.171\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zscg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zscg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) (len=13) "10.233.67.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872563867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=71) "sha256:6133d3d70729e58bf051f3a57c80581c37ff8a4f59f6a1d4307b811b466306df",
          ContainerID: (string) (len=77) "containerd://388bb15a40fed791543cab49ef827ec257708ea5294752e54e2c577f9228085a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zscg7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.593805 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2pmkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2pmkt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22ad961f-540d-481d-985e-2ce55b7c3934",
      ResourceVersion: (string) (len=6) "250854",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2tgfz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2tgfz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2tgfz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.597623 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cbjn4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cbjn4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3edbfb8-437e-4dc4-a65f-6b3f3c159ab1",
      ResourceVersion: (string) (len=6) "250883",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnvv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnvv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dnvv4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.600564 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cfngc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cfngc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acb6d4ab-9723-4be8-b483-992a6f550e72",
      ResourceVersion: (string) (len=6) "251002",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xrc6n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xrc6n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xrc6n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.603516 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cq2tl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cq2tl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fef0d301-e849-4732-bd89-08c1a1360cec",
      ResourceVersion: (string) (len=6) "250987",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvw6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvw6p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lvw6p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.607435 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dzkgx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dzkgx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a303da36-35b5-42a8-b8e0-f6528f42e817",
      ResourceVersion: (string) (len=6) "250859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xlwq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xlwq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2xlwq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.609977 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-nrfwk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-nrfwk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86616aa5-a984-4192-b1c0-9dc8a3980f49",
      ResourceVersion: (string) (len=6) "250989",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rjrsf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rjrsf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rjrsf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.615374 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pssmr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pssmr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cbf8fd1-7ab4-49a5-9d36-834de06541d6",
      ResourceVersion: (string) (len=6) "250858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jz472",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jz472",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jz472",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.619407 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-q5htq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-q5htq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "714e97aa-f9db-4115-bc7d-1de816515b12",
      ResourceVersion: (string) (len=6) "250980",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cpn4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cpn4h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cpn4h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.622985 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sgb78" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sgb78",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "172ce7a3-0605-4250-9fdb-7edaa11917c9",
      ResourceVersion: (string) (len=6) "250985",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7ngl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7ngl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x7ngl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.625851 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-twhqm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-twhqm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1114c4f2-62ae-41d9-a0ab-86e9e2060f36",
      ResourceVersion: (string) (len=6) "250990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2m6wb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2m6wb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.55",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.55"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2m6wb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.630915 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-v9nfz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-v9nfz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c1631e6-c923-4672-b5b4-5b63eca5f868",
      ResourceVersion: (string) (len=6) "250956",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cd9kv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cd9kv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cd9kv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.633929 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vpqdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vpqdk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b78831ea-2bec-4d59-b08d-54494ed0589e",
      ResourceVersion: (string) (len=6) "250881",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nkrp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nkrp6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node6",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nkrp6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.636901 30 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wshqz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wshqz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6705",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a59184c6-d6aa-4e17-8c6c-292869a43560",
      ResourceVersion: (string) (len=6) "250981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b3dc0213-3199-4a4a-8000-ecc2687caa09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  64 63 30 32 31 33 2d 33  |d\":\"b3dc0213-3|
              00000090  31 39 39 2d 34 61 34 61  2d 38 30 30 30 2d 65 63  |199-4a4a-8000-ec|
              000000a0  63 32 36 38 37 63 61 61  30 39 5c 22 7d 22 3a 7b  |c2687caa09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ms2lc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ms2lc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872563866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872563866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ms2lc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0115 18:51:08.638966 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6705" for this suite. @ 01/15/25 18:51:08.647
• [6.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 01/15/25 18:51:08.66
  I0115 18:51:08.660999 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename csinodes @ 01/15/25 18:51:08.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:51:08.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:51:08.695
  STEP: Creating initial csiNode "e2e-csinode-wllnb" @ 01/15/25 18:51:08.699
  STEP: Getting initial csiNode "e2e-csinode-wllnb" @ 01/15/25 18:51:08.72
  STEP: Patching initial csiNode: "e2e-csinode-wllnb" @ 01/15/25 18:51:08.724
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-wllnb=patched" @ 01/15/25 18:51:08.732
  STEP: Delete initial csiNode: "e2e-csinode-wllnb" @ 01/15/25 18:51:08.736
  STEP: Confirm deletion of csiNode "e2e-csinode-wllnb" @ 01/15/25 18:51:08.745
  STEP: Creating replacement csiNode "e2e-csinode-ntqr4" @ 01/15/25 18:51:08.749
  STEP: Getting replacement csiNode "e2e-csinode-ntqr4" @ 01/15/25 18:51:08.755
  STEP: Updating replacement csiNode "e2e-csinode-ntqr4" @ 01/15/25 18:51:08.759
  STEP: DeleteCollection of CSINodes with "e2e-csinode-ntqr4=updated" label @ 01/15/25 18:51:08.772
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-ntqr4=updated" @ 01/15/25 18:51:08.784
  I0115 18:51:08.789214 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-4789" for this suite. @ 01/15/25 18:51:08.796
• [0.146 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/15/25 18:51:08.807
  I0115 18:51:08.807096 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename projected @ 01/15/25 18:51:08.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:51:08.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:51:08.85
  STEP: Creating the pod @ 01/15/25 18:51:08.855
  E0115 18:51:09.367268      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:10.369192      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:11.369096      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:11.427857 30 pod_client.go:173] Successfully updated pod "labelsupdatea7967082-4923-4957-a6e5-89123634ee4f"
  E0115 18:51:12.369136      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:13.370090      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:13.453406 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1950" for this suite. @ 01/15/25 18:51:13.462
• [4.666 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/15/25 18:51:13.474
  I0115 18:51:13.474425 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename resourcequota @ 01/15/25 18:51:13.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:51:13.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:51:13.512
  STEP: Counting existing ResourceQuota @ 01/15/25 18:51:13.516
  E0115 18:51:14.370243      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:15.370346      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:16.370564      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:17.371556      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:18.371672      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/15/25 18:51:18.525
  STEP: Ensuring resource quota status is calculated @ 01/15/25 18:51:18.54
  E0115 18:51:19.372091      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:20.372645      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 01/15/25 18:51:20.555
  STEP: Ensuring resource quota status captures replication controller creation @ 01/15/25 18:51:20.575
  E0115 18:51:21.373574      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:22.374323      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 01/15/25 18:51:22.58
  STEP: Ensuring resource quota status released usage @ 01/15/25 18:51:22.59
  E0115 18:51:23.374932      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:24.375378      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:51:24.597120 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-510" for this suite. @ 01/15/25 18:51:24.603
• [11.141 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/15/25 18:51:24.615
  I0115 18:51:24.615669 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename container-probe @ 01/15/25 18:51:24.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:51:24.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:51:24.652
  E0115 18:51:25.375576      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:26.375635      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:27.376465      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:28.376744      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:29.377164      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:30.377477      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:31.377593      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:32.378610      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:33.378708      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:34.379195      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:35.379423      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:36.379762      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:37.379985      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:38.380614      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:39.381120      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:40.381316      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:41.381847      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:42.381899      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:43.383011      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:44.383499      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:45.383928      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:46.384733      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:47.384899      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:48.385744      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:49.385825      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:50.386512      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:51.387347      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:52.388207      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:53.388457      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:54.390799      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:55.390342      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:56.390608      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:57.390850      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:58.391593      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:51:59.392061      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:00.393079      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:01.393666      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:02.394785      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:03.395522      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:04.396491      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:05.396895      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:06.397656      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:07.398584      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:08.399312      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:09.399583      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:10.399540      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:11.400413      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:12.401266      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:13.401642      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:14.401678      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:15.402400      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:16.402546      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:17.403406      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:18.403612      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:19.403631      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:20.404763      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:21.405656      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:22.405774      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:23.405980      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:24.406858      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:52:24.676080 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1364" for this suite. @ 01/15/25 18:52:24.681
• [60.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/15/25 18:52:24.695
  I0115 18:52:24.695665 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:52:24.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:24.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:24.734
  STEP: Creating configMap with name configmap-test-volume-7d0b05b9-4940-4d94-844f-fb53ac34b514 @ 01/15/25 18:52:24.738
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:52:24.763
  E0115 18:52:25.407071      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:26.407417      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:27.408446      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:28.408847      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:52:28.807
  I0115 18:52:28.812707 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-d40f77ab-5ca9-45bb-815c-fb71054ddcf0 container agnhost-container: <nil>
  STEP: delete the pod @ 01/15/25 18:52:28.821
  I0115 18:52:28.877573 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9151" for this suite. @ 01/15/25 18:52:28.885
• [4.200 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/15/25 18:52:28.895
  I0115 18:52:28.895859 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename discovery @ 01/15/25 18:52:28.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:28.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:28.933
  STEP: Setting up server cert @ 01/15/25 18:52:28.939
  I0115 18:52:29.330291 30 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0115 18:52:29.332116 30 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0115 18:52:29.332171 30 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0115 18:52:29.332186 30 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0115 18:52:29.332197 30 discovery.go:139] Checking APIGroup: apps
  I0115 18:52:29.333549 30 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0115 18:52:29.333583 30 discovery.go:148] Versions found [{apps/v1 v1}]
  I0115 18:52:29.333597 30 discovery.go:154] apps/v1 matches apps/v1
  I0115 18:52:29.333608 30 discovery.go:139] Checking APIGroup: events.k8s.io
  I0115 18:52:29.334754 30 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0115 18:52:29.334797 30 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0115 18:52:29.334811 30 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0115 18:52:29.334829 30 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0115 18:52:29.336226 30 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0115 18:52:29.336263 30 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0115 18:52:29.336277 30 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0115 18:52:29.336288 30 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0115 18:52:29.337865 30 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0115 18:52:29.337905 30 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0115 18:52:29.337918 30 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0115 18:52:29.337956 30 discovery.go:139] Checking APIGroup: autoscaling
  I0115 18:52:29.339354 30 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0115 18:52:29.339392 30 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0115 18:52:29.339410 30 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0115 18:52:29.339422 30 discovery.go:139] Checking APIGroup: batch
  I0115 18:52:29.341307 30 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0115 18:52:29.341341 30 discovery.go:148] Versions found [{batch/v1 v1}]
  I0115 18:52:29.341389 30 discovery.go:154] batch/v1 matches batch/v1
  I0115 18:52:29.341403 30 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0115 18:52:29.342992 30 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0115 18:52:29.343091 30 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0115 18:52:29.343108 30 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0115 18:52:29.343125 30 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0115 18:52:29.344484 30 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0115 18:52:29.344522 30 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0115 18:52:29.344536 30 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0115 18:52:29.344589 30 discovery.go:139] Checking APIGroup: policy
  I0115 18:52:29.345934 30 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0115 18:52:29.345990 30 discovery.go:148] Versions found [{policy/v1 v1}]
  I0115 18:52:29.346005 30 discovery.go:154] policy/v1 matches policy/v1
  I0115 18:52:29.346017 30 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0115 18:52:29.347340 30 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0115 18:52:29.347383 30 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0115 18:52:29.347398 30 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0115 18:52:29.347432 30 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0115 18:52:29.348754 30 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0115 18:52:29.348805 30 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0115 18:52:29.348821 30 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0115 18:52:29.348837 30 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0115 18:52:29.350261 30 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0115 18:52:29.350298 30 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0115 18:52:29.350312 30 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0115 18:52:29.350659 30 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0115 18:52:29.352031 30 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0115 18:52:29.352084 30 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0115 18:52:29.352100 30 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0115 18:52:29.352112 30 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0115 18:52:29.353513 30 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0115 18:52:29.353548 30 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0115 18:52:29.353563 30 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0115 18:52:29.353599 30 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0115 18:52:29.355028 30 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0115 18:52:29.355063 30 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0115 18:52:29.355075 30 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0115 18:52:29.355111 30 discovery.go:139] Checking APIGroup: node.k8s.io
  I0115 18:52:29.356672 30 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0115 18:52:29.356723 30 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0115 18:52:29.356740 30 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0115 18:52:29.356766 30 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0115 18:52:29.358403 30 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0115 18:52:29.358458 30 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0115 18:52:29.358474 30 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0115 18:52:29.358486 30 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0115 18:52:29.359968 30 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0115 18:52:29.360005 30 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0115 18:52:29.360019 30 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0115 18:52:29.360219 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5637" for this suite. @ 01/15/25 18:52:29.367
• [0.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/15/25 18:52:29.38
  I0115 18:52:29.380708 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename sysctl @ 01/15/25 18:52:29.383
  E0115 18:52:29.409564      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:29.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:29.425
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/15/25 18:52:29.43
  I0115 18:52:29.437861 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6174" for this suite. @ 01/15/25 18:52:29.468
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/15/25 18:52:29.48
  I0115 18:52:29.481023 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 18:52:29.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:29.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:29.53
  STEP: Creating a pod to test substitution in container's command @ 01/15/25 18:52:29.533
  E0115 18:52:30.411123      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:31.410306      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:32.410905      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:33.411485      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:52:33.566
  I0115 18:52:33.571847 30 output.go:207] Trying to get logs from node node6 pod var-expansion-36b2e106-1efe-4fee-ab17-c45c788927bc container dapi-container: <nil>
  STEP: delete the pod @ 01/15/25 18:52:33.58
  I0115 18:52:33.603810 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1305" for this suite. @ 01/15/25 18:52:33.611
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/15/25 18:52:33.624
  I0115 18:52:33.624398 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename watch @ 01/15/25 18:52:33.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:33.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:33.664
  STEP: creating a watch on configmaps @ 01/15/25 18:52:33.669
  STEP: creating a new configmap @ 01/15/25 18:52:33.672
  STEP: modifying the configmap once @ 01/15/25 18:52:33.684
  STEP: closing the watch once it receives two notifications @ 01/15/25 18:52:33.697
  I0115 18:52:33.697682 30 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-12  854e6741-b20b-4a18-b250-4951cd73e67b 251756 0 2025-01-15 18:52:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-15 18:52:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:52:33.699047 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-12  854e6741-b20b-4a18-b250-4951cd73e67b 251757 0 2025-01-15 18:52:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-15 18:52:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/15/25 18:52:33.699
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/15/25 18:52:33.715
  STEP: deleting the configmap @ 01/15/25 18:52:33.716
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/15/25 18:52:33.724
  I0115 18:52:33.724376 30 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-12  854e6741-b20b-4a18-b250-4951cd73e67b 251758 0 2025-01-15 18:52:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-15 18:52:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:52:33.724635 30 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-12  854e6741-b20b-4a18-b250-4951cd73e67b 251759 0 2025-01-15 18:52:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-15 18:52:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0115 18:52:33.724824 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-12" for this suite. @ 01/15/25 18:52:33.73
• [0.131 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/15/25 18:52:33.755
  I0115 18:52:33.755293 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename configmap @ 01/15/25 18:52:33.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:33.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:33.788
  STEP: Creating configMap configmap-8260/configmap-test-eeee956f-6780-4d1a-aa29-65e26ac51326 @ 01/15/25 18:52:33.792
  STEP: Creating a pod to test consume configMaps @ 01/15/25 18:52:33.802
  E0115 18:52:34.411737      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:35.412433      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:36.413169      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:37.413552      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:52:37.836
  I0115 18:52:37.840235 30 output.go:207] Trying to get logs from node node6 pod pod-configmaps-dbe7e320-ea03-49cb-ace1-65d5d1df2248 container env-test: <nil>
  STEP: delete the pod @ 01/15/25 18:52:37.849
  I0115 18:52:37.873370 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8260" for this suite. @ 01/15/25 18:52:37.879
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/15/25 18:52:37.893
  I0115 18:52:37.893965 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename init-container @ 01/15/25 18:52:37.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:37.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:37.94
  STEP: creating the pod @ 01/15/25 18:52:37.944
  I0115 18:52:37.944787 30 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0115 18:52:38.413551      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:39.414675      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:40.415776      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:41.416674      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:52:42.190048 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5629" for this suite. @ 01/15/25 18:52:42.197
• [4.314 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/15/25 18:52:42.207
  I0115 18:52:42.207890 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename pods @ 01/15/25 18:52:42.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:42.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:42.241
  STEP: creating the pod @ 01/15/25 18:52:42.245
  STEP: setting up watch @ 01/15/25 18:52:42.245
  STEP: submitting the pod to kubernetes @ 01/15/25 18:52:42.354
  STEP: verifying the pod is in kubernetes @ 01/15/25 18:52:42.367
  STEP: verifying pod creation was observed @ 01/15/25 18:52:42.371
  E0115 18:52:42.417372      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:43.417987      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/15/25 18:52:44.389
  STEP: verifying pod deletion was observed @ 01/15/25 18:52:44.403
  E0115 18:52:44.419021      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:45.419567      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:46.420109      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:52:46.995218 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2264" for this suite. @ 01/15/25 18:52:47.001
• [4.803 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 01/15/25 18:52:47.011
  I0115 18:52:47.011127 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:52:47.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:47.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:47.046
  I0115 18:52:47.077036 30 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0115 18:52:47.077096 30 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0115 18:52:47.085591 30 service_accounts.go:282] created pod pod-service-account-mountsa
  I0115 18:52:47.085652 30 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0115 18:52:47.101916 30 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0115 18:52:47.101965 30 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0115 18:52:47.123678 30 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0115 18:52:47.123733 30 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0115 18:52:47.160689 30 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0115 18:52:47.160917 30 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0115 18:52:47.172194 30 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0115 18:52:47.172266 30 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0115 18:52:47.182722 30 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0115 18:52:47.182775 30 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0115 18:52:47.193191 30 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0115 18:52:47.193244 30 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0115 18:52:47.214740 30 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0115 18:52:47.214808 30 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0115 18:52:47.215034 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3488" for this suite. @ 01/15/25 18:52:47.229
• [0.244 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/15/25 18:52:47.255
  I0115 18:52:47.255725 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename services @ 01/15/25 18:52:47.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:47.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:47.303
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6291 @ 01/15/25 18:52:47.308
  STEP: changing the ExternalName service to type=NodePort @ 01/15/25 18:52:47.316
  STEP: creating replication controller externalname-service in namespace services-6291 @ 01/15/25 18:52:47.348
  I0115 18:52:47.361700      30 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6291, replica count: 2
  E0115 18:52:47.421917      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:48.422078      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:49.423190      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:52:50.413231      30 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0115 18:52:50.413311 30 resource.go:361] Creating new exec pod
  E0115 18:52:50.423537      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:51.423620      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:52.424010      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:53.424922      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:52:53.453191 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-6291 exec execpod6mczq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0115 18:52:53.652594 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.44.63) 80 port [tcp/http] succeeded!\n"
  I0115 18:52:53.652657 30 builder.go:147] stdout: "externalname-service-h29lt"
  I0115 18:52:53.652763 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-6291 exec execpod6mczq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.63 80'
  I0115 18:52:53.808049 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.63 80\nConnection to 10.233.44.63 80 port [tcp/http] succeeded!\n"
  I0115 18:52:53.808164 30 builder.go:147] stdout: "externalname-service-s829q"
  I0115 18:52:53.808473 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-6291 exec execpod6mczq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.55 30262'
  I0115 18:52:53.999383 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.55 30262\nConnection to 192.168.111.55 30262 port [tcp/*] succeeded!\n"
  I0115 18:52:53.999486 30 builder.go:147] stdout: "externalname-service-h29lt"
  I0115 18:52:53.999650 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=services-6291 exec execpod6mczq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.146 30262'
  I0115 18:52:54.169815 30 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.146 30262\nConnection to 192.168.111.146 30262 port [tcp/*] succeeded!\n"
  I0115 18:52:54.169908 30 builder.go:147] stdout: "externalname-service-h29lt"
  I0115 18:52:54.170024 30 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0115 18:52:54.222100 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6291" for this suite. @ 01/15/25 18:52:54.228
• [6.991 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 01/15/25 18:52:54.246
  I0115 18:52:54.246710 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:52:54.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:54.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:54.288
  STEP: Creating a job @ 01/15/25 18:52:54.292
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/15/25 18:52:54.304
  E0115 18:52:54.426355      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:55.426644      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/15/25 18:52:56.322
  STEP: updating /status @ 01/15/25 18:52:56.339
  STEP: get /status @ 01/15/25 18:52:56.357
  I0115 18:52:56.362141 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7653" for this suite. @ 01/15/25 18:52:56.368
• [2.130 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 01/15/25 18:52:56.377
  I0115 18:52:56.377674 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename job @ 01/15/25 18:52:56.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:52:56.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:52:56.41
  STEP: Creating Indexed job @ 01/15/25 18:52:56.414
  STEP: Ensuring job reaches completions @ 01/15/25 18:52:56.424
  E0115 18:52:56.427389      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:57.428245      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:58.429093      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:52:59.429268      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:00.429755      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:01.430507      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:02.430868      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:03.430950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:04.431263      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 01/15/25 18:53:04.495
  I0115 18:53:04.501265 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2277" for this suite. @ 01/15/25 18:53:04.507
• [8.139 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/15/25 18:53:04.517
  I0115 18:53:04.517155 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:53:04.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:04.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:04.561
  STEP: creating all guestbook components @ 01/15/25 18:53:04.565
  I0115 18:53:04.565383 30 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0115 18:53:04.565557 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 create -f -'
  I0115 18:53:04.762202 30 builder.go:146] stderr: ""
  I0115 18:53:04.762263 30 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0115 18:53:04.762404 30 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0115 18:53:04.762545 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 create -f -'
  I0115 18:53:04.961505 30 builder.go:146] stderr: ""
  I0115 18:53:04.961587 30 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0115 18:53:04.961682 30 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0115 18:53:04.961814 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 create -f -'
  I0115 18:53:05.164459 30 builder.go:146] stderr: ""
  I0115 18:53:05.164523 30 builder.go:147] stdout: "service/frontend created\n"
  I0115 18:53:05.164866 30 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0115 18:53:05.166041 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 create -f -'
  I0115 18:53:05.305124 30 builder.go:146] stderr: ""
  I0115 18:53:05.305187 30 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0115 18:53:05.305284 30 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0115 18:53:05.305449 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 create -f -'
  E0115 18:53:05.432191      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:53:05.456317 30 builder.go:146] stderr: ""
  I0115 18:53:05.456410 30 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0115 18:53:05.456542 30 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0115 18:53:05.456783 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 create -f -'
  I0115 18:53:05.591941 30 builder.go:146] stderr: ""
  I0115 18:53:05.592048 30 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/15/25 18:53:05.592
  I0115 18:53:05.592158 30 kubectl.go:2269] Waiting for all frontend pods to be Running.
  E0115 18:53:06.433213      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:07.433919      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:08.434437      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:09.436327      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:10.435074      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:53:10.643542 30 kubectl.go:2273] Waiting for frontend to serve content.
  I0115 18:53:10.662213 30 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0115 18:53:10.781568 30 kubectl.go:2283] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/15/25 18:53:11.113
  I0115 18:53:11.113990 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  I0115 18:53:11.288171 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:53:11.288241 30 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/15/25 18:53:11.288
  I0115 18:53:11.288691 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  E0115 18:53:11.435821      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:53:11.454565 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:53:11.454627 30 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/15/25 18:53:11.454
  I0115 18:53:11.455882 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  I0115 18:53:11.583436 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:53:11.583504 30 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/15/25 18:53:11.583
  I0115 18:53:11.583716 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  I0115 18:53:11.677485 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:53:11.677586 30 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/15/25 18:53:11.677
  I0115 18:53:11.677875 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  I0115 18:53:11.790980 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:53:11.791097 30 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/15/25 18:53:11.791
  I0115 18:53:11.791439 30 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-4001 delete --grace-period=0 --force -f -'
  I0115 18:53:11.894520 30 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0115 18:53:11.894654 30 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0115 18:53:11.894923 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4001" for this suite. @ 01/15/25 18:53:11.903
• [7.410 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/15/25 18:53:11.926
  I0115 18:53:11.926821 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename subpath @ 01/15/25 18:53:11.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:11.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:11.961
  STEP: Setting up data @ 01/15/25 18:53:11.965
  STEP: Creating pod pod-subpath-test-projected-w94z @ 01/15/25 18:53:11.984
  STEP: Creating a pod to test atomic-volume-subpath @ 01/15/25 18:53:11.984
  E0115 18:53:12.436546      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:13.436865      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:14.437744      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:15.438100      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:16.438388      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:17.438878      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:18.439432      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:19.439988      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:20.440149      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:21.440568      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:22.441594      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:23.441959      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:24.442402      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:25.442797      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:26.443086      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:27.443404      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:28.443678      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:29.444069      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:30.444452      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:31.444772      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:32.445539      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:33.445965      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:34.446707      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:35.447408      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:53:36.103
  I0115 18:53:36.108626 30 output.go:207] Trying to get logs from node node6 pod pod-subpath-test-projected-w94z container test-container-subpath-projected-w94z: <nil>
  STEP: delete the pod @ 01/15/25 18:53:36.119
  STEP: Deleting pod pod-subpath-test-projected-w94z @ 01/15/25 18:53:36.15
  I0115 18:53:36.150651 30 delete.go:62] Deleting pod "pod-subpath-test-projected-w94z" in namespace "subpath-7630"
  I0115 18:53:36.155140 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7630" for this suite. @ 01/15/25 18:53:36.163
• [24.262 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/15/25 18:53:36.192
  I0115 18:53:36.193173 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename webhook @ 01/15/25 18:53:36.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:36.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:36.243
  STEP: Setting up server cert @ 01/15/25 18:53:36.338
  E0115 18:53:36.448238      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/15/25 18:53:36.572
  STEP: Deploying the webhook pod @ 01/15/25 18:53:36.6
  STEP: Wait for the deployment to be ready @ 01/15/25 18:53:36.62
  I0115 18:53:36.630415 30 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0115 18:53:37.449114      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:38.449695      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/15/25 18:53:38.647
  STEP: Verifying the service has paired with the endpoint @ 01/15/25 18:53:38.67
  E0115 18:53:39.450296      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:53:39.671499 30 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/15/25 18:53:39.68
  STEP: create a pod that should be updated by the webhook @ 01/15/25 18:53:39.716
  I0115 18:53:39.849447 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6378" for this suite. @ 01/15/25 18:53:39.861
  STEP: Destroying namespace "webhook-markers-7508" for this suite. @ 01/15/25 18:53:39.872
• [3.691 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/15/25 18:53:39.886
  I0115 18:53:39.886668 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename field-validation @ 01/15/25 18:53:39.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:39.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:39.948
  STEP: apply creating a deployment @ 01/15/25 18:53:39.952
  I0115 18:53:39.974681 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3301" for this suite. @ 01/15/25 18:53:39.982
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 01/15/25 18:53:39.993
  I0115 18:53:39.993386 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename svcaccounts @ 01/15/25 18:53:39.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:40.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:40.048
  STEP: Creating a Serviceaccount "e2e-sa-b28xm" in namespace "svcaccounts-7805" @ 01/15/25 18:53:40.053
  STEP: Creating a ServiceaccountToken "e2e-sa-b28xm" in namespace "svcaccounts-7805" @ 01/15/25 18:53:40.06
  STEP: Creating a TokenReview for "e2e-sa-b28xm" in namespace "svcaccounts-7805" @ 01/15/25 18:53:40.068
  I0115 18:53:40.071847 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7805" for this suite. @ 01/15/25 18:53:40.082
• [0.102 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/15/25 18:53:40.097
  I0115 18:53:40.097356 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/15/25 18:53:40.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:40.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:40.199
  STEP: Creating two CSIDrivers @ 01/15/25 18:53:40.202
  STEP: Getting "inline-driver-6a853891-746a-422c-a575-bb40520802e4" & "inline-driver-040acf53-c520-46e3-91a9-986b413f2303" @ 01/15/25 18:53:40.226
  STEP: Patching the CSIDriver "inline-driver-040acf53-c520-46e3-91a9-986b413f2303" @ 01/15/25 18:53:40.234
  STEP: Updating the CSIDriver "inline-driver-040acf53-c520-46e3-91a9-986b413f2303" @ 01/15/25 18:53:40.247
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-196" @ 01/15/25 18:53:40.258
  STEP: Deleting CSIDriver "inline-driver-6a853891-746a-422c-a575-bb40520802e4" @ 01/15/25 18:53:40.263
  STEP: Confirm deletion of CSIDriver "inline-driver-6a853891-746a-422c-a575-bb40520802e4" @ 01/15/25 18:53:40.275
  STEP: Deleting CSIDriver "inline-driver-040acf53-c520-46e3-91a9-986b413f2303" via DeleteCollection @ 01/15/25 18:53:40.279
  STEP: Confirm deletion of CSIDriver "inline-driver-040acf53-c520-46e3-91a9-986b413f2303" @ 01/15/25 18:53:40.289
  I0115 18:53:40.294240 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-196" for this suite. @ 01/15/25 18:53:40.3
• [0.213 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/15/25 18:53:40.311
  I0115 18:53:40.311670 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename var-expansion @ 01/15/25 18:53:40.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:40.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:40.355
  E0115 18:53:40.450457      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:41.450933      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:53:42.391770 30 delete.go:62] Deleting pod "var-expansion-3bae80b2-cbb8-4064-a29e-acac04dae653" in namespace "var-expansion-4778"
  I0115 18:53:42.404263 30 delete.go:70] Wait up to 5m0s for pod "var-expansion-3bae80b2-cbb8-4064-a29e-acac04dae653" to be fully deleted
  E0115 18:53:42.451409      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:43.451950      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0115 18:53:44.416688 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4778" for this suite. @ 01/15/25 18:53:44.423
• [4.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/15/25 18:53:44.433
  I0115 18:53:44.433419 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename emptydir @ 01/15/25 18:53:44.435
  E0115 18:53:44.452205      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:44.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:44.468
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/15/25 18:53:44.472
  E0115 18:53:45.452467      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:46.453117      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:47.453634      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0115 18:53:48.453707      30 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/15/25 18:53:48.513
  I0115 18:53:48.518390 30 output.go:207] Trying to get logs from node node6 pod pod-f063cc84-66c3-43ab-895c-bc75a171118a container test-container: <nil>
  STEP: delete the pod @ 01/15/25 18:53:48.528
  I0115 18:53:48.559018 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9311" for this suite. @ 01/15/25 18:53:48.566
• [4.142 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 01/15/25 18:53:48.575
  I0115 18:53:48.575594 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename kubectl @ 01/15/25 18:53:48.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:48.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:48.611
  STEP: starting the proxy server @ 01/15/25 18:53:48.614
  I0115 18:53:48.615147 30 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3738829174 --namespace=kubectl-5175 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/15/25 18:53:48.682
  I0115 18:53:48.694959 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0115 18:53:48.698317 30 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:35379

  I0115 18:53:48.698324 30 kubectl.go:2226] kubectl proxy stderr: W0115 18:53:48.681596    2082 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-5175" for this suite. @ 01/15/25 18:53:48.701
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/15/25 18:53:48.712
  I0115 18:53:48.712377 30 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3738829174
  STEP: Building a namespace api object, basename secrets @ 01/15/25 18:53:48.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/15/25 18:53:48.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/15/25 18:53:48.747
  STEP: creating a secret @ 01/15/25 18:53:48.752
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/15/25 18:53:48.761
  STEP: patching the secret @ 01/15/25 18:53:48.766
  STEP: deleting the secret using a LabelSelector @ 01/15/25 18:53:48.779
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/15/25 18:53:48.789
  I0115 18:53:48.795499 30 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5112" for this suite. @ 01/15/25 18:53:48.802
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0115 18:53:48.813445 30 suites.go:34] Running AfterSuite actions on node 1
  I0115 18:53:48.813567 30 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.077 seconds]
------------------------------

Ran 411 of 6622 Specs in 6612.897 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h50m16.391079459s
Test Suite Passed
