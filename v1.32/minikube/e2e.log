  I0411 11:53:23.783094      26 e2e.go:109] Starting e2e run "ede574e1-cb21-427b-9d09-441debd24dc2" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1744372403 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0411 11:53:23.897068 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:53:23.897775 26 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0411 11:53:23.909265 26 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0411 11:53:23.910778 26 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kindnet' (0 seconds elapsed)
  I0411 11:53:23.910818 26 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0411 11:53:23.910836 26 e2e.go:245] e2e test version: v1.32.2
  I0411 11:53:23.911407 26 e2e.go:254] kube-apiserver version: v1.32.2
  I0411 11:53:23.911482 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:53:23.913033 26 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.016 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/11/25 11:53:23.986
  I0411 11:53:23.986570 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 11:53:23.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:53:23.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:53:23.997
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/11/25 11:53:24.007
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/11/25 11:53:24.01
  I0411 11:53:24.108041 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:24.108086 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:25.020739 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:25.020837 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:26.022135 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:26.022195 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:27.019643 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:27.019693 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:28.020510 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:28.020614 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:29.018901 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:29.018959 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:30.020777 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:30.020822 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:31.020073 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:31.020142 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:32.018958 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:32.019008 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:33.020477 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:33.020526 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:34.016948 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:34.016993 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:35.015335 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:35.015368 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:36.018902 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:36.018964 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:37.021435 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:37.021520 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:38.014041 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:38.014073 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:39.015464 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:39.015496 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:40.015535 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:40.015565 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:41.018949 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:41.019003 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:42.015982 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:42.016033 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:43.014540 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:43.014570 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:44.014769 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:44.014798 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:45.022829 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:45.022900 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:46.015715 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:46.015758 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:47.015881 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:47.015922 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:48.020374 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:48.020464 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:49.021419 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:49.021465 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:50.015562 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:50.015596 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:53:51.019448 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 11:53:51.019510 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/11/25 11:53:51.022
  I0411 11:53:51.118308 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:53:51.118350 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:53:52.042866 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 11:53:52.042918 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/11/25 11:53:52.042
  STEP: Deleting DaemonSet "daemon-set" @ 04/11/25 11:53:52.047
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2534, will wait for the garbage collector to delete the pods @ 04/11/25 11:53:52.047
  I0411 11:53:52.112395 26 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.244788ms
  I0411 11:53:52.213532 26 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.128975ms
  I0411 11:53:54.115769 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:53:54.115803 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0411 11:53:54.118772 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"774"},"items":null}

  I0411 11:53:54.120279 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"774"},"items":null}

  I0411 11:53:54.124633 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2534" for this suite. @ 04/11/25 11:53:54.125
• [30.143 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/11/25 11:53:54.129
  I0411 11:53:54.129964 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename watch @ 04/11/25 11:53:54.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:53:54.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:53:54.14
  STEP: getting a starting resourceVersion @ 04/11/25 11:53:54.141
  STEP: starting a background goroutine to produce watch events @ 04/11/25 11:53:54.143
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/11/25 11:53:54.143
  I0411 11:53:56.935264 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9763" for this suite. @ 04/11/25 11:53:56.988
• [2.909 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/11/25 11:53:57.039
  I0411 11:53:57.039315 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 11:53:57.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:53:57.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:53:57.054
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 11:53:57.056
  STEP: Saw pod success @ 04/11/25 11:54:07.094
  I0411 11:54:07.096447 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-2be54b31-7d33-420e-b22a-6766bf0d0f20 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 11:54:07.115
  I0411 11:54:07.133682 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8183" for this suite. @ 04/11/25 11:54:07.136
• [10.101 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 04/11/25 11:54:07.139
  I0411 11:54:07.139906 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 11:54:07.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:07.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:07.153
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/11/25 11:54:07.155
  I0411 11:54:07.155263 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7437 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0411 11:54:07.212258 26 builder.go:146] stderr: ""
  I0411 11:54:07.212313 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/11/25 11:54:07.212
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/11/25 11:54:12.265
  I0411 11:54:12.265410 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7437 get pod e2e-test-httpd-pod -o json'
  I0411 11:54:12.339440 26 builder.go:146] stderr: ""
  I0411 11:54:12.339500 26 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-04-11T11:54:07Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7437\",\n        \"resourceVersion\": \"962\",\n        \"uid\": \"d2d2226a-8d55-402c-9975-ec05ff22d769\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-skthm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8sconformance-m02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-skthm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-11T11:54:08Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-11T11:54:07Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-11T11:54:08Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-11T11:54:08Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-11T11:54:07Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://e05fcec6f939c57ed36d94bd6c388e4f3ee5e96ea7c6aca87d1786ca89e7d120\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-04-11T11:54:07Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-skthm\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.49.3\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.49.3\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.6\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.6\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-04-11T11:54:07Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/11/25 11:54:12.339
  I0411 11:54:12.339575 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7437 replace -f -'
  I0411 11:54:12.414255 26 builder.go:146] stderr: ""
  I0411 11:54:12.414286 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/11/25 11:54:12.414
  I0411 11:54:12.415789 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7437 delete pods e2e-test-httpd-pod'
  I0411 11:54:16.271700 26 builder.go:146] stderr: ""
  I0411 11:54:16.271738 26 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0411 11:54:16.271842 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7437" for this suite. @ 04/11/25 11:54:16.274
• [9.141 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/11/25 11:54:16.28
  I0411 11:54:16.280522 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 11:54:16.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:16.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:16.295
  STEP: Creating configMap with name configmap-test-volume-map-15b5b14b-b4c5-434f-95ac-5d4e320dfaaf @ 04/11/25 11:54:16.296
  STEP: Creating a pod to test consume configMaps @ 04/11/25 11:54:16.299
  STEP: Saw pod success @ 04/11/25 11:54:20.319
  I0411 11:54:20.322940 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-c547dfad-a979-4703-8b6a-f42dfedb4d31 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 11:54:20.331
  I0411 11:54:20.346283 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6148" for this suite. @ 04/11/25 11:54:20.349
• [4.074 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/11/25 11:54:20.354
  I0411 11:54:20.354228 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 11:54:20.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:20.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:20.37
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/11/25 11:54:20.373
  STEP: Saw pod success @ 04/11/25 11:54:24.392
  I0411 11:54:24.394110 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-8d704882-d2c6-429b-8a68-683254c3d2b9 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 11:54:24.399
  I0411 11:54:24.408644 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1522" for this suite. @ 04/11/25 11:54:24.41
• [4.060 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/11/25 11:54:24.414
  I0411 11:54:24.414146 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 11:54:24.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:24.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:24.428
  STEP: Creating simple DaemonSet "daemon-set" @ 04/11/25 11:54:24.519
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/11/25 11:54:24.527
  I0411 11:54:24.617461 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:54:24.617521 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 11:54:25.559220 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 11:54:25.559318 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/11/25 11:54:25.563
  I0411 11:54:25.636808 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:54:25.636864 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:54:26.580674 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 11:54:26.580708 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 11:54:27.583063 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 11:54:27.583120 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/11/25 11:54:27.586
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7671, will wait for the garbage collector to delete the pods @ 04/11/25 11:54:27.586
  I0411 11:54:27.648309 26 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.132656ms
  I0411 11:54:27.749507 26 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.191396ms
  I0411 11:54:29.618209 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 11:54:29.618292 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0411 11:54:29.622965 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1117"},"items":null}

  I0411 11:54:29.625628 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1117"},"items":null}

  I0411 11:54:29.635120 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7671" for this suite. @ 04/11/25 11:54:29.638
• [5.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/11/25 11:54:29.643
  I0411 11:54:29.643418 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replication-controller @ 04/11/25 11:54:29.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:29.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:29.659
  STEP: Creating replication controller my-hostname-basic-6074bb00-f1c5-4fca-9041-a61ddf23b1f2 @ 04/11/25 11:54:29.662
  I0411 11:54:29.680769 26 resource.go:87] Pod name my-hostname-basic-6074bb00-f1c5-4fca-9041-a61ddf23b1f2: Found 1 pods out of 1
  I0411 11:54:29.680820 26 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-6074bb00-f1c5-4fca-9041-a61ddf23b1f2" are running
  I0411 11:54:31.688998 26 rc.go:523] Pod "my-hostname-basic-6074bb00-f1c5-4fca-9041-a61ddf23b1f2-5crkv" is running and ready(conditions: [])
  I0411 11:54:31.689062 26 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/11/25 11:54:31.689
  I0411 11:54:31.697166 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6533" for this suite. @ 04/11/25 11:54:31.7
• [2.063 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/11/25 11:54:31.707
  I0411 11:54:31.707103 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 11:54:31.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:31.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:31.725
  STEP: Creating a pod to test env composition @ 04/11/25 11:54:31.727
  STEP: Saw pod success @ 04/11/25 11:54:33.743
  I0411 11:54:33.746788 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-5ee97040-6975-4ae3-a94e-a42e538d6a12 container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 11:54:33.755
  I0411 11:54:33.771296 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9261" for this suite. @ 04/11/25 11:54:33.774
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/11/25 11:54:33.781
  I0411 11:54:33.781054 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename namespaces @ 04/11/25 11:54:33.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:33.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:33.799
  STEP: Updating Namespace "namespaces-558" @ 04/11/25 11:54:33.801
  I0411 11:54:33.805450 26 namespace.go:389] Namespace "namespaces-558" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ede574e1-cb21-427b-9d09-441debd24dc2", "kubernetes.io/metadata.name":"namespaces-558", "namespaces-558":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0411 11:54:33.805647 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-558" for this suite. @ 04/11/25 11:54:33.876
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 04/11/25 11:54:33.884
  I0411 11:54:33.884289 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-webhook @ 04/11/25 11:54:33.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:33.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:33.901
  STEP: Setting up server cert @ 04/11/25 11:54:33.904
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/11/25 11:54:34.327
  STEP: Deploying the custom resource conversion webhook pod @ 04/11/25 11:54:34.331
  STEP: Wait for the deployment to be ready @ 04/11/25 11:54:34.338
  I0411 11:54:34.343290 26 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 11:54:36.356
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 11:54:36.371
  I0411 11:54:37.371894 26 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0411 11:54:37.380767 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Creating a v1 custom resource @ 04/11/25 11:54:39.954
  STEP: v2 custom resource should be converted @ 04/11/25 11:54:39.959
  I0411 11:54:40.494557 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9289" for this suite. @ 04/11/25 11:54:40.496
• [6.618 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/11/25 11:54:40.503
  I0411 11:54:40.503226 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/11/25 11:54:40.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:40.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:40.519
  I0411 11:54:40.522661 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:54:43.570364 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9577" for this suite. @ 04/11/25 11:54:43.575
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/11/25 11:54:43.585
  I0411 11:54:43.585894 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename cronjob @ 04/11/25 11:54:43.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:54:43.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:54:43.602
  STEP: Creating a ForbidConcurrent cronjob @ 04/11/25 11:54:43.606
  STEP: Ensuring a job is scheduled @ 04/11/25 11:54:43.612
  STEP: Ensuring exactly one is scheduled @ 04/11/25 11:55:01.619
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/11/25 11:55:01.622
  STEP: Ensuring no more jobs are scheduled @ 04/11/25 11:55:01.625
  STEP: Removing cronjob @ 04/11/25 11:55:01.628
  I0411 11:55:01.634479 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5285" for this suite. @ 04/11/25 11:55:01.638
• [18.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 04/11/25 11:55:01.643
  I0411 11:55:01.643623 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 11:55:01.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:01.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:01.659
  STEP: Counting existing ResourceQuota @ 04/11/25 11:55:01.662
  STEP: Creating a ResourceQuota @ 04/11/25 11:55:06.665
  STEP: Ensuring resource quota status is calculated @ 04/11/25 11:55:06.671
  STEP: Creating a Pod that fits quota @ 04/11/25 11:55:08.678
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/11/25 11:55:08.697
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/11/25 11:55:10.702
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/11/25 11:55:10.705
  STEP: Ensuring a pod cannot update its resource requirements @ 04/11/25 11:55:10.708
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/11/25 11:55:10.712
  STEP: Deleting the pod @ 04/11/25 11:55:12.718
  STEP: Ensuring resource quota status released the pod usage @ 04/11/25 11:55:12.731
  I0411 11:55:14.734197 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1690" for this suite. @ 04/11/25 11:55:14.736
• [13.097 seconds]
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 04/11/25 11:55:14.741
  I0411 11:55:14.741128 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 11:55:14.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:14.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:14.752
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/11/25 11:55:14.753
  I0411 11:55:14.759721 26 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6664  c78b566c-b4f7-4664-b8e8-96970eb506c0 1374 0 2025-04-11 11:55:14 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-04-11 11:55:14 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-db5p6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-db5p6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/11/25 11:55:16.767
  I0411 11:55:16.768015 26 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6664 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 11:55:16.768053 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 11:55:16.768163 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6664/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/11/25 11:55:16.845
  I0411 11:55:16.845716 26 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6664 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 11:55:16.845728 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 11:55:16.845763 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6664/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0411 11:55:16.924437 26 dns.go:450] Deleting pod test-dns-nameservers...
  I0411 11:55:16.933025 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6664" for this suite. @ 04/11/25 11:55:16.934
• [2.197 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 04/11/25 11:55:16.937
  I0411 11:55:16.937902 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 11:55:16.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:16.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:16.947
  STEP: starting the proxy server @ 04/11/25 11:55:16.948
  I0411 11:55:16.949029 26 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-3158 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/11/25 11:55:16.977
  I0411 11:55:16.983536 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0411 11:55:16.984844 26 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:46605

  I0411 11:55:16.984848 26 kubectl.go:2226] kubectl proxy stderr: W0411 11:55:16.977369     103 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-3158" for this suite. @ 04/11/25 11:55:17.035
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 04/11/25 11:55:17.04
  I0411 11:55:17.040377 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 11:55:17.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:17.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:17.056
  STEP: Creating a pod to test service account token:  @ 04/11/25 11:55:17.058
  STEP: Saw pod success @ 04/11/25 11:55:21.075
  I0411 11:55:21.078431 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod test-pod-c1dbe1d5-defe-4561-a82b-3cafcfbbb046 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 11:55:21.087
  I0411 11:55:21.101782 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8626" for this suite. @ 04/11/25 11:55:21.105
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 04/11/25 11:55:21.11
  I0411 11:55:21.111028 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 11:55:21.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:21.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:21.13
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/11/25 11:55:21.133
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/11/25 11:55:21.133
  STEP: creating a pod to probe DNS @ 04/11/25 11:55:21.133
  STEP: submitting the pod to kubernetes @ 04/11/25 11:55:21.133
  STEP: retrieving the pod @ 04/11/25 11:55:37.185
  STEP: looking for the results for each expected name from probers @ 04/11/25 11:55:37.189
  I0411 11:55:37.202839 26 dns_common.go:546] DNS probes using dns-6838/dns-test-638a40f5-0187-4163-9be8-e0d925f4467a succeeded

  STEP: deleting the pod @ 04/11/25 11:55:37.202
  I0411 11:55:37.213594 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6838" for this suite. @ 04/11/25 11:55:37.218
• [16.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/11/25 11:55:37.224
  I0411 11:55:37.224286 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/11/25 11:55:37.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:37.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:37.241
  STEP: creating the policy @ 04/11/25 11:55:37.251
  STEP: waiting until the marker is denied @ 04/11/25 11:55:37.271
  STEP: testing a replicated Deployment to be allowed @ 04/11/25 11:55:38.09
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/11/25 11:55:38.099
  I0411 11:55:38.124193 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7569" for this suite. @ 04/11/25 11:55:38.126
• [0.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/11/25 11:55:38.134
  I0411 11:55:38.134286 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 11:55:38.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:38.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:38.142
  I0411 11:55:38.143379 26 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0411 11:55:38.148384 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0411 11:55:43.155495 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/11/25 11:55:43.155
  I0411 11:55:43.155649 26 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0411 11:55:43.163192 26 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0411 11:55:43.168794 26 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0411 11:55:45.178775 26 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0411 11:55:45.181219 26 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0411 11:55:45.188305 26 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82d00f3c-7341-4ca8-907c-3becfd68ab4d",
      ResourceVersion: (string) (len=4) "1733",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 11:55:45.191778 26 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2504176-6a71-4113-95bb-ced6a11e8114",
      ResourceVersion: (string) (len=4) "1723",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "82d00f3c-7341-4ca8-907c-3becfd68ab4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 32 64 30 30 66  33 63 2d 37 33 34 31 2d  |\"82d00f3c-7341-|
              00000120  34 63 61 38 2d 39 30 37  63 2d 33 62 65 63 66 64  |4ca8-907c-3becfd|
              00000130  36 38 61 62 34 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |68ab4d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 11:55:45.192755 26 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0411 11:55:45.193053 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e95bfdb5-0d36-483e-9318-5392547c327b",
      ResourceVersion: (string) (len=4) "1732",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "82d00f3c-7341-4ca8-907c-3becfd68ab4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 32 64 30 30 66 33  |"uid\":\"82d00f3|
              000000b0  63 2d 37 33 34 31 2d 34  63 61 38 2d 39 30 37 63  |c-7341-4ca8-907c|
              000000c0  2d 33 62 65 63 66 64 36  38 61 62 34 64 5c 22 7d  |-3becfd68ab4d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 11:55:45.196847 26 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-8pbcf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-8pbcf",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-6366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e08ea3a-786c-48a1-8a88-644474a60cf0",
      ResourceVersion: (string) (len=4) "1722",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "b2504176-6a71-4113-95bb-ced6a11e8114",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  35 30 34 31 37 36 2d 36  |d\":\"b2504176-6|
              00000090  61 37 31 2d 34 31 31 33  2d 39 35 62 62 2d 63 65  |a71-4113-95bb-ce|
              000000a0  64 36 61 31 31 65 38 31  31 34 5c 22 7d 22 3a 7b  |d6a11e8114\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  38 5c 22 7d 22 3a 7b 22  |.244.1.18\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-thxls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-thxls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879969343,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=73) "docker://d2c08ac3260a6723a6fbf37c439f6e96cf2565e6d1c384d1b785bf9dc5cb9a73",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-thxls",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 11:55:45.198724 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6366" for this suite. @ 04/11/25 11:55:45.2
• [7.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 04/11/25 11:55:45.206
  I0411 11:55:45.206422 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename fake-node @ 04/11/25 11:55:45.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:45.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:45.219
  STEP: Create "e2e-fake-node-8pv66" @ 04/11/25 11:55:45.221
  STEP: Getting "e2e-fake-node-8pv66" @ 04/11/25 11:55:45.225
  STEP: Patching "e2e-fake-node-8pv66" @ 04/11/25 11:55:45.228
  STEP: Listing nodes with LabelSelector "e2e-fake-node-8pv66=patched" @ 04/11/25 11:55:45.233
  STEP: Updating "e2e-fake-node-8pv66" @ 04/11/25 11:55:45.236
  STEP: Delete "e2e-fake-node-8pv66" @ 04/11/25 11:55:45.242
  STEP: Confirm deletion of "e2e-fake-node-8pv66" @ 04/11/25 11:55:45.246
  I0411 11:55:45.248390 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-986" for this suite. @ 04/11/25 11:55:45.25
• [0.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 04/11/25 11:55:45.254
  I0411 11:55:45.254306 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 11:55:45.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:45.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:45.322
  STEP: Setting up server cert @ 04/11/25 11:55:45.371
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 11:55:45.53
  STEP: Deploying the webhook pod @ 04/11/25 11:55:45.535
  STEP: Wait for the deployment to be ready @ 04/11/25 11:55:45.543
  I0411 11:55:45.547170 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 11:55:47.56
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 11:55:47.574
  I0411 11:55:48.574301 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/11/25 11:55:48.582
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/11/25 11:55:48.603
  STEP: Creating a configMap that should not be mutated @ 04/11/25 11:55:48.609
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/11/25 11:55:48.618
  STEP: Creating a configMap that should be mutated @ 04/11/25 11:55:48.626
  I0411 11:55:48.676038 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5495" for this suite. @ 04/11/25 11:55:48.679
  STEP: Destroying namespace "webhook-markers-4585" for this suite. @ 04/11/25 11:55:48.683
• [3.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 04/11/25 11:55:48.689
  I0411 11:55:48.689146 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 11:55:48.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:48.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:48.705
  STEP: Counting existing ResourceQuota @ 04/11/25 11:55:48.707
  STEP: Creating a ResourceQuota @ 04/11/25 11:55:53.711
  STEP: Ensuring resource quota status is calculated @ 04/11/25 11:55:53.717
  STEP: Creating a ReplicationController @ 04/11/25 11:55:55.723
  STEP: Ensuring resource quota status captures replication controller creation @ 04/11/25 11:55:55.74
  STEP: Deleting a ReplicationController @ 04/11/25 11:55:57.745
  STEP: Ensuring resource quota status released usage @ 04/11/25 11:55:57.752
  I0411 11:55:59.757654 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3856" for this suite. @ 04/11/25 11:55:59.76
• [11.079 seconds]
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/11/25 11:55:59.768
  I0411 11:55:59.768583 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename ingressclass @ 04/11/25 11:55:59.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:59.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:59.786
  STEP: getting /apis @ 04/11/25 11:55:59.79
  STEP: getting /apis/networking.k8s.io @ 04/11/25 11:55:59.794
  STEP: getting /apis/networking.k8s.iov1 @ 04/11/25 11:55:59.795
  STEP: creating @ 04/11/25 11:55:59.796
  STEP: getting @ 04/11/25 11:55:59.81
  STEP: listing @ 04/11/25 11:55:59.813
  STEP: watching @ 04/11/25 11:55:59.817
  I0411 11:55:59.817574 26 ingressclass.go:348] starting watch
  STEP: patching @ 04/11/25 11:55:59.818
  STEP: updating @ 04/11/25 11:55:59.824
  I0411 11:55:59.828867 26 ingressclass.go:364] waiting for watch events with expected annotations
  I0411 11:55:59.828921 26 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/11/25 11:55:59.829
  STEP: deleting a collection @ 04/11/25 11:55:59.838
  I0411 11:55:59.849124 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1862" for this suite. @ 04/11/25 11:55:59.862
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 04/11/25 11:55:59.87
  I0411 11:55:59.870920 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 11:55:59.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:55:59.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:55:59.886
  STEP: Setting up server cert @ 04/11/25 11:55:59.987
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 11:56:00.096
  STEP: Deploying the webhook pod @ 04/11/25 11:56:00.1
  STEP: Wait for the deployment to be ready @ 04/11/25 11:56:00.107
  I0411 11:56:00.111814 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 11:56:02.126
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 11:56:02.139
  I0411 11:56:03.139852 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0411 11:56:03.148354 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2021-crds.webhook.example.com via the AdmissionRegistration API @ 04/11/25 11:56:03.661
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/11/25 11:56:03.682
  I0411 11:56:06.265862 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4339" for this suite. @ 04/11/25 11:56:06.269
  STEP: Destroying namespace "webhook-markers-3667" for this suite. @ 04/11/25 11:56:06.276
• [6.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/11/25 11:56:06.282
  I0411 11:56:06.282774 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 11:56:06.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:06.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:06.293
  STEP: reading a file in the container @ 04/11/25 11:56:08.314
  I0411 11:56:08.314971 26 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3733 pod-service-account-cb8e7bc0-5371-4c70-92a9-542b03923b53 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/11/25 11:56:08.405
  I0411 11:56:08.405837 26 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3733 pod-service-account-cb8e7bc0-5371-4c70-92a9-542b03923b53 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/11/25 11:56:08.49
  I0411 11:56:08.490716 26 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3733 pod-service-account-cb8e7bc0-5371-4c70-92a9-542b03923b53 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0411 11:56:08.582318 26 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-3733"
  I0411 11:56:08.584636 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3733" for this suite. @ 04/11/25 11:56:08.586
• [2.309 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 04/11/25 11:56:08.591
  I0411 11:56:08.591970 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl-logs @ 04/11/25 11:56:08.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:08.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:08.606
  STEP: creating a pod @ 04/11/25 11:56:08.608
  I0411 11:56:08.608910 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0411 11:56:08.657286 26 builder.go:146] stderr: ""
  I0411 11:56:08.657323 26 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/11/25 11:56:08.657
  I0411 11:56:08.657420 26 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0411 11:56:10.670266 26 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/11/25 11:56:10.67
  I0411 11:56:10.670471 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 logs logs-generator logs-generator'
  I0411 11:56:10.711164 26 builder.go:146] stderr: ""
  I0411 11:56:10.711220 26 builder.go:147] stdout: "I0411 11:56:09.337179       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/76b 569\nI0411 11:56:09.537540       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/7vc 367\nI0411 11:56:09.737834       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/sn6q 506\nI0411 11:56:09.937423       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/tngq 352\nI0411 11:56:10.137868       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/bbdv 501\nI0411 11:56:10.338293       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/rk4r 212\nI0411 11:56:10.537853       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/bg8 525\n"
  STEP: limiting log lines @ 04/11/25 11:56:10.711
  I0411 11:56:10.711307 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 logs logs-generator logs-generator --tail=1'
  I0411 11:56:10.752529 26 builder.go:146] stderr: ""
  I0411 11:56:10.752575 26 builder.go:147] stdout: "I0411 11:56:10.738134       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/kzp 542\n"
  I0411 11:56:10.752586 26 logs.go:180] got output "I0411 11:56:10.738134       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/kzp 542\n"
  STEP: limiting log bytes @ 04/11/25 11:56:10.752
  I0411 11:56:10.752664 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 logs logs-generator logs-generator --limit-bytes=1'
  I0411 11:56:10.796844 26 builder.go:146] stderr: ""
  I0411 11:56:10.796881 26 builder.go:147] stdout: "I"
  I0411 11:56:10.796891 26 logs.go:186] got output "I"
  STEP: exposing timestamps @ 04/11/25 11:56:10.796
  I0411 11:56:10.796958 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 logs logs-generator logs-generator --tail=1 --timestamps'
  I0411 11:56:10.849686 26 builder.go:146] stderr: ""
  I0411 11:56:10.849719 26 builder.go:147] stdout: "2025-04-11T11:56:10.738239591Z I0411 11:56:10.738134       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/kzp 542\n"
  I0411 11:56:10.849728 26 logs.go:192] got output "2025-04-11T11:56:10.738239591Z I0411 11:56:10.738134       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/kzp 542\n"
  STEP: restricting to a time range @ 04/11/25 11:56:10.849
  I0411 11:56:13.350348 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 logs logs-generator logs-generator --since=1s'
  I0411 11:56:13.404289 26 builder.go:146] stderr: ""
  I0411 11:56:13.404338 26 builder.go:147] stdout: "I0411 11:56:12.538352       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/n2v 315\nI0411 11:56:12.737878       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/d5w 247\nI0411 11:56:12.937337       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/5gzb 332\nI0411 11:56:13.137886       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/ppc 454\nI0411 11:56:13.338368       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/ks4v 455\n"
  I0411 11:56:13.404384 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 logs logs-generator logs-generator --since=24h'
  I0411 11:56:13.445792 26 builder.go:146] stderr: ""
  I0411 11:56:13.445849 26 builder.go:147] stdout: "I0411 11:56:09.337179       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/76b 569\nI0411 11:56:09.537540       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/7vc 367\nI0411 11:56:09.737834       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/sn6q 506\nI0411 11:56:09.937423       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/tngq 352\nI0411 11:56:10.137868       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/bbdv 501\nI0411 11:56:10.338293       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/rk4r 212\nI0411 11:56:10.537853       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/bg8 525\nI0411 11:56:10.738134       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/kzp 542\nI0411 11:56:10.937311       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/q8m 298\nI0411 11:56:11.137746       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/nc6w 445\nI0411 11:56:11.337926       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/mtx8 310\nI0411 11:56:11.537236       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/pqpc 466\nI0411 11:56:11.737685       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/5ms 311\nI0411 11:56:11.938042       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/b5j 484\nI0411 11:56:12.137367       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/x6sm 546\nI0411 11:56:12.337787       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/vcx 230\nI0411 11:56:12.538352       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/n2v 315\nI0411 11:56:12.737878       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/d5w 247\nI0411 11:56:12.937337       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/5gzb 332\nI0411 11:56:13.137886       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/ppc 454\nI0411 11:56:13.338368       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/ks4v 455\n"
  I0411 11:56:13.445939 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-logs-9757 delete pod logs-generator'
  I0411 11:56:13.875854 26 builder.go:146] stderr: ""
  I0411 11:56:13.875895 26 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0411 11:56:13.876001 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9757" for this suite. @ 04/11/25 11:56:13.878
• [5.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 04/11/25 11:56:13.882
  I0411 11:56:13.882303 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 11:56:13.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:13.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:13.893
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/11/25 11:56:13.895
  I0411 11:56:13.895483 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:56:15.080104 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:56:19.721936 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5980" for this suite. @ 04/11/25 11:56:19.727
• [5.850 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/11/25 11:56:19.732
  I0411 11:56:19.732764 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replication-controller @ 04/11/25 11:56:19.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:19.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:19.744
  STEP: Given a ReplicationController is created @ 04/11/25 11:56:19.746
  STEP: When the matched label of one of its pods change @ 04/11/25 11:56:19.749
  I0411 11:56:19.751902 26 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0411 11:56:24.755446 26 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/11/25 11:56:24.767
  I0411 11:56:25.777688 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2457" for this suite. @ 04/11/25 11:56:25.781
• [6.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/11/25 11:56:25.788
  I0411 11:56:25.788724 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/11/25 11:56:25.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:25.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:25.8
  I0411 11:56:25.802378 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:56:26.825433 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5754" for this suite. @ 04/11/25 11:56:26.831
• [1.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/11/25 11:56:26.839
  I0411 11:56:26.839089 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 11:56:26.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:26.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:26.856
  I0411 11:56:26.859733 26 deployment.go:1645] Creating simple deployment test-new-deployment
  I0411 11:56:26.870920 26 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 04/11/25 11:56:28.884
  STEP: updating a scale subresource @ 04/11/25 11:56:28.886
  STEP: verifying the deployment Spec.Replicas was modified @ 04/11/25 11:56:28.893
  STEP: Patch a scale subresource @ 04/11/25 11:56:28.896
  I0411 11:56:28.910080 26 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3508",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "916d929d-af34-4410-9dab-c6967b2b7075",
      ResourceVersion: (string) (len=4) "2143",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 11:56:28.917999 26 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3508",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd36b418-7914-4d36-a95b-4ab57e818d9b",
      ResourceVersion: (string) (len=4) "2148",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "916d929d-af34-4410-9dab-c6967b2b7075",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 31 36 64 39 32  39 64 2d 61 66 33 34 2d  |\"916d929d-af34-|
              00000120  34 34 31 30 2d 39 64 61  62 2d 63 36 39 36 37 62  |4410-9dab-c6967b|
              00000130  32 62 37 30 37 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2b7075\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 11:56:28.927025 26 deployment.go:68] Pod "test-new-deployment-685b768f58-58qrs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-58qrs",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3508",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c62ec35-c2e3-458c-8161-6ff502fd39f4",
      ResourceVersion: (string) (len=4) "2147",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "dd36b418-7914-4d36-a95b-4ab57e818d9b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 64  33 36 62 34 31 38 2d 37  |d\":\"dd36b418-7|
              00000090  39 31 34 2d 34 64 33 36  2d 61 39 35 62 2d 34 61  |914-4d36-a95b-4a|
              000000a0  62 35 37 65 38 31 38 64  39 62 5c 22 7d 22 3a 7b  |b57e818d9b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ljsst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ljsst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 11:56:28.929404 26 deployment.go:68] Pod "test-new-deployment-685b768f58-cd2hh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-cd2hh",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3508",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0b086ea-d16e-45e8-89bc-087b286d5a15",
      ResourceVersion: (string) (len=4) "2137",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "dd36b418-7914-4d36-a95b-4ab57e818d9b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 64  33 36 62 34 31 38 2d 37  |d\":\"dd36b418-7|
              00000090  39 31 34 2d 34 64 33 36  2d 61 39 35 62 2d 34 61  |914-4d36-a95b-4a|
              000000a0  62 35 37 65 38 31 38 64  39 62 5c 22 7d 22 3a 7b  |b57e818d9b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  35 5c 22 7d 22 3a 7b 22  |.244.1.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5htv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5htv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879969386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879969386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879969387,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://53423d6d90a00998da60bd766dff5408c1d29a1521740cef2e4258d9ac37d4f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m5htv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 11:56:28.932473 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3508" for this suite. @ 04/11/25 11:56:28.934
• [2.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/11/25 11:56:28.942
  I0411 11:56:28.942363 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replicaset @ 04/11/25 11:56:28.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:28.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:28.952
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/11/25 11:56:28.954
  I0411 11:56:28.962235 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/11/25 11:56:28.962
  STEP: getting scale subresource @ 04/11/25 11:56:30.968
  STEP: updating a scale subresource @ 04/11/25 11:56:30.971
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/11/25 11:56:30.98
  STEP: Patch a scale subresource @ 04/11/25 11:56:30.982
  I0411 11:56:30.992872 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-888" for this suite. @ 04/11/25 11:56:31.001
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/11/25 11:56:31.01
  I0411 11:56:31.010348 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 11:56:31.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:31.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:31.1
  STEP: Creating projection with secret that has name projected-secret-test-cfa9da16-7fef-4aef-a1e5-d1bab0cd52a1 @ 04/11/25 11:56:31.101
  STEP: Creating a pod to test consume secrets @ 04/11/25 11:56:31.105
  STEP: Saw pod success @ 04/11/25 11:56:35.121
  I0411 11:56:35.124619 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-bbe0779d-523d-491d-9631-e0dd544c6f91 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 11:56:35.133
  I0411 11:56:35.149606 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3482" for this suite. @ 04/11/25 11:56:35.153
• [4.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/11/25 11:56:35.159
  I0411 11:56:35.159277 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 11:56:35.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:35.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:35.178
  STEP: Creating the pod @ 04/11/25 11:56:35.181
  I0411 11:56:37.724096 26 pod_client.go:173] Successfully updated pod "annotationupdate6512a023-80ae-451f-b4b6-a7c424d19fb7"
  I0411 11:56:39.746804 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5290" for this suite. @ 04/11/25 11:56:39.751
• [4.599 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/11/25 11:56:39.758
  I0411 11:56:39.759094 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename init-container @ 04/11/25 11:56:39.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:56:39.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:56:39.777
  STEP: creating the pod @ 04/11/25 11:56:39.779
  I0411 11:56:39.779798 26 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0411 11:57:25.740693 26 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4b14c2f1-c640-4a93-98f9-9ed07478ae4f", GenerateName:"", Namespace:"init-container-7629", SelfLink:"", UID:"4a7ea979-4e00-4c45-bc68-a13a38723bcf", ResourceVersion:"2371", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"779787874"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00335e7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 11, 57, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00335e828), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-rbkll", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00488b4a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rbkll", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rbkll", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rbkll", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc006717448), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8sconformance-m02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003b7a900), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0067174c0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0067174e0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0067174e8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0067174ec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004275740), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 11, 11, 56, 41, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.49.3", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.49.3"}}, PodIP:"10.244.1.29", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.29"}}, StartTime:time.Date(2025, time.April, 11, 11, 56, 39, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003c14e70)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003c14ee0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://7fdffcc753f1b087ee7c855deab12d6ffb24775a55b3e31ffdae756b69785ac1", Started:(*bool)(0xc0067175ca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-rbkll", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004275760)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00488b500), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0067175dd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-rbkll", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004275770)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00488b4e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00671756f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-rbkll", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004275750)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0411 11:57:25.740959 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7629" for this suite. @ 04/11/25 11:57:25.744
• [45.992 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/11/25 11:57:25.75
  I0411 11:57:25.750437 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename runtimeclass @ 04/11/25 11:57:25.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:25.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:25.764
  STEP: Deleting RuntimeClass runtimeclass-1954-delete-me @ 04/11/25 11:57:25.77
  STEP: Waiting for the RuntimeClass to disappear @ 04/11/25 11:57:25.774
  I0411 11:57:25.781456 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1954" for this suite. @ 04/11/25 11:57:25.848
• [0.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/11/25 11:57:25.854
  I0411 11:57:25.854759 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 11:57:25.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:25.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:25.873
  STEP: Creating a pod to test substitution in container's command @ 04/11/25 11:57:25.876
  STEP: Saw pod success @ 04/11/25 11:57:27.895
  I0411 11:57:27.899800 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-ed2418eb-376f-4848-9f3a-fb1312f3a0ca container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 11:57:27.907
  I0411 11:57:27.922741 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5858" for this suite. @ 04/11/25 11:57:27.924
• [2.073 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/11/25 11:57:27.927
  I0411 11:57:27.927525 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 11:57:27.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:27.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:27.935
  STEP: Create set of pods @ 04/11/25 11:57:27.937
  I0411 11:57:27.941489 26 pods.go:871] created test-pod-1
  I0411 11:57:27.947511 26 pods.go:871] created test-pod-2
  I0411 11:57:27.954900 26 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/11/25 11:57:27.954
  STEP: waiting for all pods to be deleted @ 04/11/25 11:57:29.98
  I0411 11:57:30.063140 26 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0411 11:57:30.984040 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-35" for this suite. @ 04/11/25 11:57:30.987
• [3.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/11/25 11:57:30.992
  I0411 11:57:30.992608 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/11/25 11:57:30.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:31.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:31.035
  I0411 11:57:31.038481 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:57:37.211568 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2910" for this suite. @ 04/11/25 11:57:37.216
• [6.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/11/25 11:57:37.224
  I0411 11:57:37.224326 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 11:57:37.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:37.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:37.239
  STEP: Creating configMap with name configmap-test-volume-map-667fd693-d102-4ca8-a7b0-d4c08b4dadf4 @ 04/11/25 11:57:37.242
  STEP: Creating a pod to test consume configMaps @ 04/11/25 11:57:37.247
  STEP: Saw pod success @ 04/11/25 11:57:39.263
  I0411 11:57:39.265868 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-faec65a8-f4f0-42dc-bd8c-ecd21b7cafe0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 11:57:39.273
  I0411 11:57:39.288435 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5181" for this suite. @ 04/11/25 11:57:39.292
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/11/25 11:57:39.297
  I0411 11:57:39.297240 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename init-container @ 04/11/25 11:57:39.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:39.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:39.313
  STEP: creating the pod @ 04/11/25 11:57:39.317
  I0411 11:57:39.317134 26 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0411 11:57:43.077257 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3372" for this suite. @ 04/11/25 11:57:43.081
• [3.790 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 04/11/25 11:57:43.087
  I0411 11:57:43.087511 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename security-context-test @ 04/11/25 11:57:43.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:43.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:43.106
  I0411 11:57:47.134384 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5295" for this suite. @ 04/11/25 11:57:47.136
• [4.053 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/11/25 11:57:47.14
  I0411 11:57:47.140901 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 11:57:47.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:47.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:47.15
  STEP: Creating secret with name s-test-opt-del-93b35658-2ba5-4dd2-b8cf-be1b24c6a50d @ 04/11/25 11:57:47.238
  STEP: Creating secret with name s-test-opt-upd-8de34345-e0eb-4444-bda8-73f374b70558 @ 04/11/25 11:57:47.244
  STEP: Creating the pod @ 04/11/25 11:57:47.248
  STEP: Deleting secret s-test-opt-del-93b35658-2ba5-4dd2-b8cf-be1b24c6a50d @ 04/11/25 11:57:49.298
  STEP: Updating secret s-test-opt-upd-8de34345-e0eb-4444-bda8-73f374b70558 @ 04/11/25 11:57:49.304
  STEP: Creating secret with name s-test-opt-create-7f2ec02a-9edf-48ef-a05a-c04e1294d1f3 @ 04/11/25 11:57:49.309
  STEP: waiting to observe update in volume @ 04/11/25 11:57:49.313
  I0411 11:57:53.357939 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2929" for this suite. @ 04/11/25 11:57:53.361
• [6.226 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/11/25 11:57:53.367
  I0411 11:57:53.367516 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 11:57:53.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:53.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:53.406
  STEP: Creating configMap with name projected-configmap-test-volume-map-f8c81156-aabf-4b72-9879-cb251e6073e2 @ 04/11/25 11:57:53.409
  STEP: Creating a pod to test consume configMaps @ 04/11/25 11:57:53.415
  STEP: Saw pod success @ 04/11/25 11:57:55.431
  I0411 11:57:55.434825 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-5ad8a226-9fbd-41df-ade5-de24305fc3fb container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 11:57:55.443
  I0411 11:57:55.458157 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4232" for this suite. @ 04/11/25 11:57:55.461
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 04/11/25 11:57:55.467
  I0411 11:57:55.467640 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 11:57:55.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:55.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:55.483
  STEP: Setting up server cert @ 04/11/25 11:57:55.578
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 11:57:55.765
  STEP: Deploying the webhook pod @ 04/11/25 11:57:55.769
  STEP: Wait for the deployment to be ready @ 04/11/25 11:57:55.775
  I0411 11:57:55.780296 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 11:57:57.792
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 11:57:57.805
  I0411 11:57:58.806472 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/11/25 11:57:58.816
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/11/25 11:57:58.837
  I0411 11:57:58.837647 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:57:58.879208 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8609" for this suite. @ 04/11/25 11:57:58.884
  STEP: Destroying namespace "webhook-markers-250" for this suite. @ 04/11/25 11:57:58.89
• [3.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/11/25 11:57:58.893
  I0411 11:57:58.893891 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 11:57:58.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:57:58.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:57:58.91
  STEP: creating the pod @ 04/11/25 11:57:58.912
  STEP: submitting the pod to kubernetes @ 04/11/25 11:57:58.913
  STEP: verifying the pod is in kubernetes @ 04/11/25 11:58:00.932
  STEP: updating the pod @ 04/11/25 11:58:00.935
  I0411 11:58:01.453466 26 pod_client.go:173] Successfully updated pod "pod-update-5d9f7663-713a-4810-8548-d39a12b5b46e"
  STEP: verifying the updated pod is in kubernetes @ 04/11/25 11:58:01.457
  I0411 11:58:01.460396 26 pods.go:391] Pod update OK
  I0411 11:58:01.460625 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6741" for this suite. @ 04/11/25 11:58:01.464
• [2.573 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/11/25 11:58:01.467
  I0411 11:58:01.467402 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename podtemplate @ 04/11/25 11:58:01.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:01.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:01.48
  STEP: Create set of pod templates @ 04/11/25 11:58:01.482
  I0411 11:58:01.486924 26 podtemplates.go:143] created test-podtemplate-1
  I0411 11:58:01.491577 26 podtemplates.go:143] created test-podtemplate-2
  I0411 11:58:01.495302 26 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/11/25 11:58:01.495
  STEP: delete collection of pod templates @ 04/11/25 11:58:01.497
  I0411 11:58:01.497854 26 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/11/25 11:58:01.508
  I0411 11:58:01.508357 26 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0411 11:58:01.510411 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9729" for this suite. @ 04/11/25 11:58:01.564
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 04/11/25 11:58:01.569
  I0411 11:58:01.569130 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/11/25 11:58:01.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:01.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:01.58
  STEP: getting /apis @ 04/11/25 11:58:01.585
  STEP: getting /apis/admissionregistration.k8s.io @ 04/11/25 11:58:01.588
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/11/25 11:58:01.588
  STEP: creating @ 04/11/25 11:58:01.589
  STEP: getting @ 04/11/25 11:58:01.598
  STEP: listing @ 04/11/25 11:58:01.6
  STEP: watching @ 04/11/25 11:58:01.601
  I0411 11:58:01.601705 26 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 04/11/25 11:58:01.602
  STEP: updating @ 04/11/25 11:58:01.604
  I0411 11:58:01.608215 26 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 04/11/25 11:58:01.608
  STEP: deleting a collection @ 04/11/25 11:58:01.612
  I0411 11:58:01.620978 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1241" for this suite. @ 04/11/25 11:58:01.668
• [0.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 04/11/25 11:58:01.673
  I0411 11:58:01.673970 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 11:58:01.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:01.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:01.69
  I0411 11:58:01.694021 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:58:04.774158 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3301" for this suite. @ 04/11/25 11:58:04.777
• [3.108 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 04/11/25 11:58:04.782
  I0411 11:58:04.782291 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 11:58:04.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:04.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:04.797
  I0411 11:58:04.802256 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4058" for this suite. @ 04/11/25 11:58:04.879
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 04/11/25 11:58:04.886
  I0411 11:58:04.886815 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 11:58:04.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:04.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:04.906
  STEP: Setting up server cert @ 04/11/25 11:58:05.003
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 11:58:05.185
  STEP: Deploying the webhook pod @ 04/11/25 11:58:05.188
  STEP: Wait for the deployment to be ready @ 04/11/25 11:58:05.195
  I0411 11:58:05.199457 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 11:58:07.212
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 11:58:07.222
  I0411 11:58:08.223413 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/11/25 11:58:08.231
  STEP: create a configmap that should be updated by the webhook @ 04/11/25 11:58:08.252
  I0411 11:58:08.304247 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7563" for this suite. @ 04/11/25 11:58:08.308
  STEP: Destroying namespace "webhook-markers-9870" for this suite. @ 04/11/25 11:58:08.314
• [3.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 04/11/25 11:58:08.319
  I0411 11:58:08.319323 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 11:58:08.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:08.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:08.332
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/11/25 11:58:08.334
  I0411 11:58:08.335271 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/11/25 11:58:13.073
  I0411 11:58:13.073544 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:58:14.230472 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 11:58:18.913442 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6303" for this suite. @ 04/11/25 11:58:18.92
• [10.608 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 04/11/25 11:58:18.927
  I0411 11:58:18.927367 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 11:58:18.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:18.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:18.941
  STEP: validating cluster-info @ 04/11/25 11:58:18.944
  I0411 11:58:18.944387 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1065 cluster-info'
  I0411 11:58:18.981437 26 builder.go:146] stderr: ""
  I0411 11:58:18.981476 26 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0411 11:58:18.981572 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1065" for this suite. @ 04/11/25 11:58:19.022
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 04/11/25 11:58:19.03
  I0411 11:58:19.030219 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 11:58:19.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:19.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:19.049
  STEP: Creating a pod to test downward api env vars @ 04/11/25 11:58:19.062
  STEP: Saw pod success @ 04/11/25 11:58:23.096
  I0411 11:58:23.099403 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-a74542c2-f0d3-44fe-a6f8-e3ba06efc0df container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 11:58:23.108
  I0411 11:58:23.122744 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-539" for this suite. @ 04/11/25 11:58:23.124
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 04/11/25 11:58:23.127
  I0411 11:58:23.127590 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pv @ 04/11/25 11:58:23.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:23.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:23.136
  STEP: Creating initial PV and PVC @ 04/11/25 11:58:23.137
  I0411 11:58:23.137563 26 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6664" @ 04/11/25 11:58:23.145
  STEP: Listing PVCs in namespace "pv-6664" @ 04/11/25 11:58:23.146
  STEP: Patching the PV "pv-6664-s5tdl" @ 04/11/25 11:58:23.148
  STEP: Patching the PVC "pvc-f4rws" @ 04/11/25 11:58:23.159
  STEP: Getting PV "pv-6664-s5tdl" @ 04/11/25 11:58:23.165
  STEP: Getting PVC "pvc-f4rws" @ 04/11/25 11:58:23.167
  STEP: Deleting PVC "pvc-f4rws" @ 04/11/25 11:58:23.169
  STEP: Confirm deletion of PVC "pvc-f4rws" @ 04/11/25 11:58:23.172
  STEP: Deleting PV "pv-6664-s5tdl" @ 04/11/25 11:58:25.181
  STEP: Confirm deletion of PV "pv-6664-s5tdl" @ 04/11/25 11:58:25.188
  STEP: Recreating another PV & PVC @ 04/11/25 11:58:27.199
  I0411 11:58:27.199476 26 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6664-jsxnw" @ 04/11/25 11:58:27.212
  STEP: Updating the PVC "pvc-mf5kt" @ 04/11/25 11:58:27.22
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-mf5kt=updated" @ 04/11/25 11:58:27.225
  STEP: Deleting PVC "pvc-mf5kt" via DeleteCollection @ 04/11/25 11:58:27.227
  STEP: Confirm deletion of PVC "pvc-mf5kt" @ 04/11/25 11:58:27.232
  STEP: Deleting PV "pv-6664-jsxnw" via DeleteCollection @ 04/11/25 11:58:27.239
  STEP: Confirm deletion of PV "pv-6664-jsxnw" @ 04/11/25 11:58:27.304
  I0411 11:58:29.314429 26 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0411 11:58:29.314478 26 pv.go:205] Deleting PersistentVolumeClaim "pvc-mf5kt"
  I0411 11:58:29.317517 26 pv.go:193] Deleting PersistentVolume "pv-6664-jsxnw"
  I0411 11:58:29.320246 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6664" for this suite. @ 04/11/25 11:58:29.323
• [6.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/11/25 11:58:29.329
  I0411 11:58:29.329981 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 11:58:29.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:29.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:29.346
  STEP: Creating configMap with name configmap-test-volume-7bb21053-f9e9-4a82-9435-ac8bdc442ae7 @ 04/11/25 11:58:29.348
  STEP: Creating a pod to test consume configMaps @ 04/11/25 11:58:29.351
  STEP: Saw pod success @ 04/11/25 11:58:33.373
  I0411 11:58:33.376298 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-72c60df3-66d3-49b3-8d9b-41f6b3f1e4fd container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 11:58:33.384
  I0411 11:58:33.403708 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-454" for this suite. @ 04/11/25 11:58:33.407
• [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/11/25 11:58:33.413
  I0411 11:58:33.413329 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 11:58:33.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:33.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:33.43
  STEP: Creating configMap with name projected-configmap-test-volume-833b1843-cc9a-4117-b22b-06e9534c53b9 @ 04/11/25 11:58:33.433
  STEP: Creating a pod to test consume configMaps @ 04/11/25 11:58:33.437
  STEP: Saw pod success @ 04/11/25 11:58:37.458
  I0411 11:58:37.461586 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-637543bc-d982-4c6a-802b-7e26659398ad container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 11:58:37.469
  I0411 11:58:37.486220 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5524" for this suite. @ 04/11/25 11:58:37.49
• [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/11/25 11:58:37.495
  I0411 11:58:37.495936 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sysctl @ 04/11/25 11:58:37.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:37.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:37.508
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/11/25 11:58:37.511
  STEP: Watching for error events or started pod @ 04/11/25 11:58:37.519
  STEP: Waiting for pod completion @ 04/11/25 11:58:39.525
  STEP: Checking that the pod succeeded @ 04/11/25 11:58:41.539
  STEP: Getting logs from the pod @ 04/11/25 11:58:41.539
  STEP: Checking that the sysctl is actually updated @ 04/11/25 11:58:41.546
  I0411 11:58:41.546847 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5142" for this suite. @ 04/11/25 11:58:41.55
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/11/25 11:58:41.557
  I0411 11:58:41.557401 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 11:58:41.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:41.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:41.574
  STEP: Creating the pod @ 04/11/25 11:58:41.576
  I0411 11:58:44.110923 26 pod_client.go:173] Successfully updated pod "labelsupdate097b631c-f15b-4d18-9276-2d09fa7eddd7"
  I0411 11:58:46.131362 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8494" for this suite. @ 04/11/25 11:58:46.135
• [4.586 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/11/25 11:58:46.143
  I0411 11:58:46.143975 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 11:58:46.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:46.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:46.162
  STEP: Creating a pod to test downward api env vars @ 04/11/25 11:58:46.166
  STEP: Saw pod success @ 04/11/25 11:58:50.185
  I0411 11:58:50.187059 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-ea02b28f-dba9-4776-a23f-d3bd04240e84 container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 11:58:50.191
  I0411 11:58:50.202252 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6950" for this suite. @ 04/11/25 11:58:50.208
• [4.069 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/11/25 11:58:50.213
  I0411 11:58:50.213600 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 11:58:50.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:58:50.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:58:50.228
  STEP: create the rc @ 04/11/25 11:58:50.308
  W0411 11:58:50.313478      26 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/11/25 11:58:56.319
  STEP: wait for the rc to be deleted @ 04/11/25 11:58:56.326
  I0411 11:58:57.339425 26 garbage_collector.go:670] 80 pods remaining
  I0411 11:58:57.339470 26 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0411 11:58:57.339480 26 garbage_collector.go:678] 
  I0411 11:58:58.334843 26 garbage_collector.go:670] 71 pods remaining
  I0411 11:58:58.334882 26 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0411 11:58:58.334894 26 garbage_collector.go:678] 
  I0411 11:58:59.339781 26 garbage_collector.go:670] 60 pods remaining
  I0411 11:58:59.339830 26 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0411 11:58:59.339841 26 garbage_collector.go:678] 
  I0411 11:59:00.335423 26 garbage_collector.go:670] 40 pods remaining
  I0411 11:59:00.335463 26 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0411 11:59:00.335478 26 garbage_collector.go:678] 
  I0411 11:59:01.331504 26 garbage_collector.go:670] 31 pods remaining
  I0411 11:59:01.331532 26 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0411 11:59:01.331541 26 garbage_collector.go:678] 
  I0411 11:59:02.334086 26 garbage_collector.go:670] 20 pods remaining
  I0411 11:59:02.334117 26 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0411 11:59:02.334124 26 garbage_collector.go:678] 
  STEP: Gathering metrics @ 04/11/25 11:59:03.331
  I0411 11:59:03.431757 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0411 11:59:03.431912 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8146" for this suite. @ 04/11/25 11:59:03.434
• [13.225 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 04/11/25 11:59:03.438
  I0411 11:59:03.438819 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename security-context-test @ 04/11/25 11:59:03.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:59:03.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:59:03.453
  I0411 11:59:07.475773 26 security_context.go:538] Got logs for pod "busybox-privileged-false-286512de-f009-45cf-8c69-35094d41bb52": "ip: RTNETLINK answers: Operation not permitted\n"
  I0411 11:59:07.475896 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-599" for this suite. @ 04/11/25 11:59:07.478
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/11/25 11:59:07.482
  I0411 11:59:07.482650 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-pred @ 04/11/25 11:59:07.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 11:59:07.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 11:59:07.492
  I0411 11:59:07.494340 26 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0411 11:59:07.581379 26 util.go:396] Waiting for terminating namespaces to be deleted...
  I0411 11:59:07.582954 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0411 11:59:07.585440 26 predicates.go:957] coredns-668d6bf9bc-c7wkv from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585470 26 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0411 11:59:07.585481 26 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585488 26 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0411 11:59:07.585496 26 predicates.go:957] kindnet-sppkx from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585507 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 11:59:07.585514 26 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585523 26 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0411 11:59:07.585529 26 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585535 26 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0411 11:59:07.585542 26 predicates.go:957] kube-proxy-2nq7z from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585548 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 11:59:07.585555 26 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585561 26 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0411 11:59:07.585568 26 predicates.go:957] storage-provisioner from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.585574 26 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0411 11:59:07.585581 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-rfzgx from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 11:59:07.585586 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 11:59:07.585592 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0411 11:59:07.585598 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0411 11:59:07.587817 26 predicates.go:957] kindnet-kz2vt from kube-system started at 2025-04-11 11:52:06 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.587843 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 11:59:07.587854 26 predicates.go:957] kube-proxy-tn29z from kube-system started at 2025-04-11 11:52:06 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.587864 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 11:59:07.587872 26 predicates.go:957] busybox-privileged-false-286512de-f009-45cf-8c69-35094d41bb52 from security-context-test-599 started at 2025-04-11 11:59:03 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.587879 26 predicates.go:959] 	Container busybox-privileged-false-286512de-f009-45cf-8c69-35094d41bb52 ready: false, restart count 0
  I0411 11:59:07.587890 26 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-11 11:52:59 +0000 UTC (1 container statuses recorded)
  I0411 11:59:07.587896 26 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0411 11:59:07.587906 26 predicates.go:957] sonobuoy-e2e-job-040191c692314dcd from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 11:59:07.587913 26 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0411 11:59:07.587919 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 11:59:07.587926 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-w7b8t from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 11:59:07.587932 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 11:59:07.587938 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/11/25 11:59:07.587
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/11/25 11:59:09.6
  STEP: Trying to apply a random label on the found node. @ 04/11/25 11:59:09.611
  STEP: verifying the node has the label kubernetes.io/e2e-77148d39-03ac-4494-ad36-ad5318c7520e 95 @ 04/11/25 11:59:09.617
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/11/25 11:59:09.621
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.49.3 on the node which pod4 resides and expect not scheduled @ 04/11/25 11:59:11.636
  STEP: removing the label kubernetes.io/e2e-77148d39-03ac-4494-ad36-ad5318c7520e off the node k8sconformance-m02 @ 04/11/25 12:04:11.647
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-77148d39-03ac-4494-ad36-ad5318c7520e @ 04/11/25 12:04:11.66
  I0411 12:04:11.663944 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-11" for this suite. @ 04/11/25 12:04:11.667
• [304.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/11/25 12:04:11.672
  I0411 12:04:11.672963 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/11/25 12:04:11.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:11.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:11.688
  I0411 12:04:11.689784 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 12:04:14.746438 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4453" for this suite. @ 04/11/25 12:04:14.748
• [3.081 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/11/25 12:04:14.753
  I0411 12:04:14.753622 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/11/25 12:04:14.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:14.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:14.766
  STEP: Creating 50 configmaps @ 04/11/25 12:04:14.768
  STEP: Creating RC which spawns configmap-volume pods @ 04/11/25 12:04:15.01
  I0411 12:04:15.120226 26 resource.go:87] Pod name wrapped-volume-race-48fc3bcc-05e4-4375-8065-4c7e9aeee191: Found 4 pods out of 5
  I0411 12:04:20.130733 26 resource.go:87] Pod name wrapped-volume-race-48fc3bcc-05e4-4375-8065-4c7e9aeee191: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/11/25 12:04:20.13
  STEP: Creating RC which spawns configmap-volume pods @ 04/11/25 12:04:20.149
  I0411 12:04:20.165619 26 resource.go:87] Pod name wrapped-volume-race-409d4568-c1e1-4c48-a147-1d87ddeb135b: Found 1 pods out of 5
  I0411 12:04:25.174987 26 resource.go:87] Pod name wrapped-volume-race-409d4568-c1e1-4c48-a147-1d87ddeb135b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/11/25 12:04:25.175
  STEP: Creating RC which spawns configmap-volume pods @ 04/11/25 12:04:25.195
  I0411 12:04:25.210111 26 resource.go:87] Pod name wrapped-volume-race-17499069-57fc-4574-bf35-7b304691c8cb: Found 0 pods out of 5
  I0411 12:04:30.218392 26 resource.go:87] Pod name wrapped-volume-race-17499069-57fc-4574-bf35-7b304691c8cb: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/11/25 12:04:30.218
  STEP: deleting ReplicationController wrapped-volume-race-17499069-57fc-4574-bf35-7b304691c8cb in namespace emptydir-wrapper-9426, will wait for the garbage collector to delete the pods @ 04/11/25 12:04:30.236
  I0411 12:04:30.301871 26 resources.go:139] Deleting ReplicationController wrapped-volume-race-17499069-57fc-4574-bf35-7b304691c8cb took: 10.768814ms
  I0411 12:04:30.402189 26 resources.go:163] Terminating ReplicationController wrapped-volume-race-17499069-57fc-4574-bf35-7b304691c8cb pods took: 100.307475ms
  STEP: deleting ReplicationController wrapped-volume-race-409d4568-c1e1-4c48-a147-1d87ddeb135b in namespace emptydir-wrapper-9426, will wait for the garbage collector to delete the pods @ 04/11/25 12:04:31.303
  I0411 12:04:31.368990 26 resources.go:139] Deleting ReplicationController wrapped-volume-race-409d4568-c1e1-4c48-a147-1d87ddeb135b took: 9.420278ms
  I0411 12:04:31.469310 26 resources.go:163] Terminating ReplicationController wrapped-volume-race-409d4568-c1e1-4c48-a147-1d87ddeb135b pods took: 100.320463ms
  STEP: deleting ReplicationController wrapped-volume-race-48fc3bcc-05e4-4375-8065-4c7e9aeee191 in namespace emptydir-wrapper-9426, will wait for the garbage collector to delete the pods @ 04/11/25 12:04:32.27
  I0411 12:04:32.335097 26 resources.go:139] Deleting ReplicationController wrapped-volume-race-48fc3bcc-05e4-4375-8065-4c7e9aeee191 took: 8.614909ms
  I0411 12:04:32.435925 26 resources.go:163] Terminating ReplicationController wrapped-volume-race-48fc3bcc-05e4-4375-8065-4c7e9aeee191 pods took: 100.831379ms
  STEP: Cleaning up the configMaps @ 04/11/25 12:04:33.137
  I0411 12:04:33.367272 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9426" for this suite. @ 04/11/25 12:04:33.369
• [18.618 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/11/25 12:04:33.371
  I0411 12:04:33.371976 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:04:33.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:33.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:33.382
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:04:33.385
  STEP: Saw pod success @ 04/11/25 12:04:35.396
  I0411 12:04:35.398856 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-9657c5ff-6acb-4437-96b2-5c1682e067a2 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:04:35.413
  I0411 12:04:35.429555 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3045" for this suite. @ 04/11/25 12:04:35.433
• [2.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/11/25 12:04:35.439
  I0411 12:04:35.439360 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replication-controller @ 04/11/25 12:04:35.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:35.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:35.455
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/11/25 12:04:35.457
  STEP: When a replication controller with a matching selector is created @ 04/11/25 12:04:37.476
  STEP: Then the orphan pod is adopted @ 04/11/25 12:04:37.48
  I0411 12:04:38.489387 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1527" for this suite. @ 04/11/25 12:04:38.492
• [3.057 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 04/11/25 12:04:38.496
  I0411 12:04:38.496390 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:04:38.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:38.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:38.536
  STEP: creating service in namespace services-5278 @ 04/11/25 12:04:38.539
  STEP: creating service affinity-nodeport in namespace services-5278 @ 04/11/25 12:04:38.539
  STEP: creating replication controller affinity-nodeport in namespace services-5278 @ 04/11/25 12:04:38.549
  I0411 12:04:38.558872      26 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-5278, replica count: 3
  I0411 12:04:41.610360      26 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:04:44.611268      26 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:04:47.611464      26 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:04:47.622458 26 resource.go:361] Creating new exec pod
  I0411 12:04:50.644903 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5278 exec execpod-affinityrjd2m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0411 12:04:50.743159 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.110.4.92) 80 port [tcp/http] succeeded!\n"
  I0411 12:04:50.743270 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:04:50.743473 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5278 exec execpod-affinityrjd2m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.4.92 80'
  I0411 12:04:50.828730 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.4.92 80\nConnection to 10.110.4.92 80 port [tcp/http] succeeded!\n"
  I0411 12:04:50.828795 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:04:50.828924 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5278 exec execpod-affinityrjd2m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 30708'
  I0411 12:04:50.927161 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 30708\nConnection to 192.168.49.2 30708 port [tcp/*] succeeded!\n"
  I0411 12:04:50.927253 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:04:50.927383 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5278 exec execpod-affinityrjd2m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 30708'
  I0411 12:04:51.015600 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 30708\nConnection to 192.168.49.3 30708 port [tcp/*] succeeded!\n"
  I0411 12:04:51.015663 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:04:51.015752 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5278 exec execpod-affinityrjd2m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:30708/ ; done'
  I0411 12:04:51.165584 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:30708/\n"
  I0411 12:04:51.165627 26 builder.go:147] stdout: "\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b\naffinity-nodeport-dkc5b"
  I0411 12:04:51.165642 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165651 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165659 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165670 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165678 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165685 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165694 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165702 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165709 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165718 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165727 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165734 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165740 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165746 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165753 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165760 26 service.go:242] Received response from host: affinity-nodeport-dkc5b
  I0411 12:04:51.165822 26 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5278, will wait for the garbage collector to delete the pods @ 04/11/25 12:04:51.178
  I0411 12:04:51.238462 26 resources.go:139] Deleting ReplicationController affinity-nodeport took: 6.959264ms
  I0411 12:04:51.338701 26 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.222384ms
  I0411 12:04:54.559931 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5278" for this suite. @ 04/11/25 12:04:54.562
• [16.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/11/25 12:04:54.567
  I0411 12:04:54.567587 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubelet-test @ 04/11/25 12:04:54.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:54.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:54.581
  I0411 12:04:56.600005 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6440" for this suite. @ 04/11/25 12:04:56.602
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 04/11/25 12:04:56.61
  I0411 12:04:56.610354 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename containers @ 04/11/25 12:04:56.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:04:56.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:04:56.62
  STEP: Creating a pod to test override command @ 04/11/25 12:04:56.622
  STEP: Saw pod success @ 04/11/25 12:05:00.639
  I0411 12:05:00.642686 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-containers-7c380c65-b87b-4249-b9f2-5f111ba07ef5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 12:05:00.65
  I0411 12:05:00.666017 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5970" for this suite. @ 04/11/25 12:05:00.67
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/11/25 12:05:00.675
  I0411 12:05:00.675652 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replicaset @ 04/11/25 12:05:00.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:05:00.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:05:00.692
  I0411 12:05:00.695084 26 replica_set.go:191] Creating ReplicaSet my-hostname-basic-87d1441d-1772-4057-9122-45c9327b1b7d
  I0411 12:05:00.701555 26 resource.go:87] Pod name my-hostname-basic-87d1441d-1772-4057-9122-45c9327b1b7d: Found 0 pods out of 1
  I0411 12:05:05.704389 26 resource.go:87] Pod name my-hostname-basic-87d1441d-1772-4057-9122-45c9327b1b7d: Found 1 pods out of 1
  I0411 12:05:05.704427 26 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-87d1441d-1772-4057-9122-45c9327b1b7d" is running
  I0411 12:05:05.706064 26 replica_set.go:220] Pod "my-hostname-basic-87d1441d-1772-4057-9122-45c9327b1b7d-87vc9" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-11 12:05:01 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-11 12:05:00 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-11 12:05:01 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-11 12:05:01 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-11 12:05:00 +0000 UTC Reason: Message:}])
  I0411 12:05:05.706095 26 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/11/25 12:05:05.706
  I0411 12:05:05.709775 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-280" for this suite. @ 04/11/25 12:05:05.711
• [5.039 seconds]
------------------------------
SSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/11/25 12:05:05.714
  I0411 12:05:05.714908 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename hostport @ 04/11/25 12:05:05.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:05:05.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:05:05.725
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/11/25 12:05:05.814
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.49.3 on the node which pod1 resides and expect scheduled @ 04/11/25 12:05:07.828
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.49.3 but use UDP protocol on the node which pod2 resides @ 04/11/25 12:05:19.864
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/11/25 12:05:23.897
  I0411 12:05:23.897137 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.49.3 http://127.0.0.1:54323/hostname] Namespace:hostport-8719 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:05:23.897162 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:05:23.897247 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8719/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.49.3+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.49.3, port: 54323 @ 04/11/25 12:05:23.986
  I0411 12:05:23.986097 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.49.3:54323/hostname] Namespace:hostport-8719 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:05:23.986126 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:05:23.986216 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8719/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.49.3%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.49.3, port: 54323 UDP @ 04/11/25 12:05:24.042
  I0411 12:05:24.042496 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.49.3 54323] Namespace:hostport-8719 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:05:24.042522 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:05:24.042607 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8719/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.49.3+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0411 12:05:29.107841 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8719" for this suite. @ 04/11/25 12:05:29.111
• [23.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 04/11/25 12:05:29.119
  I0411 12:05:29.119944 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption @ 04/11/25 12:05:29.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:05:29.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:05:29.143
  I0411 12:05:29.160093 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:06:29.168050 26 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/11/25 12:06:29.171
  I0411 12:06:29.171917 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/11/25 12:06:29.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:29.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:29.188
  STEP: Finding an available node @ 04/11/25 12:06:29.19
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/11/25 12:06:29.19
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/11/25 12:06:31.212
  I0411 12:06:31.226264 26 preemption.go:709] found a healthy node: k8sconformance-m02
  STEP: Adding a custom resource @ 04/11/25 12:06:31.229
  I0411 12:06:37.292652 26 preemption.go:828] pods created so far: [1 1 1]
  I0411 12:06:37.292712 26 preemption.go:829] length of pods created so far: 3
  I0411 12:06:39.302168 26 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 04/11/25 12:06:46.304
  STEP: Removing a custom resource @ 04/11/25 12:06:46.353
  STEP: Removing a custom resource @ 04/11/25 12:06:46.36
  I0411 12:06:46.364987 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3172" for this suite. @ 04/11/25 12:06:46.367
  I0411 12:06:46.371793 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6677" for this suite. @ 04/11/25 12:06:46.47
• [77.356 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/11/25 12:06:46.476
  I0411 12:06:46.476618 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 12:06:46.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:46.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:46.493
  I0411 12:06:46.496610 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: creating the pod @ 04/11/25 12:06:46.497
  STEP: submitting the pod to kubernetes @ 04/11/25 12:06:46.497
  I0411 12:06:48.600531 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7331" for this suite. @ 04/11/25 12:06:48.602
• [2.129 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/11/25 12:06:48.605
  I0411 12:06:48.605934 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replicaset @ 04/11/25 12:06:48.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:48.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:48.614
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/11/25 12:06:48.615
  STEP: When a replicaset with a matching selector is created @ 04/11/25 12:06:50.629
  STEP: Then the orphan pod is adopted @ 04/11/25 12:06:50.636
  STEP: When the matched label of one of its pods change @ 04/11/25 12:06:51.641
  I0411 12:06:51.644519 26 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/11/25 12:06:51.651
  I0411 12:06:52.658457 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3279" for this suite. @ 04/11/25 12:06:52.662
• [4.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/11/25 12:06:52.668
  I0411 12:06:52.668901 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename runtimeclass @ 04/11/25 12:06:52.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:52.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:52.684
  I0411 12:06:54.712700 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9379" for this suite. @ 04/11/25 12:06:54.716
• [2.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/11/25 12:06:54.723
  I0411 12:06:54.723817 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:06:54.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:54.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:54.738
  I0411 12:06:54.776450 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8049" for this suite. @ 04/11/25 12:06:54.818
• [0.101 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/11/25 12:06:54.824
  I0411 12:06:54.824801 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 12:06:54.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:54.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:54.842
  I0411 12:06:56.863033 26 delete.go:62] Deleting pod "var-expansion-9e0ba5be-c5d3-4af5-9dc6-89def97faad4" in namespace "var-expansion-9390"
  I0411 12:06:56.873133 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-9e0ba5be-c5d3-4af5-9dc6-89def97faad4" to be fully deleted
  I0411 12:06:58.880897 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9390" for this suite. @ 04/11/25 12:06:58.883
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/11/25 12:06:58.888
  I0411 12:06:58.888544 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:06:58.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:06:58.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:06:58.951
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:06:58.953
  STEP: Saw pod success @ 04/11/25 12:07:00.964
  I0411 12:07:00.968374 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-5f17c9f5-8fec-480d-8a7d-8c9ffedf62d0 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:07:00.981
  I0411 12:07:00.996280 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2712" for this suite. @ 04/11/25 12:07:00.999
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/11/25 12:07:01.004
  I0411 12:07:01.004733 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 12:07:01.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:07:01.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:07:01.021
  I0411 12:07:01.032650 26 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0411 12:07:06.037493 26 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/11/25 12:07:06.037
  I0411 12:07:06.037599 26 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0411 12:07:08.043713 26 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0411 12:07:08.053668 26 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0411 12:07:10.061566 26 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0411 12:07:10.067081 26 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0411 12:07:10.071582 26 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0411 12:07:10.080403 26 deployment.go:314] Updating deployment test-rollover-deployment
  I0411 12:07:10.080459 26 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0411 12:07:12.089381 26 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0411 12:07:12.096463 26 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0411 12:07:12.101728 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0411 12:07:12.101804 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:07:14.111087 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0411 12:07:14.111195 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:07:16.112488 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0411 12:07:16.112578 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:07:18.112116 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0411 12:07:18.112200 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:07:20.111359 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0411 12:07:20.111456 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 7, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 7, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:07:22.112307 26 deployment.go:95] 
  I0411 12:07:22.112352 26 deployment.go:974] Ensure that both old replica sets have no replicas
  I0411 12:07:22.119643 26 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b2cdab6-1e47-470c-be54-b67e6cdf1b1a",
      ResourceVersion: (string) (len=4) "6314",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879970028,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970028,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970028,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970028,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 12:07:22.127558 26 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ba53d8f-7c4d-4962-9fb6-906d0575e903",
      ResourceVersion: (string) (len=4) "6303",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879970030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5b2cdab6-1e47-470c-be54-b67e6cdf1b1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 62 32 63 64 61  62 36 2d 31 65 34 37 2d  |\"5b2cdab6-1e47-|
              00000120  34 37 30 63 2d 62 65 35  34 2d 62 36 37 65 36 63  |470c-be54-b67e6c|
              00000130  64 66 31 62 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |df1b1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:07:22.129022 26 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0411 12:07:22.129616 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6bc5d3f-48c3-4506-aada-a7c97cdd95d5",
      ResourceVersion: (string) (len=4) "6313",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879970021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5b2cdab6-1e47-470c-be54-b67e6cdf1b1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 62 32 63 64 61 62 36  2d 31 65 34 37 2d 34 37  |5b2cdab6-1e47-47|
              000000c0  30 63 2d 62 65 35 34 2d  62 36 37 65 36 63 64 66  |0c-be54-b67e6cdf|
              000000d0  31 62 31 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1b1a\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:07:22.131501 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c142c62d-5fa1-4fe6-a6a8-a2b0327915a1",
      ResourceVersion: (string) (len=4) "6279",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879970028,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5b2cdab6-1e47-470c-be54-b67e6cdf1b1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 62 32 63 64 61  62 36 2d 31 65 34 37 2d  |\"5b2cdab6-1e47-|
              00000120  34 37 30 63 2d 62 65 35  34 2d 62 36 37 65 36 63  |470c-be54-b67e6c|
              00000130  64 66 31 62 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |df1b1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:07:22.136182 26 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-xjfft" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-xjfft",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-7506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2eccea79-a575-4a0c-9670-feadaf57e88c",
      ResourceVersion: (string) (len=4) "6292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879970030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "7ba53d8f-7c4d-4962-9fb6-906d0575e903",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 62  61 35 33 64 38 66 2d 37  |d\":\"7ba53d8f-7|
              00000090  63 34 64 2d 34 39 36 32  2d 39 66 62 36 2d 39 30  |c4d-4962-9fb6-90|
              000000a0  36 64 30 35 37 35 65 39  30 33 5c 22 7d 22 3a 7b  |6d0575e903\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 30 5c 22 7d 22 3a 7b  |.244.1.130\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jsx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jsx6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879970030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879970030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879970030,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=73) "docker://1d39c27d10379bcb66b7bce771ce5730b6c287c2809e67b88184b847ea3011a2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7jsx6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:07:22.137920 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7506" for this suite. @ 04/11/25 12:07:22.14
• [21.140 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 04/11/25 12:07:22.145
  I0411 12:07:22.145026 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:07:22.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:07:22.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:07:22.155
  STEP: Setting up server cert @ 04/11/25 12:07:22.26
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:07:22.498
  STEP: Deploying the webhook pod @ 04/11/25 12:07:22.504
  STEP: Wait for the deployment to be ready @ 04/11/25 12:07:22.511
  I0411 12:07:22.516765 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:07:24.532
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:07:24.548
  I0411 12:07:25.548922 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/11/25 12:07:25.556
  STEP: create a namespace for the webhook @ 04/11/25 12:07:25.576
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/11/25 12:07:25.585
  I0411 12:07:25.624585 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4897" for this suite. @ 04/11/25 12:07:25.628
  STEP: Destroying namespace "webhook-markers-3021" for this suite. @ 04/11/25 12:07:25.632
  STEP: Destroying namespace "fail-closed-namespace-4209" for this suite. @ 04/11/25 12:07:25.636
• [3.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/11/25 12:07:25.642
  I0411 12:07:25.642741 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 12:07:25.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:07:25.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:07:25.693
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/11/25 12:07:25.697
  STEP: Saw pod success @ 04/11/25 12:07:29.719
  I0411 12:07:29.722908 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-7f08ffb1-8a36-43ee-98eb-e3f81428da91 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 12:07:29.73
  I0411 12:07:29.746039 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4637" for this suite. @ 04/11/25 12:07:29.749
• [4.113 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/11/25 12:07:29.756
  I0411 12:07:29.756363 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename watch @ 04/11/25 12:07:29.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:07:29.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:07:29.774
  STEP: creating a watch on configmaps with label A @ 04/11/25 12:07:29.777
  STEP: creating a watch on configmaps with label B @ 04/11/25 12:07:29.78
  STEP: creating a watch on configmaps with label A or B @ 04/11/25 12:07:29.782
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/11/25 12:07:29.784
  I0411 12:07:29.788437 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6430 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:29.788591 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6430 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/11/25 12:07:29.788
  I0411 12:07:29.794261 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6431 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:29.794398 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6431 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/11/25 12:07:29.794
  I0411 12:07:29.800918 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6432 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:29.800994 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6432 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/11/25 12:07:29.801
  I0411 12:07:29.804413 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6433 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:29.804486 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6815  cb68a475-4983-4e5a-ac29-16b961c3a4d5 6433 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/11/25 12:07:29.804
  I0411 12:07:29.807519 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6815  b80b0322-6590-425a-a4cb-6ca04d7749cb 6434 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:29.807603 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6815  b80b0322-6590-425a-a4cb-6ca04d7749cb 6434 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/11/25 12:07:39.808
  I0411 12:07:39.817479 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6815  b80b0322-6590-425a-a4cb-6ca04d7749cb 6471 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:39.817583 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6815  b80b0322-6590-425a-a4cb-6ca04d7749cb 6471 0 2025-04-11 12:07:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-11 12:07:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:07:49.818448 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6815" for this suite. @ 04/11/25 12:07:49.822
• [20.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/11/25 12:07:49.829
  I0411 12:07:49.829295 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename namespaces @ 04/11/25 12:07:49.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:07:49.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:07:49.845
  STEP: Creating a test namespace @ 04/11/25 12:07:49.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:07:49.941
  STEP: Creating a pod in the namespace @ 04/11/25 12:07:49.943
  STEP: Waiting for the pod to have running status @ 04/11/25 12:07:49.948
  STEP: Deleting the namespace @ 04/11/25 12:07:51.957
  STEP: Waiting for the namespace to be removed. @ 04/11/25 12:07:51.964
  STEP: Recreating the namespace @ 04/11/25 12:08:02.969
  STEP: Verifying there are no pods in the namespace @ 04/11/25 12:08:02.983
  I0411 12:08:02.986267 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7189" for this suite. @ 04/11/25 12:08:02.99
  STEP: Destroying namespace "nsdeletetest-643" for this suite. @ 04/11/25 12:08:02.995
  I0411 12:08:02.998909 26 framework.go:370] Namespace nsdeletetest-643 was already deleted
  STEP: Destroying namespace "nsdeletetest-1629" for this suite. @ 04/11/25 12:08:02.998
• [13.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/11/25 12:08:03.007
  I0411 12:08:03.007855 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 12:08:03.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:08:03.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:08:03.088
  STEP: creating the pod @ 04/11/25 12:08:03.091
  STEP: setting up watch @ 04/11/25 12:08:03.092
  STEP: submitting the pod to kubernetes @ 04/11/25 12:08:03.195
  STEP: verifying the pod is in kubernetes @ 04/11/25 12:08:03.208
  STEP: verifying pod creation was observed @ 04/11/25 12:08:03.212
  STEP: deleting the pod gracefully @ 04/11/25 12:08:05.223
  STEP: verifying pod deletion was observed @ 04/11/25 12:08:05.231
  I0411 12:08:07.762957 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3486" for this suite. @ 04/11/25 12:08:07.766
• [4.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 04/11/25 12:08:07.771
  I0411 12:08:07.771509 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename disruption @ 04/11/25 12:08:07.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:08:07.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:08:07.787
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/11/25 12:08:07.789
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:08:07.793
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/11/25 12:08:09.808
  STEP: Waiting for all pods to be running @ 04/11/25 12:08:09.808
  I0411 12:08:09.812703 26 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 04/11/25 12:08:11.817
  STEP: Updating the pdb to allow a pod to be evicted @ 04/11/25 12:08:11.825
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:08:11.833
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/11/25 12:08:13.837
  STEP: Waiting for all pods to be running @ 04/11/25 12:08:13.837
  STEP: Waiting for the pdb to observed all healthy pods @ 04/11/25 12:08:13.839
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/11/25 12:08:13.855
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:08:13.87
  STEP: Waiting for all pods to be running @ 04/11/25 12:08:15.877
  STEP: locating a running pod @ 04/11/25 12:08:15.881
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/11/25 12:08:15.889
  STEP: Waiting for the pdb to be deleted @ 04/11/25 12:08:15.893
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/11/25 12:08:15.895
  STEP: Waiting for all pods to be running @ 04/11/25 12:08:15.895
  I0411 12:08:16.001338 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9894" for this suite. @ 04/11/25 12:08:16.005
• [8.244 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 04/11/25 12:08:16.015
  I0411 12:08:16.015755 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 12:08:16.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:08:16.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:08:16.036
  STEP: Creating pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312 @ 04/11/25 12:08:16.038
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 12:08:18.053
  I0411 12:08:18.056213 26 container_probe.go:1749] Initial restart count of pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d is 0
  I0411 12:08:18.058561 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:20.065157 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:22.071822 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:24.078270 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:26.085266 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:28.091419 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:30.098920 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:32.107680 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:34.109667 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:36.115376 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:38.120759 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:40.128589 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:42.131368 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:44.135511 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:46.140456 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:48.145683 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:50.153086 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:52.156597 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:54.160632 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:56.165555 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:08:58.171915 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:00.178239 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:02.181141 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:04.187356 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:06.193881 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:08.200202 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:10.203625 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:12.206713 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:14.211146 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:16.216403 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:18.222824 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:20.227001 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:22.229128 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:24.234511 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:26.241487 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:28.247161 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:30.253927 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:32.257504 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:34.263461 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:36.269026 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:38.274451 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:40.280620 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:42.286607 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:44.291802 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:46.298970 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:48.305384 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:50.311409 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:52.314714 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:54.320480 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:56.327099 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:09:58.333422 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:00.340208 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:02.344258 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:04.351358 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:06.358245 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:08.365071 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:10.371431 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:12.374235 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:14.379957 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:16.386707 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:18.391490 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:20.398621 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:22.401997 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:24.408339 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:26.414486 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:28.421104 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:30.427808 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:32.434751 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:34.440611 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:36.447015 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:38.454253 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:40.457428 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:42.463472 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:44.468425 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:46.475470 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:48.481043 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:50.487053 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:52.493174 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:54.499890 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:56.506402 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:10:58.512581 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:00.519556 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:02.527061 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:04.533355 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:06.540291 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:08.546877 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:10.553168 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:12.560612 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:14.565987 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:16.571996 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:18.575721 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:20.580216 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:22.585651 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:24.591964 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:26.597349 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:28.602979 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:30.609173 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:32.614197 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:34.618833 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:36.625527 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:38.632427 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:40.639839 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:42.646016 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:44.649862 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:46.657236 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:48.662753 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:50.668434 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:52.674893 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:54.679623 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:56.685779 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:11:58.691668 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:00.697451 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:02.701804 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:04.705818 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:06.712490 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:08.716114 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:10.722556 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:12.728455 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:14.731652 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  I0411 12:12:16.737215 26 container_probe.go:1759] Get pod test-grpc-67f5f429-480c-49b6-bfe2-9ca279c1608d in namespace container-probe-9312
  STEP: deleting the pod @ 04/11/25 12:12:18.738
  I0411 12:12:18.753143 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9312" for this suite. @ 04/11/25 12:12:18.757
• [242.747 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/11/25 12:12:18.762
  I0411 12:12:18.762938 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename namespaces @ 04/11/25 12:12:18.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:18.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:18.778
  STEP: Read namespace status @ 04/11/25 12:12:18.78
  I0411 12:12:18.781576 26 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/11/25 12:12:18.781
  I0411 12:12:18.785247 26 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/11/25 12:12:18.785
  I0411 12:12:18.794690 26 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0411 12:12:18.794987 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2075" for this suite. @ 04/11/25 12:12:18.858
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/11/25 12:12:18.862
  I0411 12:12:18.862696 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 12:12:18.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:18.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:18.876
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/11/25 12:12:18.878
  STEP: Saw pod success @ 04/11/25 12:12:20.893
  I0411 12:12:20.895986 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-6254f12a-1a12-41ae-a9b2-86efe43cea3d container test-container: <nil>
  STEP: delete the pod @ 04/11/25 12:12:20.911
  I0411 12:12:20.925080 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-818" for this suite. @ 04/11/25 12:12:20.928
• [2.074 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 04/11/25 12:12:20.937
  I0411 12:12:20.937054 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 12:12:20.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:20.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:20.954
  STEP: Creating a test externalName service @ 04/11/25 12:12:20.957
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6108.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6108.svc.cluster.local; sleep 1; done
   @ 04/11/25 12:12:20.961
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6108.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6108.svc.cluster.local; sleep 1; done
   @ 04/11/25 12:12:20.961
  STEP: creating a pod to probe DNS @ 04/11/25 12:12:20.961
  STEP: submitting the pod to kubernetes @ 04/11/25 12:12:20.961
  STEP: retrieving the pod @ 04/11/25 12:12:22.981
  STEP: looking for the results for each expected name from probers @ 04/11/25 12:12:22.984
  I0411 12:12:22.991150 26 dns_common.go:571] DNS probes using dns-test-27f6982b-7872-4968-8ab0-8977aa3af525 succeeded

  STEP: changing the externalName to bar.example.com @ 04/11/25 12:12:22.991
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6108.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6108.svc.cluster.local; sleep 1; done
   @ 04/11/25 12:12:23
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6108.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6108.svc.cluster.local; sleep 1; done
   @ 04/11/25 12:12:23
  STEP: creating a second pod to probe DNS @ 04/11/25 12:12:23
  STEP: submitting the pod to kubernetes @ 04/11/25 12:12:23
  STEP: retrieving the pod @ 04/11/25 12:12:25.015
  STEP: looking for the results for each expected name from probers @ 04/11/25 12:12:25.02
  I0411 12:12:25.030505 26 dns_common.go:571] DNS probes using dns-test-441e2879-6668-49b8-b052-9476d6b67f1b succeeded

  STEP: changing the service to type=ClusterIP @ 04/11/25 12:12:25.03
  W0411 12:12:25.042891      26 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6108.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-6108.svc.cluster.local; sleep 1; done
   @ 04/11/25 12:12:25.043
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6108.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6108.svc.cluster.local; sleep 1; done
   @ 04/11/25 12:12:25.043
  STEP: creating a third pod to probe DNS @ 04/11/25 12:12:25.043
  STEP: submitting the pod to kubernetes @ 04/11/25 12:12:25.046
  STEP: retrieving the pod @ 04/11/25 12:12:27.061
  STEP: looking for the results for each expected name from probers @ 04/11/25 12:12:27.064
  I0411 12:12:27.070860 26 dns_common.go:571] DNS probes using dns-test-0ad3b668-5339-4c86-bc93-1d46308415cf succeeded

  STEP: deleting the pod @ 04/11/25 12:12:27.071
  STEP: deleting the pod @ 04/11/25 12:12:27.081
  STEP: deleting the pod @ 04/11/25 12:12:27.102
  STEP: deleting the test externalName service @ 04/11/25 12:12:27.122
  I0411 12:12:27.138059 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6108" for this suite. @ 04/11/25 12:12:27.14
• [6.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 04/11/25 12:12:27.144
  I0411 12:12:27.144098 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pv @ 04/11/25 12:12:27.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:27.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:27.155
  STEP: Creating initial PV and PVC @ 04/11/25 12:12:27.157
  I0411 12:12:27.157475 26 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5278" @ 04/11/25 12:12:27.167
  STEP: Listing PVCs in namespace "pv-5278" @ 04/11/25 12:12:27.169
  STEP: Reading "pvc-js2f6" Status @ 04/11/25 12:12:27.171
  STEP: Reading "pv-5278-jl4f5" Status @ 04/11/25 12:12:27.173
  STEP: Patching "pvc-js2f6" Status @ 04/11/25 12:12:27.175
  STEP: Patching "pv-5278-jl4f5" Status @ 04/11/25 12:12:27.184
  STEP: Updating "pvc-js2f6" Status @ 04/11/25 12:12:27.187
  STEP: Updating "pv-5278-jl4f5" Status @ 04/11/25 12:12:27.192
  I0411 12:12:27.196895 26 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0411 12:12:27.196915 26 pv.go:205] Deleting PersistentVolumeClaim "pvc-js2f6"
  I0411 12:12:27.200515 26 pv.go:193] Deleting PersistentVolume "pv-5278-jl4f5"
  I0411 12:12:27.204252 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5278" for this suite. @ 04/11/25 12:12:27.241
• [0.104 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 04/11/25 12:12:27.247
  I0411 12:12:27.247987 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename volumeattachment @ 04/11/25 12:12:27.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:27.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:27.255
  STEP: Create VolumeAttachment "va-e2e-85t7b" on node "k8sconformance-m02" @ 04/11/25 12:12:27.344
  STEP: Get VolumeAttachment "va-e2e-85t7b" on node "k8sconformance-m02" @ 04/11/25 12:12:27.35
  STEP: Patch VolumeAttachment "va-e2e-85t7b" on node "k8sconformance-m02" @ 04/11/25 12:12:27.353
  STEP: List VolumeAttachments with "va-e2e-85t7b=patched" label @ 04/11/25 12:12:27.358
  STEP: Delete VolumeAttachment "va-e2e-85t7b" on node "k8sconformance-m02" @ 04/11/25 12:12:27.36
  STEP: Confirm deletion of VolumeAttachment "va-e2e-85t7b" on node "k8sconformance-m02" @ 04/11/25 12:12:27.365
  STEP: Create VolumeAttachment "va-e2e-wr276" on node "k8sconformance-m02" @ 04/11/25 12:12:27.444
  STEP: Update the VolumeAttachment "va-e2e-wr276" on node "k8sconformance-m02" with label "va-e2e=updated" @ 04/11/25 12:12:27.449
  STEP: Create VolumeAttachment "va-e2e-m5x5n" on node "k8sconformance" @ 04/11/25 12:12:27.546
  STEP: Update the VolumeAttachment "va-e2e-m5x5n" on node "k8sconformance" with label "va-e2e=updated" @ 04/11/25 12:12:27.551
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/11/25 12:12:27.56
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/11/25 12:12:27.57
  I0411 12:12:27.572781 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6264" for this suite. @ 04/11/25 12:12:27.646
• [0.405 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 04/11/25 12:12:27.653
  I0411 12:12:27.653430 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/11/25 12:12:27.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:27.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:27.668
  STEP: Setting up the test @ 04/11/25 12:12:27.672
  STEP: Creating hostNetwork=false pod @ 04/11/25 12:12:27.672
  STEP: Creating hostNetwork=true pod @ 04/11/25 12:12:29.692
  STEP: Running the test @ 04/11/25 12:12:31.706
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/11/25 12:12:31.707
  I0411 12:12:31.707026 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:31.707045 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:31.707085 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0411 12:12:31.767685 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:31.767752 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:31.767770 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:31.767841 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0411 12:12:31.837955 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:31.838063 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:31.838097 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:31.838165 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0411 12:12:31.906485 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:31.906568 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:31.906593 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:31.906686 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0411 12:12:31.978268 26 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/11/25 12:12:31.978
  I0411 12:12:31.978431 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:31.978450 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:31.978534 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0411 12:12:32.054232 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:32.054328 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:32.054352 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:32.054454 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0411 12:12:32.115730 26 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/11/25 12:12:32.115
  I0411 12:12:32.115817 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:32.115837 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:32.115908 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0411 12:12:32.160841 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:32.160906 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:32.160923 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:32.160999 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0411 12:12:32.208797 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:32.208847 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:32.208858 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:32.208908 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0411 12:12:32.260689 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:32.260735 26 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6232 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:12:32.260751 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:12:32.260802 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6232/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0411 12:12:32.308951 26 exec_util.go:108] Exec stderr: ""
  I0411 12:12:32.309068 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6232" for this suite. @ 04/11/25 12:12:32.311
• [4.661 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/11/25 12:12:32.314
  I0411 12:12:32.314223 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svc-latency @ 04/11/25 12:12:32.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:32.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:32.322
  I0411 12:12:32.323557 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1137 @ 04/11/25 12:12:32.324
  I0411 12:12:32.326869      26 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1137, replica count: 1
  I0411 12:12:33.378374      26 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:12:33.494849 26 service_latency.go:356] Created: latency-svc-gxjpk
  I0411 12:12:33.499271 26 service_latency.go:363] Got endpoints: latency-svc-gxjpk [20.054127ms]
  I0411 12:12:33.513167 26 service_latency.go:356] Created: latency-svc-5jvfw
  I0411 12:12:33.519971 26 service_latency.go:363] Got endpoints: latency-svc-5jvfw [20.05674ms]
  I0411 12:12:33.523391 26 service_latency.go:356] Created: latency-svc-z5gn8
  I0411 12:12:33.538309 26 service_latency.go:363] Got endpoints: latency-svc-z5gn8 [38.834036ms]
  I0411 12:12:33.538766 26 service_latency.go:356] Created: latency-svc-xw6p9
  I0411 12:12:33.547299 26 service_latency.go:363] Got endpoints: latency-svc-xw6p9 [47.489381ms]
  I0411 12:12:33.551408 26 service_latency.go:356] Created: latency-svc-l5vr9
  I0411 12:12:33.558138 26 service_latency.go:363] Got endpoints: latency-svc-l5vr9 [58.106483ms]
  I0411 12:12:33.560829 26 service_latency.go:356] Created: latency-svc-j7wjg
  I0411 12:12:33.567949 26 service_latency.go:363] Got endpoints: latency-svc-j7wjg [68.093736ms]
  I0411 12:12:33.570194 26 service_latency.go:356] Created: latency-svc-9fdxw
  I0411 12:12:33.591022 26 service_latency.go:363] Got endpoints: latency-svc-9fdxw [91.103647ms]
  I0411 12:12:33.594299 26 service_latency.go:356] Created: latency-svc-7h5kl
  I0411 12:12:33.610461 26 service_latency.go:363] Got endpoints: latency-svc-7h5kl [110.408237ms]
  I0411 12:12:33.617440 26 service_latency.go:356] Created: latency-svc-82n4w
  I0411 12:12:33.623870 26 service_latency.go:363] Got endpoints: latency-svc-82n4w [123.806908ms]
  I0411 12:12:33.625942 26 service_latency.go:356] Created: latency-svc-5vx2h
  I0411 12:12:33.633799 26 service_latency.go:363] Got endpoints: latency-svc-5vx2h [133.681227ms]
  I0411 12:12:33.637032 26 service_latency.go:356] Created: latency-svc-q7mz8
  I0411 12:12:33.663050 26 service_latency.go:363] Got endpoints: latency-svc-q7mz8 [163.202256ms]
  I0411 12:12:33.666451 26 service_latency.go:356] Created: latency-svc-cps6d
  I0411 12:12:33.675864 26 service_latency.go:363] Got endpoints: latency-svc-cps6d [175.714064ms]
  I0411 12:12:33.678342 26 service_latency.go:356] Created: latency-svc-sqt8j
  I0411 12:12:33.687203 26 service_latency.go:363] Got endpoints: latency-svc-sqt8j [187.080172ms]
  I0411 12:12:33.688894 26 service_latency.go:356] Created: latency-svc-nq92d
  I0411 12:12:33.698914 26 service_latency.go:363] Got endpoints: latency-svc-nq92d [198.746814ms]
  I0411 12:12:33.701972 26 service_latency.go:356] Created: latency-svc-qscrb
  I0411 12:12:33.710452 26 service_latency.go:363] Got endpoints: latency-svc-qscrb [210.301615ms]
  I0411 12:12:33.713590 26 service_latency.go:356] Created: latency-svc-g7skq
  I0411 12:12:33.722360 26 service_latency.go:363] Got endpoints: latency-svc-g7skq [222.175346ms]
  I0411 12:12:33.725055 26 service_latency.go:356] Created: latency-svc-rfkjl
  I0411 12:12:33.733301 26 service_latency.go:363] Got endpoints: latency-svc-rfkjl [213.210645ms]
  I0411 12:12:33.736208 26 service_latency.go:356] Created: latency-svc-zg7lt
  I0411 12:12:33.740737 26 service_latency.go:363] Got endpoints: latency-svc-zg7lt [202.32076ms]
  I0411 12:12:33.748800 26 service_latency.go:356] Created: latency-svc-w5bph
  I0411 12:12:33.756151 26 service_latency.go:363] Got endpoints: latency-svc-w5bph [208.598098ms]
  I0411 12:12:33.759108 26 service_latency.go:356] Created: latency-svc-p5vvc
  I0411 12:12:33.797231 26 service_latency.go:363] Got endpoints: latency-svc-p5vvc [238.978367ms]
  I0411 12:12:33.801279 26 service_latency.go:356] Created: latency-svc-xh68j
  I0411 12:12:33.806215 26 service_latency.go:363] Got endpoints: latency-svc-xh68j [238.175329ms]
  I0411 12:12:33.815861 26 service_latency.go:356] Created: latency-svc-qpsbh
  I0411 12:12:33.823852 26 service_latency.go:363] Got endpoints: latency-svc-qpsbh [232.724912ms]
  I0411 12:12:33.829333 26 service_latency.go:356] Created: latency-svc-8rsx2
  I0411 12:12:33.836861 26 service_latency.go:363] Got endpoints: latency-svc-8rsx2 [226.356714ms]
  I0411 12:12:33.841543 26 service_latency.go:356] Created: latency-svc-5l5np
  I0411 12:12:33.848702 26 service_latency.go:363] Got endpoints: latency-svc-5l5np [224.794106ms]
  I0411 12:12:33.852558 26 service_latency.go:356] Created: latency-svc-9cdwg
  I0411 12:12:33.862567 26 service_latency.go:363] Got endpoints: latency-svc-9cdwg [228.680239ms]
  I0411 12:12:33.865536 26 service_latency.go:356] Created: latency-svc-m5nfk
  I0411 12:12:33.869247 26 service_latency.go:363] Got endpoints: latency-svc-m5nfk [205.989209ms]
  I0411 12:12:33.877418 26 service_latency.go:356] Created: latency-svc-cw267
  I0411 12:12:33.886677 26 service_latency.go:363] Got endpoints: latency-svc-cw267 [210.698218ms]
  I0411 12:12:33.890495 26 service_latency.go:356] Created: latency-svc-2nndq
  I0411 12:12:33.919113 26 service_latency.go:363] Got endpoints: latency-svc-2nndq [231.797946ms]
  I0411 12:12:33.922739 26 service_latency.go:356] Created: latency-svc-xrtwh
  I0411 12:12:33.928057 26 service_latency.go:363] Got endpoints: latency-svc-xrtwh [228.996758ms]
  I0411 12:12:33.936736 26 service_latency.go:356] Created: latency-svc-c5xfn
  I0411 12:12:33.946071 26 service_latency.go:363] Got endpoints: latency-svc-c5xfn [235.494374ms]
  I0411 12:12:33.949089 26 service_latency.go:356] Created: latency-svc-w9fx7
  I0411 12:12:33.957697 26 service_latency.go:363] Got endpoints: latency-svc-w9fx7 [235.228448ms]
  I0411 12:12:33.962115 26 service_latency.go:356] Created: latency-svc-txct4
  I0411 12:12:33.983869 26 service_latency.go:363] Got endpoints: latency-svc-txct4 [250.394147ms]
  I0411 12:12:33.987023 26 service_latency.go:356] Created: latency-svc-5fw5q
  I0411 12:12:33.992141 26 service_latency.go:363] Got endpoints: latency-svc-5fw5q [251.349312ms]
  I0411 12:12:34.000400 26 service_latency.go:356] Created: latency-svc-pkfgs
  I0411 12:12:34.003670 26 service_latency.go:363] Got endpoints: latency-svc-pkfgs [247.009088ms]
  I0411 12:12:34.011824 26 service_latency.go:356] Created: latency-svc-sptq2
  I0411 12:12:34.030146 26 service_latency.go:363] Got endpoints: latency-svc-sptq2 [232.728811ms]
  I0411 12:12:34.034853 26 service_latency.go:356] Created: latency-svc-vwxh4
  I0411 12:12:34.043501 26 service_latency.go:363] Got endpoints: latency-svc-vwxh4 [237.198953ms]
  I0411 12:12:34.050077 26 service_latency.go:356] Created: latency-svc-6qrpr
  I0411 12:12:34.054363 26 service_latency.go:363] Got endpoints: latency-svc-6qrpr [230.418397ms]
  I0411 12:12:34.061730 26 service_latency.go:356] Created: latency-svc-66gx7
  I0411 12:12:34.070625 26 service_latency.go:363] Got endpoints: latency-svc-66gx7 [233.626681ms]
  I0411 12:12:34.072748 26 service_latency.go:356] Created: latency-svc-v9wzn
  I0411 12:12:34.081325 26 service_latency.go:363] Got endpoints: latency-svc-v9wzn [232.565984ms]
  I0411 12:12:34.083443 26 service_latency.go:356] Created: latency-svc-c7rdc
  I0411 12:12:34.087829 26 service_latency.go:363] Got endpoints: latency-svc-c7rdc [225.133078ms]
  I0411 12:12:34.094500 26 service_latency.go:356] Created: latency-svc-hq9j9
  I0411 12:12:34.101701 26 service_latency.go:363] Got endpoints: latency-svc-hq9j9 [232.379961ms]
  I0411 12:12:34.104686 26 service_latency.go:356] Created: latency-svc-hvq2l
  I0411 12:12:34.112839 26 service_latency.go:363] Got endpoints: latency-svc-hvq2l [225.958061ms]
  I0411 12:12:34.116297 26 service_latency.go:356] Created: latency-svc-zlk4f
  I0411 12:12:34.125618 26 service_latency.go:356] Created: latency-svc-fckgf
  I0411 12:12:34.159985 26 service_latency.go:363] Got endpoints: latency-svc-zlk4f [240.708565ms]
  I0411 12:12:34.163302 26 service_latency.go:356] Created: latency-svc-f9pv7
  I0411 12:12:34.173455 26 service_latency.go:356] Created: latency-svc-bcf69
  I0411 12:12:34.185154 26 service_latency.go:356] Created: latency-svc-j8bcm
  I0411 12:12:34.195372 26 service_latency.go:356] Created: latency-svc-59g5z
  I0411 12:12:34.203423 26 service_latency.go:363] Got endpoints: latency-svc-fckgf [275.185727ms]
  I0411 12:12:34.206925 26 service_latency.go:356] Created: latency-svc-xzslh
  I0411 12:12:34.216455 26 service_latency.go:356] Created: latency-svc-6slsh
  I0411 12:12:34.225152 26 service_latency.go:356] Created: latency-svc-g4djc
  I0411 12:12:34.235129 26 service_latency.go:356] Created: latency-svc-xddpv
  I0411 12:12:34.245545 26 service_latency.go:356] Created: latency-svc-vs9b5
  I0411 12:12:34.255839 26 service_latency.go:363] Got endpoints: latency-svc-f9pv7 [309.594853ms]
  I0411 12:12:34.287955 26 service_latency.go:356] Created: latency-svc-tl6dd
  I0411 12:12:34.292140 26 service_latency.go:356] Created: latency-svc-fwzx9
  I0411 12:12:34.299097 26 service_latency.go:363] Got endpoints: latency-svc-bcf69 [341.312427ms]
  I0411 12:12:34.301337 26 service_latency.go:356] Created: latency-svc-h52rn
  I0411 12:12:34.313005 26 service_latency.go:356] Created: latency-svc-59jjx
  I0411 12:12:34.323143 26 service_latency.go:356] Created: latency-svc-hcnxg
  I0411 12:12:34.331526 26 service_latency.go:356] Created: latency-svc-5wpcw
  I0411 12:12:34.341540 26 service_latency.go:356] Created: latency-svc-m8j5h
  I0411 12:12:34.350583 26 service_latency.go:363] Got endpoints: latency-svc-j8bcm [366.605271ms]
  I0411 12:12:34.352336 26 service_latency.go:356] Created: latency-svc-8ckbk
  I0411 12:12:34.363585 26 service_latency.go:356] Created: latency-svc-mgbcw
  I0411 12:12:34.405536 26 service_latency.go:363] Got endpoints: latency-svc-59g5z [413.278658ms]
  I0411 12:12:34.422050 26 service_latency.go:356] Created: latency-svc-2pzmx
  I0411 12:12:34.453290 26 service_latency.go:363] Got endpoints: latency-svc-xzslh [449.546761ms]
  I0411 12:12:34.485051 26 service_latency.go:356] Created: latency-svc-djfqz
  I0411 12:12:34.499329 26 service_latency.go:363] Got endpoints: latency-svc-6slsh [468.784374ms]
  I0411 12:12:34.513687 26 service_latency.go:356] Created: latency-svc-857fs
  I0411 12:12:34.550818 26 service_latency.go:363] Got endpoints: latency-svc-g4djc [507.192461ms]
  I0411 12:12:34.563854 26 service_latency.go:356] Created: latency-svc-ch6vj
  I0411 12:12:34.601588 26 service_latency.go:363] Got endpoints: latency-svc-xddpv [547.167705ms]
  I0411 12:12:34.621349 26 service_latency.go:356] Created: latency-svc-cdtlr
  I0411 12:12:34.652457 26 service_latency.go:363] Got endpoints: latency-svc-vs9b5 [581.642241ms]
  I0411 12:12:34.666560 26 service_latency.go:356] Created: latency-svc-jmbw8
  I0411 12:12:34.701668 26 service_latency.go:363] Got endpoints: latency-svc-tl6dd [620.277987ms]
  I0411 12:12:34.715088 26 service_latency.go:356] Created: latency-svc-nlchk
  I0411 12:12:34.751933 26 service_latency.go:363] Got endpoints: latency-svc-fwzx9 [664.04523ms]
  I0411 12:12:34.766951 26 service_latency.go:356] Created: latency-svc-zs9cp
  I0411 12:12:34.801343 26 service_latency.go:363] Got endpoints: latency-svc-h52rn [699.446724ms]
  I0411 12:12:34.816520 26 service_latency.go:356] Created: latency-svc-sls2p
  I0411 12:12:34.850986 26 service_latency.go:363] Got endpoints: latency-svc-59jjx [738.03674ms]
  I0411 12:12:34.862950 26 service_latency.go:356] Created: latency-svc-nkzcp
  I0411 12:12:34.903507 26 service_latency.go:363] Got endpoints: latency-svc-hcnxg [743.40953ms]
  I0411 12:12:34.916462 26 service_latency.go:356] Created: latency-svc-xbhrj
  I0411 12:12:34.952866 26 service_latency.go:363] Got endpoints: latency-svc-5wpcw [749.307072ms]
  I0411 12:12:34.967873 26 service_latency.go:356] Created: latency-svc-wv278
  I0411 12:12:34.998383 26 service_latency.go:363] Got endpoints: latency-svc-m8j5h [742.448518ms]
  I0411 12:12:35.006750 26 service_latency.go:356] Created: latency-svc-c69qw
  I0411 12:12:35.047613 26 service_latency.go:363] Got endpoints: latency-svc-8ckbk [748.396984ms]
  I0411 12:12:35.056194 26 service_latency.go:356] Created: latency-svc-x66kq
  I0411 12:12:35.101607 26 service_latency.go:363] Got endpoints: latency-svc-mgbcw [750.895653ms]
  I0411 12:12:35.115475 26 service_latency.go:356] Created: latency-svc-q56ms
  I0411 12:12:35.152447 26 service_latency.go:363] Got endpoints: latency-svc-2pzmx [746.788473ms]
  I0411 12:12:35.165093 26 service_latency.go:356] Created: latency-svc-89cq5
  I0411 12:12:35.198468 26 service_latency.go:363] Got endpoints: latency-svc-djfqz [745.108848ms]
  I0411 12:12:35.206510 26 service_latency.go:356] Created: latency-svc-v9kc8
  I0411 12:12:35.248253 26 service_latency.go:363] Got endpoints: latency-svc-857fs [748.880028ms]
  I0411 12:12:35.257561 26 service_latency.go:356] Created: latency-svc-r2bt9
  I0411 12:12:35.301589 26 service_latency.go:363] Got endpoints: latency-svc-ch6vj [750.6719ms]
  I0411 12:12:35.313615 26 service_latency.go:356] Created: latency-svc-lgbdj
  I0411 12:12:35.357139 26 service_latency.go:363] Got endpoints: latency-svc-cdtlr [755.437185ms]
  I0411 12:12:35.369760 26 service_latency.go:356] Created: latency-svc-gbrh4
  I0411 12:12:35.403585 26 service_latency.go:363] Got endpoints: latency-svc-jmbw8 [751.046915ms]
  I0411 12:12:35.415243 26 service_latency.go:356] Created: latency-svc-s9245
  I0411 12:12:35.450011 26 service_latency.go:363] Got endpoints: latency-svc-nlchk [748.253126ms]
  I0411 12:12:35.465416 26 service_latency.go:356] Created: latency-svc-vxvqs
  I0411 12:12:35.500571 26 service_latency.go:363] Got endpoints: latency-svc-zs9cp [748.554613ms]
  I0411 12:12:35.513005 26 service_latency.go:356] Created: latency-svc-2vkz5
  I0411 12:12:35.550115 26 service_latency.go:363] Got endpoints: latency-svc-sls2p [748.632346ms]
  I0411 12:12:35.566611 26 service_latency.go:356] Created: latency-svc-nx4x6
  I0411 12:12:35.603427 26 service_latency.go:363] Got endpoints: latency-svc-nkzcp [752.365375ms]
  I0411 12:12:35.616557 26 service_latency.go:356] Created: latency-svc-m8kg2
  I0411 12:12:35.652033 26 service_latency.go:363] Got endpoints: latency-svc-xbhrj [748.410154ms]
  I0411 12:12:35.664122 26 service_latency.go:356] Created: latency-svc-vqzs8
  I0411 12:12:35.702332 26 service_latency.go:363] Got endpoints: latency-svc-wv278 [749.36265ms]
  I0411 12:12:35.716945 26 service_latency.go:356] Created: latency-svc-wvr2j
  I0411 12:12:35.751437 26 service_latency.go:363] Got endpoints: latency-svc-c69qw [753.002464ms]
  I0411 12:12:35.760857 26 service_latency.go:356] Created: latency-svc-kb99z
  I0411 12:12:35.798780 26 service_latency.go:363] Got endpoints: latency-svc-x66kq [751.08061ms]
  I0411 12:12:35.806238 26 service_latency.go:356] Created: latency-svc-j4lww
  I0411 12:12:35.852150 26 service_latency.go:363] Got endpoints: latency-svc-q56ms [750.468145ms]
  I0411 12:12:35.867302 26 service_latency.go:356] Created: latency-svc-rqb59
  I0411 12:12:35.901565 26 service_latency.go:363] Got endpoints: latency-svc-89cq5 [749.019063ms]
  I0411 12:12:35.913991 26 service_latency.go:356] Created: latency-svc-bpsqs
  I0411 12:12:35.951111 26 service_latency.go:363] Got endpoints: latency-svc-v9kc8 [752.606782ms]
  I0411 12:12:35.965018 26 service_latency.go:356] Created: latency-svc-wgqd2
  I0411 12:12:36.001370 26 service_latency.go:363] Got endpoints: latency-svc-r2bt9 [753.075361ms]
  I0411 12:12:36.013262 26 service_latency.go:356] Created: latency-svc-kpsfz
  I0411 12:12:36.052214 26 service_latency.go:363] Got endpoints: latency-svc-lgbdj [750.505704ms]
  I0411 12:12:36.064143 26 service_latency.go:356] Created: latency-svc-44k75
  I0411 12:12:36.101575 26 service_latency.go:363] Got endpoints: latency-svc-gbrh4 [744.255383ms]
  I0411 12:12:36.114676 26 service_latency.go:356] Created: latency-svc-7vqff
  I0411 12:12:36.152470 26 service_latency.go:363] Got endpoints: latency-svc-s9245 [748.798188ms]
  I0411 12:12:36.164387 26 service_latency.go:356] Created: latency-svc-zlv9l
  I0411 12:12:36.202262 26 service_latency.go:363] Got endpoints: latency-svc-vxvqs [752.146417ms]
  I0411 12:12:36.214897 26 service_latency.go:356] Created: latency-svc-hfnj7
  I0411 12:12:36.253168 26 service_latency.go:363] Got endpoints: latency-svc-2vkz5 [752.48503ms]
  I0411 12:12:36.265753 26 service_latency.go:356] Created: latency-svc-v9lmv
  I0411 12:12:36.302144 26 service_latency.go:363] Got endpoints: latency-svc-nx4x6 [751.85212ms]
  I0411 12:12:36.314922 26 service_latency.go:356] Created: latency-svc-c5shr
  I0411 12:12:36.351638 26 service_latency.go:363] Got endpoints: latency-svc-m8kg2 [748.129114ms]
  I0411 12:12:36.363519 26 service_latency.go:356] Created: latency-svc-gzs45
  I0411 12:12:36.400829 26 service_latency.go:363] Got endpoints: latency-svc-vqzs8 [748.732065ms]
  I0411 12:12:36.416344 26 service_latency.go:356] Created: latency-svc-jng2b
  I0411 12:12:36.452080 26 service_latency.go:363] Got endpoints: latency-svc-wvr2j [749.66028ms]
  I0411 12:12:36.464111 26 service_latency.go:356] Created: latency-svc-rknpc
  I0411 12:12:36.501932 26 service_latency.go:363] Got endpoints: latency-svc-kb99z [750.425285ms]
  I0411 12:12:36.515043 26 service_latency.go:356] Created: latency-svc-m7vrh
  I0411 12:12:36.550004 26 service_latency.go:363] Got endpoints: latency-svc-j4lww [751.180912ms]
  I0411 12:12:36.560694 26 service_latency.go:356] Created: latency-svc-znxcg
  I0411 12:12:36.601937 26 service_latency.go:363] Got endpoints: latency-svc-rqb59 [749.687281ms]
  I0411 12:12:36.619347 26 service_latency.go:356] Created: latency-svc-vfz9w
  I0411 12:12:36.652816 26 service_latency.go:363] Got endpoints: latency-svc-bpsqs [751.163311ms]
  I0411 12:12:36.665202 26 service_latency.go:356] Created: latency-svc-f9klw
  I0411 12:12:36.703572 26 service_latency.go:363] Got endpoints: latency-svc-wgqd2 [752.351058ms]
  I0411 12:12:36.712488 26 service_latency.go:356] Created: latency-svc-98dxd
  I0411 12:12:36.748555 26 service_latency.go:363] Got endpoints: latency-svc-kpsfz [747.090888ms]
  I0411 12:12:36.756829 26 service_latency.go:356] Created: latency-svc-mpv65
  I0411 12:12:36.801243 26 service_latency.go:363] Got endpoints: latency-svc-44k75 [748.949727ms]
  I0411 12:12:36.814561 26 service_latency.go:356] Created: latency-svc-s6rgw
  I0411 12:12:36.851171 26 service_latency.go:363] Got endpoints: latency-svc-7vqff [749.531062ms]
  I0411 12:12:36.863055 26 service_latency.go:356] Created: latency-svc-dghhs
  I0411 12:12:36.902214 26 service_latency.go:363] Got endpoints: latency-svc-zlv9l [749.650945ms]
  I0411 12:12:36.914570 26 service_latency.go:356] Created: latency-svc-gcjsz
  I0411 12:12:36.953485 26 service_latency.go:363] Got endpoints: latency-svc-hfnj7 [751.102132ms]
  I0411 12:12:36.964477 26 service_latency.go:356] Created: latency-svc-7954h
  I0411 12:12:37.001162 26 service_latency.go:363] Got endpoints: latency-svc-v9lmv [747.880558ms]
  I0411 12:12:37.013775 26 service_latency.go:356] Created: latency-svc-4d9vd
  I0411 12:12:37.052622 26 service_latency.go:363] Got endpoints: latency-svc-c5shr [750.345793ms]
  I0411 12:12:37.084757 26 service_latency.go:356] Created: latency-svc-8fnhq
  I0411 12:12:37.098649 26 service_latency.go:363] Got endpoints: latency-svc-gzs45 [746.933894ms]
  I0411 12:12:37.106047 26 service_latency.go:356] Created: latency-svc-r6crk
  I0411 12:12:37.148855 26 service_latency.go:363] Got endpoints: latency-svc-jng2b [747.940102ms]
  I0411 12:12:37.156296 26 service_latency.go:356] Created: latency-svc-s7krt
  I0411 12:12:37.201825 26 service_latency.go:363] Got endpoints: latency-svc-rknpc [749.639982ms]
  I0411 12:12:37.215536 26 service_latency.go:356] Created: latency-svc-gp5m9
  I0411 12:12:37.248818 26 service_latency.go:363] Got endpoints: latency-svc-m7vrh [746.824468ms]
  I0411 12:12:37.258357 26 service_latency.go:356] Created: latency-svc-gb86f
  I0411 12:12:37.298338 26 service_latency.go:363] Got endpoints: latency-svc-znxcg [748.178109ms]
  I0411 12:12:37.305986 26 service_latency.go:356] Created: latency-svc-l8nr8
  I0411 12:12:37.352553 26 service_latency.go:363] Got endpoints: latency-svc-vfz9w [750.510987ms]
  I0411 12:12:37.371218 26 service_latency.go:356] Created: latency-svc-pghnk
  I0411 12:12:37.400960 26 service_latency.go:363] Got endpoints: latency-svc-f9klw [747.976461ms]
  I0411 12:12:37.410744 26 service_latency.go:356] Created: latency-svc-mcnv2
  I0411 12:12:37.451894 26 service_latency.go:363] Got endpoints: latency-svc-98dxd [748.238793ms]
  I0411 12:12:37.461220 26 service_latency.go:356] Created: latency-svc-tk6fw
  I0411 12:12:37.497555 26 service_latency.go:363] Got endpoints: latency-svc-mpv65 [748.952585ms]
  I0411 12:12:37.506469 26 service_latency.go:356] Created: latency-svc-gddlq
  I0411 12:12:37.555704 26 service_latency.go:363] Got endpoints: latency-svc-s6rgw [754.375443ms]
  I0411 12:12:37.569707 26 service_latency.go:356] Created: latency-svc-9dvp4
  I0411 12:12:37.603508 26 service_latency.go:363] Got endpoints: latency-svc-dghhs [752.22321ms]
  I0411 12:12:37.620781 26 service_latency.go:356] Created: latency-svc-5k6hg
  I0411 12:12:37.651589 26 service_latency.go:363] Got endpoints: latency-svc-gcjsz [749.285867ms]
  I0411 12:12:37.667775 26 service_latency.go:356] Created: latency-svc-8l5zb
  I0411 12:12:37.697349 26 service_latency.go:363] Got endpoints: latency-svc-7954h [743.770793ms]
  I0411 12:12:37.706150 26 service_latency.go:356] Created: latency-svc-wjwjp
  I0411 12:12:37.752103 26 service_latency.go:363] Got endpoints: latency-svc-4d9vd [750.808912ms]
  I0411 12:12:37.768356 26 service_latency.go:356] Created: latency-svc-ckgkc
  I0411 12:12:37.802921 26 service_latency.go:363] Got endpoints: latency-svc-8fnhq [750.209663ms]
  I0411 12:12:37.816028 26 service_latency.go:356] Created: latency-svc-xj5k5
  I0411 12:12:37.853932 26 service_latency.go:363] Got endpoints: latency-svc-r6crk [755.24065ms]
  I0411 12:12:37.870491 26 service_latency.go:356] Created: latency-svc-t9vsp
  I0411 12:12:37.901567 26 service_latency.go:363] Got endpoints: latency-svc-s7krt [752.663818ms]
  I0411 12:12:37.914628 26 service_latency.go:356] Created: latency-svc-nzxj2
  I0411 12:12:37.947183 26 service_latency.go:363] Got endpoints: latency-svc-gp5m9 [745.198682ms]
  I0411 12:12:37.955055 26 service_latency.go:356] Created: latency-svc-8mk7r
  I0411 12:12:38.003374 26 service_latency.go:363] Got endpoints: latency-svc-gb86f [754.512843ms]
  I0411 12:12:38.016062 26 service_latency.go:356] Created: latency-svc-wpwzb
  I0411 12:12:38.053170 26 service_latency.go:363] Got endpoints: latency-svc-l8nr8 [754.785486ms]
  I0411 12:12:38.066061 26 service_latency.go:356] Created: latency-svc-qpqms
  I0411 12:12:38.099087 26 service_latency.go:363] Got endpoints: latency-svc-pghnk [746.425149ms]
  I0411 12:12:38.109232 26 service_latency.go:356] Created: latency-svc-2mz5g
  I0411 12:12:38.148158 26 service_latency.go:363] Got endpoints: latency-svc-mcnv2 [747.14ms]
  I0411 12:12:38.156099 26 service_latency.go:356] Created: latency-svc-2nksx
  I0411 12:12:38.197822 26 service_latency.go:363] Got endpoints: latency-svc-tk6fw [745.843818ms]
  I0411 12:12:38.206994 26 service_latency.go:356] Created: latency-svc-cqtjn
  I0411 12:12:38.250082 26 service_latency.go:363] Got endpoints: latency-svc-gddlq [752.484712ms]
  I0411 12:12:38.258830 26 service_latency.go:356] Created: latency-svc-llgmj
  I0411 12:12:38.301973 26 service_latency.go:363] Got endpoints: latency-svc-9dvp4 [746.175888ms]
  I0411 12:12:38.316593 26 service_latency.go:356] Created: latency-svc-jmc6x
  I0411 12:12:38.352340 26 service_latency.go:363] Got endpoints: latency-svc-5k6hg [748.713737ms]
  I0411 12:12:38.365275 26 service_latency.go:356] Created: latency-svc-sq594
  I0411 12:12:38.402890 26 service_latency.go:363] Got endpoints: latency-svc-8l5zb [751.196194ms]
  I0411 12:12:38.416453 26 service_latency.go:356] Created: latency-svc-nf2mq
  I0411 12:12:38.451454 26 service_latency.go:363] Got endpoints: latency-svc-wjwjp [754.065348ms]
  I0411 12:12:38.463518 26 service_latency.go:356] Created: latency-svc-279tn
  I0411 12:12:38.500149 26 service_latency.go:363] Got endpoints: latency-svc-ckgkc [747.869998ms]
  I0411 12:12:38.515992 26 service_latency.go:356] Created: latency-svc-pzwns
  I0411 12:12:38.550801 26 service_latency.go:363] Got endpoints: latency-svc-xj5k5 [747.764722ms]
  I0411 12:12:38.562708 26 service_latency.go:356] Created: latency-svc-qpwpm
  I0411 12:12:38.603665 26 service_latency.go:363] Got endpoints: latency-svc-t9vsp [749.630908ms]
  I0411 12:12:38.615332 26 service_latency.go:356] Created: latency-svc-mdkd4
  I0411 12:12:38.653159 26 service_latency.go:363] Got endpoints: latency-svc-nzxj2 [751.496209ms]
  I0411 12:12:38.665976 26 service_latency.go:356] Created: latency-svc-mvrj6
  I0411 12:12:38.701050 26 service_latency.go:363] Got endpoints: latency-svc-8mk7r [753.80921ms]
  I0411 12:12:38.716923 26 service_latency.go:356] Created: latency-svc-b2lft
  I0411 12:12:38.748505 26 service_latency.go:363] Got endpoints: latency-svc-wpwzb [745.047775ms]
  I0411 12:12:38.757829 26 service_latency.go:356] Created: latency-svc-gxsd8
  I0411 12:12:38.799259 26 service_latency.go:363] Got endpoints: latency-svc-qpqms [745.976808ms]
  I0411 12:12:38.806147 26 service_latency.go:356] Created: latency-svc-ftqmv
  I0411 12:12:38.853580 26 service_latency.go:363] Got endpoints: latency-svc-2mz5g [754.409882ms]
  I0411 12:12:38.870369 26 service_latency.go:356] Created: latency-svc-m4jpr
  I0411 12:12:38.900611 26 service_latency.go:363] Got endpoints: latency-svc-2nksx [752.396196ms]
  I0411 12:12:38.916860 26 service_latency.go:356] Created: latency-svc-bdm2r
  I0411 12:12:38.953522 26 service_latency.go:363] Got endpoints: latency-svc-cqtjn [755.639345ms]
  I0411 12:12:38.966949 26 service_latency.go:356] Created: latency-svc-j66tt
  I0411 12:12:39.001005 26 service_latency.go:363] Got endpoints: latency-svc-llgmj [750.870884ms]
  I0411 12:12:39.014170 26 service_latency.go:356] Created: latency-svc-lfgkm
  I0411 12:12:39.051031 26 service_latency.go:363] Got endpoints: latency-svc-jmc6x [748.930248ms]
  I0411 12:12:39.065527 26 service_latency.go:356] Created: latency-svc-tg65c
  I0411 12:12:39.101328 26 service_latency.go:363] Got endpoints: latency-svc-sq594 [748.891082ms]
  I0411 12:12:39.114516 26 service_latency.go:356] Created: latency-svc-ggkzd
  I0411 12:12:39.153033 26 service_latency.go:363] Got endpoints: latency-svc-nf2mq [750.060881ms]
  I0411 12:12:39.167712 26 service_latency.go:356] Created: latency-svc-559j9
  I0411 12:12:39.200027 26 service_latency.go:363] Got endpoints: latency-svc-279tn [748.500774ms]
  I0411 12:12:39.211051 26 service_latency.go:356] Created: latency-svc-4tkzz
  I0411 12:12:39.252248 26 service_latency.go:363] Got endpoints: latency-svc-pzwns [751.99184ms]
  I0411 12:12:39.267723 26 service_latency.go:356] Created: latency-svc-pklgw
  I0411 12:12:39.302699 26 service_latency.go:363] Got endpoints: latency-svc-qpwpm [751.751377ms]
  I0411 12:12:39.317431 26 service_latency.go:356] Created: latency-svc-vhqpv
  I0411 12:12:39.352462 26 service_latency.go:363] Got endpoints: latency-svc-mdkd4 [748.385192ms]
  I0411 12:12:39.366084 26 service_latency.go:356] Created: latency-svc-dtpxp
  I0411 12:12:39.404062 26 service_latency.go:363] Got endpoints: latency-svc-mvrj6 [750.695792ms]
  I0411 12:12:39.417897 26 service_latency.go:356] Created: latency-svc-sq6xb
  I0411 12:12:39.450932 26 service_latency.go:363] Got endpoints: latency-svc-b2lft [749.803974ms]
  I0411 12:12:39.486856 26 service_latency.go:356] Created: latency-svc-clshq
  I0411 12:12:39.498964 26 service_latency.go:363] Got endpoints: latency-svc-gxsd8 [750.382732ms]
  I0411 12:12:39.509017 26 service_latency.go:356] Created: latency-svc-7hsnv
  I0411 12:12:39.549653 26 service_latency.go:363] Got endpoints: latency-svc-ftqmv [750.298425ms]
  I0411 12:12:39.560236 26 service_latency.go:356] Created: latency-svc-76296
  I0411 12:12:39.603442 26 service_latency.go:363] Got endpoints: latency-svc-m4jpr [749.741687ms]
  I0411 12:12:39.617054 26 service_latency.go:356] Created: latency-svc-tjgj4
  I0411 12:12:39.654553 26 service_latency.go:363] Got endpoints: latency-svc-bdm2r [753.712112ms]
  I0411 12:12:39.672546 26 service_latency.go:356] Created: latency-svc-4thdz
  I0411 12:12:39.701764 26 service_latency.go:363] Got endpoints: latency-svc-j66tt [748.132633ms]
  I0411 12:12:39.716538 26 service_latency.go:356] Created: latency-svc-mzh74
  I0411 12:12:39.752334 26 service_latency.go:363] Got endpoints: latency-svc-lfgkm [751.261756ms]
  I0411 12:12:39.768398 26 service_latency.go:356] Created: latency-svc-lzhfg
  I0411 12:12:39.802746 26 service_latency.go:363] Got endpoints: latency-svc-tg65c [751.569208ms]
  I0411 12:12:39.816119 26 service_latency.go:356] Created: latency-svc-f678t
  I0411 12:12:39.850679 26 service_latency.go:363] Got endpoints: latency-svc-ggkzd [749.178862ms]
  I0411 12:12:39.867365 26 service_latency.go:356] Created: latency-svc-r7wp4
  I0411 12:12:39.901901 26 service_latency.go:363] Got endpoints: latency-svc-559j9 [748.761637ms]
  I0411 12:12:39.915663 26 service_latency.go:356] Created: latency-svc-fmp9v
  I0411 12:12:39.950410 26 service_latency.go:363] Got endpoints: latency-svc-4tkzz [750.322147ms]
  I0411 12:12:39.962261 26 service_latency.go:356] Created: latency-svc-mtr6t
  I0411 12:12:40.003236 26 service_latency.go:363] Got endpoints: latency-svc-pklgw [750.882683ms]
  I0411 12:12:40.017339 26 service_latency.go:356] Created: latency-svc-2b4sr
  I0411 12:12:40.053003 26 service_latency.go:363] Got endpoints: latency-svc-vhqpv [750.170308ms]
  I0411 12:12:40.067459 26 service_latency.go:356] Created: latency-svc-7tstc
  I0411 12:12:40.100253 26 service_latency.go:363] Got endpoints: latency-svc-dtpxp [747.696942ms]
  I0411 12:12:40.112118 26 service_latency.go:356] Created: latency-svc-t9dbj
  I0411 12:12:40.152038 26 service_latency.go:363] Got endpoints: latency-svc-sq6xb [747.834615ms]
  I0411 12:12:40.166440 26 service_latency.go:356] Created: latency-svc-7bj8t
  I0411 12:12:40.201824 26 service_latency.go:363] Got endpoints: latency-svc-clshq [750.786898ms]
  I0411 12:12:40.215778 26 service_latency.go:356] Created: latency-svc-zx7cv
  I0411 12:12:40.254027 26 service_latency.go:363] Got endpoints: latency-svc-7hsnv [755.000421ms]
  I0411 12:12:40.268530 26 service_latency.go:356] Created: latency-svc-72l4m
  I0411 12:12:40.301063 26 service_latency.go:363] Got endpoints: latency-svc-76296 [751.251243ms]
  I0411 12:12:40.312530 26 service_latency.go:356] Created: latency-svc-m2p7v
  I0411 12:12:40.351006 26 service_latency.go:363] Got endpoints: latency-svc-tjgj4 [747.483031ms]
  I0411 12:12:40.365750 26 service_latency.go:356] Created: latency-svc-fptpz
  I0411 12:12:40.402389 26 service_latency.go:363] Got endpoints: latency-svc-4thdz [747.71594ms]
  I0411 12:12:40.416003 26 service_latency.go:356] Created: latency-svc-t654j
  I0411 12:12:40.454424 26 service_latency.go:363] Got endpoints: latency-svc-mzh74 [752.54373ms]
  I0411 12:12:40.468006 26 service_latency.go:356] Created: latency-svc-zmbrk
  I0411 12:12:40.502862 26 service_latency.go:363] Got endpoints: latency-svc-lzhfg [750.441137ms]
  I0411 12:12:40.514219 26 service_latency.go:356] Created: latency-svc-pgkb2
  I0411 12:12:40.553722 26 service_latency.go:363] Got endpoints: latency-svc-f678t [750.839745ms]
  I0411 12:12:40.563274 26 service_latency.go:356] Created: latency-svc-ggj2c
  I0411 12:12:40.603100 26 service_latency.go:363] Got endpoints: latency-svc-r7wp4 [752.351329ms]
  I0411 12:12:40.616981 26 service_latency.go:356] Created: latency-svc-rfjhw
  I0411 12:12:40.652558 26 service_latency.go:363] Got endpoints: latency-svc-fmp9v [750.523645ms]
  I0411 12:12:40.664348 26 service_latency.go:356] Created: latency-svc-48rcl
  I0411 12:12:40.700745 26 service_latency.go:363] Got endpoints: latency-svc-mtr6t [750.224781ms]
  I0411 12:12:40.718045 26 service_latency.go:356] Created: latency-svc-2grld
  I0411 12:12:40.749013 26 service_latency.go:363] Got endpoints: latency-svc-2b4sr [745.697635ms]
  I0411 12:12:40.759574 26 service_latency.go:356] Created: latency-svc-bhnp9
  I0411 12:12:40.800602 26 service_latency.go:363] Got endpoints: latency-svc-7tstc [747.51526ms]
  I0411 12:12:40.817592 26 service_latency.go:356] Created: latency-svc-6wk8j
  I0411 12:12:40.852116 26 service_latency.go:363] Got endpoints: latency-svc-t9dbj [751.772579ms]
  I0411 12:12:40.866315 26 service_latency.go:356] Created: latency-svc-xntwn
  I0411 12:12:40.901703 26 service_latency.go:363] Got endpoints: latency-svc-7bj8t [749.530481ms]
  I0411 12:12:40.921447 26 service_latency.go:356] Created: latency-svc-7j8j8
  I0411 12:12:40.954435 26 service_latency.go:363] Got endpoints: latency-svc-zx7cv [752.512523ms]
  I0411 12:12:40.968142 26 service_latency.go:356] Created: latency-svc-tj9jc
  I0411 12:12:41.002490 26 service_latency.go:363] Got endpoints: latency-svc-72l4m [748.314261ms]
  I0411 12:12:41.015581 26 service_latency.go:356] Created: latency-svc-2c6zc
  I0411 12:12:41.052469 26 service_latency.go:363] Got endpoints: latency-svc-m2p7v [751.33678ms]
  I0411 12:12:41.065874 26 service_latency.go:356] Created: latency-svc-x5h6h
  I0411 12:12:41.101503 26 service_latency.go:363] Got endpoints: latency-svc-fptpz [750.402335ms]
  I0411 12:12:41.114974 26 service_latency.go:356] Created: latency-svc-phhf4
  I0411 12:12:41.151372 26 service_latency.go:363] Got endpoints: latency-svc-t654j [748.887677ms]
  I0411 12:12:41.163527 26 service_latency.go:356] Created: latency-svc-2kjcv
  I0411 12:12:41.198648 26 service_latency.go:363] Got endpoints: latency-svc-zmbrk [744.129309ms]
  I0411 12:12:41.205943 26 service_latency.go:356] Created: latency-svc-xb6gd
  I0411 12:12:41.251441 26 service_latency.go:363] Got endpoints: latency-svc-pgkb2 [748.504023ms]
  I0411 12:12:41.260651 26 service_latency.go:356] Created: latency-svc-lknpd
  I0411 12:12:41.301369 26 service_latency.go:363] Got endpoints: latency-svc-ggj2c [747.576293ms]
  I0411 12:12:41.313218 26 service_latency.go:356] Created: latency-svc-9lkhs
  I0411 12:12:41.351366 26 service_latency.go:363] Got endpoints: latency-svc-rfjhw [748.075792ms]
  I0411 12:12:41.402886 26 service_latency.go:363] Got endpoints: latency-svc-48rcl [750.217646ms]
  I0411 12:12:41.449570 26 service_latency.go:363] Got endpoints: latency-svc-2grld [748.699092ms]
  I0411 12:12:41.502779 26 service_latency.go:363] Got endpoints: latency-svc-bhnp9 [753.711063ms]
  I0411 12:12:41.549996 26 service_latency.go:363] Got endpoints: latency-svc-6wk8j [749.308687ms]
  I0411 12:12:41.602612 26 service_latency.go:363] Got endpoints: latency-svc-xntwn [750.369741ms]
  I0411 12:12:41.650739 26 service_latency.go:363] Got endpoints: latency-svc-7j8j8 [748.951979ms]
  I0411 12:12:41.703475 26 service_latency.go:363] Got endpoints: latency-svc-tj9jc [748.874148ms]
  I0411 12:12:41.748484 26 service_latency.go:363] Got endpoints: latency-svc-2c6zc [745.903851ms]
  I0411 12:12:41.799032 26 service_latency.go:363] Got endpoints: latency-svc-x5h6h [746.487785ms]
  I0411 12:12:41.851447 26 service_latency.go:363] Got endpoints: latency-svc-phhf4 [749.809592ms]
  I0411 12:12:41.902539 26 service_latency.go:363] Got endpoints: latency-svc-2kjcv [751.0354ms]
  I0411 12:12:41.951830 26 service_latency.go:363] Got endpoints: latency-svc-xb6gd [753.135094ms]
  I0411 12:12:42.002959 26 service_latency.go:363] Got endpoints: latency-svc-lknpd [751.390886ms]
  I0411 12:12:42.053281 26 service_latency.go:363] Got endpoints: latency-svc-9lkhs [751.819743ms]
  I0411 12:12:42.053660 26 service_latency.go:114] Latencies: [20.05674ms 38.834036ms 47.489381ms 58.106483ms 68.093736ms 91.103647ms 110.408237ms 123.806908ms 133.681227ms 163.202256ms 175.714064ms 187.080172ms 198.746814ms 202.32076ms 205.989209ms 208.598098ms 210.301615ms 210.698218ms 213.210645ms 222.175346ms 224.794106ms 225.133078ms 225.958061ms 226.356714ms 228.680239ms 228.996758ms 230.418397ms 231.797946ms 232.379961ms 232.565984ms 232.724912ms 232.728811ms 233.626681ms 235.228448ms 235.494374ms 237.198953ms 238.175329ms 238.978367ms 240.708565ms 247.009088ms 250.394147ms 251.349312ms 275.185727ms 309.594853ms 341.312427ms 366.605271ms 413.278658ms 449.546761ms 468.784374ms 507.192461ms 547.167705ms 581.642241ms 620.277987ms 664.04523ms 699.446724ms 738.03674ms 742.448518ms 743.40953ms 743.770793ms 744.129309ms 744.255383ms 745.047775ms 745.108848ms 745.198682ms 745.697635ms 745.843818ms 745.903851ms 745.976808ms 746.175888ms 746.425149ms 746.487785ms 746.788473ms 746.824468ms 746.933894ms 747.090888ms 747.14ms 747.483031ms 747.51526ms 747.576293ms 747.696942ms 747.71594ms 747.764722ms 747.834615ms 747.869998ms 747.880558ms 747.940102ms 747.976461ms 748.075792ms 748.129114ms 748.132633ms 748.178109ms 748.238793ms 748.253126ms 748.314261ms 748.385192ms 748.396984ms 748.410154ms 748.500774ms 748.504023ms 748.554613ms 748.632346ms 748.699092ms 748.713737ms 748.732065ms 748.761637ms 748.798188ms 748.874148ms 748.880028ms 748.887677ms 748.891082ms 748.930248ms 748.949727ms 748.951979ms 748.952585ms 749.019063ms 749.178862ms 749.285867ms 749.307072ms 749.308687ms 749.36265ms 749.530481ms 749.531062ms 749.630908ms 749.639982ms 749.650945ms 749.66028ms 749.687281ms 749.741687ms 749.803974ms 749.809592ms 750.060881ms 750.170308ms 750.209663ms 750.217646ms 750.224781ms 750.298425ms 750.322147ms 750.345793ms 750.369741ms 750.382732ms 750.402335ms 750.425285ms 750.441137ms 750.468145ms 750.505704ms 750.510987ms 750.523645ms 750.6719ms 750.695792ms 750.786898ms 750.808912ms 750.839745ms 750.870884ms 750.882683ms 750.895653ms 751.0354ms 751.046915ms 751.08061ms 751.102132ms 751.163311ms 751.180912ms 751.196194ms 751.251243ms 751.261756ms 751.33678ms 751.390886ms 751.496209ms 751.569208ms 751.751377ms 751.772579ms 751.819743ms 751.85212ms 751.99184ms 752.146417ms 752.22321ms 752.351058ms 752.351329ms 752.365375ms 752.396196ms 752.484712ms 752.48503ms 752.512523ms 752.54373ms 752.606782ms 752.663818ms 753.002464ms 753.075361ms 753.135094ms 753.711063ms 753.712112ms 753.80921ms 754.065348ms 754.375443ms 754.409882ms 754.512843ms 754.785486ms 755.000421ms 755.24065ms 755.437185ms 755.639345ms]
  I0411 12:12:42.053717 26 service_latency.go:118] 50 %ile: 748.632346ms
  I0411 12:12:42.053736 26 service_latency.go:119] 90 %ile: 752.48503ms
  I0411 12:12:42.053750 26 service_latency.go:120] 99 %ile: 755.437185ms
  I0411 12:12:42.053771 26 service_latency.go:121] Total sample count: 200
  I0411 12:12:42.053974 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1137" for this suite. @ 04/11/25 12:12:42.058
• [9.750 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/11/25 12:12:42.064
  I0411 12:12:42.064875 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename discovery @ 04/11/25 12:12:42.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:42.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:42.081
  STEP: Setting up server cert @ 04/11/25 12:12:42.086
  I0411 12:12:42.152325 26 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0411 12:12:42.152899 26 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0411 12:12:42.152916 26 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0411 12:12:42.152922 26 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0411 12:12:42.152926 26 discovery.go:139] Checking APIGroup: apps
  I0411 12:12:42.153455 26 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0411 12:12:42.153470 26 discovery.go:148] Versions found [{apps/v1 v1}]
  I0411 12:12:42.153474 26 discovery.go:154] apps/v1 matches apps/v1
  I0411 12:12:42.153479 26 discovery.go:139] Checking APIGroup: events.k8s.io
  I0411 12:12:42.154017 26 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0411 12:12:42.154025 26 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0411 12:12:42.154030 26 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0411 12:12:42.154037 26 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0411 12:12:42.154555 26 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0411 12:12:42.154590 26 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0411 12:12:42.154600 26 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0411 12:12:42.154607 26 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0411 12:12:42.155206 26 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0411 12:12:42.155213 26 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0411 12:12:42.155218 26 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0411 12:12:42.155222 26 discovery.go:139] Checking APIGroup: autoscaling
  I0411 12:12:42.155759 26 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0411 12:12:42.155779 26 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0411 12:12:42.155788 26 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0411 12:12:42.155795 26 discovery.go:139] Checking APIGroup: batch
  I0411 12:12:42.156385 26 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0411 12:12:42.156407 26 discovery.go:148] Versions found [{batch/v1 v1}]
  I0411 12:12:42.156417 26 discovery.go:154] batch/v1 matches batch/v1
  I0411 12:12:42.156424 26 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0411 12:12:42.156934 26 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0411 12:12:42.156940 26 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0411 12:12:42.156948 26 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0411 12:12:42.156951 26 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0411 12:12:42.157494 26 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0411 12:12:42.157532 26 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0411 12:12:42.157546 26 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0411 12:12:42.157553 26 discovery.go:139] Checking APIGroup: policy
  I0411 12:12:42.158041 26 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0411 12:12:42.158066 26 discovery.go:148] Versions found [{policy/v1 v1}]
  I0411 12:12:42.158074 26 discovery.go:154] policy/v1 matches policy/v1
  I0411 12:12:42.158080 26 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0411 12:12:42.158458 26 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0411 12:12:42.158478 26 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0411 12:12:42.158487 26 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0411 12:12:42.158493 26 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0411 12:12:42.159021 26 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0411 12:12:42.159037 26 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0411 12:12:42.159045 26 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0411 12:12:42.159051 26 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0411 12:12:42.159568 26 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0411 12:12:42.159586 26 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0411 12:12:42.159593 26 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0411 12:12:42.159600 26 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0411 12:12:42.160073 26 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0411 12:12:42.160088 26 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0411 12:12:42.160095 26 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0411 12:12:42.160101 26 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0411 12:12:42.160620 26 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0411 12:12:42.160635 26 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0411 12:12:42.160641 26 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0411 12:12:42.160646 26 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0411 12:12:42.161198 26 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0411 12:12:42.161215 26 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0411 12:12:42.161235 26 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0411 12:12:42.161241 26 discovery.go:139] Checking APIGroup: node.k8s.io
  I0411 12:12:42.161783 26 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0411 12:12:42.161798 26 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0411 12:12:42.161805 26 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0411 12:12:42.161821 26 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0411 12:12:42.162329 26 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0411 12:12:42.162346 26 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0411 12:12:42.162353 26 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0411 12:12:42.162359 26 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0411 12:12:42.162874 26 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0411 12:12:42.162895 26 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0411 12:12:42.162903 26 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0411 12:12:42.162999 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4320" for this suite. @ 04/11/25 12:12:42.165
• [0.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 04/11/25 12:12:42.169
  I0411 12:12:42.169854 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 12:12:42.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:12:42.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:12:42.179
  STEP: Creating pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448 @ 04/11/25 12:12:42.18
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 12:12:44.189
  I0411 12:12:44.191627 26 container_probe.go:1749] Initial restart count of pod busybox-19aa69fa-6465-4622-baac-030e665a6123 is 0
  I0411 12:12:44.193125 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:46.199192 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:48.203959 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:50.228559 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:52.236030 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:54.243032 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:56.245569 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:12:58.252593 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:00.258733 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:02.262157 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:04.269404 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:06.276040 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:08.282317 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:10.288846 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:12.292601 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:14.300054 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:16.306731 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:18.313915 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:20.320697 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:22.324201 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:24.330039 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:26.337084 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:28.342691 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:30.348595 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:32.351448 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:34.358065 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:36.363157 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:38.369356 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:40.376020 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:42.381480 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:44.386952 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:46.392982 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:48.399067 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:50.405406 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:52.412545 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:54.417892 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:56.422986 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:13:58.429844 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:00.436416 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:02.442097 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:04.447264 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:06.453957 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:08.460717 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:10.467497 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:12.473623 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:14.479929 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:16.487110 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:18.493836 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:20.501058 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:22.506402 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:24.513677 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:26.520825 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:28.525930 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:30.532683 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:32.537982 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:34.543129 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:36.549055 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:38.555074 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:40.561474 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:42.566485 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:44.573199 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:46.579248 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:48.583219 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:50.587924 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:52.594565 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:54.601236 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:56.608280 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:14:58.613981 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:00.620935 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:02.627343 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:04.632882 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:06.639452 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:08.646426 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:10.653036 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:12.660193 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:14.665567 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:16.671536 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:18.678920 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:20.685358 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:22.691620 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:24.698189 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:26.705048 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:28.708266 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:30.714866 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:32.720400 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:34.726611 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:36.730958 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:38.737529 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:40.743802 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:42.750109 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:44.755495 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:46.762116 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:48.769146 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:50.776016 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:52.781424 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:54.788877 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:56.794686 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:15:58.799584 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:00.807030 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:02.813559 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:04.819320 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:06.826785 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:08.832950 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:10.838920 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:12.845350 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:14.852416 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:16.858016 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:18.864564 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:20.870052 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:22.876225 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:24.882836 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:26.885661 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:28.891590 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:30.897869 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:32.905165 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:34.911244 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:36.917083 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:38.920126 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:40.926524 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  I0411 12:16:42.932382 26 container_probe.go:1759] Get pod busybox-19aa69fa-6465-4622-baac-030e665a6123 in namespace container-probe-9448
  STEP: deleting the pod @ 04/11/25 12:16:44.933
  I0411 12:16:44.944264 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9448" for this suite. @ 04/11/25 12:16:44.949
• [242.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/11/25 12:16:44.953
  I0411 12:16:44.953606 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 12:16:44.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:16:44.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:16:44.969
  STEP: Creating configMap with name configmap-test-volume-c2b7da2d-7d65-44d1-839c-b55749d1176d @ 04/11/25 12:16:44.971
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:16:44.974
  STEP: Saw pod success @ 04/11/25 12:16:48.995
  I0411 12:16:48.998321 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-24456fa5-df62-455e-98ca-950176a9736c container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 12:16:49.013
  I0411 12:16:49.032687 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9697" for this suite. @ 04/11/25 12:16:49.036
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 04/11/25 12:16:49.04
  I0411 12:16:49.040891 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename disruption @ 04/11/25 12:16:49.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:16:49.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:16:49.054
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:16:49.061
  STEP: Updating PodDisruptionBudget status @ 04/11/25 12:16:51.068
  STEP: Waiting for all pods to be running @ 04/11/25 12:16:51.078
  I0411 12:16:51.081785 26 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 04/11/25 12:16:53.083
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:16:53.092
  STEP: Patching PodDisruptionBudget status @ 04/11/25 12:16:53.097
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:16:53.104
  I0411 12:16:53.106934 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-396" for this suite. @ 04/11/25 12:16:53.109
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/11/25 12:16:53.113
  I0411 12:16:53.113914 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename apf @ 04/11/25 12:16:53.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:16:53.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:16:53.128
  STEP: getting /apis @ 04/11/25 12:16:53.129
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/11/25 12:16:53.131
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/11/25 12:16:53.132
  STEP: creating @ 04/11/25 12:16:53.132
  STEP: getting @ 04/11/25 12:16:53.14
  STEP: listing @ 04/11/25 12:16:53.141
  STEP: watching @ 04/11/25 12:16:53.142
  I0411 12:16:53.142454 26 flowcontrol.go:394] starting watch
  STEP: patching @ 04/11/25 12:16:53.143
  STEP: updating @ 04/11/25 12:16:53.149
  I0411 12:16:53.153098 26 flowcontrol.go:422] waiting for watch events with expected annotations
  I0411 12:16:53.153134 26 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/11/25 12:16:53.153
  STEP: patching /status @ 04/11/25 12:16:53.154
  STEP: updating /status @ 04/11/25 12:16:53.158
  STEP: deleting @ 04/11/25 12:16:53.184
  STEP: deleting a collection @ 04/11/25 12:16:53.193
  I0411 12:16:53.207511 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-773" for this suite. @ 04/11/25 12:16:53.21
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/11/25 12:16:53.215
  I0411 12:16:53.215476 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubelet-test @ 04/11/25 12:16:53.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:16:53.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:16:53.23
  I0411 12:16:55.256080 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-240" for this suite. @ 04/11/25 12:16:55.259
• [2.053 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 04/11/25 12:16:55.268
  I0411 12:16:55.268787 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 12:16:55.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:16:55.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:16:55.284
  STEP: Creating Indexed job @ 04/11/25 12:16:55.286
  STEP: Ensuring job reaches completions @ 04/11/25 12:16:55.292
  STEP: Ensuring pods with index for job exist @ 04/11/25 12:17:03.321
  I0411 12:17:03.325600 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7992" for this suite. @ 04/11/25 12:17:03.328
• [8.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/11/25 12:17:03.335
  I0411 12:17:03.335261 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/11/25 12:17:03.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:17:03.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:17:03.352
  I0411 12:17:03.359230 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4001" for this suite. @ 04/11/25 12:17:03.428
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/11/25 12:17:03.433
  I0411 12:17:03.433169 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:17:03.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:17:03.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:17:03.448
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:17:03.449
  STEP: Saw pod success @ 04/11/25 12:17:07.463
  I0411 12:17:07.465080 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-3d28b20a-1251-4928-8744-2afe0fe7340b container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:17:07.469
  I0411 12:17:07.483541 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2855" for this suite. @ 04/11/25 12:17:07.485
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/11/25 12:17:07.489
  I0411 12:17:07.489144 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:17:07.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:17:07.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:17:07.498
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:17:07.5
  STEP: Saw pod success @ 04/11/25 12:17:11.518
  I0411 12:17:11.521750 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-3d1c299f-f5d8-4910-8ad8-2418305f5024 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:17:11.529
  I0411 12:17:11.546667 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2252" for this suite. @ 04/11/25 12:17:11.55
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/11/25 12:17:11.556
  I0411 12:17:11.556372 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename cronjob @ 04/11/25 12:17:11.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:17:11.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:17:11.575
  STEP: Creating a suspended cronjob @ 04/11/25 12:17:11.579
  STEP: Ensuring no jobs are scheduled @ 04/11/25 12:17:11.584
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/11/25 12:22:11.585
  STEP: Removing cronjob @ 04/11/25 12:22:11.587
  I0411 12:22:11.592678 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7170" for this suite. @ 04/11/25 12:22:11.594
• [300.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/11/25 12:22:11.598
  I0411 12:22:11.598501 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename watch @ 04/11/25 12:22:11.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:11.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:11.608
  STEP: creating a watch on configmaps with a certain label @ 04/11/25 12:22:11.61
  STEP: creating a new configmap @ 04/11/25 12:22:11.611
  STEP: modifying the configmap once @ 04/11/25 12:22:11.614
  STEP: changing the label value of the configmap @ 04/11/25 12:22:11.617
  STEP: Expecting to observe a delete notification for the watched object @ 04/11/25 12:22:11.621
  I0411 12:22:11.621296 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2155  e8ca31a9-76b5-4394-aab6-ddb3c4f44593 9743 0 2025-04-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:22:11.621427 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2155  e8ca31a9-76b5-4394-aab6-ddb3c4f44593 9744 0 2025-04-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:22:11.621532 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2155  e8ca31a9-76b5-4394-aab6-ddb3c4f44593 9745 0 2025-04-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/11/25 12:22:11.621
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/11/25 12:22:11.626
  STEP: changing the label value of the configmap back @ 04/11/25 12:22:21.629
  STEP: modifying the configmap a third time @ 04/11/25 12:22:21.641
  STEP: deleting the configmap @ 04/11/25 12:22:21.648
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/11/25 12:22:21.653
  I0411 12:22:21.653325 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2155  e8ca31a9-76b5-4394-aab6-ddb3c4f44593 9760 0 2025-04-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-11 12:22:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:22:21.653481 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2155  e8ca31a9-76b5-4394-aab6-ddb3c4f44593 9761 0 2025-04-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-11 12:22:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:22:21.653594 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2155  e8ca31a9-76b5-4394-aab6-ddb3c4f44593 9762 0 2025-04-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-11 12:22:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:22:21.653758 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2155" for this suite. @ 04/11/25 12:22:21.659
• [10.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 04/11/25 12:22:21.665
  I0411 12:22:21.665491 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 12:22:21.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:21.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:21.681
  STEP: creating all guestbook components @ 04/11/25 12:22:21.683
  I0411 12:22:21.683712 26 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0411 12:22:21.683806 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 create -f -'
  I0411 12:22:21.769398 26 builder.go:146] stderr: ""
  I0411 12:22:21.769441 26 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0411 12:22:21.769488 26 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0411 12:22:21.769565 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 create -f -'
  I0411 12:22:21.852509 26 builder.go:146] stderr: ""
  I0411 12:22:21.852576 26 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0411 12:22:21.852614 26 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0411 12:22:21.852660 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 create -f -'
  I0411 12:22:21.926422 26 builder.go:146] stderr: ""
  I0411 12:22:21.926466 26 builder.go:147] stdout: "service/frontend created\n"
  I0411 12:22:21.926528 26 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0411 12:22:21.926612 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 create -f -'
  I0411 12:22:21.985414 26 builder.go:146] stderr: ""
  I0411 12:22:21.985459 26 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0411 12:22:21.985534 26 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0411 12:22:21.985628 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 create -f -'
  I0411 12:22:22.063027 26 builder.go:146] stderr: ""
  I0411 12:22:22.063072 26 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0411 12:22:22.063153 26 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0411 12:22:22.063267 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 create -f -'
  I0411 12:22:22.134930 26 builder.go:146] stderr: ""
  I0411 12:22:22.134966 26 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/11/25 12:22:22.134
  I0411 12:22:22.135002 26 kubectl.go:2269] Waiting for all frontend pods to be Running.
  I0411 12:22:27.188976 26 kubectl.go:2273] Waiting for frontend to serve content.
  I0411 12:22:27.194118 26 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0411 12:22:27.199396 26 kubectl.go:2283] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/11/25 12:22:27.203
  I0411 12:22:27.204028 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 delete --grace-period=0 --force -f -'
  I0411 12:22:27.253783 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:22:27.253825 26 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/11/25 12:22:27.253
  I0411 12:22:27.253964 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 delete --grace-period=0 --force -f -'
  I0411 12:22:27.305389 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:22:27.305428 26 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/11/25 12:22:27.305
  I0411 12:22:27.305545 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 delete --grace-period=0 --force -f -'
  I0411 12:22:27.358040 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:22:27.358067 26 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/11/25 12:22:27.358
  I0411 12:22:27.358146 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 delete --grace-period=0 --force -f -'
  I0411 12:22:27.400798 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:22:27.400846 26 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/11/25 12:22:27.4
  I0411 12:22:27.400999 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 delete --grace-period=0 --force -f -'
  I0411 12:22:27.473593 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:22:27.473637 26 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/11/25 12:22:27.473
  I0411 12:22:27.473752 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-742 delete --grace-period=0 --force -f -'
  I0411 12:22:27.516969 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:22:27.517042 26 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0411 12:22:27.517237 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-742" for this suite. @ 04/11/25 12:22:27.519
• [5.857 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 04/11/25 12:22:27.523
  I0411 12:22:27.523021 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:22:27.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:27.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:27.536
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-337 @ 04/11/25 12:22:27.538
  STEP: changing the ExternalName service to type=ClusterIP @ 04/11/25 12:22:27.542
  STEP: creating replication controller externalname-service in namespace services-337 @ 04/11/25 12:22:27.555
  I0411 12:22:27.561967      26 runners.go:193] Created replication controller with name: externalname-service, namespace: services-337, replica count: 2
  I0411 12:22:30.613228      26 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:22:30.613260 26 resource.go:361] Creating new exec pod
  I0411 12:22:33.622717 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-337 exec execpods6vrl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0411 12:22:33.718559 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.110.63.76) 80 port [tcp/http] succeeded!\n"
  I0411 12:22:33.718620 26 builder.go:147] stdout: "externalname-service-qpvms"
  I0411 12:22:33.718721 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-337 exec execpods6vrl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.63.76 80'
  I0411 12:22:33.826697 26 builder.go:146] stderr: "+ + nc -v -techo -w 2 hostName 10.110.63.76 80\n\nConnection to 10.110.63.76 80 port [tcp/http] succeeded!\n"
  I0411 12:22:33.826743 26 builder.go:147] stdout: "externalname-service-4rbwv"
  I0411 12:22:33.826817 26 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0411 12:22:33.843032 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-337" for this suite. @ 04/11/25 12:22:33.844
• [6.326 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/11/25 12:22:33.848
  I0411 12:22:33.848706 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:22:33.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:33.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:33.861
  STEP: Creating secret with name secret-test-b2d5e064-0c25-4c10-aab0-c3257d668a1a @ 04/11/25 12:22:33.862
  STEP: Creating a pod to test consume secrets @ 04/11/25 12:22:33.865
  STEP: Saw pod success @ 04/11/25 12:22:37.885
  I0411 12:22:37.887819 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-8f01df5b-6bc1-4d85-8ec8-e028eb64250d container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 12:22:37.903
  I0411 12:22:37.913643 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2262" for this suite. @ 04/11/25 12:22:37.916
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/11/25 12:22:37.921
  I0411 12:22:37.921829 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:22:37.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:37.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:37.938
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:22:37.94
  STEP: Saw pod success @ 04/11/25 12:22:41.961
  I0411 12:22:41.964472 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-932e46a2-6daf-4e11-a87e-220008c4f351 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:22:41.971
  I0411 12:22:41.985930 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6199" for this suite. @ 04/11/25 12:22:41.989
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/11/25 12:22:41.997
  I0411 12:22:41.997537 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 12:22:41.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:42.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:42.019
  STEP: create the rc1 @ 04/11/25 12:22:42.092
  STEP: create the rc2 @ 04/11/25 12:22:42.098
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/11/25 12:22:48.11
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/11/25 12:22:48.468
  STEP: wait for the rc to be deleted @ 04/11/25 12:22:48.476
  I0411 12:22:53.492630 26 garbage_collector.go:762] 71 pods remaining
  I0411 12:22:53.492682 26 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I0411 12:22:53.492695 26 garbage_collector.go:770] 
  STEP: Gathering metrics @ 04/11/25 12:22:58.492
  I0411 12:22:58.588054 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0411 12:22:58.588093 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29ntp" in namespace "gc-5884"
  I0411 12:22:58.596741 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2qsjl" in namespace "gc-5884"
  I0411 12:22:58.607272 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4cwns" in namespace "gc-5884"
  I0411 12:22:58.615869 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tw77" in namespace "gc-5884"
  I0411 12:22:58.629640 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4v79b" in namespace "gc-5884"
  I0411 12:22:58.642609 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4x2p6" in namespace "gc-5884"
  I0411 12:22:58.654256 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xbmx" in namespace "gc-5884"
  I0411 12:22:58.664571 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-52dpq" in namespace "gc-5884"
  I0411 12:22:58.676712 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-556nn" in namespace "gc-5884"
  I0411 12:22:58.686193 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pfpz" in namespace "gc-5884"
  I0411 12:22:58.699208 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vbzp" in namespace "gc-5884"
  I0411 12:22:58.710827 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wr8g" in namespace "gc-5884"
  I0411 12:22:58.720573 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-67t5n" in namespace "gc-5884"
  I0411 12:22:58.731453 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-72nvf" in namespace "gc-5884"
  I0411 12:22:58.745673 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7497g" in namespace "gc-5884"
  I0411 12:22:58.760856 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75wfp" in namespace "gc-5884"
  I0411 12:22:58.770400 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7dbqp" in namespace "gc-5884"
  I0411 12:22:58.786539 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fvm6" in namespace "gc-5884"
  I0411 12:22:58.808587 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7j5jx" in namespace "gc-5884"
  I0411 12:22:58.831863 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7tf2s" in namespace "gc-5884"
  I0411 12:22:58.849810 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7xflc" in namespace "gc-5884"
  I0411 12:22:58.863460 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8p5b2" in namespace "gc-5884"
  I0411 12:22:58.878691 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92fnl" in namespace "gc-5884"
  I0411 12:22:58.898326 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-96l6s" in namespace "gc-5884"
  I0411 12:22:58.912311 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9h9fb" in namespace "gc-5884"
  I0411 12:22:58.931163 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9v4dl" in namespace "gc-5884"
  I0411 12:22:58.947053 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b79vg" in namespace "gc-5884"
  I0411 12:22:58.964689 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b85v5" in namespace "gc-5884"
  I0411 12:22:58.978282 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bftkv" in namespace "gc-5884"
  I0411 12:22:58.993066 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bglgn" in namespace "gc-5884"
  I0411 12:22:59.008947 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blj7z" in namespace "gc-5884"
  I0411 12:22:59.024510 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnjtb" in namespace "gc-5884"
  I0411 12:22:59.038766 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2nf2" in namespace "gc-5884"
  I0411 12:22:59.058194 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9k7g" in namespace "gc-5884"
  I0411 12:22:59.074457 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwng5" in namespace "gc-5884"
  I0411 12:22:59.090575 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8gbf" in namespace "gc-5884"
  I0411 12:22:59.104896 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d95v5" in namespace "gc-5884"
  I0411 12:22:59.127538 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddg9j" in namespace "gc-5884"
  I0411 12:22:59.141308 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhlrh" in namespace "gc-5884"
  I0411 12:22:59.159106 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkqck" in namespace "gc-5884"
  I0411 12:22:59.174984 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drvsr" in namespace "gc-5884"
  I0411 12:22:59.192773 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-frjgd" in namespace "gc-5884"
  I0411 12:22:59.218835 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fswz7" in namespace "gc-5884"
  I0411 12:22:59.236800 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwmr8" in namespace "gc-5884"
  I0411 12:22:59.253008 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g2564" in namespace "gc-5884"
  I0411 12:22:59.271664 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gcjns" in namespace "gc-5884"
  I0411 12:22:59.291472 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gt48g" in namespace "gc-5884"
  I0411 12:22:59.306154 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h6wv7" in namespace "gc-5884"
  I0411 12:22:59.320808 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h7c4q" in namespace "gc-5884"
  I0411 12:22:59.336462 26 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hcc6p" in namespace "gc-5884"
  I0411 12:22:59.363509 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5884" for this suite. @ 04/11/25 12:22:59.366
• [17.376 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 04/11/25 12:22:59.373
  I0411 12:22:59.373770 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 12:22:59.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:22:59.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:22:59.397
  STEP: Creating pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711 @ 04/11/25 12:22:59.4
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 12:23:01.422
  I0411 12:23:01.425581 26 container_probe.go:1749] Initial restart count of pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a is 0
  I0411 12:23:01.428275 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:03.434667 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:05.438157 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:07.444660 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:09.449604 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:11.455001 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:13.460450 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:15.468825 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:17.475940 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:19.481755 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:21.487528 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:23.494562 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:25.500923 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:27.507270 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:29.512921 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:31.519586 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:33.526566 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:35.533412 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:37.539841 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:39.546973 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:41.552097 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:43.558658 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:45.566839 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:47.573723 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:49.578060 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:51.581452 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:53.587525 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:55.595091 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:57.601403 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:23:59.605587 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:01.612442 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:03.618592 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:05.626363 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:07.633079 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:09.638493 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:11.642061 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:13.648280 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:15.655527 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:17.658233 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:19.663553 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:21.669914 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:23.672824 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:25.680320 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:27.686800 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:29.689946 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:31.696022 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:33.702878 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:35.706468 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:37.712897 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:39.718895 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:41.722067 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:43.728942 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:45.734874 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:47.738273 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:49.744233 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:51.751561 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:53.758338 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:55.766041 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:57.772624 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:24:59.777655 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:01.783915 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:03.790163 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:05.796541 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:07.799373 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:09.804770 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:11.809666 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:13.815496 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:15.821444 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:17.824606 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:19.831576 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:21.834373 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:23.841419 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:25.846286 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:27.849428 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:29.855938 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:31.862584 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:33.868769 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:35.874510 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:37.879708 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:39.886303 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:41.893122 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:43.897524 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:45.902805 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:47.910338 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:49.917744 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:51.924607 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:53.931081 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:55.937768 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:57.943704 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:25:59.949481 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:01.953935 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:03.959735 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:05.965615 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:07.971198 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:09.977581 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:11.983119 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:13.988409 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:15.993896 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:18.001482 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:20.008429 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:22.015467 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:24.021169 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:26.024634 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:28.032451 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:30.038378 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:32.044466 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:34.050587 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:36.057247 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:38.064092 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:40.070540 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:42.077848 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:44.083473 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:46.090896 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:48.096487 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:50.101409 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:52.107617 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:54.113093 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:56.120241 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:26:58.127745 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  I0411 12:27:00.131210 26 container_probe.go:1759] Get pod test-webserver-7edb9994-0ffa-4fb3-824b-7e06aa11638a in namespace container-probe-711
  STEP: deleting the pod @ 04/11/25 12:27:02.132
  I0411 12:27:02.146328 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-711" for this suite. @ 04/11/25 12:27:02.151
• [242.784 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/11/25 12:27:02.157
  I0411 12:27:02.157841 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 12:27:02.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:27:02.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:27:02.172
  STEP: Creating a pod to test substitution in container's args @ 04/11/25 12:27:02.174
  STEP: Saw pod success @ 04/11/25 12:27:06.197
  I0411 12:27:06.200423 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-cb6ac32d-859c-406f-a875-23665a099cfa container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 12:27:06.214
  I0411 12:27:06.225335 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6870" for this suite. @ 04/11/25 12:27:06.227
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 04/11/25 12:27:06.235
  I0411 12:27:06.235230 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 12:27:06.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:27:06.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:27:06.247
  STEP: Creating service test in namespace statefulset-9771 @ 04/11/25 12:27:06.248
  I0411 12:27:06.260397 26 wait.go:40] Found 0 stateful pods, waiting for 1
  I0411 12:27:16.265493 26 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/11/25 12:27:16.27
  I0411 12:27:16.295965 26 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 12:27:16.296051 26 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0411 12:27:26.294101 26 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 12:27:26.294171 26 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/11/25 12:27:26.299
  STEP: Delete all of the StatefulSets @ 04/11/25 12:27:26.303
  STEP: Verify that StatefulSets have been deleted @ 04/11/25 12:27:26.309
  I0411 12:27:26.311447 26 statefulset.go:138] Deleting all statefulset in ns statefulset-9771
  I0411 12:27:26.318627 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9771" for this suite. @ 04/11/25 12:27:26.323
• [20.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 04/11/25 12:27:26.335
  I0411 12:27:26.336036 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:27:26.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:27:26.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:27:26.363
  STEP: Setting up server cert @ 04/11/25 12:27:26.458
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:27:26.637
  STEP: Deploying the webhook pod @ 04/11/25 12:27:26.642
  STEP: Wait for the deployment to be ready @ 04/11/25 12:27:26.649
  I0411 12:27:26.654213 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:27:28.666
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:27:28.678
  I0411 12:27:29.678235 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/11/25 12:27:29.685
  I0411 12:27:29.721362 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1531" for this suite. @ 04/11/25 12:27:29.724
  STEP: Destroying namespace "webhook-markers-1554" for this suite. @ 04/11/25 12:27:29.73
• [3.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 04/11/25 12:27:29.735
  I0411 12:27:29.735335 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 12:27:29.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:27:29.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:27:29.749
  STEP: Creating a Serviceaccount "e2e-sa-mr88t" in namespace "svcaccounts-3146" @ 04/11/25 12:27:29.752
  STEP: Creating a ServiceaccountToken "e2e-sa-mr88t" in namespace "svcaccounts-3146" @ 04/11/25 12:27:29.755
  STEP: Creating a TokenReview for "e2e-sa-mr88t" in namespace "svcaccounts-3146" @ 04/11/25 12:27:29.761
  I0411 12:27:29.763101 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3146" for this suite. @ 04/11/25 12:27:29.827
• [0.098 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 04/11/25 12:27:29.834
  I0411 12:27:29.834158 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:27:29.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:27:29.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:27:29.853
  STEP: creating service endpoint-test2 in namespace services-7981 @ 04/11/25 12:27:29.856
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7981 to expose endpoints map[] @ 04/11/25 12:27:29.87
  I0411 12:27:29.874140 26 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0411 12:27:30.884344 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-7981 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7981 @ 04/11/25 12:27:30.884
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7981 to expose endpoints map[pod1:[80]] @ 04/11/25 12:27:32.903
  I0411 12:27:32.907997 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-7981 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/11/25 12:27:32.908
  I0411 12:27:32.908051 26 resource.go:361] Creating new exec pod
  I0411 12:27:35.920581 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7981 exec execpodphdj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0411 12:27:36.019306 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.97.69.201) 80 port [tcp/http] succeeded!\n"
  I0411 12:27:36.019362 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:27:36.019454 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7981 exec execpodphdj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.69.201 80'
  I0411 12:27:36.110011 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.69.201 80\nConnection to 10.97.69.201 80 port [tcp/http] succeeded!\n"
  I0411 12:27:36.110074 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7981 @ 04/11/25 12:27:36.11
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7981 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/11/25 12:27:38.132
  I0411 12:27:38.143111 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-7981 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/11/25 12:27:38.143
  I0411 12:27:39.144638 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7981 exec execpodphdj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0411 12:27:39.241781 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.97.69.201) 80 port [tcp/http] succeeded!\n"
  I0411 12:27:39.241832 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:27:39.241929 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7981 exec execpodphdj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.69.201 80'
  I0411 12:27:39.341203 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.69.201 80\nConnection to 10.97.69.201 80 port [tcp/http] succeeded!\n"
  I0411 12:27:39.341267 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7981 @ 04/11/25 12:27:39.341
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7981 to expose endpoints map[pod2:[80]] @ 04/11/25 12:27:39.354
  I0411 12:27:39.367921 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-7981 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/11/25 12:27:39.368
  I0411 12:27:40.369080 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7981 exec execpodphdj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0411 12:27:40.457305 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.97.69.201) 80 port [tcp/http] succeeded!\n"
  I0411 12:27:40.457362 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:27:40.457434 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7981 exec execpodphdj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.69.201 80'
  I0411 12:27:40.563711 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.69.201 80\nConnection to 10.97.69.201 80 port [tcp/http] succeeded!\n"
  I0411 12:27:40.563738 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7981 @ 04/11/25 12:27:40.563
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7981 to expose endpoints map[] @ 04/11/25 12:27:40.577
  I0411 12:27:41.595220 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-7981 exposes endpoints map[]
  I0411 12:27:41.615029 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7981" for this suite. @ 04/11/25 12:27:41.617
• [11.788 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 04/11/25 12:27:41.622
  I0411 12:27:41.622152 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename taint-single-pod @ 04/11/25 12:27:41.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:27:41.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:27:41.635
  I0411 12:27:41.638410 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:28:41.639799 26 util.go:396] Waiting for terminating namespaces to be deleted...
  I0411 12:28:41.646363 26 taints.go:144] Starting informer...
  STEP: Starting pod... @ 04/11/25 12:28:41.646
  I0411 12:28:41.863539 26 taints.go:294] Pod is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/11/25 12:28:41.863
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/11/25 12:28:41.874
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/11/25 12:28:41.878
  I0411 12:28:41.878510 26 taints.go:313] Pod wasn't evicted. Proceeding
  I0411 12:28:41.878545 26 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/11/25 12:28:41.894
  STEP: Waiting some time to make sure that toleration time passed. @ 04/11/25 12:28:41.9
  I0411 12:29:56.903218 26 taints.go:329] Pod wasn't evicted. Test successful
  I0411 12:29:56.903728 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1245" for this suite. @ 04/11/25 12:29:56.91
• [135.294 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/11/25 12:29:56.915
  I0411 12:29:56.915737 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 12:29:56.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:29:56.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:29:56.934
  STEP: Creating Pod @ 04/11/25 12:29:56.938
  STEP: Reading file content from the nginx-container @ 04/11/25 12:29:58.958
  I0411 12:29:58.958657 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9950 PodName:pod-sharedvolume-3da98b1b-08a1-430a-beb9-989c4b2da218 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:29:58.958681 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:29:58.958757 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9950/pods/pod-sharedvolume-3da98b1b-08a1-430a-beb9-989c4b2da218/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0411 12:29:59.021664 26 exec_util.go:108] Exec stderr: ""
  I0411 12:29:59.021873 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9950" for this suite. @ 04/11/25 12:29:59.025
• [2.117 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 04/11/25 12:29:59.032
  I0411 12:29:59.032501 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 12:29:59.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:29:59.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:29:59.048
  STEP: Creating resourceQuota "e2e-rq-status-w8zps" @ 04/11/25 12:29:59.14
  I0411 12:29:59.148660 26 resource_quota.go:1102] Resource quota "e2e-rq-status-w8zps" reports spec: hard cpu limit of 500m
  I0411 12:29:59.148723 26 resource_quota.go:1104] Resource quota "e2e-rq-status-w8zps" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-w8zps" /status @ 04/11/25 12:29:59.148
  STEP: Confirm /status for "e2e-rq-status-w8zps" resourceQuota via watch @ 04/11/25 12:29:59.156
  I0411 12:29:59.158575 26 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-w8zps" in namespace "resourcequota-4870" with hard status: v1.ResourceList(nil)
  I0411 12:29:59.158721 26 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-w8zps" in namespace "resourcequota-4870" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0411 12:29:59.158754 26 resource_quota.go:1141] ResourceQuota "e2e-rq-status-w8zps" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/11/25 12:29:59.161
  I0411 12:29:59.167868 26 resource_quota.go:1152] Resource quota "e2e-rq-status-w8zps" reports spec: hard cpu limit of 1
  I0411 12:29:59.167923 26 resource_quota.go:1153] Resource quota "e2e-rq-status-w8zps" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-w8zps" /status @ 04/11/25 12:29:59.167
  STEP: Confirm /status for "e2e-rq-status-w8zps" resourceQuota via watch @ 04/11/25 12:29:59.173
  I0411 12:29:59.175254 26 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-w8zps" in namespace "resourcequota-4870" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0411 12:29:59.175312 26 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-w8zps" in namespace "resourcequota-4870" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0411 12:29:59.175333 26 resource_quota.go:1185] ResourceQuota "e2e-rq-status-w8zps" /status was patched
  STEP: Get "e2e-rq-status-w8zps" /status @ 04/11/25 12:29:59.175
  I0411 12:29:59.181079 26 resource_quota.go:1196] Resourcequota "e2e-rq-status-w8zps" reports status: hard cpu of 1
  I0411 12:29:59.181155 26 resource_quota.go:1198] Resourcequota "e2e-rq-status-w8zps" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-w8zps" /status before checking Spec is unchanged @ 04/11/25 12:29:59.184
  I0411 12:29:59.188844 26 resource_quota.go:1218] Resourcequota "e2e-rq-status-w8zps" reports status: hard cpu of 2
  I0411 12:29:59.188912 26 resource_quota.go:1220] Resourcequota "e2e-rq-status-w8zps" reports status: hard memory of 2Gi
  I0411 12:29:59.190634 26 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-w8zps" in namespace "resourcequota-4870" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0411 12:29:59.193132 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330ca08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330ca50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330ca80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:04.193875 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01950), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a019b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:09.196239 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330cb88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330cbd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330cc00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:14.196624 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce1830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce1860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce1890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:19.196354 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01b30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:24.196812 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01c20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a01c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:29.196060 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce1998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce19c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce19f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:34.196408 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:39.193940 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce00a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce00d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:44.195991 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce01f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:49.196837 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c2a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:54.192962 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce03c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce03f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:30:59.197576 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce04e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:31:04.196357 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce0690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ce06c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:31:09.194278 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c3f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:31:14.197003 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c5d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:31:19.197087 26 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w8zps" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w8zps", GenerateName:"", Namespace:"resourcequota-4870", SelfLink:"", UID:"bcbb4920-df1b-43ee-90dd-4b4e9d88fdff", ResourceVersion:"12729", Generation:0, CreationTimestamp:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w8zps"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 11, 12, 29, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00330c738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0411 12:31:24.192541 26 resource_quota.go:1260] ResourceQuota "e2e-rq-status-w8zps" Spec was unchanged and /status reset
  I0411 12:31:24.192638 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4870" for this suite. @ 04/11/25 12:31:24.194
• [85.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/11/25 12:31:24.198
  I0411 12:31:24.198616 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename discovery @ 04/11/25 12:31:24.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:24.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:24.209
  STEP: Setting up server cert @ 04/11/25 12:31:24.211
  STEP: Requesting APIResourceList from "/api/v1" @ 04/11/25 12:31:24.34
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/11/25 12:31:24.341
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/11/25 12:31:24.342
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/11/25 12:31:24.342
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/11/25 12:31:24.343
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/11/25 12:31:24.344
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/11/25 12:31:24.344
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/11/25 12:31:24.345
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/11/25 12:31:24.345
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/11/25 12:31:24.346
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/11/25 12:31:24.347
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/11/25 12:31:24.347
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/11/25 12:31:24.347
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/11/25 12:31:24.348
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/11/25 12:31:24.348
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/11/25 12:31:24.349
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/11/25 12:31:24.349
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/11/25 12:31:24.349
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/11/25 12:31:24.35
  I0411 12:31:24.350502 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5036" for this suite. @ 04/11/25 12:31:24.352
• [0.156 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/11/25 12:31:24.355
  I0411 12:31:24.355143 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 12:31:24.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:24.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:24.363
  STEP: creating a Pod with a static label @ 04/11/25 12:31:24.366
  STEP: watching for Pod to be ready @ 04/11/25 12:31:24.37
  I0411 12:31:24.371813 26 pods.go:945] observed Pod pod-test in namespace pods-6826 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0411 12:31:24.374803 26 pods.go:945] observed Pod pod-test in namespace pods-6826 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC  }]
  I0411 12:31:24.383474 26 pods.go:945] observed Pod pod-test in namespace pods-6826 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC  }]
  I0411 12:31:25.275445 26 pods.go:948] Found Pod pod-test in namespace pods-6826 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:25 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:25 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:31:24 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/11/25 12:31:25.278
  STEP: getting the Pod and ensuring that it's patched @ 04/11/25 12:31:25.289
  STEP: replacing the Pod's status Ready condition to False @ 04/11/25 12:31:25.291
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/11/25 12:31:25.3
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/11/25 12:31:25.3
  STEP: watching for the Pod to be deleted @ 04/11/25 12:31:25.308
  I0411 12:31:25.310557 26 pods.go:1058] observed event type MODIFIED
  I0411 12:31:27.305623 26 pods.go:1058] observed event type MODIFIED
  I0411 12:31:27.394669 26 pods.go:1058] observed event type MODIFIED
  I0411 12:31:28.319666 26 pods.go:1058] observed event type MODIFIED
  I0411 12:31:28.327051 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6826" for this suite. @ 04/11/25 12:31:28.33
• [3.979 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/11/25 12:31:28.334
  I0411 12:31:28.334845 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/11/25 12:31:28.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:28.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:28.348
  I0411 12:31:28.351165 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 12:31:28.889017 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3942" for this suite. @ 04/11/25 12:31:28.893
• [0.565 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/11/25 12:31:28.9
  I0411 12:31:28.900110 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/11/25 12:31:28.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:28.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:28.915
  STEP: mirroring a new custom Endpoint @ 04/11/25 12:31:28.928
  I0411 12:31:28.935555 26 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 04/11/25 12:31:30.942
  STEP: mirroring deletion of a custom Endpoint @ 04/11/25 12:31:30.955
  I0411 12:31:30.967808 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5886" for this suite. @ 04/11/25 12:31:30.971
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/11/25 12:31:30.977
  I0411 12:31:30.978020 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 12:31:30.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:30.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:30.99
  I0411 12:31:30.992258 26 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0411 12:31:30.996805 26 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0411 12:31:31.002355 26 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0411 12:31:33.010521 26 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0411 12:31:33.011949 26 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0411 12:31:33.018735 26 deployment.go:314] Updating deployment test-recreate-deployment
  I0411 12:31:33.018764 26 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0411 12:31:33.065943 26 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7da7b9b5-0bae-4db9-9616-3355f59b4687",
      ResourceVersion: (string) (len=5) "12949",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 12:31:33.113135 26 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3459bca-7dfb-4ed9-8f38-7f292c552163",
      ResourceVersion: (string) (len=5) "12945",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "7da7b9b5-0bae-4db9-9616-3355f59b4687",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 61 37 62 39  62 35 2d 30 62 61 65 2d  |\"7da7b9b5-0bae-|
              00000120  34 64 62 39 2d 39 36 31  36 2d 33 33 35 35 66 35  |4db9-9616-3355f5|
              00000130  39 62 34 36 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9b4687\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:31:33.114021 26 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0411 12:31:33.114292 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "870a2f89-3487-429b-934d-a298533c044a",
      ResourceVersion: (string) (len=5) "12936",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "7da7b9b5-0bae-4db9-9616-3355f59b4687",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 61 37 62 39  62 35 2d 30 62 61 65 2d  |\"7da7b9b5-0bae-|
              00000120  34 64 62 39 2d 39 36 31  36 2d 33 33 35 35 66 35  |4db9-9616-3355f5|
              00000130  39 62 34 36 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9b4687\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:31:33.118323 26 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-j64zl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-j64zl",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-1446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e318b765-1e95-46e6-99d6-eafaf6e799fa",
      ResourceVersion: (string) (len=5) "12948",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "e3459bca-7dfb-4ed9-8f38-7f292c552163",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 33  34 35 39 62 63 61 2d 37  |d\":\"e3459bca-7|
              00000090  64 66 62 2d 34 65 64 39  2d 38 66 33 38 2d 37 66  |dfb-4ed9-8f38-7f|
              000000a0  32 39 32 63 35 35 32 31  36 33 5c 22 7d 22 3a 7b  |292c552163\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cr6rm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cr6rm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cr6rm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:31:33.119165 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1446" for this suite. @ 04/11/25 12:31:33.123
• [2.150 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/11/25 12:31:33.128
  I0411 12:31:33.128052 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename watch @ 04/11/25 12:31:33.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:33.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:33.14
  STEP: creating a watch on configmaps @ 04/11/25 12:31:33.141
  STEP: creating a new configmap @ 04/11/25 12:31:33.143
  STEP: modifying the configmap once @ 04/11/25 12:31:33.145
  STEP: closing the watch once it receives two notifications @ 04/11/25 12:31:33.149
  I0411 12:31:33.149690 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2841  96e8140e-4429-42fc-b717-ba9c9d55c6d9 12954 0 2025-04-11 12:31:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-11 12:31:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:31:33.149786 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2841  96e8140e-4429-42fc-b717-ba9c9d55c6d9 12955 0 2025-04-11 12:31:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-11 12:31:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/11/25 12:31:33.149
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/11/25 12:31:33.153
  STEP: deleting the configmap @ 04/11/25 12:31:33.154
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/11/25 12:31:33.156
  I0411 12:31:33.157028 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2841  96e8140e-4429-42fc-b717-ba9c9d55c6d9 12956 0 2025-04-11 12:31:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-11 12:31:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:31:33.157104 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2841  96e8140e-4429-42fc-b717-ba9c9d55c6d9 12957 0 2025-04-11 12:31:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-11 12:31:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:31:33.157188 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2841" for this suite. @ 04/11/25 12:31:33.224
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 04/11/25 12:31:33.23
  I0411 12:31:33.230261 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 12:31:33.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:33.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:33.242
  I0411 12:31:33.245204 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 create -f -'
  I0411 12:31:33.318462 26 builder.go:146] stderr: ""
  I0411 12:31:33.318497 26 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0411 12:31:33.318545 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 create -f -'
  I0411 12:31:33.422559 26 builder.go:146] stderr: ""
  I0411 12:31:33.422636 26 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/11/25 12:31:33.422
  I0411 12:31:34.429620 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 12:31:34.429676 26 framework.go:733] Found 1 / 1
  I0411 12:31:34.429704 26 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0411 12:31:34.432741 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 12:31:34.432777 26 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0411 12:31:34.432842 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 describe pod agnhost-primary-g8f5p'
  I0411 12:31:34.484193 26 builder.go:146] stderr: ""
  I0411 12:31:34.484284 26 builder.go:147] stdout: "Name:             agnhost-primary-g8f5p\nNamespace:        kubectl-8116\nPriority:         0\nService Account:  default\nNode:             k8sconformance-m02/192.168.49.3\nStart Time:       Fri, 11 Apr 2025 12:31:33 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.225\nIPs:\n  IP:           10.244.1.225\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://62b9477485062eab413e4baec8b9a03dd640f54be94d53127e7f18e07aa2f4cf\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 11 Apr 2025 12:31:33 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-lghkd (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-lghkd:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8116/agnhost-primary-g8f5p to k8sconformance-m02\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0411 12:31:34.484358 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 describe rc agnhost-primary'
  I0411 12:31:34.529861 26 builder.go:146] stderr: ""
  I0411 12:31:34.529931 26 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8116\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-g8f5p\n"
  I0411 12:31:34.529997 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 describe service agnhost-primary'
  I0411 12:31:34.569970 26 builder.go:146] stderr: ""
  I0411 12:31:34.570015 26 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8116\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.101.117.197\nIPs:                      10.101.117.197\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.1.225:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0411 12:31:34.571459 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 describe node k8sconformance'
  I0411 12:31:34.622546 26 builder.go:146] stderr: ""
  I0411 12:31:34.622616 26 builder.go:147] stdout: "Name:               k8sconformance\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8sconformance\n                    kubernetes.io/os=linux\n                    minikube.k8s.io/commit=65ded669affe3b2415e35d6eb8b867ce9a1cef91\n                    minikube.k8s.io/name=k8sconformance\n                    minikube.k8s.io/primary=true\n                    minikube.k8s.io/updated_at=2025_04_11T07_51_20_0700\n                    minikube.k8s.io/version=v1.35.0\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 11 Apr 2025 11:51:16 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8sconformance\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 11 Apr 2025 12:31:28 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Fri, 11 Apr 2025 12:26:31 +0000   Fri, 11 Apr 2025 11:51:16 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Fri, 11 Apr 2025 12:26:31 +0000   Fri, 11 Apr 2025 11:51:16 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Fri, 11 Apr 2025 12:26:31 +0000   Fri, 11 Apr 2025 11:51:16 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Fri, 11 Apr 2025 12:26:31 +0000   Fri, 11 Apr 2025 11:51:17 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.49.2\n  Hostname:    k8sconformance\nCapacity:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             31955748Ki\n  pods:               110\nAllocatable:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             31955748Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 576f32bd8b864af3bad82c6842b1d1b4\n  System UUID:                b1c48f41-00fb-4147-82c3-a5aafff6dd70\n  Boot ID:                    9df964e4-5595-4916-8feb-c27d38d13e01\n  Kernel Version:             6.11.0-21-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://28.0.4\n  Kubelet Version:            v1.32.2\n  Kube-Proxy Version:         v1.32.2\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-668d6bf9bc-c7wkv                                   100m (0%)     0 (0%)      70Mi (0%)        170Mi (0%)     40m\n  kube-system                 etcd-k8sconformance                                        100m (0%)     0 (0%)      100Mi (0%)       0 (0%)         40m\n  kube-system                 kindnet-sppkx                                              100m (0%)     100m (0%)   50Mi (0%)        50Mi (0%)      40m\n  kube-system                 kube-apiserver-k8sconformance                              250m (2%)     0 (0%)      0 (0%)           0 (0%)         40m\n  kube-system                 kube-controller-manager-k8sconformance                     200m (1%)     0 (0%)      0 (0%)           0 (0%)         40m\n  kube-system                 kube-proxy-2nq7z                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         40m\n  kube-system                 kube-scheduler-k8sconformance                              100m (0%)     0 (0%)      0 (0%)           0 (0%)         40m\n  kube-system                 storage-provisioner                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         40m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-rfzgx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (7%)   100m (0%)\n  memory             220Mi (0%)  220Mi (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                From             Message\n  ----    ------                   ----               ----             -------\n  Normal  Starting                 40m                kube-proxy       \n  Normal  Starting                 40m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  40m (x8 over 40m)  kubelet          Node k8sconformance status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    40m (x8 over 40m)  kubelet          Node k8sconformance status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     40m (x7 over 40m)  kubelet          Node k8sconformance status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  40m                kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 40m                kubelet          Starting kubelet.\n  Normal  NodeAllocatableEnforced  40m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  40m                kubelet          Node k8sconformance status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    40m                kubelet          Node k8sconformance status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     40m                kubelet          Node k8sconformance status is now: NodeHasSufficientPID\n  Normal  RegisteredNode           40m                node-controller  Node k8sconformance event: Registered Node k8sconformance in Controller\n"
  I0411 12:31:34.622659 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-8116 describe namespace kubectl-8116'
  I0411 12:31:34.664618 26 builder.go:146] stderr: ""
  I0411 12:31:34.664667 26 builder.go:147] stdout: "Name:         kubectl-8116\nLabels:       e2e-framework=kubectl\n              e2e-run=ede574e1-cb21-427b-9d09-441debd24dc2\n              kubernetes.io/metadata.name=kubectl-8116\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0411 12:31:34.664788 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8116" for this suite. @ 04/11/25 12:31:34.666
• [1.439 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 04/11/25 12:31:34.669
  I0411 12:31:34.669582 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:31:34.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:34.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:34.777
  STEP: Setting up server cert @ 04/11/25 12:31:34.872
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:31:34.995
  STEP: Deploying the webhook pod @ 04/11/25 12:31:35
  STEP: Wait for the deployment to be ready @ 04/11/25 12:31:35.006
  I0411 12:31:35.010205 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:31:37.016
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:31:37.026
  I0411 12:31:38.027287 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/11/25 12:31:38.03
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/11/25 12:31:38.03
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/11/25 12:31:38.031
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/11/25 12:31:38.031
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/11/25 12:31:38.031
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/11/25 12:31:38.031
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/11/25 12:31:38.032
  I0411 12:31:38.054612 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1398" for this suite. @ 04/11/25 12:31:38.056
  STEP: Destroying namespace "webhook-markers-8474" for this suite. @ 04/11/25 12:31:38.059
• [3.395 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/11/25 12:31:38.064
  I0411 12:31:38.064754 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-pred @ 04/11/25 12:31:38.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:38.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:38.074
  I0411 12:31:38.075652 26 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0411 12:31:38.161560 26 util.go:396] Waiting for terminating namespaces to be deleted...
  I0411 12:31:38.164506 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0411 12:31:38.241691 26 predicates.go:957] coredns-668d6bf9bc-c7wkv from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241734 26 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0411 12:31:38.241750 26 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241764 26 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0411 12:31:38.241777 26 predicates.go:957] kindnet-sppkx from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241788 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 12:31:38.241799 26 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241815 26 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0411 12:31:38.241827 26 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241837 26 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0411 12:31:38.241859 26 predicates.go:957] kube-proxy-2nq7z from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241871 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 12:31:38.241883 26 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241897 26 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0411 12:31:38.241907 26 predicates.go:957] storage-provisioner from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.241923 26 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0411 12:31:38.241934 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-rfzgx from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 12:31:38.241944 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 12:31:38.241953 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0411 12:31:38.241964 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0411 12:31:38.245507 26 predicates.go:957] kindnet-hjtlc from kube-system started at 2025-04-11 12:28:42 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.245550 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 12:31:38.245567 26 predicates.go:957] kube-proxy-tn29z from kube-system started at 2025-04-11 11:52:06 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.245581 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 12:31:38.245593 26 predicates.go:957] agnhost-primary-g8f5p from kubectl-8116 started at 2025-04-11 12:31:33 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.245603 26 predicates.go:959] 	Container agnhost-primary ready: true, restart count 0
  I0411 12:31:38.245628 26 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-11 11:52:59 +0000 UTC (1 container statuses recorded)
  I0411 12:31:38.245640 26 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0411 12:31:38.245653 26 predicates.go:957] sonobuoy-e2e-job-040191c692314dcd from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 12:31:38.245671 26 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0411 12:31:38.245681 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 12:31:38.245693 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-w7b8t from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 12:31:38.245708 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 12:31:38.245720 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/11/25 12:31:38.245
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/11/25 12:31:40.265
  STEP: Trying to apply a random label on the found node. @ 04/11/25 12:31:40.28
  STEP: verifying the node has the label kubernetes.io/e2e-54e9b615-16b0-4184-834e-32f3dab5f9e0 42 @ 04/11/25 12:31:40.29
  STEP: Trying to relaunch the pod, now with labels. @ 04/11/25 12:31:40.293
  STEP: removing the label kubernetes.io/e2e-54e9b615-16b0-4184-834e-32f3dab5f9e0 off the node k8sconformance-m02 @ 04/11/25 12:31:42.311
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-54e9b615-16b0-4184-834e-32f3dab5f9e0 @ 04/11/25 12:31:42.325
  I0411 12:31:42.329379 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2524" for this suite. @ 04/11/25 12:31:42.331
• [4.273 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/11/25 12:31:42.338
  I0411 12:31:42.338152 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename subpath @ 04/11/25 12:31:42.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:31:42.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:31:42.352
  STEP: Setting up data @ 04/11/25 12:31:42.354
  STEP: Creating pod pod-subpath-test-configmap-4l4r @ 04/11/25 12:31:42.359
  STEP: Creating a pod to test atomic-volume-subpath @ 04/11/25 12:31:42.359
  STEP: Saw pod success @ 04/11/25 12:32:06.443
  I0411 12:32:06.446533 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-4l4r container test-container-subpath-configmap-4l4r: <nil>
  STEP: delete the pod @ 04/11/25 12:32:06.464
  STEP: Deleting pod pod-subpath-test-configmap-4l4r @ 04/11/25 12:32:06.478
  I0411 12:32:06.478748 26 delete.go:62] Deleting pod "pod-subpath-test-configmap-4l4r" in namespace "subpath-6600"
  I0411 12:32:06.481159 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6600" for this suite. @ 04/11/25 12:32:06.484
• [24.152 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/11/25 12:32:06.49
  I0411 12:32:06.490048 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/11/25 12:32:06.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:32:06.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:32:06.507
  STEP: creating a target pod @ 04/11/25 12:32:06.51
  STEP: adding an ephemeral container @ 04/11/25 12:32:08.534
  STEP: checking pod container endpoints @ 04/11/25 12:32:10.553
  I0411 12:32:10.553381 26 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1925 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:32:10.553415 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:32:10.553513 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-1925/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0411 12:32:10.611430 26 exec_util.go:108] Exec stderr: ""
  I0411 12:32:10.618242 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1925" for this suite. @ 04/11/25 12:32:10.621
• [4.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 04/11/25 12:32:10.627
  I0411 12:32:10.627988 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:32:10.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:32:10.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:32:10.64
  STEP: Setting up server cert @ 04/11/25 12:32:10.743
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:32:10.871
  STEP: Deploying the webhook pod @ 04/11/25 12:32:10.876
  STEP: Wait for the deployment to be ready @ 04/11/25 12:32:10.883
  I0411 12:32:10.887238 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:32:12.9
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:32:12.913
  I0411 12:32:13.915172 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/11/25 12:32:13.979
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/11/25 12:32:14.009
  STEP: Deleting the collection of validation webhooks @ 04/11/25 12:32:14.035
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/11/25 12:32:14.069
  I0411 12:32:14.103384 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9104" for this suite. @ 04/11/25 12:32:14.106
  STEP: Destroying namespace "webhook-markers-672" for this suite. @ 04/11/25 12:32:14.113
• [3.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 04/11/25 12:32:14.118
  I0411 12:32:14.118328 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename security-context-test @ 04/11/25 12:32:14.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:32:14.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:32:14.129
  I0411 12:32:16.143404 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5037" for this suite. @ 04/11/25 12:32:16.147
• [2.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/11/25 12:32:16.153
  I0411 12:32:16.153745 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/11/25 12:32:16.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:32:16.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:32:16.171
  STEP: creating a policy with variables @ 04/11/25 12:32:16.182
  STEP: waiting until the marker is denied @ 04/11/25 12:32:16.197
  STEP: testing a replicated Deployment to be allowed @ 04/11/25 12:32:16.405
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/11/25 12:32:16.417
  I0411 12:32:16.463856 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-577" for this suite. @ 04/11/25 12:32:16.466
• [0.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 04/11/25 12:32:16.47
  I0411 12:32:16.470699 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption @ 04/11/25 12:32:16.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:32:16.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:32:16.481
  I0411 12:32:16.489345 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:33:16.497482 26 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/11/25 12:33:16.501
  I0411 12:33:16.501245 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/11/25 12:33:16.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:16.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:16.515
  I0411 12:33:16.530304 26 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0411 12:33:16.533291 26 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 04/11/25 12:33:16.573
  STEP: Removing a custom resource @ 04/11/25 12:33:16.58
  I0411 12:33:16.585571 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9032" for this suite. @ 04/11/25 12:33:16.598
  I0411 12:33:16.604408 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9712" for this suite. @ 04/11/25 12:33:16.701
• [60.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/11/25 12:33:16.707
  I0411 12:33:16.707773 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 12:33:16.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:16.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:16.724
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/11/25 12:33:16.727
  STEP: Saw pod success @ 04/11/25 12:33:18.745
  I0411 12:33:18.748285 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-de8e10e3-151b-4592-bb51-e65bd7975c90 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 12:33:18.755
  I0411 12:33:18.766125 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5660" for this suite. @ 04/11/25 12:33:18.769
• [2.066 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/11/25 12:33:18.773
  I0411 12:33:18.773805 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:33:18.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:18.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:18.787
  STEP: Creating the pod @ 04/11/25 12:33:18.788
  I0411 12:33:21.336440 26 pod_client.go:173] Successfully updated pod "labelsupdatee73b2825-3a00-406c-8017-31a5392d3979"
  I0411 12:33:23.352010 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6546" for this suite. @ 04/11/25 12:33:23.354
• [4.585 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 04/11/25 12:33:23.359
  I0411 12:33:23.359040 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 12:33:23.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:23.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:23.371
  STEP: Creating a test headless service @ 04/11/25 12:33:23.372
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1595.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1595.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 04/11/25 12:33:23.375
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1595.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1595.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/11/25 12:33:23.375
  STEP: creating a pod to probe DNS @ 04/11/25 12:33:23.375
  STEP: submitting the pod to kubernetes @ 04/11/25 12:33:23.375
  STEP: retrieving the pod @ 04/11/25 12:33:25.393
  STEP: looking for the results for each expected name from probers @ 04/11/25 12:33:25.396
  I0411 12:33:25.410457 26 dns_common.go:546] DNS probes using dns-1595/dns-test-baeb945b-11d1-4fa6-8b78-ab0050480b6f succeeded

  STEP: deleting the pod @ 04/11/25 12:33:25.41
  STEP: deleting the test headless service @ 04/11/25 12:33:25.421
  I0411 12:33:25.429835 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1595" for this suite. @ 04/11/25 12:33:25.433
• [2.077 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/11/25 12:33:25.436
  I0411 12:33:25.436329 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pod-network-test @ 04/11/25 12:33:25.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:25.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:25.448
  STEP: Performing setup for networking test in namespace pod-network-test-2263 @ 04/11/25 12:33:25.449
  STEP: creating a selector @ 04/11/25 12:33:25.449
  STEP: Creating the service pods in kubernetes @ 04/11/25 12:33:25.449
  I0411 12:33:25.449799 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/11/25 12:33:39.602
  I0411 12:33:41.633702 26 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0411 12:33:41.633752 26 utils.go:496] Going to poll 10.244.0.122 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0411 12:33:41.636108 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.122:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:33:41.636143 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:33:41.636235 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.122%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0411 12:33:41.716932 26 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0411 12:33:41.716986 26 utils.go:496] Going to poll 10.244.1.236 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0411 12:33:41.720394 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.236:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:33:41.720436 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:33:41.720512 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.236%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0411 12:33:41.785393 26 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0411 12:33:41.785569 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2263" for this suite. @ 04/11/25 12:33:41.788
• [16.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 04/11/25 12:33:41.795
  I0411 12:33:41.795838 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 12:33:41.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:41.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:41.815
  STEP: Counting existing ResourceQuota @ 04/11/25 12:33:41.818
  STEP: Creating a ResourceQuota @ 04/11/25 12:33:46.822
  STEP: Ensuring resource quota status is calculated @ 04/11/25 12:33:46.827
  STEP: Creating a Service @ 04/11/25 12:33:48.83
  STEP: Creating a NodePort Service @ 04/11/25 12:33:48.843
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/11/25 12:33:48.857
  STEP: Ensuring resource quota status captures service creation @ 04/11/25 12:33:48.873
  STEP: Deleting Services @ 04/11/25 12:33:50.88
  STEP: Ensuring resource quota status released usage @ 04/11/25 12:33:50.918
  I0411 12:33:52.922546 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5810" for this suite. @ 04/11/25 12:33:52.925
• [11.137 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 04/11/25 12:33:52.932
  I0411 12:33:52.932856 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:33:52.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:52.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:52.945
  STEP: Setting up server cert @ 04/11/25 12:33:53.042
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:33:53.228
  STEP: Deploying the webhook pod @ 04/11/25 12:33:53.233
  STEP: Wait for the deployment to be ready @ 04/11/25 12:33:53.241
  I0411 12:33:53.243991 26 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/11/25 12:33:55.253
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:33:55.266
  I0411 12:33:56.267497 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0411 12:33:56.276128 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/11/25 12:33:56.788
  STEP: Creating a custom resource that should be denied by the webhook @ 04/11/25 12:33:56.807
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/11/25 12:33:58.834
  STEP: Updating the custom resource with disallowed data should be denied @ 04/11/25 12:33:58.84
  STEP: Deleting the custom resource should be denied @ 04/11/25 12:33:58.847
  STEP: Remove the offending key and value from the custom resource data @ 04/11/25 12:33:58.852
  STEP: Deleting the updated custom resource should be successful @ 04/11/25 12:33:58.863
  I0411 12:33:59.438397 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6108" for this suite. @ 04/11/25 12:33:59.443
  STEP: Destroying namespace "webhook-markers-2907" for this suite. @ 04/11/25 12:33:59.451
• [6.524 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/11/25 12:33:59.457
  I0411 12:33:59.457375 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:33:59.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:33:59.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:33:59.476
  STEP: creating secret secrets-3780/secret-test-ead291ba-e6fc-47d3-a6c3-de7b864040a3 @ 04/11/25 12:33:59.479
  STEP: Creating a pod to test consume secrets @ 04/11/25 12:33:59.484
  STEP: Saw pod success @ 04/11/25 12:34:03.51
  I0411 12:34:03.513265 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-d7b9c2ed-7dde-4b81-ad56-3e27837d8a21 container env-test: <nil>
  STEP: delete the pod @ 04/11/25 12:34:03.523
  I0411 12:34:03.542612 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3780" for this suite. @ 04/11/25 12:34:03.546
• [4.095 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/11/25 12:34:03.552
  I0411 12:34:03.552142 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-runtime @ 04/11/25 12:34:03.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:03.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:03.568
  STEP: create the container @ 04/11/25 12:34:03.57
  W0411 12:34:03.577892      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/11/25 12:34:03.577
  STEP: get the container status @ 04/11/25 12:34:06.592
  STEP: the container should be terminated @ 04/11/25 12:34:06.595
  STEP: the termination message should be set @ 04/11/25 12:34:06.595
  I0411 12:34:06.595748 26 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/11/25 12:34:06.595
  I0411 12:34:06.610460 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2966" for this suite. @ 04/11/25 12:34:06.614
• [3.067 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/11/25 12:34:06.619
  I0411 12:34:06.619118 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename runtimeclass @ 04/11/25 12:34:06.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:06.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:06.633
  STEP: getting /apis @ 04/11/25 12:34:06.635
  STEP: getting /apis/node.k8s.io @ 04/11/25 12:34:06.638
  STEP: getting /apis/node.k8s.io/v1 @ 04/11/25 12:34:06.639
  STEP: creating @ 04/11/25 12:34:06.641
  STEP: watching @ 04/11/25 12:34:06.653
  I0411 12:34:06.653504 26 runtimeclass.go:275] starting watch
  STEP: getting @ 04/11/25 12:34:06.659
  STEP: listing @ 04/11/25 12:34:06.661
  STEP: patching @ 04/11/25 12:34:06.664
  STEP: updating @ 04/11/25 12:34:06.668
  I0411 12:34:06.672462 26 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 04/11/25 12:34:06.672
  STEP: deleting a collection @ 04/11/25 12:34:06.681
  I0411 12:34:06.691121 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2500" for this suite. @ 04/11/25 12:34:06.716
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 04/11/25 12:34:06.722
  I0411 12:34:06.722560 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:34:06.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:06.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:06.741
  STEP: Setting up server cert @ 04/11/25 12:34:06.834
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:34:06.954
  STEP: Deploying the webhook pod @ 04/11/25 12:34:06.958
  STEP: Wait for the deployment to be ready @ 04/11/25 12:34:06.965
  I0411 12:34:06.969708 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:34:08.982
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:34:08.993
  I0411 12:34:09.994372 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/11/25 12:34:10.003
  STEP: verifying the validating webhook match conditions @ 04/11/25 12:34:10.013
  STEP: updating the validating webhook match conditions @ 04/11/25 12:34:10.017
  STEP: verifying the validating webhook match conditions @ 04/11/25 12:34:10.024
  I0411 12:34:10.062448 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8602" for this suite. @ 04/11/25 12:34:10.065
  STEP: Destroying namespace "webhook-markers-3816" for this suite. @ 04/11/25 12:34:10.071
• [3.353 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/11/25 12:34:10.075
  I0411 12:34:10.075749 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:34:10.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:10.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:10.087
  STEP: Creating configMap with name projected-configmap-test-volume-24aaf1cb-79e5-4637-b342-4cc3e3fe5306 @ 04/11/25 12:34:10.089
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:34:10.092
  STEP: Saw pod success @ 04/11/25 12:34:14.112
  I0411 12:34:14.116054 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-dc1bd244-0fac-497e-826d-c2b20d8807f6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 12:34:14.123
  I0411 12:34:14.134424 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9802" for this suite. @ 04/11/25 12:34:14.136
• [4.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/11/25 12:34:14.139
  I0411 12:34:14.139419 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:34:14.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:14.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:14.15
  STEP: Creating projection with secret that has name projected-secret-test-map-0d402944-99a4-4f28-a336-15a4101e5975 @ 04/11/25 12:34:14.152
  STEP: Creating a pod to test consume secrets @ 04/11/25 12:34:14.155
  STEP: Saw pod success @ 04/11/25 12:34:18.176
  I0411 12:34:18.179836 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-6ce99ab2-86c7-42d9-85a8-aa76469b62b8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 12:34:18.187
  I0411 12:34:18.206790 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4746" for this suite. @ 04/11/25 12:34:18.213
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/11/25 12:34:18.219
  I0411 12:34:18.219275 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replication-controller @ 04/11/25 12:34:18.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:18.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:18.234
  STEP: Creating ReplicationController "e2e-rc-2mv2q" @ 04/11/25 12:34:18.236
  I0411 12:34:18.239978 26 rc.go:792] Get Replication Controller "e2e-rc-2mv2q" to confirm replicas
  I0411 12:34:19.240296 26 rc.go:792] Get Replication Controller "e2e-rc-2mv2q" to confirm replicas
  I0411 12:34:19.241948 26 rc.go:801] Found 1 replicas for "e2e-rc-2mv2q" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-2mv2q" @ 04/11/25 12:34:19.242
  STEP: Updating a scale subresource @ 04/11/25 12:34:19.244
  STEP: Verifying replicas where modified for replication controller "e2e-rc-2mv2q" @ 04/11/25 12:34:19.249
  I0411 12:34:19.249221 26 rc.go:792] Get Replication Controller "e2e-rc-2mv2q" to confirm replicas
  I0411 12:34:20.249286 26 rc.go:792] Get Replication Controller "e2e-rc-2mv2q" to confirm replicas
  I0411 12:34:20.253476 26 rc.go:801] Found 2 replicas for "e2e-rc-2mv2q" replication controller
  I0411 12:34:20.253684 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9889" for this suite. @ 04/11/25 12:34:20.257
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/11/25 12:34:20.264
  I0411 12:34:20.264615 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replicaset @ 04/11/25 12:34:20.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:20.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:20.278
  STEP: Create a ReplicaSet @ 04/11/25 12:34:20.281
  STEP: Verify that the required pods have come up @ 04/11/25 12:34:20.285
  I0411 12:34:20.287659 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0411 12:34:25.293581 26 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/11/25 12:34:25.293
  I0411 12:34:25.297516 26 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/11/25 12:34:25.297
  STEP: DeleteCollection of the ReplicaSets @ 04/11/25 12:34:25.306
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/11/25 12:34:25.317
  I0411 12:34:25.322491 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9400" for this suite. @ 04/11/25 12:34:25.326
• [5.070 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 04/11/25 12:34:25.334
  I0411 12:34:25.334455 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/11/25 12:34:25.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:25.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:25.354
  STEP: getting /apis @ 04/11/25 12:34:25.36
  STEP: getting /apis/admissionregistration.k8s.io @ 04/11/25 12:34:25.362
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/11/25 12:34:25.363
  STEP: creating @ 04/11/25 12:34:25.364
  STEP: getting @ 04/11/25 12:34:25.378
  STEP: listing @ 04/11/25 12:34:25.381
  STEP: watching @ 04/11/25 12:34:25.383
  I0411 12:34:25.383205 26 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 04/11/25 12:34:25.383
  STEP: updating @ 04/11/25 12:34:25.389
  I0411 12:34:25.395340 26 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0411 12:34:25.395381 26 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0411 12:34:25.395521 26 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/11/25 12:34:25.395
  STEP: patching /status @ 04/11/25 12:34:25.397
  STEP: updating /status @ 04/11/25 12:34:25.403
  STEP: deleting @ 04/11/25 12:34:25.429
  STEP: deleting a collection @ 04/11/25 12:34:25.436
  I0411 12:34:25.544597 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8716" for this suite. @ 04/11/25 12:34:25.546
• [0.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/11/25 12:34:25.55
  I0411 12:34:25.550280 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/11/25 12:34:25.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:25.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:25.629
  STEP: Cleaning up the secret @ 04/11/25 12:34:27.653
  STEP: Cleaning up the configmap @ 04/11/25 12:34:27.66
  STEP: Cleaning up the pod @ 04/11/25 12:34:27.665
  I0411 12:34:27.678487 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9658" for this suite. @ 04/11/25 12:34:27.682
• [2.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/11/25 12:34:27.688
  I0411 12:34:27.688200 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename subpath @ 04/11/25 12:34:27.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:27.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:27.701
  STEP: Setting up data @ 04/11/25 12:34:27.703
  STEP: Creating pod pod-subpath-test-downwardapi-hzp7 @ 04/11/25 12:34:27.709
  STEP: Creating a pod to test atomic-volume-subpath @ 04/11/25 12:34:27.709
  STEP: Saw pod success @ 04/11/25 12:34:49.785
  I0411 12:34:49.789082 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-downwardapi-hzp7 container test-container-subpath-downwardapi-hzp7: <nil>
  STEP: delete the pod @ 04/11/25 12:34:49.799
  STEP: Deleting pod pod-subpath-test-downwardapi-hzp7 @ 04/11/25 12:34:49.813
  I0411 12:34:49.813377 26 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-hzp7" in namespace "subpath-4221"
  I0411 12:34:49.815844 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4221" for this suite. @ 04/11/25 12:34:49.818
• [22.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 04/11/25 12:34:49.824
  I0411 12:34:49.824867 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:34:49.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:34:49.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:34:49.842
  STEP: Setting up server cert @ 04/11/25 12:34:49.943
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:34:50.124
  STEP: Deploying the webhook pod @ 04/11/25 12:34:50.13
  STEP: Wait for the deployment to be ready @ 04/11/25 12:34:50.136
  I0411 12:34:50.141206 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:34:52.154
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:34:52.168
  I0411 12:34:53.168588 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/11/25 12:34:53.176
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/11/25 12:34:53.176
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/11/25 12:34:53.194
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/11/25 12:34:54.206
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/11/25 12:34:54.206
  STEP: Having no error when timeout is longer than webhook latency @ 04/11/25 12:34:55.238
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/11/25 12:34:55.239
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/11/25 12:35:00.27
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/11/25 12:35:00.27
  I0411 12:35:05.340799 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9994" for this suite. @ 04/11/25 12:35:05.342
  STEP: Destroying namespace "webhook-markers-662" for this suite. @ 04/11/25 12:35:05.345
• [15.526 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 04/11/25 12:35:05.351
  I0411 12:35:05.351208 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:35:05.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:05.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:05.365
  STEP: Setting up server cert @ 04/11/25 12:35:05.463
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:35:05.617
  STEP: Deploying the webhook pod @ 04/11/25 12:35:05.621
  STEP: Wait for the deployment to be ready @ 04/11/25 12:35:05.628
  I0411 12:35:05.632421 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:35:07.644
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:35:07.658
  I0411 12:35:08.659865 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/11/25 12:35:08.669
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/11/25 12:35:08.687
  STEP: Creating a dummy validating-webhook-configuration object @ 04/11/25 12:35:08.702
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/11/25 12:35:08.71
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/11/25 12:35:08.715
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/11/25 12:35:08.724
  I0411 12:35:08.766187 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3109" for this suite. @ 04/11/25 12:35:08.769
  STEP: Destroying namespace "webhook-markers-9877" for this suite. @ 04/11/25 12:35:08.773
• [3.426 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/11/25 12:35:08.776
  I0411 12:35:08.776924 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 12:35:08.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:08.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:08.785
  STEP: Creating configMap with name configmap-test-volume-304a26fd-af47-4387-99bb-3a337eeda621 @ 04/11/25 12:35:08.786
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:35:08.788
  STEP: Saw pod success @ 04/11/25 12:35:12.805
  I0411 12:35:12.807981 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-83abc434-09bd-47b2-825d-19388d2b00ce container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 12:35:12.815
  I0411 12:35:12.828154 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9198" for this suite. @ 04/11/25 12:35:12.83
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/11/25 12:35:12.835
  I0411 12:35:12.835244 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 12:35:12.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:12.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:12.844
  STEP: creating a Deployment @ 04/11/25 12:35:12.847
  I0411 12:35:12.847677 26 deployment.go:507] Creating simple deployment test-deployment-b69nm
  I0411 12:35:12.855042 26 deployment.go:223] deployment "test-deployment-b69nm" doesn't have the required revision set
  STEP: Getting /status @ 04/11/25 12:35:14.87
  I0411 12:35:14.873112 26 deployment.go:532] Deployment test-deployment-b69nm has Conditions: [{Available True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b69nm-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/11/25 12:35:14.873
  I0411 12:35:14.882824 26 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 35, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 35, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 35, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 35, 12, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-b69nm-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/11/25 12:35:14.882
  I0411 12:35:14.884496 26 deployment.go:579] Observed &Deployment event: ADDED
  I0411 12:35:14.884531 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b69nm-6fb4c74686"}
  I0411 12:35:14.884617 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0411 12:35:14.884639 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b69nm-6fb4c74686"}
  I0411 12:35:14.884653 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0411 12:35:14.884738 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0411 12:35:14.884760 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0411 12:35:14.884774 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b69nm-6fb4c74686" is progressing.}
  I0411 12:35:14.884859 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0411 12:35:14.884879 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0411 12:35:14.884893 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b69nm-6fb4c74686" has successfully progressed.}
  I0411 12:35:14.884967 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0411 12:35:14.884986 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0411 12:35:14.884999 26 deployment.go:575] Observed Deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b69nm-6fb4c74686" has successfully progressed.}
  I0411 12:35:14.885013 26 deployment.go:572] Found Deployment test-deployment-b69nm in namespace deployment-4744 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 12:35:14.885024 26 deployment.go:583] Deployment test-deployment-b69nm has an updated status
  STEP: patching the Statefulset Status @ 04/11/25 12:35:14.885
  I0411 12:35:14.885058 26 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0411 12:35:14.888993 26 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/11/25 12:35:14.889
  I0411 12:35:14.890205 26 deployment.go:616] Observed &Deployment event: ADDED
  I0411 12:35:14.890240 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b69nm-6fb4c74686"}
  I0411 12:35:14.890327 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0411 12:35:14.890351 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b69nm-6fb4c74686"}
  I0411 12:35:14.890366 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0411 12:35:14.890451 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0411 12:35:14.890482 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0411 12:35:14.890496 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:12 +0000 UTC 2025-04-11 12:35:12 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b69nm-6fb4c74686" is progressing.}
  I0411 12:35:14.890593 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0411 12:35:14.890616 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0411 12:35:14.890630 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b69nm-6fb4c74686" has successfully progressed.}
  I0411 12:35:14.890713 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0411 12:35:14.890733 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0411 12:35:14.890747 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-11 12:35:13 +0000 UTC 2025-04-11 12:35:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b69nm-6fb4c74686" has successfully progressed.}
  I0411 12:35:14.890758 26 deployment.go:612] Observed deployment test-deployment-b69nm in namespace deployment-4744 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 12:35:14.890844 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0411 12:35:14.890866 26 deployment.go:609] Found deployment test-deployment-b69nm in namespace deployment-4744 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0411 12:35:14.890878 26 deployment.go:620] Deployment test-deployment-b69nm has a patched status
  I0411 12:35:14.894946 26 deployment.go:633] Deployment "test-deployment-b69nm":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-b69nm",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4744",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78100ae3-82cc-4a04-bf15-3976fb4797f5",
      ResourceVersion: (string) (len=5) "14466",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-b69nm-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 12:35:14.968919 26 deployment.go:40] New ReplicaSet "test-deployment-b69nm-6fb4c74686" of Deployment "test-deployment-b69nm":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-b69nm-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4744",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0afde4b8-2100-441a-82e0-2a23e0e06e5c",
      ResourceVersion: (string) (len=5) "14455",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-b69nm",
          UID: (types.UID) (len=36) "78100ae3-82cc-4a04-bf15-3976fb4797f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 38 31  |k:{\"uid\":\"781|
              00000120  30 30 61 65 33 2d 38 32  63 63 2d 34 61 30 34 2d  |00ae3-82cc-4a04-|
              00000130  62 66 31 35 2d 33 39 37  36 66 62 34 37 39 37 66  |bf15-3976fb4797f|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:35:14.975977 26 deployment.go:68] Pod "test-deployment-b69nm-6fb4c74686-mgclv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-b69nm-6fb4c74686-mgclv",
      GenerateName: (string) (len=33) "test-deployment-b69nm-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-4744",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b55328b-a3c5-4a30-aee3-5dcac6b00c9a",
      ResourceVersion: (string) (len=5) "14454",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-b69nm-6fb4c74686",
          UID: (types.UID) (len=36) "0afde4b8-2100-441a-82e0-2a23e0e06e5c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 61 66 64 65 34 62  38 2d 32 31 30 30 2d 34  |"0afde4b8-2100-4|
              000000a0  34 31 61 2d 38 32 65 30  2d 32 61 32 33 65 30 65  |41a-82e0-2a23e0e|
              000000b0  30 36 65 35 63 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |06e5c\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  35 32 5c 22 7d 22 3a 7b  |.244.1.252\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-spzfp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-spzfp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879971712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879971712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879971713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6ae293c434d79fcefb0f5ef149cd6d7483424527d9f662e2eab30a7c2e57bce9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-spzfp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:35:14.978878 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4744" for this suite. @ 04/11/25 12:35:14.984
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/11/25 12:35:14.992
  I0411 12:35:14.992826 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pod-network-test @ 04/11/25 12:35:14.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:15.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:15.008
  STEP: Performing setup for networking test in namespace pod-network-test-2769 @ 04/11/25 12:35:15.011
  STEP: creating a selector @ 04/11/25 12:35:15.011
  STEP: Creating the service pods in kubernetes @ 04/11/25 12:35:15.011
  I0411 12:35:15.011969 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/11/25 12:35:27.151
  I0411 12:35:29.167006 26 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0411 12:35:29.167058 26 networking.go:42] Breadth first check of 10.244.0.125 on host 192.168.49.2...
  I0411 12:35:29.169551 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.254:9080/dial?request=hostname&protocol=udp&host=10.244.0.125&port=8081&tries=1'] Namespace:pod-network-test-2769 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:35:29.169586 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:35:29.169651 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2769/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.254%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.125%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0411 12:35:29.255421 26 utils.go:356] Waiting for responses: map[]
  I0411 12:35:29.255475 26 utils.go:360] reached 10.244.0.125 after 0/1 tries
  I0411 12:35:29.255496 26 networking.go:42] Breadth first check of 10.244.1.253 on host 192.168.49.3...
  I0411 12:35:29.258643 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.254:9080/dial?request=hostname&protocol=udp&host=10.244.1.253&port=8081&tries=1'] Namespace:pod-network-test-2769 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 12:35:29.258682 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 12:35:29.258768 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2769/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.254%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.253%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0411 12:35:29.329056 26 utils.go:356] Waiting for responses: map[]
  I0411 12:35:29.329134 26 utils.go:360] reached 10.244.1.253 after 0/1 tries
  I0411 12:35:29.329170 26 networking.go:53] Going to retry 0 out of 2 pods....
  I0411 12:35:29.329303 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2769" for this suite. @ 04/11/25 12:35:29.332
• [14.345 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/11/25 12:35:29.337
  I0411 12:35:29.337826 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename chunking @ 04/11/25 12:35:29.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:29.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:29.353
  STEP: creating a large number of resources @ 04/11/25 12:35:29.355
  STEP: retrieving those results in paged fashion several times @ 04/11/25 12:35:47.046
  I0411 12:35:47.095619 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0411 12:35:47.144060 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0411 12:35:47.196480 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0411 12:35:47.246238 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0411 12:35:47.295072 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0411 12:35:47.344002 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0411 12:35:47.395421 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0411 12:35:47.445917 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0411 12:35:47.495867 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0411 12:35:47.546205 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0411 12:35:47.596116 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0411 12:35:47.645751 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0411 12:35:47.695968 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0411 12:35:47.745972 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0411 12:35:47.793890 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0411 12:35:47.845262 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0411 12:35:47.896239 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0411 12:35:47.945862 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0411 12:35:47.996027 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0411 12:35:48.045756 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0411 12:35:48.091719 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0411 12:35:48.141412 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0411 12:35:48.195361 26 chunking.go:98] Retrieved 17/17 results with rv 14981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0411 12:35:48.245331 26 chunking.go:98] Retrieved 9/17 results with rv 14981 and continue 
  I0411 12:35:48.292257 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0411 12:35:48.341753 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0411 12:35:48.395063 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0411 12:35:48.445872 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0411 12:35:48.495001 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0411 12:35:48.545400 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0411 12:35:48.595944 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0411 12:35:48.645849 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0411 12:35:48.694900 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0411 12:35:48.745445 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0411 12:35:48.795951 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0411 12:35:48.845347 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0411 12:35:48.892199 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0411 12:35:48.946223 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0411 12:35:48.994217 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0411 12:35:49.045436 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0411 12:35:49.095633 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0411 12:35:49.144992 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0411 12:35:49.194934 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0411 12:35:49.243618 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0411 12:35:49.294652 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0411 12:35:49.345356 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0411 12:35:49.395885 26 chunking.go:98] Retrieved 17/17 results with rv 14982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0411 12:35:49.445193 26 chunking.go:98] Retrieved 9/17 results with rv 14982 and continue 
  I0411 12:35:49.494607 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0411 12:35:49.545495 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0411 12:35:49.596670 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0411 12:35:49.645296 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0411 12:35:49.695734 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0411 12:35:49.747360 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0411 12:35:49.795292 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0411 12:35:49.841778 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0411 12:35:49.895050 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0411 12:35:49.945825 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0411 12:35:49.995425 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0411 12:35:50.044593 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0411 12:35:50.094722 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0411 12:35:50.145591 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0411 12:35:50.193787 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0411 12:35:50.245965 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0411 12:35:50.291959 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0411 12:35:50.346270 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0411 12:35:50.396466 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0411 12:35:50.445877 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0411 12:35:50.494200 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0411 12:35:50.546132 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0411 12:35:50.595410 26 chunking.go:98] Retrieved 17/17 results with rv 14984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTQ5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0411 12:35:50.645699 26 chunking.go:98] Retrieved 9/17 results with rv 14984 and continue 
  STEP: retrieving those results all at once @ 04/11/25 12:35:50.645
  I0411 12:35:50.700820 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9317" for this suite. @ 04/11/25 12:35:50.745
• [21.460 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 04/11/25 12:35:50.798
  I0411 12:35:50.798417 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 12:35:50.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:50.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:50.818
  STEP: apply creating a deployment @ 04/11/25 12:35:50.821
  I0411 12:35:50.830970 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2945" for this suite. @ 04/11/25 12:35:50.846
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/11/25 12:35:50.852
  I0411 12:35:50.852462 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:35:50.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:50.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:50.92
  STEP: Creating projection with secret that has name secret-emptykey-test-a8c14a71-a37d-4aa2-8a92-60ca146c2462 @ 04/11/25 12:35:50.924
  I0411 12:35:50.926313 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4495" for this suite. @ 04/11/25 12:35:50.947
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/11/25 12:35:50.954
  I0411 12:35:50.954891 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename csi-storageclass @ 04/11/25 12:35:50.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:51.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:51.021
  STEP: Creating a StorageClass @ 04/11/25 12:35:51.024
  STEP: Get StorageClass "e2e-jkcqj" @ 04/11/25 12:35:51.029
  STEP: Patching the StorageClass "e2e-jkcqj" @ 04/11/25 12:35:51.032
  STEP: Delete StorageClass "e2e-jkcqj" @ 04/11/25 12:35:51.038
  STEP: Confirm deletion of StorageClass "e2e-jkcqj" @ 04/11/25 12:35:51.042
  STEP: Create a replacement StorageClass @ 04/11/25 12:35:51.043
  STEP: Updating StorageClass "e2e-v2-2nvrt" @ 04/11/25 12:35:51.047
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-2nvrt=updated" @ 04/11/25 12:35:51.052
  STEP: Deleting StorageClass "e2e-v2-2nvrt" via DeleteCollection @ 04/11/25 12:35:51.055
  STEP: Confirm deletion of StorageClass "e2e-v2-2nvrt" @ 04/11/25 12:35:51.06
  I0411 12:35:51.062955 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8325" for this suite. @ 04/11/25 12:35:51.065
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 04/11/25 12:35:51.07
  I0411 12:35:51.070753 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:35:51.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:51.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:51.122
  STEP: Setting up server cert @ 04/11/25 12:35:51.211
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:35:51.475
  STEP: Deploying the webhook pod @ 04/11/25 12:35:51.48
  STEP: Wait for the deployment to be ready @ 04/11/25 12:35:51.488
  I0411 12:35:51.490766 26 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/11/25 12:35:53.504
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:35:53.517
  I0411 12:35:54.517919 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/11/25 12:35:54.531
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/11/25 12:35:54.553
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/11/25 12:35:54.559
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/11/25 12:35:54.566
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/11/25 12:35:54.572
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/11/25 12:35:54.577
  I0411 12:35:54.607508 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1002" for this suite. @ 04/11/25 12:35:54.61
  STEP: Destroying namespace "webhook-markers-1499" for this suite. @ 04/11/25 12:35:54.613
• [3.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 04/11/25 12:35:54.617
  I0411 12:35:54.617160 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename security-context @ 04/11/25 12:35:54.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:54.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:54.629
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/11/25 12:35:54.631
  STEP: Saw pod success @ 04/11/25 12:35:58.65
  I0411 12:35:58.653638 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod security-context-0964d8ae-ad55-4374-98a2-a064e21edfba container test-container: <nil>
  STEP: delete the pod @ 04/11/25 12:35:58.66
  I0411 12:35:58.676291 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4344" for this suite. @ 04/11/25 12:35:58.679
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/11/25 12:35:58.686
  I0411 12:35:58.686946 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 12:35:58.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:35:58.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:35:58.704
  STEP: Creating configMap configmap-5583/configmap-test-03d47bfd-eb46-49c2-9b00-ae0639985946 @ 04/11/25 12:35:58.707
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:35:58.713
  STEP: Saw pod success @ 04/11/25 12:36:02.736
  I0411 12:36:02.740077 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-3a33de32-175c-471b-8a76-549e7d83f668 container env-test: <nil>
  STEP: delete the pod @ 04/11/25 12:36:02.749
  I0411 12:36:02.763585 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5583" for this suite. @ 04/11/25 12:36:02.766
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/11/25 12:36:02.772
  I0411 12:36:02.772411 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 12:36:02.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:36:02.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:36:02.787
  STEP: creating a Deployment @ 04/11/25 12:36:02.791
  STEP: waiting for Deployment to be created @ 04/11/25 12:36:02.795
  STEP: waiting for all Replicas to be Ready @ 04/11/25 12:36:02.796
  I0411 12:36:02.797684 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.797717 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.805614 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.805660 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.814933 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.815034 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.840456 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:02.840489 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0411 12:36:03.505974 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0411 12:36:03.506022 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0411 12:36:04.491555 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/11/25 12:36:04.491
  I0411 12:36:04.498957 26 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/11/25 12:36:04.499
  I0411 12:36:04.500345 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500367 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500383 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500390 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500399 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500404 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500474 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500506 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 0
  I0411 12:36:04.500558 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:04.500575 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:04.500583 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.500592 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.500829 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.500852 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.508233 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.508279 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.525912 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.526001 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:04.545101 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:04.545138 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:04.551166 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:04.551221 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:05.500151 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:05.500249 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:05.515576 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  STEP: listing Deployments @ 04/11/25 12:36:05.515
  I0411 12:36:05.519227 26 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/11/25 12:36:05.519
  I0411 12:36:05.540773 26 deployment.go:360] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/11/25 12:36:05.54
  I0411 12:36:05.547010 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:05.552465 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:05.566522 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:05.576881 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:05.582269 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:06.544167 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:06.561963 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:06.568358 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:06.581199 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0411 12:36:07.586307 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/11/25 12:36:07.602
  STEP: fetching the DeploymentStatus @ 04/11/25 12:36:07.609
  I0411 12:36:07.613068 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:07.613139 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:07.613173 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:07.613360 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:07.613393 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 1
  I0411 12:36:07.613447 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:07.613472 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:07.613548 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:07.613569 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 2
  I0411 12:36:07.613618 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-9171 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/11/25 12:36:07.613
  I0411 12:36:07.619325 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619361 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619372 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619505 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619586 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619623 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619666 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619786 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619806 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619924 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619945 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.619959 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.620022 26 deployment.go:475] observed event type MODIFIED
  I0411 12:36:07.622676 26 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0411 12:36:07.625542 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9171" for this suite. @ 04/11/25 12:36:07.629
• [4.867 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 04/11/25 12:36:07.64
  I0411 12:36:07.640278 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename volumeattachment @ 04/11/25 12:36:07.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:36:07.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:36:07.651
  STEP: Create VolumeAttachment "va-e2e-2mchk" on node "k8sconformance" @ 04/11/25 12:36:07.729
  STEP: Patch VolumeAttachment "va-e2e-2mchk" on node "k8sconformance" @ 04/11/25 12:36:07.733
  STEP: Reading "va-e2e-2mchk" Status @ 04/11/25 12:36:07.736
  STEP: Patching "va-e2e-2mchk" Status @ 04/11/25 12:36:07.74
  I0411 12:36:07.744449 26 volume_attachment.go:224] "va-e2e-2mchk" Status.Attached: true
  STEP: Updating "va-e2e-2mchk" Status @ 04/11/25 12:36:07.744
  I0411 12:36:07.749593 26 volume_attachment.go:240] "va-e2e-2mchk" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-2mchk" on node "k8sconformance" @ 04/11/25 12:36:07.749
  STEP: Confirm deletion of VolumeAttachment "va-e2e-2mchk" on node "k8sconformance" @ 04/11/25 12:36:07.753
  I0411 12:36:07.755013 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4347" for this suite. @ 04/11/25 12:36:07.831
• [0.198 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 04/11/25 12:36:07.838
  I0411 12:36:07.838843 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption @ 04/11/25 12:36:07.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:36:07.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:36:07.855
  I0411 12:36:07.870426 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:37:07.876710 26 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/11/25 12:37:07.879
  STEP: Adding a custom resource @ 04/11/25 12:37:07.879
  I0411 12:37:07.901694 26 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0411 12:37:07.909342 26 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/11/25 12:37:07.909
  I0411 12:37:07.927655 26 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0411 12:37:07.934596 26 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/11/25 12:37:07.934
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/11/25 12:37:09.959
  STEP: Removing a custom resource @ 04/11/25 12:37:14.012
  STEP: Removing a custom resource @ 04/11/25 12:37:14.024
  I0411 12:37:14.037483 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4761" for this suite. @ 04/11/25 12:37:14.04
• [66.208 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 04/11/25 12:37:14.046
  I0411 12:37:14.046738 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename disruption @ 04/11/25 12:37:14.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:37:14.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:37:14.063
  STEP: creating the pdb @ 04/11/25 12:37:14.066
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:37:14.07
  STEP: updating the pdb @ 04/11/25 12:37:16.076
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:37:16.088
  STEP: patching the pdb @ 04/11/25 12:37:18.091
  STEP: Waiting for the pdb to be processed @ 04/11/25 12:37:18.098
  STEP: Waiting for the pdb to be deleted @ 04/11/25 12:37:20.103
  I0411 12:37:20.104916 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4497" for this suite. @ 04/11/25 12:37:20.107
• [6.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 04/11/25 12:37:20.111
  I0411 12:37:20.111296 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename containers @ 04/11/25 12:37:20.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:37:20.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:37:20.127
  I0411 12:37:22.150831 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6105" for this suite. @ 04/11/25 12:37:22.154
• [2.051 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/11/25 12:37:22.162
  I0411 12:37:22.162893 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:37:22.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:37:22.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:37:22.179
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f41dafbe-a42b-46a3-a441-68231367f6d5 @ 04/11/25 12:37:22.256
  STEP: Creating the pod @ 04/11/25 12:37:22.262
  STEP: Updating configmap projected-configmap-test-upd-f41dafbe-a42b-46a3-a441-68231367f6d5 @ 04/11/25 12:37:24.292
  STEP: waiting to observe update in volume @ 04/11/25 12:37:24.297
  I0411 12:38:56.885695 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3555" for this suite. @ 04/11/25 12:38:56.889
• [94.731 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 04/11/25 12:38:56.894
  I0411 12:38:56.894404 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 12:38:56.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:38:56.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:38:56.904
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/11/25 12:38:56.906
  I0411 12:38:56.906658 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 12:38:58.054747 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 12:39:02.695611 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4114" for this suite. @ 04/11/25 12:39:02.701
• [5.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/11/25 12:39:02.706
  I0411 12:39:02.707014 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename security-context-test @ 04/11/25 12:39:02.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:02.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:02.719
  I0411 12:39:08.756607 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3804" for this suite. @ 04/11/25 12:39:08.76
• [6.059 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/11/25 12:39:08.766
  I0411 12:39:08.766703 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 12:39:08.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:08.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:08.782
  STEP: Saw pod success @ 04/11/25 12:39:14.845
  I0411 12:39:14.848894 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-envvars-1b98c0f4-1a21-4105-9726-1326896ce051 container env3cont: <nil>
  STEP: delete the pod @ 04/11/25 12:39:14.856
  I0411 12:39:14.873845 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9664" for this suite. @ 04/11/25 12:39:14.877
• [6.116 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/11/25 12:39:14.882
  I0411 12:39:14.882337 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:39:14.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:14.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:14.898
  STEP: Creating secret with name secret-test-map-ed086b71-ed8c-4aec-a376-56e2d6cca9cb @ 04/11/25 12:39:14.9
  STEP: Creating a pod to test consume secrets @ 04/11/25 12:39:14.904
  STEP: Saw pod success @ 04/11/25 12:39:18.927
  I0411 12:39:18.931455 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-1e0ca951-ae3f-44ba-8787-da9518863e91 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 12:39:18.938
  I0411 12:39:18.956383 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1805" for this suite. @ 04/11/25 12:39:18.96
• [4.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/11/25 12:39:18.966
  I0411 12:39:18.966029 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:39:18.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:18.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:18.98
  STEP: Creating configMap with name projected-configmap-test-volume-67bb1474-85f9-4af5-a0c2-09e6b8699022 @ 04/11/25 12:39:18.981
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:39:18.984
  STEP: Saw pod success @ 04/11/25 12:39:23.005
  I0411 12:39:23.008201 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-0a58c322-7d69-4a4d-b7ad-1637e2da2dc8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 12:39:23.016
  I0411 12:39:23.035109 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2593" for this suite. @ 04/11/25 12:39:23.039
• [4.078 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 04/11/25 12:39:23.044
  I0411 12:39:23.044657 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 12:39:23.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:23.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:23.062
  STEP: Creating service test in namespace statefulset-2963 @ 04/11/25 12:39:23.066
  STEP: Creating statefulset ss in namespace statefulset-2963 @ 04/11/25 12:39:23.07
  I0411 12:39:23.081449 26 wait.go:40] Found 0 stateful pods, waiting for 1
  I0411 12:39:33.080510 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/11/25 12:39:33.083
  STEP: updating a scale subresource @ 04/11/25 12:39:33.085
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/11/25 12:39:33.091
  STEP: Patch a scale subresource @ 04/11/25 12:39:33.092
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/11/25 12:39:33.105
  I0411 12:39:33.110689 26 statefulset.go:138] Deleting all statefulset in ns statefulset-2963
  I0411 12:39:33.115773 26 rest.go:152] Scaling statefulset ss to 0
  I0411 12:39:43.155580 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 12:39:43.157236 26 rest.go:90] Deleting statefulset ss
  I0411 12:39:43.166550 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2963" for this suite. @ 04/11/25 12:39:43.168
• [20.127 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/11/25 12:39:43.171
  I0411 12:39:43.171419 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename limitrange @ 04/11/25 12:39:43.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:43.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:43.187
  STEP: Creating a LimitRange @ 04/11/25 12:39:43.189
  STEP: Setting up watch @ 04/11/25 12:39:43.189
  STEP: Submitting a LimitRange @ 04/11/25 12:39:43.292
  STEP: Verifying LimitRange creation was observed @ 04/11/25 12:39:43.3
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/11/25 12:39:43.3
  I0411 12:39:43.303657 26 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0411 12:39:43.303720 26 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/11/25 12:39:43.303
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/11/25 12:39:43.309
  I0411 12:39:43.312094 26 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0411 12:39:43.312149 26 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/11/25 12:39:43.312
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/11/25 12:39:43.317
  I0411 12:39:43.320091 26 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0411 12:39:43.320154 26 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/11/25 12:39:43.32
  STEP: Failing to create a Pod with more than max resources @ 04/11/25 12:39:43.323
  STEP: Updating a LimitRange @ 04/11/25 12:39:43.326
  STEP: Verifying LimitRange updating is effective @ 04/11/25 12:39:43.33
  STEP: Creating a Pod with less than former min resources @ 04/11/25 12:39:45.336
  STEP: Failing to create a Pod with more than max resources @ 04/11/25 12:39:45.343
  STEP: Deleting a LimitRange @ 04/11/25 12:39:45.346
  STEP: Verifying the LimitRange was deleted @ 04/11/25 12:39:45.352
  I0411 12:39:50.359038 26 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/11/25 12:39:50.359
  I0411 12:39:50.369809 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4458" for this suite. @ 04/11/25 12:39:50.374
• [7.209 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/11/25 12:39:50.381
  I0411 12:39:50.381393 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/11/25 12:39:50.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:50.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:50.4
  I0411 12:39:50.402600 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  I0411 12:39:53.470564 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1499" for this suite. @ 04/11/25 12:39:53.475
• [3.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/11/25 12:39:53.482
  I0411 12:39:53.482748 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:39:53.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:53.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:53.502
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:39:53.511
  STEP: Saw pod success @ 04/11/25 12:39:57.536
  I0411 12:39:57.539733 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-0c0eaef8-ddb9-4b1e-93dd-2f2f55cd5edf container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:39:57.547
  I0411 12:39:57.563146 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1384" for this suite. @ 04/11/25 12:39:57.565
• [4.086 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/11/25 12:39:57.569
  I0411 12:39:57.569126 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/11/25 12:39:57.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:39:57.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:39:57.58
  STEP: create the container to handle the HTTPGet hook request. @ 04/11/25 12:39:57.668
  STEP: create the pod with lifecycle hook @ 04/11/25 12:39:59.692
  STEP: delete the pod with lifecycle hook @ 04/11/25 12:40:01.713
  STEP: check prestop hook @ 04/11/25 12:40:03.733
  I0411 12:40:03.750018 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9163" for this suite. @ 04/11/25 12:40:03.753
• [6.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/11/25 12:40:03.76
  I0411 12:40:03.760308 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 12:40:03.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:03.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:03.778
  STEP: Create a pod @ 04/11/25 12:40:03.781
  STEP: patching /status @ 04/11/25 12:40:05.799
  I0411 12:40:05.809526 26 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0411 12:40:05.809787 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3426" for this suite. @ 04/11/25 12:40:05.813
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 04/11/25 12:40:05.82
  I0411 12:40:05.820329 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:40:05.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:05.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:05.839
  STEP: creating a Service @ 04/11/25 12:40:05.846
  STEP: watching for the Service to be added @ 04/11/25 12:40:05.863
  I0411 12:40:05.865335 26 service.go:3425] Found Service test-service-ct4mw in namespace services-8742 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30634}]
  I0411 12:40:05.865418 26 service.go:3432] Service test-service-ct4mw created
  STEP: Getting /status @ 04/11/25 12:40:05.865
  I0411 12:40:05.869419 26 service.go:3443] Service test-service-ct4mw has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/11/25 12:40:05.869
  STEP: watching for the Service to be patched @ 04/11/25 12:40:05.876
  I0411 12:40:05.877923 26 service.go:3466] observed Service test-service-ct4mw in namespace services-8742 with annotations: map[] & LoadBalancer: {[]}
  I0411 12:40:05.878010 26 service.go:3469] Found Service test-service-ct4mw in namespace services-8742 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003da7380 []}]}
  I0411 12:40:05.878044 26 service.go:3476] Service test-service-ct4mw has service status patched
  STEP: updating the ServiceStatus @ 04/11/25 12:40:05.878
  I0411 12:40:05.889793 26 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/11/25 12:40:05.889
  I0411 12:40:05.893863 26 service.go:3507] Observed Service test-service-ct4mw in namespace services-8742 with annotations: map[] & Conditions: []
  I0411 12:40:05.896247 26 service.go:3518] Observed Service test-service-ct4mw in namespace services-8742 with annotations: map[patchedstatus:true] & Conditions: []
  I0411 12:40:05.896388 26 service.go:3514] Found Service test-service-ct4mw in namespace services-8742 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0411 12:40:05.896428 26 service.go:3525] Service test-service-ct4mw has service status updated
  STEP: patching the service @ 04/11/25 12:40:05.896
  STEP: watching for the Service to be patched @ 04/11/25 12:40:05.921
  I0411 12:40:05.922808 26 service.go:3548] observed Service test-service-ct4mw in namespace services-8742 with labels: map[test-service-static:true]
  I0411 12:40:05.922825 26 service.go:3548] observed Service test-service-ct4mw in namespace services-8742 with labels: map[test-service-static:true]
  I0411 12:40:05.922844 26 service.go:3548] observed Service test-service-ct4mw in namespace services-8742 with labels: map[test-service-static:true]
  I0411 12:40:05.922871 26 service.go:3551] Found Service test-service-ct4mw in namespace services-8742 with labels: map[test-service:patched test-service-static:true]
  I0411 12:40:05.922884 26 service.go:3558] Service test-service-ct4mw patched
  STEP: deleting the service @ 04/11/25 12:40:05.922
  STEP: watching for the Service to be deleted @ 04/11/25 12:40:05.936
  I0411 12:40:05.937876 26 service.go:3582] Observed event: ADDED
  I0411 12:40:05.937900 26 service.go:3582] Observed event: MODIFIED
  I0411 12:40:05.938013 26 service.go:3582] Observed event: MODIFIED
  I0411 12:40:05.938036 26 service.go:3582] Observed event: MODIFIED
  I0411 12:40:05.938126 26 service.go:3578] Found Service test-service-ct4mw in namespace services-8742 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0411 12:40:05.938143 26 service.go:3587] Service test-service-ct4mw deleted
  I0411 12:40:05.938266 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8742" for this suite. @ 04/11/25 12:40:05.94
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 04/11/25 12:40:05.943
  I0411 12:40:05.943354 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 12:40:05.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:05.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:05.954
  I0411 12:40:05.955976 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  W0411 12:40:08.484715      26 warnings.go:70] unknown field "alpha"
  W0411 12:40:08.484766      26 warnings.go:70] unknown field "beta"
  W0411 12:40:08.484776      26 warnings.go:70] unknown field "delta"
  W0411 12:40:08.484785      26 warnings.go:70] unknown field "epsilon"
  W0411 12:40:08.484793      26 warnings.go:70] unknown field "gamma"
  I0411 12:40:09.020462 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3343" for this suite. @ 04/11/25 12:40:09.023
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 04/11/25 12:40:09.029
  I0411 12:40:09.029465 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 12:40:09.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:09.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:09.046
  STEP: Creating pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220 @ 04/11/25 12:40:09.049
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 12:40:11.063
  I0411 12:40:11.066026 26 container_probe.go:1749] Initial restart count of pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 is 0
  I0411 12:40:11.068320 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:13.075592 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:15.082580 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:17.089410 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:19.096358 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:21.102046 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:23.108032 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:25.113210 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:27.120938 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:29.129552 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:31.133266 26 container_probe.go:1759] Get pod liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 in namespace container-probe-2220
  I0411 12:40:31.133326 26 container_probe.go:1763] Restart count of pod container-probe-2220/liveness-982fbbf8-0b5b-4d50-990f-9f00db4870d9 is now 1 (20.067251407s elapsed)
  STEP: deleting the pod @ 04/11/25 12:40:31.133
  I0411 12:40:31.144623 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2220" for this suite. @ 04/11/25 12:40:31.148
• [22.124 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 04/11/25 12:40:31.153
  I0411 12:40:31.153318 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:40:31.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:31.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:31.166
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6144 @ 04/11/25 12:40:31.168
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/11/25 12:40:31.176
  STEP: creating service externalsvc in namespace services-6144 @ 04/11/25 12:40:31.176
  STEP: creating replication controller externalsvc in namespace services-6144 @ 04/11/25 12:40:31.189
  I0411 12:40:31.194039      26 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6144, replica count: 2
  I0411 12:40:34.246392      26 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/11/25 12:40:34.251
  I0411 12:40:34.268425 26 resource.go:361] Creating new exec pod
  I0411 12:40:36.281694 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-6144 exec execpodvbcfc -- /bin/sh -x -c nslookup clusterip-service.services-6144.svc.cluster.local'
  I0411 12:40:36.435014 26 builder.go:146] stderr: "+ nslookup clusterip-service.services-6144.svc.cluster.local\n"
  I0411 12:40:36.435084 26 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-6144.svc.cluster.local\tcanonical name = externalsvc.services-6144.svc.cluster.local.\nName:\texternalsvc.services-6144.svc.cluster.local\nAddress: 10.102.200.107\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6144, will wait for the garbage collector to delete the pods @ 04/11/25 12:40:36.435
  I0411 12:40:36.494500 26 resources.go:139] Deleting ReplicationController externalsvc took: 5.369226ms
  I0411 12:40:36.595232 26 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.727396ms
  I0411 12:40:39.117238 26 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0411 12:40:39.129588 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6144" for this suite. @ 04/11/25 12:40:39.132
• [7.983 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 04/11/25 12:40:39.136
  I0411 12:40:39.136465 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 12:40:39.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:39.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:39.147
  STEP: creating a ServiceAccount @ 04/11/25 12:40:39.149
  STEP: watching for the ServiceAccount to be added @ 04/11/25 12:40:39.154
  STEP: patching the ServiceAccount @ 04/11/25 12:40:39.155
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/11/25 12:40:39.159
  STEP: deleting the ServiceAccount @ 04/11/25 12:40:39.162
  I0411 12:40:39.171843 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8101" for this suite. @ 04/11/25 12:40:39.235
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 04/11/25 12:40:39.241
  I0411 12:40:39.241995 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption @ 04/11/25 12:40:39.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:40:39.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:40:39.258
  I0411 12:40:39.273353 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:41:39.279413 26 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/11/25 12:41:39.282
  STEP: Adding a custom resource @ 04/11/25 12:41:39.282
  I0411 12:41:39.307112 26 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0411 12:41:39.315093 26 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/11/25 12:41:39.315
  I0411 12:41:39.332943 26 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0411 12:41:39.339761 26 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/11/25 12:41:39.339
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/11/25 12:41:41.358
  STEP: Removing a custom resource @ 04/11/25 12:41:45.421
  STEP: Removing a custom resource @ 04/11/25 12:41:45.431
  I0411 12:41:45.440263 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4523" for this suite. @ 04/11/25 12:41:45.443
• [66.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/11/25 12:41:45.449
  I0411 12:41:45.449645 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/11/25 12:41:45.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:41:45.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:41:45.463
  I0411 12:41:45.468762 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-667" for this suite. @ 04/11/25 12:41:45.471
• [0.027 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 04/11/25 12:41:45.476
  I0411 12:41:45.476761 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:41:45.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:41:45.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:41:45.562
  STEP: Creating a pod to test downward api env vars @ 04/11/25 12:41:45.564
  STEP: Saw pod success @ 04/11/25 12:41:49.581
  I0411 12:41:49.584455 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-da3702a0-da43-4f89-9da1-2973ecd6a128 container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 12:41:49.6
  I0411 12:41:49.611816 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8869" for this suite. @ 04/11/25 12:41:49.613
• [4.141 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 04/11/25 12:41:49.617
  I0411 12:41:49.617831 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 12:41:49.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:41:49.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:41:49.627
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/11/25 12:41:49.628
  I0411 12:41:49.628695 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2021 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0411 12:41:49.677420 26 builder.go:146] stderr: ""
  I0411 12:41:49.677485 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/11/25 12:41:49.677
  I0411 12:41:49.677704 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2021 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0411 12:41:49.720823 26 builder.go:146] stderr: ""
  I0411 12:41:49.720856 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/11/25 12:41:49.72
  I0411 12:41:49.722320 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2021 delete pods e2e-test-httpd-pod'
  I0411 12:41:51.637304 26 builder.go:146] stderr: ""
  I0411 12:41:51.637340 26 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0411 12:41:51.637441 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2021" for this suite. @ 04/11/25 12:41:51.639
• [2.024 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/11/25 12:41:51.641
  I0411 12:41:51.641815 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 12:41:51.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:41:51.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:41:51.688
  I0411 12:41:51.691558 26 deployment.go:1196] Creating deployment "webserver-deployment"
  I0411 12:41:51.695269 26 deployment.go:1200] Waiting for observed generation 1
  I0411 12:41:53.703119 26 deployment.go:1205] Waiting for all required pods to come up
  I0411 12:41:53.707427 26 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/11/25 12:41:53.707
  I0411 12:41:53.707508 26 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0411 12:41:53.711421 26 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0411 12:41:53.719627 26 deployment.go:314] Updating deployment webserver-deployment
  I0411 12:41:53.719673 26 deployment.go:1224] Waiting for observed generation 2
  I0411 12:41:55.726025 26 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0411 12:41:55.729431 26 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0411 12:41:55.732122 26 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0411 12:41:55.740890 26 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0411 12:41:55.740945 26 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0411 12:41:55.742735 26 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0411 12:41:55.746089 26 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0411 12:41:55.746132 26 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0411 12:41:55.753037 26 deployment.go:314] Updating deployment webserver-deployment
  I0411 12:41:55.753074 26 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0411 12:41:55.756024 26 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0411 12:41:55.758471 26 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0411 12:41:57.768603 26 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53c4b6f8-e44f-4ca5-bd93-28a074597122",
      ResourceVersion: (string) (len=5) "17400",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 12:41:57.773512 26 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
      ResourceVersion: (string) (len=5) "17265",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "53c4b6f8-e44f-4ca5-bd93-28a074597122",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 63 34 62 36  66 38 2d 65 34 34 66 2d  |\"53c4b6f8-e44f-|
              00000120  34 63 61 35 2d 62 64 39  33 2d 32 38 61 30 37 34  |4ca5-bd93-28a074|
              00000130  35 39 37 31 32 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |597122\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:41:57.774591 26 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0411 12:41:57.774932 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
      ResourceVersion: (string) (len=5) "17399",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "53c4b6f8-e44f-4ca5-bd93-28a074597122",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 63 34 62 36  66 38 2d 65 34 34 66 2d  |\"53c4b6f8-e44f-|
              00000120  34 63 61 35 2d 62 64 39  33 2d 32 38 61 30 37 34  |4ca5-bd93-28a074|
              00000130  35 39 37 31 32 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |597122\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 12:41:57.780826 26 deployment.go:68] Pod "webserver-deployment-685b768f58-2tvlw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2tvlw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afc8c63a-a98b-4eec-9bf3-15a4965474ab",
      ResourceVersion: (string) (len=5) "17092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  32 5c 22 7d 22 3a 7b 22  |.244.1.32\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g2xw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g2xw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://d92ca8c7d2aeaf15021586fb44e16d327c9880f900c846bc5bb344e3348289f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g2xw7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.781988 26 deployment.go:68] Pod "webserver-deployment-685b768f58-4vx9f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4vx9f",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce9e2208-8127-4b2e-af6e-c9b3d4416eab",
      ResourceVersion: (string) (len=5) "17372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  30 5c 22 7d 22 3a 7b 22  |.244.1.40\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2kxfn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2kxfn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://40dc9ea4fb3069e843303634b2ba4c31d8338cf72670a8f07f61be737469ecf7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2kxfn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.783341 26 deployment.go:68] Pod "webserver-deployment-685b768f58-55tkh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-55tkh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb0eed21-f479-4c7d-97b1-c8da458b70b1",
      ResourceVersion: (string) (len=5) "17379",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  35 5c 22 7d 22 3a 7b 22  |.244.1.45\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x8xjk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x8xjk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://1713e428bc44c21d4201cef91e1c19c502694ec847d84326689ff1c2754d0af7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x8xjk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.784282 26 deployment.go:68] Pod "webserver-deployment-685b768f58-8nk8s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8nk8s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18b32fef-cccf-4796-bcd0-b98ef0af7b01",
      ResourceVersion: (string) (len=5) "17391",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 33 5c 22 7d 22 3a 7b  |.244.0.153\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-spgns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-spgns",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://c031fbdc9fe2cbc365733c61253189ed09de6d17815963d8cb6992c56b8531d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-spgns",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.785410 26 deployment.go:68] Pod "webserver-deployment-685b768f58-9c4qs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9c4qs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebbd058a-11eb-4228-b74d-6e5cbe8550d6",
      ResourceVersion: (string) (len=5) "17392",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 38 5c 22 7d 22 3a 7b  |.244.0.148\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2vhms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2vhms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://076f94f660d696b7fed5925fa6b3cdbac334e37f7f2b8dd215b3bcd314c50e80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2vhms",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.786386 26 deployment.go:68] Pod "webserver-deployment-685b768f58-bhp2s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bhp2s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fd466c8-1781-49b9-8997-39fc5efbf94a",
      ResourceVersion: (string) (len=5) "17084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  34 5c 22 7d 22 3a 7b 22  |.244.1.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6dm9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6dm9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://fdf44563a78b7068a472212116e7ab08e60b0d86aa789c8b9a119aaeda48c755",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f6dm9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.787356 26 deployment.go:68] Pod "webserver-deployment-685b768f58-ck5rq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ck5rq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ebdaddc-9133-4984-9eba-7f05137c4b63",
      ResourceVersion: (string) (len=5) "17366",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  31 5c 22 7d 22 3a 7b 22  |.244.1.41\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkzk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkzk4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://f30db074392ba177f8cb53f451ba61767fd0ea69c4372c861e65b5ea21fad540",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkzk4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.789804 26 deployment.go:68] Pod "webserver-deployment-685b768f58-cxkm6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cxkm6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea744774-e290-4bdb-ba66-fb4da24eaa77",
      ResourceVersion: (string) (len=5) "17086",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  33 5c 22 7d 22 3a 7b 22  |.244.1.33\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-57dp9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-57dp9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://9c3e4d480eda9d38000079ffee85302a983dbaa130320155fb48dd994d924e85",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-57dp9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.792078 26 deployment.go:68] Pod "webserver-deployment-685b768f58-f26tt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f26tt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "138383da-ee2b-4f3d-9ac0-3f3f61351458",
      ResourceVersion: (string) (len=5) "17385",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 37 5c 22 7d 22 3a 7b  |.244.0.147\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmh86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmh86",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://1fa7f8aaa0ddcbd419e935194ee7ed0492c51581cf4a58786225947398209e76",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tmh86",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.793223 26 deployment.go:68] Pod "webserver-deployment-685b768f58-gbpl4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gbpl4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05f6ee4d-f697-4f05-b779-b3d8a4718e19",
      ResourceVersion: (string) (len=5) "17099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  33 38 5c 22 7d 22 3a 7b  |.244.0.138\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pb6d7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pb6d7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://5630f9e0a4401056ee224b787318cea79aafadfa60ec7395978fbd9715fb4d5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pb6d7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.794464 26 deployment.go:68] Pod "webserver-deployment-685b768f58-k48zz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-k48zz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "614ef580-0a85-4727-b037-629977e72a1f",
      ResourceVersion: (string) (len=5) "17105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 32 5c 22 7d 22 3a 7b  |.244.0.142\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fsw7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fsw7q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://600cb28ae138f18888ba5ecdaa5dd96d3bb39a5b2e8be2f040c85ee47119739b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fsw7q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.795590 26 deployment.go:68] Pod "webserver-deployment-685b768f58-lnwt4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lnwt4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbc04731-c072-447e-976e-4efc32d2f81e",
      ResourceVersion: (string) (len=5) "17382",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 35 5c 22 7d 22 3a 7b  |.244.0.145\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9fkfd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9fkfd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://16359569191fd519f472d32be1b4ccd02d55e37095e07c1c07b189130a40afa4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9fkfd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.798300 26 deployment.go:68] Pod "webserver-deployment-685b768f58-nb2vr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nb2vr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e636ec94-38c2-4607-8c43-55da2642ac2e",
      ResourceVersion: (string) (len=5) "17102",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 30 5c 22 7d 22 3a 7b  |.244.0.140\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nzh9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nzh9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://53fb8cc7e3baf1c493ce6ee6d4d2f05362560365e4c7ea4c7c31dee44ff4df24",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2nzh9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.800467 26 deployment.go:68] Pod "webserver-deployment-685b768f58-ps9jg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ps9jg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87727bfd-ab82-467d-9b10-52815079c8f2",
      ResourceVersion: (string) (len=5) "17374",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  36 5c 22 7d 22 3a 7b 22  |.244.1.46\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d9cfg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d9cfg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://5f5c2cedeaa4185b60244524972726737c0c0c3f7f6d0a516be001dc8155d97d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d9cfg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.803219 26 deployment.go:68] Pod "webserver-deployment-685b768f58-qjwp7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qjwp7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1730d6f8-51f2-4191-93f2-cd4bb68487d2",
      ResourceVersion: (string) (len=5) "17368",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  39 5c 22 7d 22 3a 7b 22  |.244.1.39\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6c7n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6c7n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://3ef0a8baaea7f966308a4ba671742408827f3079ed3e89cda9fe021c2b8ff1d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r6c7n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.804280 26 deployment.go:68] Pod "webserver-deployment-685b768f58-r7pjx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r7pjx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d4833e2-4486-477d-8b2a-546d4516e993",
      ResourceVersion: (string) (len=5) "17388",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 39 5c 22 7d 22 3a 7b  |.244.0.149\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zbtjg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zbtjg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://520554990ca4399f2aa2150f9300af3b722fa1b53992f18e3e08d0be1284fe9c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zbtjg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.807132 26 deployment.go:68] Pod "webserver-deployment-685b768f58-spcn6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-spcn6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37fb648a-0b32-4f26-a68e-2fcfb937b6bb",
      ResourceVersion: (string) (len=5) "17386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 31 5c 22 7d 22 3a 7b  |.244.0.151\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcnfb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcnfb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://e586d3168e8a2a1a326641f2cf543b71fbb821a68c5b470410f0e82c65dd8929",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gcnfb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.808007 26 deployment.go:68] Pod "webserver-deployment-685b768f58-svxdx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-svxdx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15630b39-c823-4dcb-a608-2ef8cc294f16",
      ResourceVersion: (string) (len=5) "17095",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  31 5c 22 7d 22 3a 7b 22  |.244.1.31\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qt4x4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qt4x4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://34d9997e5eb1c27c384e51f3f8882e503714e5a2b3f02e561df10a47a4f3d88e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qt4x4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.810462 26 deployment.go:68] Pod "webserver-deployment-685b768f58-vtcjm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vtcjm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c09c3c66-b8a4-4193-87b2-67cc6c97773d",
      ResourceVersion: (string) (len=5) "17107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 31 5c 22 7d 22 3a 7b  |.244.0.141\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gq72p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gq72p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://604599f362ef77593c714ec3d772752a74440106a0ce6ae34c6a995dd92c83bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gq72p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.812497 26 deployment.go:68] Pod "webserver-deployment-685b768f58-zqdvc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zqdvc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb2ac9e7-ae26-4920-a1e7-2d34424d515f",
      ResourceVersion: (string) (len=5) "17363",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c865f963-0042-43fb-b0ed-ff10c346649e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  36 35 66 39 36 33 2d 30  |d\":\"c865f963-0|
              00000090  30 34 32 2d 34 33 66 62  2d 62 30 65 64 2d 66 66  |042-43fb-b0ed-ff|
              000000a0  31 30 63 33 34 36 36 34  39 65 5c 22 7d 22 3a 7b  |10c346649e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  34 5c 22 7d 22 3a 7b 22  |.244.1.44\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rb826",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rb826",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879972116,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://4a6bf07a7866a9cf814a10fc6f178cdd794dda921e9b78dbd59ba2b29bdb520b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rb826",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.814519 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5jwqp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5jwqp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22a29436-6842-4c38-82e5-591becb1533b",
      ResourceVersion: (string) (len=5) "17274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r62xr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r62xr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r62xr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.816465 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5vzfw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5vzfw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9785961-2584-4afa-a895-b713444f5ecd",
      ResourceVersion: (string) (len=5) "17302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vtqx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vtqx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5vtqx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.818308 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bzvh9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bzvh9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "950615cc-7340-44e2-b469-0854e75172f7",
      ResourceVersion: (string) (len=5) "17292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mmm4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mmm4c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mmm4c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.819423 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-c8kxj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-c8kxj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47f511ec-df66-4dfb-bda0-f654ec098b58",
      ResourceVersion: (string) (len=5) "17303",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plqn8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plqn8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-plqn8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.820325 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fvdcg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fvdcg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfd4f7f2-aac0-4323-86c6-c59c39d6ce93",
      ResourceVersion: (string) (len=5) "17196",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 33 38 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.38\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j87fc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j87fc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j87fc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.821360 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-k8zdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-k8zdk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aca9612a-369f-4aec-bf8b-2fda1c1fad58",
      ResourceVersion: (string) (len=5) "17288",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fqkll",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fqkll",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fqkll",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.822676 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l2t9r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l2t9r",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5923dcb5-d9f9-41ae-8dd6-225a321b889c",
      ResourceVersion: (string) (len=5) "17272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t7klx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t7klx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t7klx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.823914 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l4ltv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l4ltv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5211de73-881e-4ced-acc7-1a91d2409f61",
      ResourceVersion: (string) (len=5) "17193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 33 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.36\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7xsg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7xsg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n7xsg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.825012 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-m24fh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-m24fh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5dd0c69-a988-4b9b-a1e1-eb582468b455",
      ResourceVersion: (string) (len=5) "17181",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 34 33 5c  22 7d 22 3a 7b 22 2e 22  |4.0.143\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qpsq7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qpsq7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qpsq7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.826093 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mkbc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mkbc6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b369daf-59aa-4824-916e-2a979feee6ef",
      ResourceVersion: (string) (len=5) "17263",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8x29t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8x29t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8x29t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.827123 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qdcsb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qdcsb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "313e4600-454a-4f18-a556-c5a0f356b8ec",
      ResourceVersion: (string) (len=5) "17287",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2b8lk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2b8lk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2b8lk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.828083 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rvz2v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rvz2v",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87588067-e987-409d-8824-ce460ef4418d",
      ResourceVersion: (string) (len=5) "17200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 33 37 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.37\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xr4jm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xr4jm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xr4jm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.828979 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zt9gx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zt9gx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-1987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfd0fba7-fb18-4ad6-8b97-d8878392ac54",
      ResourceVersion: (string) (len=5) "17296",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4cff1947-db23-44b5-996c-73455916200f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 39 34 37 2d 64  |d\":\"4cff1947-d|
              00000090  62 32 33 2d 34 34 62 35  2d 39 39 36 63 2d 37 33  |b23-44b5-996c-73|
              000000a0  34 35 35 39 31 36 32 30  30 66 5c 22 7d 22 3a 7b  |455916200f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 34 34 5c  22 7d 22 3a 7b 22 2e 22  |4.0.144\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wxw68",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wxw68",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879972113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879972113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wxw68",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 12:41:57.829709 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1987" for this suite. @ 04/11/25 12:41:57.833
• [6.196 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/11/25 12:41:57.838
  I0411 12:41:57.838249 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:41:57.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:41:57.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:41:57.85
  STEP: Creating configMap with name configmap-projected-all-test-volume-4ca181dc-7d0a-457c-98eb-759e0309ac12 @ 04/11/25 12:41:57.852
  STEP: Creating secret with name secret-projected-all-test-volume-141a58c8-51a1-4d0f-a2a1-4c011067d46a @ 04/11/25 12:41:57.854
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/11/25 12:41:57.857
  W0411 12:41:57.861274      26 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 04/11/25 12:42:01.872
  I0411 12:42:01.875239 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod projected-volume-d063cf4c-5480-4cab-bc4d-7a4ecc9a07ca container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 12:42:01.882
  I0411 12:42:01.897710 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4697" for this suite. @ 04/11/25 12:42:01.901
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 04/11/25 12:42:01.907
  I0411 12:42:01.907470 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 12:42:01.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:42:01.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:42:01.925
  STEP: set up a multi version CRD @ 04/11/25 12:42:01.928
  I0411 12:42:01.928979 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: rename a version @ 04/11/25 12:42:04.972
  STEP: check the new version name is served @ 04/11/25 12:42:04.986
  STEP: check the old version name is removed @ 04/11/25 12:42:05.639
  STEP: check the other version is not changed @ 04/11/25 12:42:06.251
  I0411 12:42:08.630010 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8365" for this suite. @ 04/11/25 12:42:08.636
• [6.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 04/11/25 12:42:08.64
  I0411 12:42:08.640063 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 12:42:08.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:42:08.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:42:08.653
  STEP: Discovering how many secrets are in namespace by default @ 04/11/25 12:42:08.654
  STEP: Counting existing ResourceQuota @ 04/11/25 12:42:13.657
  STEP: Creating a ResourceQuota @ 04/11/25 12:42:18.663
  STEP: Ensuring resource quota status is calculated @ 04/11/25 12:42:18.67
  STEP: Creating a Secret @ 04/11/25 12:42:20.677
  STEP: Ensuring resource quota status captures secret creation @ 04/11/25 12:42:20.692
  STEP: Deleting a secret @ 04/11/25 12:42:22.697
  STEP: Ensuring resource quota status released usage @ 04/11/25 12:42:22.703
  I0411 12:42:24.710061 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5839" for this suite. @ 04/11/25 12:42:24.713
• [16.081 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/11/25 12:42:24.721
  I0411 12:42:24.721148 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename init-container @ 04/11/25 12:42:24.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:42:24.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:42:24.737
  STEP: creating the pod @ 04/11/25 12:42:24.74
  I0411 12:42:24.740587 26 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0411 12:42:28.374909 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1418" for this suite. @ 04/11/25 12:42:28.378
• [3.663 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 04/11/25 12:42:28.384
  I0411 12:42:28.384090 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 12:42:28.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:42:28.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:42:28.4
  STEP: Creating a job @ 04/11/25 12:42:28.409
  STEP: Ensuring job reaches completions @ 04/11/25 12:42:28.414
  I0411 12:42:38.445565 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3522" for this suite. @ 04/11/25 12:42:38.449
• [10.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/11/25 12:42:38.458
  I0411 12:42:38.458132 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename aggregator @ 04/11/25 12:42:38.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:42:38.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:42:38.474
  I0411 12:42:38.476854 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Registering the sample API server. @ 04/11/25 12:42:38.477
  I0411 12:42:38.716777 26 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0411 12:42:38.731009 26 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0411 12:42:40.773000 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:42.776944 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:44.779408 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:46.779745 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:48.780147 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:50.781207 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:52.778756 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:54.778221 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:56.778712 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:42:58.779027 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:43:00.779247 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:43:02.777000 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:43:04.780142 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 12, 42, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0411 12:43:06.901340 26 aggregator.go:755] Waited 116.214823ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/11/25 12:43:06.944
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/11/25 12:43:06.947
  STEP: List APIServices @ 04/11/25 12:43:06.953
  I0411 12:43:06.958285 26 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/11/25 12:43:06.958
  I0411 12:43:06.969442 26 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/11/25 12:43:06.969
  I0411 12:43:06.975593 26 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.April, 11, 12, 43, 6, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/11/25 12:43:06.975
  I0411 12:43:06.978904 26 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-04-11 12:43:06 +0000 UTC Passed all checks passed}
  I0411 12:43:06.978950 26 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 12:43:06.978968 26 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/11/25 12:43:06.978
  I0411 12:43:06.985048 26 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-652405247" @ 04/11/25 12:43:06.985
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/11/25 12:43:06.993
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/11/25 12:43:06.998
  STEP: Patch APIService Status @ 04/11/25 12:43:07
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/11/25 12:43:07.004
  I0411 12:43:07.006712 26 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-04-11 12:43:06 +0000 UTC Passed all checks passed}
  I0411 12:43:07.006746 26 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 12:43:07.006765 26 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0411 12:43:07.006778 26 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/11/25 12:43:07.006
  STEP: Confirm that the generated APIService has been deleted @ 04/11/25 12:43:07.01
  I0411 12:43:07.010318 26 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0411 12:43:07.011782 26 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0411 12:43:07.011803 26 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0411 12:43:07.074263 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5236" for this suite. @ 04/11/25 12:43:07.077
• [28.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 04/11/25 12:43:07.083
  I0411 12:43:07.083506 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 12:43:07.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:43:07.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:43:07.097
  STEP: Creating pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024 @ 04/11/25 12:43:07.099
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 12:43:09.11
  I0411 12:43:09.114648 26 container_probe.go:1749] Initial restart count of pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 is 0
  I0411 12:43:09.117658 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:11.124415 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:13.128400 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:15.132043 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:17.136507 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:19.141119 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:21.147363 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:23.154062 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:25.157575 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:27.163093 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:29.168814 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:31.172045 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:33.177852 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:35.182863 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:37.185123 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:39.190077 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:41.195860 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:43.199353 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:45.206093 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:47.212953 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:49.217761 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:51.224291 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:53.228119 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:55.234129 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:57.241058 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:59.245837 26 container_probe.go:1759] Get pod busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 in namespace container-probe-2024
  I0411 12:43:59.245913 26 container_probe.go:1763] Restart count of pod container-probe-2024/busybox-c5e2400d-e786-420d-b954-8470b1bf3c53 is now 1 (50.13121237s elapsed)
  STEP: deleting the pod @ 04/11/25 12:43:59.246
  I0411 12:43:59.261946 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2024" for this suite. @ 04/11/25 12:43:59.266
• [52.189 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/11/25 12:43:59.272
  I0411 12:43:59.272397 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:43:59.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:43:59.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:43:59.289
  STEP: Creating secret with name secret-test-map-12799b5d-4955-4c36-b977-7cdf38b21e79 @ 04/11/25 12:43:59.291
  STEP: Creating a pod to test consume secrets @ 04/11/25 12:43:59.295
  STEP: Saw pod success @ 04/11/25 12:44:03.313
  I0411 12:44:03.316765 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-872c315e-4492-4367-afb7-f8a97d94cba8 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 12:44:03.337
  I0411 12:44:03.351978 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-341" for this suite. @ 04/11/25 12:44:03.355
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/11/25 12:44:03.361
  I0411 12:44:03.361157 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename events @ 04/11/25 12:44:03.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:03.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:03.377
  STEP: creating a test event @ 04/11/25 12:44:03.38
  STEP: listing events in all namespaces @ 04/11/25 12:44:03.386
  STEP: listing events in test namespace @ 04/11/25 12:44:03.391
  STEP: listing events with field selection filtering on source @ 04/11/25 12:44:03.394
  STEP: listing events with field selection filtering on reportingController @ 04/11/25 12:44:03.396
  STEP: getting the test event @ 04/11/25 12:44:03.398
  STEP: patching the test event @ 04/11/25 12:44:03.4
  STEP: getting the test event @ 04/11/25 12:44:03.41
  STEP: updating the test event @ 04/11/25 12:44:03.413
  STEP: getting the test event @ 04/11/25 12:44:03.418
  STEP: deleting the test event @ 04/11/25 12:44:03.42
  STEP: listing events in all namespaces @ 04/11/25 12:44:03.424
  STEP: listing events in test namespace @ 04/11/25 12:44:03.428
  I0411 12:44:03.431150 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8457" for this suite. @ 04/11/25 12:44:03.457
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 04/11/25 12:44:03.464
  I0411 12:44:03.464234 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 12:44:03.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:03.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:03.479
  STEP: set up a multi version CRD @ 04/11/25 12:44:03.482
  I0411 12:44:03.483286 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: mark a version not serverd @ 04/11/25 12:44:06.468
  STEP: check the unserved version gets removed @ 04/11/25 12:44:06.482
  STEP: check the other version is not changed @ 04/11/25 12:44:07.103
  I0411 12:44:09.456302 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-31" for this suite. @ 04/11/25 12:44:09.464
• [6.007 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/11/25 12:44:09.47
  I0411 12:44:09.470973 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename conformance-tests @ 04/11/25 12:44:09.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:09.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:09.485
  STEP: Getting node addresses @ 04/11/25 12:44:09.488
  I0411 12:44:09.488469 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0411 12:44:09.567270 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9631" for this suite. @ 04/11/25 12:44:09.571
• [0.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/11/25 12:44:09.579
  I0411 12:44:09.579093 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 12:44:09.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:09.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:09.591
  STEP: Creating configMap that has name configmap-test-emptyKey-a27d6102-cffd-4fd6-9ce4-d27bb42de205 @ 04/11/25 12:44:09.593
  I0411 12:44:09.594615 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8737" for this suite. @ 04/11/25 12:44:09.666
• [0.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/11/25 12:44:09.67
  I0411 12:44:09.670709 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:44:09.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:09.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:09.69
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:44:09.691
  STEP: Saw pod success @ 04/11/25 12:44:11.705
  I0411 12:44:11.708773 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-e6863dba-d331-4290-93ca-48283417e720 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:44:11.717
  I0411 12:44:11.732422 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1197" for this suite. @ 04/11/25 12:44:11.736
• [2.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 04/11/25 12:44:11.741
  I0411 12:44:11.741777 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 12:44:11.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:11.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:11.76
  STEP: creating the pod @ 04/11/25 12:44:11.763
  I0411 12:44:11.763657 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 create -f -'
  I0411 12:44:11.837461 26 builder.go:146] stderr: ""
  I0411 12:44:11.837503 26 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/11/25 12:44:13.844
  I0411 12:44:13.844375 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 label pods pause testing-label=testing-label-value'
  I0411 12:44:13.890844 26 builder.go:146] stderr: ""
  I0411 12:44:13.890871 26 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/11/25 12:44:13.89
  I0411 12:44:13.890922 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 get pod pause -L testing-label'
  I0411 12:44:13.928121 26 builder.go:146] stderr: ""
  I0411 12:44:13.928157 26 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/11/25 12:44:13.928
  I0411 12:44:13.928209 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 label pods pause testing-label-'
  I0411 12:44:13.977170 26 builder.go:146] stderr: ""
  I0411 12:44:13.977219 26 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/11/25 12:44:13.977
  I0411 12:44:13.977302 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 get pod pause -L testing-label'
  I0411 12:44:14.014489 26 builder.go:146] stderr: ""
  I0411 12:44:14.014525 26 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 04/11/25 12:44:14.014
  I0411 12:44:14.014641 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 delete --grace-period=0 --force -f -'
  I0411 12:44:14.054847 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 12:44:14.054886 26 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0411 12:44:14.054936 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 get rc,svc -l name=pause --no-headers'
  I0411 12:44:14.100105 26 builder.go:146] stderr: "No resources found in kubectl-1094 namespace.\n"
  I0411 12:44:14.100150 26 builder.go:147] stdout: ""
  I0411 12:44:14.100209 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-1094 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0411 12:44:14.136186 26 builder.go:146] stderr: ""
  I0411 12:44:14.136225 26 builder.go:147] stdout: ""
  I0411 12:44:14.136326 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1094" for this suite. @ 04/11/25 12:44:14.138
• [2.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/11/25 12:44:14.142
  I0411 12:44:14.142158 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename chunking @ 04/11/25 12:44:14.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:44:14.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:44:14.151
  STEP: creating a large number of resources @ 04/11/25 12:44:14.154
  STEP: retrieving the first page @ 04/11/25 12:44:31.849
  I0411 12:44:31.898458 26 chunking.go:163] Retrieved 40/40 results with rv 18658 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/11/25 12:44:31.898
  I0411 12:44:51.908404 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:45:11.909634 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:45:31.908514 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:45:51.903334 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:46:11.906239 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:46:31.906976 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:46:51.907767 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:47:11.905604 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:47:31.908651 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:47:51.908997 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:48:11.907678 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:48:31.908369 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:48:51.905115 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:49:11.907747 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:49:31.908849 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:49:51.903883 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:50:11.907067 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:50:31.907808 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:50:51.904261 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:51:11.907801 26 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0411 12:51:31.906162 26 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0411 12:51:31.906237 26 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/11/25 12:51:31.906
  STEP: retrieving all remaining pages @ 04/11/25 12:51:31.91
  I0411 12:51:31.915150 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0411 12:51:31.919068 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0411 12:51:31.923061 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0411 12:51:31.926577 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0411 12:51:31.930089 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0411 12:51:31.933691 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0411 12:51:31.937050 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkwMzksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0411 12:51:31.940012 26 chunking.go:221] Retrieved 40/40 results with rv 19039 and continue 
  I0411 12:51:31.940223 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7161" for this suite. @ 04/11/25 12:51:31.942
• [437.807 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 04/11/25 12:51:31.949
  I0411 12:51:31.949378 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 12:51:31.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:31.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:31.963
  STEP: Creating simple DaemonSet "daemon-set" @ 04/11/25 12:51:32.051
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/11/25 12:51:32.057
  I0411 12:51:32.150562 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 12:51:32.150616 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 12:51:33.067253 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 12:51:33.067306 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 12:51:34.067023 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 12:51:34.067073 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/11/25 12:51:34.069
  STEP: DeleteCollection of the DaemonSets @ 04/11/25 12:51:34.072
  STEP: Verify that ReplicaSets have been deleted @ 04/11/25 12:51:34.081
  I0411 12:51:34.088926 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19069"},"items":null}

  I0411 12:51:34.097161 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19071"},"items":[{"metadata":{"name":"daemon-set-2btbp","generateName":"daemon-set-","namespace":"daemonsets-6265","uid":"d3d0344f-f26d-476f-93d2-4e5169581e45","resourceVersion":"19071","creationTimestamp":"2025-04-11T12:51:32Z","deletionTimestamp":"2025-04-11T12:52:04Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f6398b8e-b927-482e-89e1-03aaba9afd3a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-11T12:51:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f6398b8e-b927-482e-89e1-03aaba9afd3a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-11T12:51:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.60\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gfzgd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gfzgd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance-m02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance-m02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:33Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:33Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:33Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"}],"hostIP":"192.168.49.3","hostIPs":[{"ip":"192.168.49.3"}],"podIP":"10.244.1.60","podIPs":[{"ip":"10.244.1.60"}],"startTime":"2025-04-11T12:51:32Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-11T12:51:32Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://f9b51385294f125f1d948c028d3c7306bb20f94ad2c3bd29a2a8b4ed5e22c811","started":true,"volumeMounts":[{"name":"kube-api-access-gfzgd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-f8d7g","generateName":"daemon-set-","namespace":"daemonsets-6265","uid":"473450b1-8068-442d-ba9a-dd9996cbc50d","resourceVersion":"19064","creationTimestamp":"2025-04-11T12:51:32Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f6398b8e-b927-482e-89e1-03aaba9afd3a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-11T12:51:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f6398b8e-b927-482e-89e1-03aaba9afd3a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-11T12:51:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.155\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-z5zdb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-z5zdb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-11T12:51:32Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.155","podIPs":[{"ip":"10.244.0.155"}],"startTime":"2025-04-11T12:51:32Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-11T12:51:32Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://bfe4adcf4edf81ff64ca29ab4112c7c47c1dba635094923aaee7772f746a5a16","started":true,"volumeMounts":[{"name":"kube-api-access-z5zdb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0411 12:51:34.167581 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6265" for this suite. @ 04/11/25 12:51:34.169
• [2.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/11/25 12:51:34.172
  I0411 12:51:34.172853 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/11/25 12:51:34.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:34.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:34.184
  STEP: getting /apis @ 04/11/25 12:51:34.186
  STEP: getting /apis/storage.k8s.io @ 04/11/25 12:51:34.188
  STEP: getting /apis/storage.k8s.io/v1 @ 04/11/25 12:51:34.188
  STEP: creating @ 04/11/25 12:51:34.189
  STEP: watching @ 04/11/25 12:51:34.198
  I0411 12:51:34.198745 26 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/11/25 12:51:34.203
  STEP: listing in namespace @ 04/11/25 12:51:34.204
  STEP: listing across namespaces @ 04/11/25 12:51:34.207
  STEP: patching @ 04/11/25 12:51:34.21
  STEP: updating @ 04/11/25 12:51:34.214
  I0411 12:51:34.217058 26 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0411 12:51:34.217145 26 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/11/25 12:51:34.217
  STEP: deleting a collection @ 04/11/25 12:51:34.223
  I0411 12:51:34.230921 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4326" for this suite. @ 04/11/25 12:51:34.264
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/11/25 12:51:34.269
  I0411 12:51:34.269567 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:51:34.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:34.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:34.285
  STEP: Creating a pod to test downward api env vars @ 04/11/25 12:51:34.287
  STEP: Saw pod success @ 04/11/25 12:51:38.309
  I0411 12:51:38.313117 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-6b7fcd05-474e-483f-a065-1e2ae7ddf295 container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 12:51:38.331
  I0411 12:51:38.350316 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4646" for this suite. @ 04/11/25 12:51:38.354
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 04/11/25 12:51:38.36
  I0411 12:51:38.360093 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 12:51:38.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:38.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:38.377
  STEP: Creating a ResourceQuota @ 04/11/25 12:51:38.38
  STEP: Getting a ResourceQuota @ 04/11/25 12:51:38.385
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/11/25 12:51:38.388
  STEP: Patching the ResourceQuota @ 04/11/25 12:51:38.39
  STEP: Deleting a Collection of ResourceQuotas @ 04/11/25 12:51:38.393
  STEP: Verifying the deleted ResourceQuota @ 04/11/25 12:51:38.399
  I0411 12:51:38.401169 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7052" for this suite. @ 04/11/25 12:51:38.453
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/11/25 12:51:38.457
  I0411 12:51:38.457608 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 12:51:38.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:38.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:38.473
  STEP: Creating a pod to test substitution in volume subpath @ 04/11/25 12:51:38.475
  STEP: Saw pod success @ 04/11/25 12:51:42.489
  I0411 12:51:42.493795 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-1fda0abb-1d02-4b55-899e-ffd12f7d5d09 container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 12:51:42.504
  I0411 12:51:42.518600 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5163" for this suite. @ 04/11/25 12:51:42.52
• [4.066 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 04/11/25 12:51:42.523
  I0411 12:51:42.523956 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 12:51:42.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:42.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:42.557
  STEP: Starting the proxy @ 04/11/25 12:51:42.559
  I0411 12:51:42.559310 26 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7769 proxy --unix-socket=/tmp/kubectl-proxy-unix3726164098/test'
  STEP: retrieving proxy /api/ output @ 04/11/25 12:51:42.588
  I0411 12:51:42.589202 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7769" for this suite. @ 04/11/25 12:51:42.622
• [0.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/11/25 12:51:42.63
  I0411 12:51:42.630121 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 12:51:42.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:42.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:42.65
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/11/25 12:51:42.653
  STEP: Saw pod success @ 04/11/25 12:51:46.675
  I0411 12:51:46.679425 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-9ac53e9f-660d-4e6f-8660-32e9c703a890 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 12:51:46.687
  I0411 12:51:46.703508 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7155" for this suite. @ 04/11/25 12:51:46.707
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/11/25 12:51:46.712
  I0411 12:51:46.713019 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 12:51:46.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:46.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:46.731
  STEP: creating pod @ 04/11/25 12:51:46.734
  I0411 12:51:48.757465 26 pods.go:83] Pod pod-hostip-3e07b57d-dead-4fa7-816e-c810921c35eb has hostIP: 192.168.49.3
  I0411 12:51:48.757652 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9571" for this suite. @ 04/11/25 12:51:48.761
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/11/25 12:51:48.766
  I0411 12:51:48.766097 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:51:48.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:48.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:48.783
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:51:48.786
  STEP: Saw pod success @ 04/11/25 12:51:52.808
  I0411 12:51:52.811914 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-bea7bad7-acec-4cf0-bf50-fd0e7bfbe986 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:51:52.819
  I0411 12:51:52.839031 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4291" for this suite. @ 04/11/25 12:51:52.842
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/11/25 12:51:52.848
  I0411 12:51:52.848077 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename subjectreview @ 04/11/25 12:51:52.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:52.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:52.868
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-752" @ 04/11/25 12:51:52.871
  I0411 12:51:52.874927 26 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-752:e2e"
  I0411 12:51:52.874978 26 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-752"}
  I0411 12:51:52.874997 26 subjectreviews.go:71] saUID: "50229607-196b-48ba-b881-d067554cc202"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-752:e2e" @ 04/11/25 12:51:52.875
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-752:e2e" @ 04/11/25 12:51:52.875
  I0411 12:51:52.877198 26 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-752:e2e" api 'list' configmaps in "subjectreview-752" namespace @ 04/11/25 12:51:52.877
  I0411 12:51:52.878442 26 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-752:e2e" @ 04/11/25 12:51:52.878
  I0411 12:51:52.880401 26 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0411 12:51:52.880436 26 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0411 12:51:52.880625 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-752" for this suite. @ 04/11/25 12:51:52.945
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/11/25 12:51:52.952
  I0411 12:51:52.952909 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 12:51:52.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:52.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:52.972
  STEP: Creating configMap configmap-7616/configmap-test-62d816aa-e6c4-47b7-afc7-9cc1d91ad513 @ 04/11/25 12:51:52.975
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:51:52.981
  STEP: Saw pod success @ 04/11/25 12:51:57.003
  I0411 12:51:57.006574 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-9338bbd7-e747-4cfd-bbaf-7afb468373e5 container env-test: <nil>
  STEP: delete the pod @ 04/11/25 12:51:57.015
  I0411 12:51:57.033858 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7616" for this suite. @ 04/11/25 12:51:57.037
• [4.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/11/25 12:51:57.043
  I0411 12:51:57.043477 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename watch @ 04/11/25 12:51:57.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:57.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:57.062
  STEP: creating a new configmap @ 04/11/25 12:51:57.064
  STEP: modifying the configmap once @ 04/11/25 12:51:57.067
  STEP: modifying the configmap a second time @ 04/11/25 12:51:57.074
  STEP: deleting the configmap @ 04/11/25 12:51:57.08
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/11/25 12:51:57.085
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/11/25 12:51:57.086
  I0411 12:51:57.086800 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5418  1c7c79b1-f676-439b-a60b-43f8c19c8605 19689 0 2025-04-11 12:51:57 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-11 12:51:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:51:57.087029 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5418  1c7c79b1-f676-439b-a60b-43f8c19c8605 19690 0 2025-04-11 12:51:57 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-11 12:51:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0411 12:51:57.087268 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5418" for this suite. @ 04/11/25 12:51:57.138
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 04/11/25 12:51:57.144
  I0411 12:51:57.144720 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/11/25 12:51:57.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:51:57.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:51:57.16
  I0411 12:51:57.163624 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:52:57.165939 26 util.go:396] Waiting for terminating namespaces to be deleted...
  I0411 12:52:57.171761 26 taints.go:144] Starting informer...
  STEP: Starting pods... @ 04/11/25 12:52:57.171
  I0411 12:52:57.393485 26 taints.go:463] Pod1 is running on k8sconformance-m02. Tainting Node
  I0411 12:52:59.618584 26 taints.go:471] Pod2 is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/11/25 12:52:59.618
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/11/25 12:52:59.631
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/11/25 12:52:59.635
  I0411 12:53:05.743667 26 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0411 12:53:25.190109 26 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/11/25 12:53:25.203
  I0411 12:53:25.206677 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8263" for this suite. @ 04/11/25 12:53:25.209
• [88.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/11/25 12:53:25.217
  I0411 12:53:25.217728 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename endpointslice @ 04/11/25 12:53:25.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:53:25.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:53:25.327
  STEP: getting /apis @ 04/11/25 12:53:25.33
  STEP: getting /apis/discovery.k8s.io @ 04/11/25 12:53:25.335
  STEP: getting /apis/discovery.k8s.iov1 @ 04/11/25 12:53:25.336
  STEP: creating @ 04/11/25 12:53:25.336
  STEP: getting @ 04/11/25 12:53:25.352
  STEP: listing @ 04/11/25 12:53:25.356
  STEP: watching @ 04/11/25 12:53:25.359
  I0411 12:53:25.359427 26 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/11/25 12:53:25.36
  STEP: cluster-wide watching @ 04/11/25 12:53:25.363
  I0411 12:53:25.363294 26 endpointslice.go:459] starting watch
  STEP: patching @ 04/11/25 12:53:25.364
  STEP: updating @ 04/11/25 12:53:25.368
  I0411 12:53:25.375536 26 endpointslice.go:482] waiting for watch events with expected annotations
  I0411 12:53:25.375580 26 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/11/25 12:53:25.375
  STEP: deleting a collection @ 04/11/25 12:53:25.383
  I0411 12:53:25.391505 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7924" for this suite. @ 04/11/25 12:53:25.393
• [0.180 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 04/11/25 12:53:25.397
  I0411 12:53:25.397369 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:53:25.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:53:25.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:53:25.424
  STEP: Setting up server cert @ 04/11/25 12:53:25.523
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:53:25.748
  STEP: Deploying the webhook pod @ 04/11/25 12:53:25.751
  STEP: Wait for the deployment to be ready @ 04/11/25 12:53:25.757
  I0411 12:53:25.762723 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:53:27.774
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:53:27.787
  I0411 12:53:28.788021 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/11/25 12:53:28.797
  STEP: create the configmap with a random name @ 04/11/25 12:53:28.817
  STEP: verify the configmap is mutated @ 04/11/25 12:53:28.829
  STEP: create the configmap with 'skip-me' name @ 04/11/25 12:53:28.829
  I0411 12:53:28.860427 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6495" for this suite. @ 04/11/25 12:53:28.863
  STEP: Destroying namespace "webhook-markers-8483" for this suite. @ 04/11/25 12:53:28.868
• [3.474 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 04/11/25 12:53:28.871
  I0411 12:53:28.871708 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 12:53:28.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:53:28.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:53:28.882
  I0411 12:53:28.892882 26 service_accounts.go:647] created pod
  STEP: Saw pod success @ 04/11/25 12:53:32.908
  I0411 12:54:02.911365 26 service_accounts.go:653] polling logs
  I0411 12:54:02.932542 26 service_accounts.go:663] Pod logs: 
  I0411 12:53:29.527418       1 log.go:245] OK: Got token
  I0411 12:53:29.527464       1 log.go:245] validating with in-cluster discovery
  I0411 12:53:29.527601       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0411 12:53:29.527618       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7967:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00068d030), NotBefore:(*jwt.NumericDate)(0xc00068d120), IssuedAt:(*jwt.NumericDate)(0xc00068d040), ID:"a2e8987d-bf85-4da2-a81b-ee8fa81972b5"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7967", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7b776e94-b0a8-407e-a870-afec4ad0ce08"}}}
  I0411 12:53:29.532756       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0411 12:53:29.537091       1 log.go:245] OK: Validated signature on JWT
  I0411 12:53:29.537158       1 log.go:245] OK: Got valid claims from token!
  I0411 12:53:29.537198       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7967:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00068d508), NotBefore:(*jwt.NumericDate)(0xc00068d530), IssuedAt:(*jwt.NumericDate)(0xc00068d510), ID:"a2e8987d-bf85-4da2-a81b-ee8fa81972b5"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7967", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7b776e94-b0a8-407e-a870-afec4ad0ce08"}}}

  I0411 12:54:02.932617 26 service_accounts.go:667] completed pod
  I0411 12:54:02.940643 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7967" for this suite. @ 04/11/25 12:54:02.944
• [34.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/11/25 12:54:02.951
  I0411 12:54:02.951437 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename endpointslice @ 04/11/25 12:54:02.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:02.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:02.966
  I0411 12:54:05.012207 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2559" for this suite. @ 04/11/25 12:54:05.015
• [2.069 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 04/11/25 12:54:05.02
  I0411 12:54:05.020450 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 12:54:05.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:05.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:05.033
  STEP: Creating a test headless service @ 04/11/25 12:54:05.035
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2549 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2549;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2549 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2549;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2549.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2549.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2549.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2549.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2549.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2549.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2549.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2549.svc;check="$$(dig +notcp +noall +answer +search 50.28.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.28.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.28.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.28.50_tcp@PTR;sleep 1; done
   @ 04/11/25 12:54:05.051
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2549 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2549;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2549 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2549;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2549.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2549.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2549.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2549.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2549.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2549.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2549.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2549.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2549.svc;check="$$(dig +notcp +noall +answer +search 50.28.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.28.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.28.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.28.50_tcp@PTR;sleep 1; done
   @ 04/11/25 12:54:05.051
  STEP: creating a pod to probe DNS @ 04/11/25 12:54:05.051
  STEP: submitting the pod to kubernetes @ 04/11/25 12:54:05.051
  STEP: retrieving the pod @ 04/11/25 12:54:07.064
  STEP: looking for the results for each expected name from probers @ 04/11/25 12:54:07.066
  I0411 12:54:07.068192 26 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.069786 26 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.071277 26 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2549 from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.072749 26 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2549 from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.073857 26 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.075168 26 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.076583 26 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.077910 26 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.086616 26 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.088168 26 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2549 from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.089960 26 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2549 from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.091701 26 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.093108 26 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.094581 26 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.096191 26 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2549.svc from pod dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808: the server could not find the requested resource (get pods dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808)
  I0411 12:54:07.102251 26 dns_common.go:506] Lookups using dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-2549 agnhost_tcp@dns-test-service.dns-2549 agnhost_udp@dns-test-service.dns-2549.svc agnhost_tcp@dns-test-service.dns-2549.svc agnhost_udp@_http._tcp.dns-test-service.dns-2549.svc agnhost_tcp@_http._tcp.dns-test-service.dns-2549.svc jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2549 jessie_tcp@dns-test-service.dns-2549 jessie_udp@dns-test-service.dns-2549.svc jessie_tcp@dns-test-service.dns-2549.svc jessie_udp@_http._tcp.dns-test-service.dns-2549.svc jessie_tcp@_http._tcp.dns-test-service.dns-2549.svc]

  I0411 12:54:07.107218 26 dns_common.go:514] Pod client logs for webserver: 
  I0411 12:54:07.112790 26 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0411 12:54:07.117277 26 dns_common.go:514] Pod client logs for jessie-querier: 
  I0411 12:54:12.139570 26 dns_common.go:546] DNS probes using dns-2549/dns-test-bb163b9d-001c-4fc2-ab54-b60d54934808 succeeded

  STEP: deleting the pod @ 04/11/25 12:54:12.139
  STEP: deleting the test service @ 04/11/25 12:54:12.15
  STEP: deleting the test headless service @ 04/11/25 12:54:12.174
  I0411 12:54:12.182738 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2549" for this suite. @ 04/11/25 12:54:12.184
• [7.168 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 04/11/25 12:54:12.188
  I0411 12:54:12.188124 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 12:54:12.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:12.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:12.199
  STEP: Creating a suspended job @ 04/11/25 12:54:12.205
  STEP: Patching the Job @ 04/11/25 12:54:12.212
  STEP: Watching for Job to be patched @ 04/11/25 12:54:12.219
  I0411 12:54:12.221461 26 job.go:1309] Event ADDED observed for Job e2e-996zp in namespace job-3183 with labels: map[e2e-job-label:e2e-996zp] and annotations: map[]
  I0411 12:54:12.221487 26 job.go:1312] Event MODIFIED found for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[]
  STEP: Updating the job @ 04/11/25 12:54:12.221
  STEP: Watching for Job to be updated @ 04/11/25 12:54:12.225
  I0411 12:54:12.226791 26 job.go:1312] Event MODIFIED found for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  I0411 12:54:12.226830 26 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/11/25 12:54:12.226
  I0411 12:54:12.228170 26 job.go:1187] Job: e2e-996zp as labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp]
  STEP: Waiting for job to complete @ 04/11/25 12:54:12.228
  STEP: Delete a job collection with a labelselector @ 04/11/25 12:54:20.253
  STEP: Watching for Job to be deleted @ 04/11/25 12:54:20.26
  I0411 12:54:20.261823 26 job.go:1309] Event MODIFIED observed for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  I0411 12:54:20.261870 26 job.go:1309] Event MODIFIED observed for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  I0411 12:54:20.261897 26 job.go:1309] Event MODIFIED observed for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  I0411 12:54:20.261922 26 job.go:1309] Event MODIFIED observed for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  I0411 12:54:20.261957 26 job.go:1309] Event MODIFIED observed for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  I0411 12:54:20.261975 26 job.go:1312] Event DELETED found for Job e2e-996zp in namespace job-3183 with labels: map[e2e-996zp:patched e2e-job-label:e2e-996zp] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/11/25 12:54:20.261
  I0411 12:54:20.263271 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3183" for this suite. @ 04/11/25 12:54:20.264
• [8.082 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/11/25 12:54:20.269
  I0411 12:54:20.269860 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename podtemplate @ 04/11/25 12:54:20.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:20.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:20.288
  I0411 12:54:20.303567 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9641" for this suite. @ 04/11/25 12:54:20.367
• [0.106 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/11/25 12:54:20.375
  I0411 12:54:20.375916 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:54:20.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:20.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:20.392
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:54:20.395
  STEP: Saw pod success @ 04/11/25 12:54:24.42
  I0411 12:54:24.424156 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-1a47c1f8-cfe2-48d5-82f6-d851f5a7376e container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:54:24.431
  I0411 12:54:24.447269 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3971" for this suite. @ 04/11/25 12:54:24.451
• [4.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/11/25 12:54:24.457
  I0411 12:54:24.457035 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename certificates @ 04/11/25 12:54:24.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:24.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:24.472
  STEP: getting /apis @ 04/11/25 12:54:24.765
  STEP: getting /apis/certificates.k8s.io @ 04/11/25 12:54:24.768
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/11/25 12:54:24.768
  STEP: creating @ 04/11/25 12:54:24.769
  STEP: getting @ 04/11/25 12:54:24.78
  STEP: listing @ 04/11/25 12:54:24.781
  STEP: watching @ 04/11/25 12:54:24.783
  I0411 12:54:24.783298 26 certificates.go:316] starting watch
  STEP: patching @ 04/11/25 12:54:24.783
  STEP: updating @ 04/11/25 12:54:24.787
  I0411 12:54:24.791566 26 certificates.go:332] waiting for watch events with expected annotations
  I0411 12:54:24.791606 26 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/11/25 12:54:24.791
  STEP: patching /approval @ 04/11/25 12:54:24.793
  STEP: updating /approval @ 04/11/25 12:54:24.796
  STEP: getting /status @ 04/11/25 12:54:24.801
  STEP: patching /status @ 04/11/25 12:54:24.804
  STEP: updating /status @ 04/11/25 12:54:24.81
  STEP: deleting @ 04/11/25 12:54:24.815
  STEP: deleting a collection @ 04/11/25 12:54:24.825
  I0411 12:54:24.835572 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9418" for this suite. @ 04/11/25 12:54:24.838
• [0.386 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 04/11/25 12:54:24.843
  I0411 12:54:24.843406 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 12:54:24.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:54:24.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:54:24.857
  STEP: Creating service test in namespace statefulset-1266 @ 04/11/25 12:54:24.86
  STEP: Creating stateful set ss in namespace statefulset-1266 @ 04/11/25 12:54:24.863
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1266 @ 04/11/25 12:54:24.867
  I0411 12:54:24.870443 26 wait.go:40] Found 0 stateful pods, waiting for 1
  I0411 12:54:34.874132 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/11/25 12:54:34.874
  I0411 12:54:34.877401 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 12:54:34.993728 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 12:54:34.993792 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 12:54:34.993817 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 12:54:34.997299 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0411 12:54:45.001813 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0411 12:54:45.001879 26 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0411 12:54:45.023843 26 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I0411 12:54:45.024006 26 resource.go:175] ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:24 +0000 UTC  }]
  I0411 12:54:45.024041 26 resource.go:175] ss-2                      Pending         []
  I0411 12:54:45.024065 26 resource.go:178] 
  I0411 12:54:45.024090 26 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  I0411 12:54:46.027261 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.990801086s
  I0411 12:54:47.033618 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.987855678s
  I0411 12:54:48.040910 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.980779197s
  I0411 12:54:49.044119 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.973689008s
  I0411 12:54:50.050533 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.971064003s
  I0411 12:54:51.057744 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.964460108s
  I0411 12:54:52.060754 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.957422248s
  I0411 12:54:53.066559 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.954243833s
  I0411 12:54:54.073504 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 948.674989ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1266 @ 04/11/25 12:54:55.074
  I0411 12:54:55.077263 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 12:54:55.171052 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 12:54:55.171114 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 12:54:55.171158 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 12:54:55.171223 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 12:54:55.260644 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0411 12:54:55.260698 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 12:54:55.260714 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 12:54:55.260775 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 12:54:55.354430 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0411 12:54:55.354498 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 12:54:55.354522 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 12:54:55.358661 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0411 12:55:05.360717 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 12:55:05.360772 26 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0411 12:55:05.360791 26 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/11/25 12:55:05.36
  I0411 12:55:05.363404 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 12:55:05.453860 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 12:55:05.453914 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 12:55:05.453932 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 12:55:05.453993 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 12:55:05.556035 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 12:55:05.556076 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 12:55:05.556088 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 12:55:05.556131 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-1266 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 12:55:05.664441 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 12:55:05.664502 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 12:55:05.664524 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 12:55:05.664544 26 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0411 12:55:05.667782 26 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0411 12:55:15.676038 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0411 12:55:15.676097 26 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0411 12:55:15.676116 26 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0411 12:55:15.693032 26 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I0411 12:55:15.693226 26 resource.go:175] ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:24 +0000 UTC  }]
  I0411 12:55:15.693293 26 resource.go:175] ss-1  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC  }]
  I0411 12:55:15.693335 26 resource.go:175] ss-2  k8sconformance      Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC  }]
  I0411 12:55:15.693352 26 resource.go:178] 
  I0411 12:55:15.693443 26 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0411 12:55:16.700026 26 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0411 12:55:16.700115 26 resource.go:175] ss-2  k8sconformance  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:06 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:55:06 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-11 12:54:45 +0000 UTC  }]
  I0411 12:55:16.700131 26 resource.go:178] 
  I0411 12:55:16.700145 26 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 1
  I0411 12:55:17.705428 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.984179062s
  I0411 12:55:18.710582 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.978818293s
  I0411 12:55:19.716755 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.973074956s
  I0411 12:55:20.723190 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.967493295s
  I0411 12:55:21.728769 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.961127631s
  I0411 12:55:22.733636 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.955545354s
  I0411 12:55:23.739890 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.950245524s
  I0411 12:55:24.745806 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 943.939128ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1266 @ 04/11/25 12:55:25.746
  I0411 12:55:25.752760 26 rest.go:152] Scaling statefulset ss to 0
  I0411 12:55:25.758074 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 12:55:25.760795 26 statefulset.go:138] Deleting all statefulset in ns statefulset-1266
  I0411 12:55:25.763430 26 rest.go:152] Scaling statefulset ss to 0
  I0411 12:55:25.767602 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 12:55:25.769729 26 rest.go:90] Deleting statefulset ss
  I0411 12:55:25.782126 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1266" for this suite. @ 04/11/25 12:55:25.785
• [60.947 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 04/11/25 12:55:25.79
  I0411 12:55:25.790397 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:55:25.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:55:25.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:55:25.805
  STEP: Creating a pod to test downward api env vars @ 04/11/25 12:55:25.807
  STEP: Saw pod success @ 04/11/25 12:55:29.826
  I0411 12:55:29.829906 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-61988536-c9fd-462f-8c25-ce2f0e18e165 container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 12:55:29.837
  I0411 12:55:29.854609 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6989" for this suite. @ 04/11/25 12:55:29.858
• [4.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 04/11/25 12:55:29.864
  I0411 12:55:29.864411 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:55:29.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:55:29.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:55:29.88
  STEP: creating an Endpoint @ 04/11/25 12:55:29.886
  STEP: waiting for available Endpoint @ 04/11/25 12:55:29.89
  STEP: listing all Endpoints @ 04/11/25 12:55:29.891
  STEP: updating the Endpoint @ 04/11/25 12:55:29.893
  STEP: fetching the Endpoint @ 04/11/25 12:55:29.898
  STEP: patching the Endpoint @ 04/11/25 12:55:29.9
  STEP: fetching the Endpoint @ 04/11/25 12:55:29.908
  STEP: deleting the Endpoint by Collection @ 04/11/25 12:55:29.909
  STEP: waiting for Endpoint deletion @ 04/11/25 12:55:29.912
  STEP: fetching the Endpoint @ 04/11/25 12:55:29.913
  I0411 12:55:29.914861 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7500" for this suite. @ 04/11/25 12:55:29.96
• [0.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 04/11/25 12:55:29.966
  I0411 12:55:29.966471 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:55:29.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:55:29.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:55:29.982
  STEP: creating service multiprotocol-test in namespace services-7791 @ 04/11/25 12:55:29.985
  STEP: creating pod pod1 in namespace services-7791 @ 04/11/25 12:55:29.995
  STEP: Creating pod pod1 in namespace services-7791 @ 04/11/25 12:55:29.996
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7791 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/11/25 12:55:32.018
  I0411 12:55:32.027776 26 service.go:4553] successfully validated that service multiprotocol-test in namespace services-7791 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/11/25 12:55:32.027
  I0411 12:55:32.027850 26 resource.go:361] Creating new exec pod
  I0411 12:55:34.043468 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80'
  I0411 12:55:34.130983 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.4.143 80\nConnection to 10.109.4.143 80 port [tcp/http] succeeded!\n"
  I0411 12:55:34.131029 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:55:34.131100 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.4.143 80'
  I0411 12:55:36.231651 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.4.143 80\n"
  I0411 12:55:36.231721 26 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/11/25 12:55:36.231
  I0411 12:55:36.242430 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80'
  I0411 12:55:36.359827 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.4.143 80\nConnection to 10.109.4.143 80 port [tcp/http] succeeded!\n"
  I0411 12:55:36.359872 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:55:36.359967 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.4.143 80'
  I0411 12:55:38.462559 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.4.143 80\n"
  I0411 12:55:38.462605 26 builder.go:147] stdout: ""
  I0411 12:55:38.462665 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.4.143 80'
  I0411 12:55:40.562986 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.4.143 80\n"
  I0411 12:55:40.563066 26 builder.go:147] stdout: ""
  I0411 12:55:40.563157 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.4.143 80'
  I0411 12:55:42.670052 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.4.143 80\n"
  I0411 12:55:42.670130 26 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/11/25 12:55:42.67
  I0411 12:55:42.679597 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.4.143 80'
  I0411 12:55:42.781529 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.4.143 80\n"
  I0411 12:55:42.781572 26 builder.go:147] stdout: ""
  I0411 12:55:44.680405 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.4.143 80'
  I0411 12:55:46.795465 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.4.143 80\n"
  I0411 12:55:46.795532 26 builder.go:147] stdout: "pod1"
  I0411 12:55:46.795684 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80'
  I0411 12:55:48.908784 26 builder.go:135] rc: 1
  I0411 12:55:48.908894 26 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.109.4.143 80
  nc: connect to 10.109.4.143 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0411 12:55:48.909022 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80'
  I0411 12:55:51.026033 26 builder.go:135] rc: 1
  I0411 12:55:51.026289 26 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.109.4.143 80
  nc: connect to 10.109.4.143 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0411 12:55:51.026522 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80'
  I0411 12:55:53.117824 26 builder.go:135] rc: 1
  I0411 12:55:53.117887 26 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7791 exec execpodnzz9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.4.143 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.109.4.143 80
  nc: connect to 10.109.4.143 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0411 12:55:53.118046 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7791" for this suite. @ 04/11/25 12:55:53.12
• [23.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/11/25 12:55:53.125
  I0411 12:55:53.125305 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-runtime @ 04/11/25 12:55:53.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:55:53.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:55:53.137
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/11/25 12:55:53.144
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/11/25 12:56:10.231
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/11/25 12:56:10.234
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/11/25 12:56:10.24
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/11/25 12:56:10.24
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/11/25 12:56:10.262
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/11/25 12:56:13.283
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/11/25 12:56:14.291
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/11/25 12:56:14.297
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/11/25 12:56:14.297
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/11/25 12:56:14.318
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/11/25 12:56:15.328
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/11/25 12:56:17.344
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/11/25 12:56:17.349
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/11/25 12:56:17.349
  I0411 12:56:17.375279 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5158" for this suite. @ 04/11/25 12:56:17.378
• [24.258 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/11/25 12:56:17.383
  I0411 12:56:17.383673 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:56:17.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:56:17.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:56:17.399
  STEP: Creating configMap with name projected-configmap-test-volume-map-9040bce4-6e6d-49fc-bb0e-c09a5ab6d6c0 @ 04/11/25 12:56:17.402
  STEP: Creating a pod to test consume configMaps @ 04/11/25 12:56:17.406
  STEP: Saw pod success @ 04/11/25 12:56:21.428
  I0411 12:56:21.431070 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-ccedc99c-9323-46c7-807c-6f70d5e6156d container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 12:56:21.436
  I0411 12:56:21.447575 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9747" for this suite. @ 04/11/25 12:56:21.449
• [4.069 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/11/25 12:56:21.452
  I0411 12:56:21.452268 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 12:56:21.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:56:21.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:56:21.465
  STEP: create the rc @ 04/11/25 12:56:21.468
  W0411 12:56:21.474408      26 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/11/25 12:56:26.479
  STEP: wait for all pods to be garbage collected @ 04/11/25 12:56:26.484
  STEP: Gathering metrics @ 04/11/25 12:56:31.492
  I0411 12:56:31.572108 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0411 12:56:31.572211 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-49" for this suite. @ 04/11/25 12:56:31.574
• [10.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 04/11/25 12:56:31.579
  I0411 12:56:31.579148 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:56:31.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:56:31.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:56:31.593
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3515 @ 04/11/25 12:56:31.596
  STEP: changing the ExternalName service to type=NodePort @ 04/11/25 12:56:31.6
  STEP: creating replication controller externalname-service in namespace services-3515 @ 04/11/25 12:56:31.619
  I0411 12:56:31.628895      26 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3515, replica count: 2
  I0411 12:56:34.679658      26 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:56:34.679690 26 resource.go:361] Creating new exec pod
  I0411 12:56:37.696619 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-3515 exec execpodcctqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0411 12:56:37.793297 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.110.176.166) 80 port [tcp/http] succeeded!\n"
  I0411 12:56:37.793357 26 builder.go:147] stdout: ""
  I0411 12:56:38.697421 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-3515 exec execpodcctqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0411 12:56:38.787290 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.110.176.166) 80 port [tcp/http] succeeded!\n"
  I0411 12:56:38.787360 26 builder.go:147] stdout: "externalname-service-52fnp"
  I0411 12:56:38.787479 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-3515 exec execpodcctqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.176.166 80'
  I0411 12:56:38.892617 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.176.166 80\nConnection to 10.110.176.166 80 port [tcp/http] succeeded!\n"
  I0411 12:56:38.892674 26 builder.go:147] stdout: "externalname-service-52fnp"
  I0411 12:56:38.892778 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-3515 exec execpodcctqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31205'
  I0411 12:56:38.997953 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31205\nConnection to 192.168.49.2 31205 port [tcp/*] succeeded!\n"
  I0411 12:56:38.998032 26 builder.go:147] stdout: "externalname-service-52fnp"
  I0411 12:56:38.998169 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-3515 exec execpodcctqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31205'
  I0411 12:56:39.087443 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31205\nConnection to 192.168.49.3 31205 port [tcp/*] succeeded!\n"
  I0411 12:56:39.087505 26 builder.go:147] stdout: "externalname-service-52fnp"
  I0411 12:56:39.087612 26 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0411 12:56:39.108421 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3515" for this suite. @ 04/11/25 12:56:39.111
• [7.537 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 04/11/25 12:56:39.116
  I0411 12:56:39.116797 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 12:56:39.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:56:39.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:56:39.132
  I0411 12:57:39.144305 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6666" for this suite. @ 04/11/25 12:57:39.148
• [60.039 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/11/25 12:57:39.155
  I0411 12:57:39.155908 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename namespaces @ 04/11/25 12:57:39.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:57:39.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:57:39.173
  STEP: Creating a test namespace @ 04/11/25 12:57:39.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:57:39.275
  STEP: Creating a service in the namespace @ 04/11/25 12:57:39.279
  STEP: Deleting the namespace @ 04/11/25 12:57:39.29
  STEP: Waiting for the namespace to be removed. @ 04/11/25 12:57:39.298
  STEP: Recreating the namespace @ 04/11/25 12:57:45.302
  STEP: Verifying there is no service in the namespace @ 04/11/25 12:57:45.314
  I0411 12:57:45.317062 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4557" for this suite. @ 04/11/25 12:57:45.32
  STEP: Destroying namespace "nsdeletetest-9402" for this suite. @ 04/11/25 12:57:45.325
  I0411 12:57:45.328427 26 framework.go:370] Namespace nsdeletetest-9402 was already deleted
  STEP: Destroying namespace "nsdeletetest-3481" for this suite. @ 04/11/25 12:57:45.328
• [6.178 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/11/25 12:57:45.333
  I0411 12:57:45.333815 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 12:57:45.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:57:45.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:57:45.422
  STEP: creating a secret @ 04/11/25 12:57:45.425
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/11/25 12:57:45.429
  STEP: patching the secret @ 04/11/25 12:57:45.432
  STEP: deleting the secret using a LabelSelector @ 04/11/25 12:57:45.438
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/11/25 12:57:45.443
  I0411 12:57:45.446372 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8932" for this suite. @ 04/11/25 12:57:45.449
• [0.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 04/11/25 12:57:45.453
  I0411 12:57:45.453506 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-preemption @ 04/11/25 12:57:45.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:57:45.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:57:45.523
  I0411 12:57:45.539703 26 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0411 12:58:45.545825 26 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 04/11/25 12:58:45.547
  STEP: Adding a custom resource @ 04/11/25 12:58:45.547
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 04/11/25 12:58:45.554
  I0411 12:58:45.561818 26 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 04/11/25 12:58:45.561
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 04/11/25 12:58:47.57
  I0411 12:58:47.578273 26 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 04/11/25 12:58:47.578
  STEP: Verifying the pod has the pod disruption condition @ 04/11/25 12:58:49.586
  I0411 12:58:49.588982 26 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0411 12:58:50.105502 26 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 04/11/25 12:58:50.123
  STEP: Removing a custom resource @ 04/11/25 12:58:50.138
  I0411 12:58:50.146681 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4113" for this suite. @ 04/11/25 12:58:50.149
• [64.700 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 04/11/25 12:58:50.154
  I0411 12:58:50.154329 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 12:58:50.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:58:50.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:58:50.174
  I0411 12:58:50.180439 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/11/25 12:58:51.328
  I0411 12:58:51.328790 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-3258 --namespace=crd-publish-openapi-3258 create -f -'
  I0411 12:58:53.398106 26 builder.go:146] stderr: ""
  I0411 12:58:53.398211 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0411 12:58:53.398311 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-3258 --namespace=crd-publish-openapi-3258 delete e2e-test-crd-publish-openapi-1898-crds test-cr'
  I0411 12:58:53.447104 26 builder.go:146] stderr: ""
  I0411 12:58:53.447139 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0411 12:58:53.447166 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-3258 --namespace=crd-publish-openapi-3258 apply -f -'
  I0411 12:58:53.489738 26 builder.go:146] stderr: ""
  I0411 12:58:53.489768 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0411 12:58:53.489796 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-3258 --namespace=crd-publish-openapi-3258 delete e2e-test-crd-publish-openapi-1898-crds test-cr'
  I0411 12:58:53.540729 26 builder.go:146] stderr: ""
  I0411 12:58:53.540757 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/11/25 12:58:53.54
  I0411 12:58:53.540806 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-3258 explain e2e-test-crd-publish-openapi-1898-crds'
  I0411 12:58:53.589704 26 builder.go:146] stderr: ""
  I0411 12:58:53.589756 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1898-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0411 12:58:54.733807 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3258" for this suite. @ 04/11/25 12:58:54.741
• [4.593 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/11/25 12:58:54.747
  I0411 12:58:54.747344 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 12:58:54.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:58:54.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:58:54.759
  I0411 12:58:54.852079 26 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/11/25 12:58:54.857
  I0411 12:58:54.949082 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 12:58:54.949145 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0411 12:58:55.924979 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 12:58:55.925060 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 12:58:56.866873 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 12:58:56.866925 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/11/25 12:58:56.878
  STEP: Check that daemon pods images are updated. @ 04/11/25 12:58:56.963
  I0411 12:58:56.967800 26 daemon_set.go:1193] Wrong image for pod: daemon-set-4b2bk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0411 12:58:57.971136 26 daemon_set.go:1193] Wrong image for pod: daemon-set-4b2bk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0411 12:58:57.971205 26 daemon_set.go:1198] Pod daemon-set-dz5qj is not available
  I0411 12:58:58.968216 26 daemon_set.go:1198] Pod daemon-set-2tj2c is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/11/25 12:58:58.97
  I0411 12:58:58.973845 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 12:58:58.973877 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 12:58:59.980079 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 12:58:59.980126 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 12:59:00.979582 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 12:59:00.979642 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/11/25 12:59:00.993
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5656, will wait for the garbage collector to delete the pods @ 04/11/25 12:59:00.993
  I0411 12:59:01.054812 26 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.424321ms
  I0411 12:59:01.155731 26 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.929109ms
  I0411 12:59:02.160480 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 12:59:02.160537 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0411 12:59:02.163734 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21258"},"items":null}

  I0411 12:59:02.166060 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21258"},"items":null}

  I0411 12:59:02.174162 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5656" for this suite. @ 04/11/25 12:59:02.176
• [7.435 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/11/25 12:59:02.183
  I0411 12:59:02.183115 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:59:02.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:02.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:02.195
  STEP: Creating a pod to test downward api env vars @ 04/11/25 12:59:02.198
  STEP: Saw pod success @ 04/11/25 12:59:06.216
  I0411 12:59:06.220510 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-0f13d7d6-17fe-4b31-8f0e-40552e41a82a container dapi-container: <nil>
  STEP: delete the pod @ 04/11/25 12:59:06.243
  I0411 12:59:06.260272 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3830" for this suite. @ 04/11/25 12:59:06.263
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/11/25 12:59:06.271
  I0411 12:59:06.271097 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename endpointslice @ 04/11/25 12:59:06.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:06.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:06.288
  I0411 12:59:06.298715 26 endpointslice.go:1045] Endpoints addresses: [192.168.49.2] , ports: [8443]
  I0411 12:59:06.298747 26 endpointslice.go:1075] EndpointSlices addresses: [192.168.49.2] , ports: [8443]
  I0411 12:59:06.298867 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2964" for this suite. @ 04/11/25 12:59:06.365
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 04/11/25 12:59:06.374
  I0411 12:59:06.374419 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 12:59:06.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:06.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:06.39
  STEP: Setting up server cert @ 04/11/25 12:59:06.491
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 12:59:06.616
  STEP: Deploying the webhook pod @ 04/11/25 12:59:06.622
  STEP: Wait for the deployment to be ready @ 04/11/25 12:59:06.629
  I0411 12:59:06.634039 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 12:59:08.64
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 12:59:08.65
  I0411 12:59:09.651658 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/11/25 12:59:09.661
  STEP: create a pod that should be updated by the webhook @ 04/11/25 12:59:09.679
  I0411 12:59:09.736633 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4450" for this suite. @ 04/11/25 12:59:09.739
  STEP: Destroying namespace "webhook-markers-1534" for this suite. @ 04/11/25 12:59:09.746
• [3.377 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 04/11/25 12:59:09.751
  I0411 12:59:09.751716 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:59:09.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:09.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:09.761
  STEP: creating service in namespace services-7946 @ 04/11/25 12:59:09.763
  STEP: creating service affinity-nodeport-transition in namespace services-7946 @ 04/11/25 12:59:09.763
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7946 @ 04/11/25 12:59:09.772
  I0411 12:59:09.778285      26 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7946, replica count: 3
  I0411 12:59:12.830394      26 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 12:59:12.840120 26 resource.go:361] Creating new exec pod
  I0411 12:59:15.857669 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7946 exec execpod-affinityz7xqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0411 12:59:15.950165 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.107.209.73) 80 port [tcp/http] succeeded!\n"
  I0411 12:59:15.950216 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:59:15.950293 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7946 exec execpod-affinityz7xqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.209.73 80'
  I0411 12:59:16.037977 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.209.73 80\nConnection to 10.107.209.73 80 port [tcp/http] succeeded!\n"
  I0411 12:59:16.038045 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:59:16.038155 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7946 exec execpod-affinityz7xqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31417'
  I0411 12:59:16.128611 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31417\nConnection to 192.168.49.2 31417 port [tcp/*] succeeded!\n"
  I0411 12:59:16.128658 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:59:16.128749 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7946 exec execpod-affinityz7xqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31417'
  I0411 12:59:16.227524 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31417\nConnection to 192.168.49.3 31417 port [tcp/*] succeeded!\n"
  I0411 12:59:16.227572 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 12:59:16.233984 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7946 exec execpod-affinityz7xqj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31417/ ; done'
  I0411 12:59:16.421425 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n"
  I0411 12:59:16.421471 26 builder.go:147] stdout: "\naffinity-nodeport-transition-8jk5k\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-8jk5k\naffinity-nodeport-transition-g7wp8\naffinity-nodeport-transition-g7wp8\naffinity-nodeport-transition-g7wp8\naffinity-nodeport-transition-g7wp8\naffinity-nodeport-transition-8jk5k\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-g7wp8\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-8jk5k\naffinity-nodeport-transition-8jk5k"
  I0411 12:59:16.421485 26 service.go:242] Received response from host: affinity-nodeport-transition-8jk5k
  I0411 12:59:16.421493 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.421500 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.421506 26 service.go:242] Received response from host: affinity-nodeport-transition-8jk5k
  I0411 12:59:16.421513 26 service.go:242] Received response from host: affinity-nodeport-transition-g7wp8
  I0411 12:59:16.421519 26 service.go:242] Received response from host: affinity-nodeport-transition-g7wp8
  I0411 12:59:16.421530 26 service.go:242] Received response from host: affinity-nodeport-transition-g7wp8
  I0411 12:59:16.421536 26 service.go:242] Received response from host: affinity-nodeport-transition-g7wp8
  I0411 12:59:16.421544 26 service.go:242] Received response from host: affinity-nodeport-transition-8jk5k
  I0411 12:59:16.421553 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.421559 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.421565 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.421571 26 service.go:242] Received response from host: affinity-nodeport-transition-g7wp8
  I0411 12:59:16.421577 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.421584 26 service.go:242] Received response from host: affinity-nodeport-transition-8jk5k
  I0411 12:59:16.421589 26 service.go:242] Received response from host: affinity-nodeport-transition-8jk5k
  I0411 12:59:16.429654 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7946 exec execpod-affinityz7xqj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31417/ ; done'
  I0411 12:59:16.583449 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31417/\n"
  I0411 12:59:16.583501 26 builder.go:147] stdout: "\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c\naffinity-nodeport-transition-94k4c"
  I0411 12:59:16.583519 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583530 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583540 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583549 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583558 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583567 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583575 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583583 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583595 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583603 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583612 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583627 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583635 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583643 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583659 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583667 26 service.go:242] Received response from host: affinity-nodeport-transition-94k4c
  I0411 12:59:16.583740 26 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7946, will wait for the garbage collector to delete the pods @ 04/11/25 12:59:16.593
  I0411 12:59:16.652038 26 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 5.61201ms
  I0411 12:59:16.753007 26 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.969568ms
  I0411 12:59:19.678560 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7946" for this suite. @ 04/11/25 12:59:19.682
• [9.936 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 04/11/25 12:59:19.687
  I0411 12:59:19.687638 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:59:19.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:19.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:19.704
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7488 @ 04/11/25 12:59:19.707
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/11/25 12:59:19.722
  STEP: creating service externalsvc in namespace services-7488 @ 04/11/25 12:59:19.722
  STEP: creating replication controller externalsvc in namespace services-7488 @ 04/11/25 12:59:19.737
  I0411 12:59:19.743234      26 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7488, replica count: 2
  I0411 12:59:22.795272      26 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/11/25 12:59:22.797
  I0411 12:59:22.811071 26 resource.go:361] Creating new exec pod
  I0411 12:59:24.819035 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-7488 exec execpod266pv -- /bin/sh -x -c nslookup nodeport-service.services-7488.svc.cluster.local'
  I0411 12:59:24.964776 26 builder.go:146] stderr: "+ nslookup nodeport-service.services-7488.svc.cluster.local\n"
  I0411 12:59:24.964843 26 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-7488.svc.cluster.local\tcanonical name = externalsvc.services-7488.svc.cluster.local.\nName:\texternalsvc.services-7488.svc.cluster.local\nAddress: 10.109.140.206\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7488, will wait for the garbage collector to delete the pods @ 04/11/25 12:59:24.965
  I0411 12:59:25.031587 26 resources.go:139] Deleting ReplicationController externalsvc took: 11.910368ms
  I0411 12:59:25.131873 26 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.290875ms
  I0411 12:59:28.151308 26 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0411 12:59:28.163036 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7488" for this suite. @ 04/11/25 12:59:28.167
• [8.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 04/11/25 12:59:28.175
  I0411 12:59:28.175318 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 12:59:28.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:28.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:28.19
  I0411 12:59:28.193061 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/11/25 12:59:29.332
  I0411 12:59:29.332355 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-9742 --namespace=crd-publish-openapi-9742 create -f -'
  I0411 12:59:31.393816 26 builder.go:146] stderr: ""
  I0411 12:59:31.393888 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5503-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0411 12:59:31.393969 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-9742 --namespace=crd-publish-openapi-9742 delete e2e-test-crd-publish-openapi-5503-crds test-cr'
  I0411 12:59:31.438851 26 builder.go:146] stderr: ""
  I0411 12:59:31.438886 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5503-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0411 12:59:31.438943 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-9742 --namespace=crd-publish-openapi-9742 apply -f -'
  I0411 12:59:31.483465 26 builder.go:146] stderr: ""
  I0411 12:59:31.483508 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5503-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0411 12:59:31.483557 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-9742 --namespace=crd-publish-openapi-9742 delete e2e-test-crd-publish-openapi-5503-crds test-cr'
  I0411 12:59:31.523829 26 builder.go:146] stderr: ""
  I0411 12:59:31.523872 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5503-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/11/25 12:59:31.523
  I0411 12:59:31.523950 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-9742 explain e2e-test-crd-publish-openapi-5503-crds'
  I0411 12:59:31.558696 26 builder.go:146] stderr: ""
  I0411 12:59:31.558759 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5503-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0411 12:59:32.711597 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9742" for this suite. @ 04/11/25 12:59:32.717
• [4.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/11/25 12:59:32.72
  I0411 12:59:32.720952 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 12:59:32.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:32.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:32.732
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:59:32.734
  STEP: Saw pod success @ 04/11/25 12:59:36.755
  I0411 12:59:36.758246 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-60ca9721-6a24-43e1-83d8-154ac0f1eeb2 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:59:36.765
  I0411 12:59:36.784401 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7143" for this suite. @ 04/11/25 12:59:36.787
• [4.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/11/25 12:59:36.794
  I0411 12:59:36.794048 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename endpointslice @ 04/11/25 12:59:36.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:36.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:36.81
  STEP: referencing a single matching pod @ 04/11/25 12:59:38.876
  STEP: referencing matching pods with named port @ 04/11/25 12:59:38.881
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/11/25 12:59:38.886
  STEP: recreating EndpointSlices after they've been deleted @ 04/11/25 12:59:38.891
  I0411 12:59:38.908801 26 endpointslice.go:938] EndpointSlice for Service endpointslice-6094/example-named-port not found
  I0411 12:59:40.916454 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6094" for this suite. @ 04/11/25 12:59:40.919
• [4.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/11/25 12:59:40.924
  I0411 12:59:40.924576 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename podtemplate @ 04/11/25 12:59:40.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:40.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:40.941
  STEP: Create a pod template @ 04/11/25 12:59:40.943
  STEP: Replace a pod template @ 04/11/25 12:59:40.947
  I0411 12:59:40.956458 26 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0411 12:59:40.956664 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6170" for this suite. @ 04/11/25 12:59:41.02
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 04/11/25 12:59:41.027
  I0411 12:59:41.027501 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 12:59:41.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:41.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:41.043
  STEP: creating a collection of services @ 04/11/25 12:59:41.045
  I0411 12:59:41.045399 26 service.go:3635] Creating e2e-svc-a-56pq2
  I0411 12:59:41.056872 26 service.go:3635] Creating e2e-svc-b-xclvq
  I0411 12:59:41.070662 26 service.go:3635] Creating e2e-svc-c-rr8l8
  STEP: deleting service collection @ 04/11/25 12:59:41.086
  I0411 12:59:41.128518 26 service.go:3670] Collection of services has been deleted
  I0411 12:59:41.128664 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4026" for this suite. @ 04/11/25 12:59:41.13
• [0.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/11/25 12:59:41.135
  I0411 12:59:41.135274 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 12:59:41.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:41.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:41.148
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 12:59:41.15
  STEP: Saw pod success @ 04/11/25 12:59:45.169
  I0411 12:59:45.172854 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-086c7925-2efd-465e-af1c-a090e72a1144 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 12:59:45.179
  I0411 12:59:45.197384 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1958" for this suite. @ 04/11/25 12:59:45.2
• [4.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/11/25 12:59:45.206
  I0411 12:59:45.206609 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename subpath @ 04/11/25 12:59:45.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 12:59:45.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 12:59:45.221
  STEP: Setting up data @ 04/11/25 12:59:45.224
  STEP: Creating pod pod-subpath-test-projected-fr6l @ 04/11/25 12:59:45.232
  STEP: Creating a pod to test atomic-volume-subpath @ 04/11/25 12:59:45.232
  STEP: Saw pod success @ 04/11/25 13:00:07.297
  I0411 13:00:07.298254 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-projected-fr6l container test-container-subpath-projected-fr6l: <nil>
  STEP: delete the pod @ 04/11/25 13:00:07.303
  STEP: Deleting pod pod-subpath-test-projected-fr6l @ 04/11/25 13:00:07.312
  I0411 13:00:07.312421 26 delete.go:62] Deleting pod "pod-subpath-test-projected-fr6l" in namespace "subpath-3361"
  I0411 13:00:07.314012 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3361" for this suite. @ 04/11/25 13:00:07.315
• [22.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 04/11/25 13:00:07.318
  I0411 13:00:07.318553 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:00:07.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:07.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:07.33
  STEP: creating Agnhost RC @ 04/11/25 13:00:07.332
  I0411 13:00:07.332181 26 kubectl.go:1534] namespace kubectl-6705
  I0411 13:00:07.332223 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-6705 create -f -'
  I0411 13:00:07.408516 26 builder.go:146] stderr: ""
  I0411 13:00:07.408557 26 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/11/25 13:00:07.408
  I0411 13:00:08.415431 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 13:00:08.415484 26 framework.go:733] Found 1 / 1
  I0411 13:00:08.415508 26 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0411 13:00:08.418663 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 13:00:08.418698 26 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0411 13:00:08.418708 26 kubectl.go:1541] wait on agnhost-primary startup in kubectl-6705 
  I0411 13:00:08.418759 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-6705 logs agnhost-primary-fn4xr agnhost-primary'
  I0411 13:00:08.467298 26 builder.go:146] stderr: ""
  I0411 13:00:08.467335 26 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/11/25 13:00:08.467
  I0411 13:00:08.467404 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-6705 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0411 13:00:08.518701 26 builder.go:146] stderr: ""
  I0411 13:00:08.518911 26 builder.go:147] stdout: "service/rm2 exposed\n"
  I0411 13:00:08.522000 26 utils.go:1203] Service rm2 in namespace kubectl-6705 found.
  STEP: exposing service @ 04/11/25 13:00:10.533
  I0411 13:00:10.533351 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-6705 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0411 13:00:10.589591 26 builder.go:146] stderr: ""
  I0411 13:00:10.589633 26 builder.go:147] stdout: "service/rm3 exposed\n"
  I0411 13:00:10.593204 26 utils.go:1203] Service rm3 in namespace kubectl-6705 found.
  I0411 13:00:12.602519 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6705" for this suite. @ 04/11/25 13:00:12.605
• [5.292 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/11/25 13:00:12.61
  I0411 13:00:12.610634 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-runtime @ 04/11/25 13:00:12.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:12.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:12.626
  STEP: create the container @ 04/11/25 13:00:12.629
  W0411 13:00:12.636704      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/11/25 13:00:12.636
  STEP: get the container status @ 04/11/25 13:00:15.655
  STEP: the container should be terminated @ 04/11/25 13:00:15.658
  STEP: the termination message should be set @ 04/11/25 13:00:15.658
  I0411 13:00:15.658416 26 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/11/25 13:00:15.658
  I0411 13:00:15.677596 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4286" for this suite. @ 04/11/25 13:00:15.681
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 04/11/25 13:00:15.686
  I0411 13:00:15.686779 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 13:00:15.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:15.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:15.704
  STEP: Creating a ResourceQuota @ 04/11/25 13:00:15.706
  STEP: Getting a ResourceQuota @ 04/11/25 13:00:15.71
  STEP: Updating a ResourceQuota @ 04/11/25 13:00:15.712
  STEP: Verifying a ResourceQuota was modified @ 04/11/25 13:00:15.719
  STEP: Deleting a ResourceQuota @ 04/11/25 13:00:15.721
  STEP: Verifying the deleted ResourceQuota @ 04/11/25 13:00:15.725
  I0411 13:00:15.727020 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3076" for this suite. @ 04/11/25 13:00:15.783
• [0.105 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 04/11/25 13:00:15.792
  I0411 13:00:15.792219 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 13:00:15.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:15.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:15.81
  STEP: creating service in namespace services-4237 @ 04/11/25 13:00:15.813
  STEP: creating service affinity-clusterip in namespace services-4237 @ 04/11/25 13:00:15.813
  STEP: creating replication controller affinity-clusterip in namespace services-4237 @ 04/11/25 13:00:15.824
  I0411 13:00:15.833125      26 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4237, replica count: 3
  I0411 13:00:18.884087      26 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 13:00:18.891843 26 resource.go:361] Creating new exec pod
  I0411 13:00:21.904447 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-4237 exec execpod-affinitymwjbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0411 13:00:21.997347 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.109.109.197) 80 port [tcp/http] succeeded!\n"
  I0411 13:00:21.997408 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:00:21.997502 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-4237 exec execpod-affinitymwjbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.109.197 80'
  I0411 13:00:22.098287 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.109.197 80\nConnection to 10.109.109.197 80 port [tcp/http] succeeded!\n"
  I0411 13:00:22.098364 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:00:22.098478 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-4237 exec execpod-affinitymwjbz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.109.109.197:80/ ; done'
  I0411 13:00:22.261294 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.109.109.197:80/\n"
  I0411 13:00:22.261353 26 builder.go:147] stdout: "\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p\naffinity-clusterip-zpf2p"
  I0411 13:00:22.261368 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261378 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261389 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261397 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261407 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261414 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261424 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261431 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261438 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261446 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261452 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261460 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261466 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261473 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261480 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261486 26 service.go:242] Received response from host: affinity-clusterip-zpf2p
  I0411 13:00:22.261547 26 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4237, will wait for the garbage collector to delete the pods @ 04/11/25 13:00:22.269
  I0411 13:00:22.330109 26 resources.go:139] Deleting ReplicationController affinity-clusterip took: 7.492947ms
  I0411 13:00:22.430580 26 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.467756ms
  I0411 13:00:25.749506 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4237" for this suite. @ 04/11/25 13:00:25.753
• [9.967 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/11/25 13:00:25.759
  I0411 13:00:25.759538 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:00:25.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:25.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:25.778
  STEP: Creating configMap with name projected-configmap-test-volume-map-753c2713-ef61-4c37-adf5-ee39d2a481c3 @ 04/11/25 13:00:25.781
  STEP: Creating a pod to test consume configMaps @ 04/11/25 13:00:25.786
  STEP: Saw pod success @ 04/11/25 13:00:27.803
  I0411 13:00:27.806565 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-36b3ca7c-8ada-411e-a37f-c85607da2c4a container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 13:00:27.814
  I0411 13:00:27.826886 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5841" for this suite. @ 04/11/25 13:00:27.83
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 04/11/25 13:00:27.835
  I0411 13:00:27.835988 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 13:00:27.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:27.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:27.854
  I0411 13:00:49.942800 26 container_probe.go:92] Container started at 2025-04-11 13:00:28 +0000 UTC, pod became ready at 2025-04-11 13:00:49 +0000 UTC
  I0411 13:00:49.943022 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9889" for this suite. @ 04/11/25 13:00:49.946
• [22.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/11/25 13:00:49.954
  I0411 13:00:49.954234 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:00:49.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:49.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:49.972
  STEP: Creating projection with secret that has name projected-secret-test-61f40027-7cb0-4295-8ac1-fb027f757df4 @ 04/11/25 13:00:49.976
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:00:49.98
  STEP: Saw pod success @ 04/11/25 13:00:51.996
  I0411 13:00:51.999576 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-2ab8ba6a-d2b9-40dc-a449-da5a87f2685f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:00:52.007
  I0411 13:00:52.020692 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7364" for this suite. @ 04/11/25 13:00:52.022
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/11/25 13:00:52.026
  I0411 13:00:52.026232 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 13:00:52.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:52.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:52.036
  I0411 13:00:52.133212 26 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/11/25 13:00:52.139
  I0411 13:00:52.142821 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:52.142881 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/11/25 13:00:52.142
  I0411 13:00:52.246651 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:52.246712 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 13:00:53.248099 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:53.248162 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 13:00:54.248627 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 13:00:54.248675 26 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/11/25 13:00:54.251
  I0411 13:00:54.271630 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:54.271791 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/11/25 13:00:54.271
  I0411 13:00:54.350263 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:54.350348 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 13:00:55.287301 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:55.287331 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 13:00:56.289872 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:56.289926 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0411 13:00:57.291024 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 13:00:57.291085 26 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/11/25 13:00:57.296
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2877, will wait for the garbage collector to delete the pods @ 04/11/25 13:00:57.296
  I0411 13:00:57.357828 26 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.554624ms
  I0411 13:00:57.458814 26 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.979638ms
  I0411 13:00:59.065943 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:00:59.066005 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0411 13:00:59.069326 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22229"},"items":null}

  I0411 13:00:59.071857 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22229"},"items":null}

  I0411 13:00:59.087418 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2877" for this suite. @ 04/11/25 13:00:59.09
• [7.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/11/25 13:00:59.096
  I0411 13:00:59.096545 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pod-network-test @ 04/11/25 13:00:59.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:00:59.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:00:59.108
  STEP: Performing setup for networking test in namespace pod-network-test-4308 @ 04/11/25 13:00:59.109
  STEP: creating a selector @ 04/11/25 13:00:59.109
  STEP: Creating the service pods in kubernetes @ 04/11/25 13:00:59.109
  I0411 13:00:59.109569 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/11/25 13:01:11.239
  I0411 13:01:13.255327 26 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0411 13:01:13.255355 26 networking.go:42] Breadth first check of 10.244.0.166 on host 192.168.49.2...
  I0411 13:01:13.256770 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.115:9080/dial?request=hostname&protocol=http&host=10.244.0.166&port=8083&tries=1'] Namespace:pod-network-test-4308 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:01:13.256798 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:01:13.256834 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4308/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.115%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.166%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0411 13:01:13.326207 26 utils.go:356] Waiting for responses: map[]
  I0411 13:01:13.326231 26 utils.go:360] reached 10.244.0.166 after 0/1 tries
  I0411 13:01:13.326238 26 networking.go:42] Breadth first check of 10.244.1.114 on host 192.168.49.3...
  I0411 13:01:13.328250 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.115:9080/dial?request=hostname&protocol=http&host=10.244.1.114&port=8083&tries=1'] Namespace:pod-network-test-4308 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:01:13.328265 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:01:13.328291 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4308/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.115%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.114%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0411 13:01:13.391924 26 utils.go:356] Waiting for responses: map[]
  I0411 13:01:13.391981 26 utils.go:360] reached 10.244.1.114 after 0/1 tries
  I0411 13:01:13.392003 26 networking.go:53] Going to retry 0 out of 2 pods....
  I0411 13:01:13.392162 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4308" for this suite. @ 04/11/25 13:01:13.396
• [14.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 04/11/25 13:01:13.402
  I0411 13:01:13.402884 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:01:13.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:13.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:13.417
  STEP: Setting up server cert @ 04/11/25 13:01:13.523
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:01:13.658
  STEP: Deploying the webhook pod @ 04/11/25 13:01:13.663
  STEP: Wait for the deployment to be ready @ 04/11/25 13:01:13.669
  I0411 13:01:13.673692 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 13:01:15.685
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:01:15.7
  I0411 13:01:16.700588 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/11/25 13:01:16.709
  STEP: create a pod that should be denied by the webhook @ 04/11/25 13:01:16.727
  STEP: create a pod that causes the webhook to hang @ 04/11/25 13:01:16.738
  STEP: create a configmap that should be denied by the webhook @ 04/11/25 13:01:26.747
  STEP: create a configmap that should be admitted by the webhook @ 04/11/25 13:01:26.757
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/11/25 13:01:26.769
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/11/25 13:01:26.779
  STEP: create a namespace that bypass the webhook @ 04/11/25 13:01:26.784
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/11/25 13:01:26.797
  I0411 13:01:26.838574 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9973" for this suite. @ 04/11/25 13:01:26.844
  STEP: Destroying namespace "webhook-markers-2146" for this suite. @ 04/11/25 13:01:26.847
  STEP: Destroying namespace "exempted-namespace-8258" for this suite. @ 04/11/25 13:01:26.85
• [13.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 04/11/25 13:01:26.857
  I0411 13:01:26.857242 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:01:26.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:26.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:26.899
  STEP: create deployment with httpd image @ 04/11/25 13:01:26.901
  I0411 13:01:26.901942 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7697 create -f -'
  I0411 13:01:26.958839 26 builder.go:146] stderr: ""
  I0411 13:01:26.958879 26 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/11/25 13:01:26.958
  I0411 13:01:26.958953 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7697 diff -f -'
  I0411 13:01:27.034033 26 builder.go:135] rc: 1
  I0411 13:01:27.034121 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7697 delete -f -'
  I0411 13:01:27.071864 26 builder.go:146] stderr: ""
  I0411 13:01:27.071906 26 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0411 13:01:27.072030 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7697" for this suite. @ 04/11/25 13:01:27.074
• [0.222 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/11/25 13:01:27.079
  I0411 13:01:27.079568 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:01:27.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:27.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:27.088
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/11/25 13:01:27.089
  STEP: Saw pod success @ 04/11/25 13:01:31.109
  I0411 13:01:31.112410 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-3e7e35e4-fe25-40f0-b655-c39130903559 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:01:31.125
  I0411 13:01:31.141819 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8840" for this suite. @ 04/11/25 13:01:31.145
• [4.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 04/11/25 13:01:31.15
  I0411 13:01:31.150348 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:01:31.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:31.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:31.168
  STEP: Setting up server cert @ 04/11/25 13:01:31.267
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:01:31.436
  STEP: Deploying the webhook pod @ 04/11/25 13:01:31.439
  STEP: Wait for the deployment to be ready @ 04/11/25 13:01:31.446
  I0411 13:01:31.449623 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 13:01:33.46
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:01:33.475
  I0411 13:01:34.476222 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/11/25 13:01:34.484
  STEP: create a pod @ 04/11/25 13:01:34.504
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/11/25 13:01:36.519
  I0411 13:01:36.519578 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=webhook-9337 attach --namespace=webhook-9337 to-be-attached-pod -i -c=container1'
  I0411 13:01:36.576910 26 builder.go:135] rc: 1
  I0411 13:01:36.607362 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9337" for this suite. @ 04/11/25 13:01:36.614
  STEP: Destroying namespace "webhook-markers-788" for this suite. @ 04/11/25 13:01:36.617
• [5.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/11/25 13:01:36.623
  I0411 13:01:36.623739 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename events @ 04/11/25 13:01:36.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:36.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:36.637
  STEP: Create set of events @ 04/11/25 13:01:36.638
  I0411 13:01:36.643719 26 core_events.go:198] created test-event-1
  I0411 13:01:36.646351 26 core_events.go:198] created test-event-2
  I0411 13:01:36.648821 26 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/11/25 13:01:36.648
  STEP: delete collection of events @ 04/11/25 13:01:36.65
  I0411 13:01:36.650033 26 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/11/25 13:01:36.66
  I0411 13:01:36.660056 26 core_events.go:230] requesting list of events to confirm quantity
  I0411 13:01:36.661419 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2273" for this suite. @ 04/11/25 13:01:36.714
• [0.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/11/25 13:01:36.718
  I0411 13:01:36.718531 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename apf @ 04/11/25 13:01:36.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:36.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:36.739
  STEP: getting /apis @ 04/11/25 13:01:36.74
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/11/25 13:01:36.743
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/11/25 13:01:36.744
  STEP: creating @ 04/11/25 13:01:36.745
  STEP: getting @ 04/11/25 13:01:36.753
  STEP: listing @ 04/11/25 13:01:36.755
  STEP: watching @ 04/11/25 13:01:36.756
  I0411 13:01:36.756409 26 flowcontrol.go:620] starting watch
  STEP: patching @ 04/11/25 13:01:36.756
  STEP: updating @ 04/11/25 13:01:36.759
  I0411 13:01:36.763821 26 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/11/25 13:01:36.763
  STEP: patching /status @ 04/11/25 13:01:36.765
  STEP: updating /status @ 04/11/25 13:01:36.768
  STEP: deleting @ 04/11/25 13:01:36.774
  STEP: deleting a collection @ 04/11/25 13:01:36.781
  I0411 13:01:36.793114 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4521" for this suite. @ 04/11/25 13:01:36.817
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 04/11/25 13:01:36.824
  I0411 13:01:36.824292 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 13:01:36.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:36.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:36.845
  STEP: creating service in namespace services-5193 @ 04/11/25 13:01:36.848
  STEP: creating service affinity-clusterip-transition in namespace services-5193 @ 04/11/25 13:01:36.848
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5193 @ 04/11/25 13:01:36.861
  I0411 13:01:36.868638      26 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5193, replica count: 3
  I0411 13:01:39.920904      26 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 13:01:39.927778 26 resource.go:361] Creating new exec pod
  I0411 13:01:42.940392 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5193 exec execpod-affinity54xrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0411 13:01:43.036690 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.111.202.183) 80 port [tcp/http] succeeded!\n"
  I0411 13:01:43.036764 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:01:43.036880 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5193 exec execpod-affinity54xrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.202.183 80'
  I0411 13:01:43.129125 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.202.183 80\nConnection to 10.111.202.183 80 port [tcp/http] succeeded!\n"
  I0411 13:01:43.129301 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:01:43.135092 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5193 exec execpod-affinity54xrd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.111.202.183:80/ ; done'
  I0411 13:01:43.282323 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n"
  I0411 13:01:43.282360 26 builder.go:147] stdout: "\naffinity-clusterip-transition-vgnwc\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-vgnwc\naffinity-clusterip-transition-vgnwc\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-vgnwc\naffinity-clusterip-transition-b4kdp\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb"
  I0411 13:01:43.282370 26 service.go:242] Received response from host: affinity-clusterip-transition-vgnwc
  I0411 13:01:43.282376 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282381 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.282385 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282389 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.282393 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282397 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282401 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.282405 26 service.go:242] Received response from host: affinity-clusterip-transition-vgnwc
  I0411 13:01:43.282409 26 service.go:242] Received response from host: affinity-clusterip-transition-vgnwc
  I0411 13:01:43.282413 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282416 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282424 26 service.go:242] Received response from host: affinity-clusterip-transition-vgnwc
  I0411 13:01:43.282428 26 service.go:242] Received response from host: affinity-clusterip-transition-b4kdp
  I0411 13:01:43.282434 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.282438 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.288821 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-5193 exec execpod-affinity54xrd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.111.202.183:80/ ; done'
  I0411 13:01:43.456089 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.202.183:80/\n"
  I0411 13:01:43.456156 26 builder.go:147] stdout: "\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb\naffinity-clusterip-transition-xxfwb"
  I0411 13:01:43.456172 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456200 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456208 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456216 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456223 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456230 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456236 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456243 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456251 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456257 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456264 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456274 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456280 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456287 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456296 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456304 26 service.go:242] Received response from host: affinity-clusterip-transition-xxfwb
  I0411 13:01:43.456376 26 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5193, will wait for the garbage collector to delete the pods @ 04/11/25 13:01:43.465
  I0411 13:01:43.527325 26 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.755049ms
  I0411 13:01:43.628476 26 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.162881ms
  I0411 13:01:46.749814 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5193" for this suite. @ 04/11/25 13:01:46.753
• [9.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/11/25 13:01:46.761
  I0411 13:01:46.761743 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename proxy @ 04/11/25 13:01:46.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:46.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:46.774
  STEP: starting an echo server on multiple ports @ 04/11/25 13:01:46.785
  STEP: creating replication controller proxy-service-nstgw in namespace proxy-321 @ 04/11/25 13:01:46.785
  I0411 13:01:46.792867      26 runners.go:193] Created replication controller with name: proxy-service-nstgw, namespace: proxy-321, replica count: 1
  I0411 13:01:47.844938      26 runners.go:193] proxy-service-nstgw Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0411 13:01:48.845788      26 runners.go:193] proxy-service-nstgw Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 13:01:48.850667 26 proxy.go:230] setup took 2.074294099s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/11/25 13:01:48.85
  I0411 13:01:48.855900 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 5.038893ms)
  I0411 13:01:48.855915 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 4.905014ms)
  I0411 13:01:48.856488 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 5.378644ms)
  I0411 13:01:48.856525 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 5.416892ms)
  I0411 13:01:48.856644 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 5.599418ms)
  I0411 13:01:48.856714 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 5.829853ms)
  I0411 13:01:48.856806 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 5.655542ms)
  I0411 13:01:48.857952 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 6.971435ms)
  I0411 13:01:48.857958 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 6.923487ms)
  I0411 13:01:48.857962 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 6.975305ms)
  I0411 13:01:48.857958 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 6.852937ms)
  I0411 13:01:48.859128 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 8.0267ms)
  I0411 13:01:48.860387 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 9.29796ms)
  I0411 13:01:48.860600 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 9.748324ms)
  I0411 13:01:48.860642 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 9.655094ms)
  I0411 13:01:48.860667 26 proxy.go:558] (0) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 9.619987ms)
  I0411 13:01:48.864165 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 3.435242ms)
  I0411 13:01:48.864283 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 3.520223ms)
  I0411 13:01:48.864343 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 3.531989ms)
  I0411 13:01:48.864353 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 3.530621ms)
  I0411 13:01:48.864355 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 3.541665ms)
  I0411 13:01:48.864388 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 3.578849ms)
  I0411 13:01:48.869832 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 9.106152ms)
  I0411 13:01:48.869859 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 8.995127ms)
  I0411 13:01:48.869859 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 9.092382ms)
  I0411 13:01:48.869858 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 9.134652ms)
  I0411 13:01:48.869859 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 9.013054ms)
  I0411 13:01:48.870050 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 9.275668ms)
  I0411 13:01:48.870076 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 9.353986ms)
  I0411 13:01:48.870262 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 9.422507ms)
  I0411 13:01:48.870283 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 9.450223ms)
  I0411 13:01:48.870275 26 proxy.go:558] (1) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 9.46855ms)
  I0411 13:01:48.877520 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 6.936539ms)
  I0411 13:01:48.877565 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 7.060511ms)
  I0411 13:01:48.877580 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 6.997821ms)
  I0411 13:01:48.877561 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 7.092789ms)
  I0411 13:01:48.877548 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 7.134239ms)
  I0411 13:01:48.877666 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 6.986997ms)
  I0411 13:01:48.877678 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 7.249146ms)
  I0411 13:01:48.877696 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 7.074385ms)
  I0411 13:01:48.877831 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 7.18647ms)
  I0411 13:01:48.877965 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 7.580617ms)
  I0411 13:01:48.878003 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 7.419016ms)
  I0411 13:01:48.878096 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 7.39408ms)
  I0411 13:01:48.878210 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 7.816456ms)
  I0411 13:01:48.878216 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 7.584197ms)
  I0411 13:01:48.878253 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 7.715316ms)
  I0411 13:01:48.878253 26 proxy.go:558] (2) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 7.710643ms)
  I0411 13:01:48.883929 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 5.558063ms)
  I0411 13:01:48.883954 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 5.506374ms)
  I0411 13:01:48.883986 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 5.465371ms)
  I0411 13:01:48.883930 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 5.573326ms)
  I0411 13:01:48.884048 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 5.556136ms)
  I0411 13:01:48.884004 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 5.480871ms)
  I0411 13:01:48.884089 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 5.548392ms)
  I0411 13:01:48.884078 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 5.730037ms)
  I0411 13:01:48.886552 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 8.168149ms)
  I0411 13:01:48.886753 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 8.29127ms)
  I0411 13:01:48.886764 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 8.270132ms)
  I0411 13:01:48.886788 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 8.298531ms)
  I0411 13:01:48.886835 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 8.304535ms)
  I0411 13:01:48.886825 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 8.308592ms)
  I0411 13:01:48.886844 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 8.436489ms)
  I0411 13:01:48.886927 26 proxy.go:558] (3) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 8.35422ms)
  I0411 13:01:48.894128 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 7.076367ms)
  I0411 13:01:48.894141 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 6.911663ms)
  I0411 13:01:48.894216 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 6.834951ms)
  I0411 13:01:48.894153 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 6.995661ms)
  I0411 13:01:48.894236 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 7.07666ms)
  I0411 13:01:48.894257 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 6.9486ms)
  I0411 13:01:48.894234 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 6.971756ms)
  I0411 13:01:48.894281 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 7.041092ms)
  I0411 13:01:48.894293 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 7.027779ms)
  I0411 13:01:48.894307 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 7.051632ms)
  I0411 13:01:48.894534 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 7.202583ms)
  I0411 13:01:48.894691 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 7.574863ms)
  I0411 13:01:48.894703 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 7.402073ms)
  I0411 13:01:48.894716 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 7.616225ms)
  I0411 13:01:48.894745 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 7.451335ms)
  I0411 13:01:48.894757 26 proxy.go:558] (4) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 7.4404ms)
  I0411 13:01:48.900000 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 5.090266ms)
  I0411 13:01:48.900094 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 5.1424ms)
  I0411 13:01:48.900203 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 5.330825ms)
  I0411 13:01:48.900265 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 5.249962ms)
  I0411 13:01:48.900255 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 5.331251ms)
  I0411 13:01:48.900260 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 5.24478ms)
  I0411 13:01:48.900255 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 5.246896ms)
  I0411 13:01:48.900270 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 5.312862ms)
  I0411 13:01:48.900319 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 5.480794ms)
  I0411 13:01:48.900328 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 5.481249ms)
  I0411 13:01:48.900329 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 5.386143ms)
  I0411 13:01:48.900333 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 5.34016ms)
  I0411 13:01:48.900912 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 5.877523ms)
  I0411 13:01:48.900922 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 5.937867ms)
  I0411 13:01:48.900923 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 6.023358ms)
  I0411 13:01:48.901434 26 proxy.go:558] (5) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 6.411398ms)
  I0411 13:01:48.905768 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 4.218542ms)
  I0411 13:01:48.905803 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 4.238703ms)
  I0411 13:01:48.905835 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 4.211791ms)
  I0411 13:01:48.905837 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 4.269064ms)
  I0411 13:01:48.905866 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 4.371581ms)
  I0411 13:01:48.905861 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 4.21609ms)
  I0411 13:01:48.905880 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 4.37434ms)
  I0411 13:01:48.905912 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 4.318113ms)
  I0411 13:01:48.905927 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 4.323211ms)
  I0411 13:01:48.905930 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 4.269459ms)
  I0411 13:01:48.906387 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 4.707489ms)
  I0411 13:01:48.906396 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 4.732137ms)
  I0411 13:01:48.906405 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 4.740884ms)
  I0411 13:01:48.906400 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 4.783533ms)
  I0411 13:01:48.906416 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 4.730502ms)
  I0411 13:01:48.906427 26 proxy.go:558] (6) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 4.905157ms)
  I0411 13:01:48.909356 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.853217ms)
  I0411 13:01:48.909358 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.79165ms)
  I0411 13:01:48.909983 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 3.398858ms)
  I0411 13:01:48.909984 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 3.419434ms)
  I0411 13:01:48.909987 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 3.37571ms)
  I0411 13:01:48.910006 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 3.522883ms)
  I0411 13:01:48.910026 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 3.390749ms)
  I0411 13:01:48.910031 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 3.38325ms)
  I0411 13:01:48.910021 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 3.429743ms)
  I0411 13:01:48.910019 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 3.382232ms)
  I0411 13:01:48.910670 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 4.039994ms)
  I0411 13:01:48.910685 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 4.200462ms)
  I0411 13:01:48.910906 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 4.334153ms)
  I0411 13:01:48.910912 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 4.352937ms)
  I0411 13:01:48.910919 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 4.309229ms)
  I0411 13:01:48.910944 26 proxy.go:558] (7) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 4.335394ms)
  I0411 13:01:48.913708 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.670455ms)
  I0411 13:01:48.913738 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.661677ms)
  I0411 13:01:48.913896 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.898233ms)
  I0411 13:01:48.913901 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.833295ms)
  I0411 13:01:48.913926 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.816281ms)
  I0411 13:01:48.913928 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.847578ms)
  I0411 13:01:48.913946 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.837421ms)
  I0411 13:01:48.913962 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.870793ms)
  I0411 13:01:48.913977 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.972397ms)
  I0411 13:01:48.914012 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.89845ms)
  I0411 13:01:48.914326 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 3.248513ms)
  I0411 13:01:48.914340 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 3.286313ms)
  I0411 13:01:48.914476 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 3.381257ms)
  I0411 13:01:48.914526 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 3.505788ms)
  I0411 13:01:48.914524 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 3.510624ms)
  I0411 13:01:48.914529 26 proxy.go:558] (8) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 3.453344ms)
  I0411 13:01:48.916947 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.307318ms)
  I0411 13:01:48.916967 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.381027ms)
  I0411 13:01:48.916986 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.358655ms)
  I0411 13:01:48.917068 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.369406ms)
  I0411 13:01:48.917133 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.450511ms)
  I0411 13:01:48.917429 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.73281ms)
  I0411 13:01:48.917868 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 3.125128ms)
  I0411 13:01:48.917895 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 3.163752ms)
  I0411 13:01:48.917955 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 3.247405ms)
  I0411 13:01:48.918214 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 3.516757ms)
  I0411 13:01:48.918214 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 3.471517ms)
  I0411 13:01:48.918216 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 3.545776ms)
  I0411 13:01:48.918239 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 3.496843ms)
  I0411 13:01:48.918241 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 3.505674ms)
  I0411 13:01:48.918254 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 3.531128ms)
  I0411 13:01:48.918259 26 proxy.go:558] (9) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 3.607236ms)
  I0411 13:01:48.920547 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.234322ms)
  I0411 13:01:48.920567 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.26959ms)
  I0411 13:01:48.920560 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.191988ms)
  I0411 13:01:48.920563 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.211119ms)
  I0411 13:01:48.921131 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.769951ms)
  I0411 13:01:48.921133 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.740727ms)
  I0411 13:01:48.921137 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.83403ms)
  I0411 13:01:48.921143 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.75207ms)
  I0411 13:01:48.921154 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.827425ms)
  I0411 13:01:48.921140 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.763375ms)
  I0411 13:01:48.921145 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.75241ms)
  I0411 13:01:48.921149 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.808508ms)
  I0411 13:01:48.921170 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.871581ms)
  I0411 13:01:48.921165 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.800201ms)
  I0411 13:01:48.921197 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.812437ms)
  I0411 13:01:48.921211 26 proxy.go:558] (10) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.880439ms)
  I0411 13:01:48.923488 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.235437ms)
  I0411 13:01:48.923488 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.25196ms)
  I0411 13:01:48.923522 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.238742ms)
  I0411 13:01:48.923524 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.222208ms)
  I0411 13:01:48.923524 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.228566ms)
  I0411 13:01:48.923536 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.223874ms)
  I0411 13:01:48.923527 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.240191ms)
  I0411 13:01:48.923524 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.26259ms)
  I0411 13:01:48.923541 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.221678ms)
  I0411 13:01:48.923553 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.237711ms)
  I0411 13:01:48.923662 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.392472ms)
  I0411 13:01:48.923665 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.428296ms)
  I0411 13:01:48.923673 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.440646ms)
  I0411 13:01:48.923689 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.413549ms)
  I0411 13:01:48.923694 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.412616ms)
  I0411 13:01:48.923700 26 proxy.go:558] (11) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.417623ms)
  I0411 13:01:48.925665 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 1.922058ms)
  I0411 13:01:48.925670 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 1.909989ms)
  I0411 13:01:48.925689 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 1.915041ms)
  I0411 13:01:48.925702 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 1.974304ms)
  I0411 13:01:48.925705 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 1.974881ms)
  I0411 13:01:48.925725 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 1.991951ms)
  I0411 13:01:48.925744 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 1.961809ms)
  I0411 13:01:48.925759 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 1.974299ms)
  I0411 13:01:48.925824 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.030154ms)
  I0411 13:01:48.925833 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.060434ms)
  I0411 13:01:48.926082 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.31401ms)
  I0411 13:01:48.926098 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.349784ms)
  I0411 13:01:48.926099 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.30705ms)
  I0411 13:01:48.926118 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.342847ms)
  I0411 13:01:48.926200 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.404117ms)
  I0411 13:01:48.926210 26 proxy.go:558] (12) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.470783ms)
  I0411 13:01:48.928217 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 1.953528ms)
  I0411 13:01:48.928256 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 1.953717ms)
  I0411 13:01:48.928435 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.061413ms)
  I0411 13:01:48.928443 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.101269ms)
  I0411 13:01:48.928443 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.126148ms)
  I0411 13:01:48.928442 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.107484ms)
  I0411 13:01:48.928464 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.137154ms)
  I0411 13:01:48.928465 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.097836ms)
  I0411 13:01:48.928471 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.15157ms)
  I0411 13:01:48.928469 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.094096ms)
  I0411 13:01:48.928469 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.1091ms)
  I0411 13:01:48.928476 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.114063ms)
  I0411 13:01:48.928785 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.442469ms)
  I0411 13:01:48.928799 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.445166ms)
  I0411 13:01:48.928798 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.435143ms)
  I0411 13:01:48.928810 26 proxy.go:558] (13) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.451477ms)
  I0411 13:01:48.931039 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.141294ms)
  I0411 13:01:48.931070 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.239067ms)
  I0411 13:01:48.931080 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.247245ms)
  I0411 13:01:48.931090 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.212684ms)
  I0411 13:01:48.931099 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.220847ms)
  I0411 13:01:48.931108 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.23698ms)
  I0411 13:01:48.931116 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.228711ms)
  I0411 13:01:48.931202 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.302114ms)
  I0411 13:01:48.931217 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.335797ms)
  I0411 13:01:48.931226 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.334439ms)
  I0411 13:01:48.931235 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.331605ms)
  I0411 13:01:48.931243 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.395269ms)
  I0411 13:01:48.931318 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.457119ms)
  I0411 13:01:48.931328 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.442694ms)
  I0411 13:01:48.931337 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.501908ms)
  I0411 13:01:48.931581 26 proxy.go:558] (14) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.738405ms)
  I0411 13:01:48.934372 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.695363ms)
  I0411 13:01:48.934377 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.721959ms)
  I0411 13:01:48.934398 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.793383ms)
  I0411 13:01:48.934382 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.690862ms)
  I0411 13:01:48.934420 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.714261ms)
  I0411 13:01:48.934421 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.739568ms)
  I0411 13:01:48.934427 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.769097ms)
  I0411 13:01:48.934426 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.809126ms)
  I0411 13:01:48.934536 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.746944ms)
  I0411 13:01:48.934593 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.922316ms)
  I0411 13:01:48.934731 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 3.053946ms)
  I0411 13:01:48.935280 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 3.653734ms)
  I0411 13:01:48.935284 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 3.609163ms)
  I0411 13:01:48.935595 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 3.941708ms)
  I0411 13:01:48.935673 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 3.980861ms)
  I0411 13:01:48.935701 26 proxy.go:558] (15) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 4.060428ms)
  I0411 13:01:48.938215 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.394729ms)
  I0411 13:01:48.938230 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.393491ms)
  I0411 13:01:48.938215 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.479497ms)
  I0411 13:01:48.938248 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.387466ms)
  I0411 13:01:48.938228 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.364403ms)
  I0411 13:01:48.938229 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.376734ms)
  I0411 13:01:48.938268 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.467449ms)
  I0411 13:01:48.938274 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.440354ms)
  I0411 13:01:48.938279 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.486808ms)
  I0411 13:01:48.938284 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.457251ms)
  I0411 13:01:48.938280 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.416654ms)
  I0411 13:01:48.938292 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.417556ms)
  I0411 13:01:48.938286 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.502591ms)
  I0411 13:01:48.938294 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.454061ms)
  I0411 13:01:48.938283 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.435049ms)
  I0411 13:01:48.938300 26 proxy.go:558] (16) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.47901ms)
  I0411 13:01:48.940322 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 1.955427ms)
  I0411 13:01:48.940346 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.014629ms)
  I0411 13:01:48.940329 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 1.987827ms)
  I0411 13:01:48.940322 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 1.905768ms)
  I0411 13:01:48.940331 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 1.981602ms)
  I0411 13:01:48.940770 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.369901ms)
  I0411 13:01:48.941031 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.618251ms)
  I0411 13:01:48.941037 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.626194ms)
  I0411 13:01:48.941061 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.668705ms)
  I0411 13:01:48.941061 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.709409ms)
  I0411 13:01:48.941068 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.665335ms)
  I0411 13:01:48.941076 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.705555ms)
  I0411 13:01:48.941091 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.701174ms)
  I0411 13:01:48.941128 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.738611ms)
  I0411 13:01:48.941235 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.850362ms)
  I0411 13:01:48.941259 26 proxy.go:558] (17) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.881904ms)
  I0411 13:01:48.943352 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.009828ms)
  I0411 13:01:48.943384 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.096561ms)
  I0411 13:01:48.943408 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.063004ms)
  I0411 13:01:48.943567 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.263752ms)
  I0411 13:01:48.943566 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.188992ms)
  I0411 13:01:48.943591 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.208866ms)
  I0411 13:01:48.943593 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.26391ms)
  I0411 13:01:48.943610 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.312365ms)
  I0411 13:01:48.943613 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.253236ms)
  I0411 13:01:48.943623 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 2.275468ms)
  I0411 13:01:48.943676 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.30406ms)
  I0411 13:01:48.943765 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.477658ms)
  I0411 13:01:48.943781 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.415889ms)
  I0411 13:01:48.943786 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.456135ms)
  I0411 13:01:48.943798 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.517101ms)
  I0411 13:01:48.943803 26 proxy.go:558] (18) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.444487ms)
  I0411 13:01:48.945854 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">t... (200; 1.997822ms)
  I0411 13:01:48.945861 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.016058ms)
  I0411 13:01:48.945895 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:1080/proxy/rewriteme">test</... (200; 2.028486ms)
  I0411 13:01:48.945901 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:443/proxy/tlsrewriteme... (200; 2.003184ms)
  I0411 13:01:48.946487 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:462/proxy/: tls qux (200; 2.625682ms)
  I0411 13:01:48.946502 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname1/proxy/: foo (200; 2.611233ms)
  I0411 13:01:48.946504 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/https:proxy-service-nstgw-fx6fr:460/proxy/: tls baz (200; 2.585078ms)
  I0411 13:01:48.946514 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:160/proxy/: foo (200; 2.669802ms)
  I0411 13:01:48.946510 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname2/proxy/: bar (200; 2.616694ms)
  I0411 13:01:48.946525 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/http:proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.618028ms)
  I0411 13:01:48.946521 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/services/http:proxy-service-nstgw:portname1/proxy/: foo (200; 2.618652ms)
  I0411 13:01:48.946535 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname1/proxy/: tls baz (200; 2.634429ms)
  I0411 13:01:48.946504 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/services/https:proxy-service-nstgw:tlsportname2/proxy/: tls qux (200; 2.617527ms)
  I0411 13:01:48.946513 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/services/proxy-service-nstgw:portname2/proxy/: bar (200; 2.676923ms)
  I0411 13:01:48.946523 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr:162/proxy/: bar (200; 2.634642ms)
  I0411 13:01:48.946529 26 proxy.go:558] (19) /api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/: <a href="/api/v1/namespaces/proxy-321/pods/proxy-service-nstgw-fx6fr/proxy/rewriteme">test</a> (200; 2.652179ms)
  STEP: deleting ReplicationController proxy-service-nstgw in namespace proxy-321, will wait for the garbage collector to delete the pods @ 04/11/25 13:01:48.946
  I0411 13:01:49.008979 26 resources.go:139] Deleting ReplicationController proxy-service-nstgw took: 9.922484ms
  I0411 13:01:49.109229 26 resources.go:163] Terminating ReplicationController proxy-service-nstgw pods took: 100.245715ms
  I0411 13:01:51.810027 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-321" for this suite. @ 04/11/25 13:01:51.813
• [5.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/11/25 13:01:51.819
  I0411 13:01:51.820017 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-watch @ 04/11/25 13:01:51.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:01:51.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:01:51.833
  I0411 13:01:51.835441 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Creating first CR  @ 04/11/25 13:01:54.37
  I0411 13:01:54.375426 26 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-11T13:01:54Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-11T13:01:54Z]] name:name1 resourceVersion:22759 uid:ac941ade-436f-48e9-89f0-acd7b6e0ea52] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/11/25 13:02:04.376
  I0411 13:02:04.381150 26 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-11T13:02:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-11T13:02:04Z]] name:name2 resourceVersion:22783 uid:d4112b3e-7917-4eae-86ce-fc2720cf7399] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/11/25 13:02:14.381
  I0411 13:02:14.391755 26 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-11T13:01:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-11T13:02:14Z]] name:name1 resourceVersion:22792 uid:ac941ade-436f-48e9-89f0-acd7b6e0ea52] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/11/25 13:02:24.392
  I0411 13:02:24.402377 26 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-11T13:02:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-11T13:02:24Z]] name:name2 resourceVersion:22802 uid:d4112b3e-7917-4eae-86ce-fc2720cf7399] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/11/25 13:02:34.403
  I0411 13:02:34.409128 26 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-11T13:01:54Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-11T13:02:14Z]] name:name1 resourceVersion:22812 uid:ac941ade-436f-48e9-89f0-acd7b6e0ea52] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/11/25 13:02:44.409
  I0411 13:02:44.420401 26 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-11T13:02:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-11T13:02:24Z]] name:name2 resourceVersion:22822 uid:d4112b3e-7917-4eae-86ce-fc2720cf7399] num:map[num1:9223372036854775807 num2:1000000]]}
  I0411 13:02:54.937653 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7764" for this suite. @ 04/11/25 13:02:54.941
• [63.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/11/25 13:02:54.954
  I0411 13:02:54.954745 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/11/25 13:02:54.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:02:54.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:02:54.972
  STEP: creating @ 04/11/25 13:02:54.975
  STEP: getting @ 04/11/25 13:02:54.99
  STEP: listing in namespace @ 04/11/25 13:02:54.993
  STEP: patching @ 04/11/25 13:02:54.999
  STEP: deleting @ 04/11/25 13:02:55.008
  I0411 13:02:55.014613 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2506" for this suite. @ 04/11/25 13:02:55.043
• [0.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/11/25 13:02:55.049
  I0411 13:02:55.049846 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 13:02:55.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:02:55.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:02:55.076
  STEP: Creating secret with name secret-test-8a2bd950-12e7-494f-9fef-4e554f31b551 @ 04/11/25 13:02:55.171
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:02:55.176
  STEP: Saw pod success @ 04/11/25 13:02:59.199
  I0411 13:02:59.203289 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-dae7f5b3-840f-4520-8e63-2853fa0a79d9 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:02:59.21
  I0411 13:02:59.225605 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3373" for this suite. @ 04/11/25 13:02:59.229
  STEP: Destroying namespace "secret-namespace-2996" for this suite. @ 04/11/25 13:02:59.234
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/11/25 13:02:59.24
  I0411 13:02:59.240250 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 13:02:59.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:02:59.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:02:59.255
  STEP: Creating secret with name secret-test-2e680937-7794-4922-843d-934c2903f041 @ 04/11/25 13:02:59.259
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:02:59.263
  STEP: Saw pod success @ 04/11/25 13:03:03.282
  I0411 13:03:03.285791 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-fc7e160e-b418-498c-bd25-c8420a5a6c36 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:03:03.293
  I0411 13:03:03.308427 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5673" for this suite. @ 04/11/25 13:03:03.311
• [4.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/11/25 13:03:03.317
  I0411 13:03:03.317258 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 13:03:03.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:03:03.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:03:03.33
  I0411 13:03:05.348931 26 delete.go:62] Deleting pod "var-expansion-567bab7b-4bed-4a69-b5ce-dab42e1979cb" in namespace "var-expansion-9493"
  I0411 13:03:05.358547 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-567bab7b-4bed-4a69-b5ce-dab42e1979cb" to be fully deleted
  I0411 13:03:07.365063 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9493" for this suite. @ 04/11/25 13:03:07.367
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 04/11/25 13:03:07.371
  I0411 13:03:07.371904 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 13:03:07.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:03:07.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:03:07.382
  STEP: creating service multi-endpoint-test in namespace services-187 @ 04/11/25 13:03:07.383
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-187 to expose endpoints map[] @ 04/11/25 13:03:07.392
  I0411 13:03:07.393933 26 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0411 13:03:08.399374 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-187 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-187 @ 04/11/25 13:03:08.399
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-187 to expose endpoints map[pod1:[100]] @ 04/11/25 13:03:10.411
  I0411 13:03:10.415404 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-187 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-187 @ 04/11/25 13:03:10.415
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-187 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/11/25 13:03:12.425
  I0411 13:03:12.434302 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-187 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/11/25 13:03:12.434
  I0411 13:03:12.434342 26 resource.go:361] Creating new exec pod
  I0411 13:03:15.446572 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-187 exec execpod9n6t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0411 13:03:15.540265 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.99.28.214) 80 port [tcp/http] succeeded!\n"
  I0411 13:03:15.540306 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:03:15.540367 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-187 exec execpod9n6t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.28.214 80'
  I0411 13:03:15.637314 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.28.214 80\nConnection to 10.99.28.214 80 port [tcp/http] succeeded!\n"
  I0411 13:03:15.637382 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:03:15.637494 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-187 exec execpod9n6t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0411 13:03:15.731153 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.99.28.214) 81 port [tcp/*] succeeded!\n"
  I0411 13:03:15.731273 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0411 13:03:15.731389 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-187 exec execpod9n6t6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.28.214 81'
  I0411 13:03:15.834695 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.28.214 81\nConnection to 10.99.28.214 81 port [tcp/*] succeeded!\n"
  I0411 13:03:15.834758 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-187 @ 04/11/25 13:03:15.834
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-187 to expose endpoints map[pod2:[101]] @ 04/11/25 13:03:15.85
  I0411 13:03:15.864038 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-187 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-187 @ 04/11/25 13:03:15.864
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-187 to expose endpoints map[] @ 04/11/25 13:03:15.875
  I0411 13:03:15.881796 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-187 exposes endpoints map[]
  I0411 13:03:15.897480 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-187" for this suite. @ 04/11/25 13:03:15.9
• [8.534 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/11/25 13:03:15.905
  I0411 13:03:15.905665 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename cronjob @ 04/11/25 13:03:15.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:03:15.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:03:15.919
  STEP: Creating a ReplaceConcurrent cronjob @ 04/11/25 13:03:15.92
  STEP: Ensuring a job is scheduled @ 04/11/25 13:03:15.924
  STEP: Ensuring exactly one is scheduled @ 04/11/25 13:04:01.93
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/11/25 13:04:01.933
  STEP: Ensuring the job is replaced with a new one @ 04/11/25 13:04:01.936
  STEP: Removing cronjob @ 04/11/25 13:05:01.944
  I0411 13:05:01.951954 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8782" for this suite. @ 04/11/25 13:05:01.955
• [106.056 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 04/11/25 13:05:01.961
  I0411 13:05:01.961814 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 13:05:01.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:05:01.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:05:01.984
  STEP: Counting existing ResourceQuota @ 04/11/25 13:05:01.986
  STEP: Creating a ResourceQuota @ 04/11/25 13:05:06.989
  STEP: Ensuring resource quota status is calculated @ 04/11/25 13:05:06.995
  STEP: Creating a ReplicaSet @ 04/11/25 13:05:09.002
  STEP: Ensuring resource quota status captures replicaset creation @ 04/11/25 13:05:09.018
  STEP: Deleting a ReplicaSet @ 04/11/25 13:05:11.021
  STEP: Ensuring resource quota status released usage @ 04/11/25 13:05:11.025
  I0411 13:05:13.032337 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4926" for this suite. @ 04/11/25 13:05:13.035
• [11.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/11/25 13:05:13.042
  I0411 13:05:13.042795 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubelet-test @ 04/11/25 13:05:13.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:05:13.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:05:13.061
  I0411 13:05:17.079596 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9953" for this suite. @ 04/11/25 13:05:17.082
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/11/25 13:05:17.09
  I0411 13:05:17.090134 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 13:05:17.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:05:17.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:05:17.105
  STEP: creating the pod @ 04/11/25 13:05:17.107
  STEP: submitting the pod to kubernetes @ 04/11/25 13:05:17.107
  W0411 13:05:17.113333      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/11/25 13:05:19.123
  STEP: updating the pod @ 04/11/25 13:05:19.126
  I0411 13:05:19.641759 26 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-23748b04-c274-4f10-9f30-cdbe596d883d"
  I0411 13:05:23.654786 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-256" for this suite. @ 04/11/25 13:05:23.656
• [6.573 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 04/11/25 13:05:23.662
  I0411 13:05:23.662972 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:05:23.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:05:23.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:05:23.672
  STEP: Setting up server cert @ 04/11/25 13:05:23.776
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:05:24.016
  STEP: Deploying the webhook pod @ 04/11/25 13:05:24.02
  STEP: Wait for the deployment to be ready @ 04/11/25 13:05:24.027
  I0411 13:05:24.031575 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/11/25 13:05:26.037
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:05:26.044
  I0411 13:05:27.045415 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0411 13:05:27.053476 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8714-crds.webhook.example.com via the AdmissionRegistration API @ 04/11/25 13:05:27.563
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/11/25 13:05:27.581
  I0411 13:05:30.154271 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5286" for this suite. @ 04/11/25 13:05:30.156
  STEP: Destroying namespace "webhook-markers-9212" for this suite. @ 04/11/25 13:05:30.16
• [6.502 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 04/11/25 13:05:30.165
  I0411 13:05:30.165278 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 13:05:30.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:05:30.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:05:30.176
  STEP: Creating service test in namespace statefulset-5492 @ 04/11/25 13:05:30.177
  STEP: Creating a new StatefulSet @ 04/11/25 13:05:30.182
  I0411 13:05:30.189071 26 wait.go:40] Found 0 stateful pods, waiting for 3
  I0411 13:05:40.194724 26 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:05:40.194798 26 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:05:40.194819 26 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:05:40.204047 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-5492 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 13:05:40.309997 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 13:05:40.310042 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 13:05:40.310057 26 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/11/25 13:05:50.318
  I0411 13:05:50.323225 26 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 04/11/25 13:05:50.323
  STEP: Updating Pods in reverse ordinal order @ 04/11/25 13:06:00.333
  I0411 13:06:00.336918 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-5492 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 13:06:00.435007 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 13:06:00.435075 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 13:06:00.435100 26 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 04/11/25 13:06:20.45
  I0411 13:06:20.450496 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-5492 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 13:06:20.558318 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 13:06:20.558387 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 13:06:20.558411 26 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 13:06:30.579660 26 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/11/25 13:06:40.585
  I0411 13:06:40.587267 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-5492 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 13:06:40.690515 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 13:06:40.690559 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 13:06:40.690573 26 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 13:06:50.706143 26 statefulset.go:138] Deleting all statefulset in ns statefulset-5492
  I0411 13:06:50.708590 26 rest.go:152] Scaling statefulset ss2 to 0
  I0411 13:07:00.725116 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 13:07:00.728403 26 rest.go:90] Deleting statefulset ss2
  I0411 13:07:00.740608 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5492" for this suite. @ 04/11/25 13:07:00.744
• [90.585 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/11/25 13:07:00.75
  I0411 13:07:00.750505 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replication-controller @ 04/11/25 13:07:00.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:00.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:00.765
  I0411 13:07:00.768409 26 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/11/25 13:07:01.779
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/11/25 13:07:01.786
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/11/25 13:07:02.795
  I0411 13:07:02.806344 26 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/11/25 13:07:02.806
  I0411 13:07:03.814881 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8345" for this suite. @ 04/11/25 13:07:03.819
• [3.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/11/25 13:07:03.826
  I0411 13:07:03.826517 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replication-controller @ 04/11/25 13:07:03.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:03.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:03.843
  STEP: creating a ReplicationController @ 04/11/25 13:07:03.848
  STEP: waiting for RC to be added @ 04/11/25 13:07:03.852
  STEP: waiting for available Replicas @ 04/11/25 13:07:03.852
  STEP: patching ReplicationController @ 04/11/25 13:07:04.688
  STEP: waiting for RC to be modified @ 04/11/25 13:07:04.697
  STEP: patching ReplicationController status @ 04/11/25 13:07:04.697
  STEP: waiting for RC to be modified @ 04/11/25 13:07:04.704
  STEP: waiting for available Replicas @ 04/11/25 13:07:04.704
  STEP: fetching ReplicationController status @ 04/11/25 13:07:04.708
  STEP: patching ReplicationController scale @ 04/11/25 13:07:04.71
  STEP: waiting for RC to be modified @ 04/11/25 13:07:04.715
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/11/25 13:07:04.715
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/11/25 13:07:06.212
  STEP: updating ReplicationController status @ 04/11/25 13:07:06.214
  STEP: waiting for RC to be modified @ 04/11/25 13:07:06.218
  STEP: listing all ReplicationControllers @ 04/11/25 13:07:06.218
  STEP: checking that ReplicationController has expected values @ 04/11/25 13:07:06.221
  STEP: deleting ReplicationControllers by collection @ 04/11/25 13:07:06.221
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/11/25 13:07:06.227
  I0411 13:07:06.255984 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0411 13:07:06.256152      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5094" for this suite. @ 04/11/25 13:07:06.258
• [2.435 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/11/25 13:07:06.261
  I0411 13:07:06.261330 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename subpath @ 04/11/25 13:07:06.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:06.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:06.272
  STEP: Setting up data @ 04/11/25 13:07:06.273
  STEP: Creating pod pod-subpath-test-configmap-c8q6 @ 04/11/25 13:07:06.278
  STEP: Creating a pod to test atomic-volume-subpath @ 04/11/25 13:07:06.278
  E0411 13:07:07.256487      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:08.257080      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:09.257626      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:10.258414      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:11.258733      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:12.259492      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:13.259772      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:14.260324      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:15.260545      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:16.261150      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:17.261924      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:18.262521      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:19.262854      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:20.263372      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:21.264250      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:22.265000      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:23.265512      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:24.265640      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:25.266579      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:26.267170      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:27.267675      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:28.268408      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:29.268743      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:30.269324      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:07:30.357
  I0411 13:07:30.360213 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-c8q6 container test-container-subpath-configmap-c8q6: <nil>
  STEP: delete the pod @ 04/11/25 13:07:30.382
  STEP: Deleting pod pod-subpath-test-configmap-c8q6 @ 04/11/25 13:07:30.395
  I0411 13:07:30.395082 26 delete.go:62] Deleting pod "pod-subpath-test-configmap-c8q6" in namespace "subpath-2617"
  I0411 13:07:30.397383 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2617" for this suite. @ 04/11/25 13:07:30.4
• [24.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/11/25 13:07:30.406
  I0411 13:07:30.406547 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/11/25 13:07:30.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:30.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:30.42
  STEP: create the container to handle the HTTPGet hook request. @ 04/11/25 13:07:30.502
  E0411 13:07:31.269388      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:32.269921      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/11/25 13:07:32.53
  E0411 13:07:33.270662      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:34.270952      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/11/25 13:07:34.546
  STEP: delete the pod with lifecycle hook @ 04/11/25 13:07:34.551
  E0411 13:07:35.271785      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:36.272237      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:37.272364      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:38.272772      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:07:38.569617 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9461" for this suite. @ 04/11/25 13:07:38.573
• [8.176 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/11/25 13:07:38.583
  I0411 13:07:38.583107 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:07:38.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:38.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:38.597
  STEP: Creating configMap with name configmap-test-upd-b2fd3dfe-7d27-421a-a14d-34107ab5f53e @ 04/11/25 13:07:38.674
  STEP: Creating the pod @ 04/11/25 13:07:38.683
  E0411 13:07:39.272783      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:40.273239      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-b2fd3dfe-7d27-421a-a14d-34107ab5f53e @ 04/11/25 13:07:40.705
  STEP: waiting to observe update in volume @ 04/11/25 13:07:40.711
  E0411 13:07:41.274241      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:42.274784      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:07:42.731734 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4725" for this suite. @ 04/11/25 13:07:42.735
• [4.160 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 04/11/25 13:07:42.742
  I0411 13:07:42.742959 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 13:07:42.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:42.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:42.757
  STEP: Creating a test headless service @ 04/11/25 13:07:42.759
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-9421.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-9421.svc.cluster.local;sleep 1; done
   @ 04/11/25 13:07:42.762
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9421.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9421.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9421.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9421.svc.cluster.local;sleep 1; done
   @ 04/11/25 13:07:42.762
  STEP: creating a pod to probe DNS @ 04/11/25 13:07:42.762
  STEP: submitting the pod to kubernetes @ 04/11/25 13:07:42.762
  E0411 13:07:43.275483      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:44.276507      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/11/25 13:07:44.783
  STEP: looking for the results for each expected name from probers @ 04/11/25 13:07:44.786
  I0411 13:07:44.793412 26 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9421.svc.cluster.local from pod dns-9421/dns-test-9fa0b7e9-04ba-4e75-a97c-6be4456af51a: the server could not find the requested resource (get pods dns-test-9fa0b7e9-04ba-4e75-a97c-6be4456af51a)
  I0411 13:07:44.801879 26 dns_common.go:506] Lookups using dns-9421/dns-test-9fa0b7e9-04ba-4e75-a97c-6be4456af51a failed for: [agnhost_tcp@dns-test-service-2.dns-9421.svc.cluster.local]

  I0411 13:07:44.806836 26 dns_common.go:514] Pod client logs for webserver: 
  I0411 13:07:44.812317 26 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0411 13:07:44.816749 26 dns_common.go:514] Pod client logs for jessie-querier: 
  E0411 13:07:45.276680      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:46.277228      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:47.277463      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:48.277638      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:49.278083      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:07:49.800572 26 dns_common.go:546] DNS probes using dns-9421/dns-test-9fa0b7e9-04ba-4e75-a97c-6be4456af51a succeeded

  STEP: deleting the pod @ 04/11/25 13:07:49.8
  STEP: deleting the test headless service @ 04/11/25 13:07:49.814
  I0411 13:07:49.822292 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9421" for this suite. @ 04/11/25 13:07:49.823
• [7.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/11/25 13:07:49.827
  I0411 13:07:49.827907 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sysctl @ 04/11/25 13:07:49.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:49.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:49.838
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/11/25 13:07:49.841
  I0411 13:07:49.851235 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4320" for this suite. @ 04/11/25 13:07:49.925
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/11/25 13:07:49.93
  I0411 13:07:49.930323 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename subpath @ 04/11/25 13:07:49.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:07:49.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:07:49.94
  STEP: Setting up data @ 04/11/25 13:07:49.942
  STEP: Creating pod pod-subpath-test-secret-2q6z @ 04/11/25 13:07:49.947
  STEP: Creating a pod to test atomic-volume-subpath @ 04/11/25 13:07:49.947
  E0411 13:07:50.278114      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:51.278416      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:52.278389      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:53.278684      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:54.279450      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:55.279942      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:56.280656      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:57.281080      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:58.281560      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:07:59.281932      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:00.282617      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:01.283690      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:02.283909      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:03.284521      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:04.285654      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:05.286245      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:06.286731      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:07.287593      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:08.287989      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:09.288211      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:10.288515      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:11.289557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:08:12.014
  I0411 13:08:12.015734 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-secret-2q6z container test-container-subpath-secret-2q6z: <nil>
  STEP: delete the pod @ 04/11/25 13:08:12.02
  STEP: Deleting pod pod-subpath-test-secret-2q6z @ 04/11/25 13:08:12.031
  I0411 13:08:12.032017 26 delete.go:62] Deleting pod "pod-subpath-test-secret-2q6z" in namespace "subpath-4617"
  I0411 13:08:12.033432 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4617" for this suite. @ 04/11/25 13:08:12.035
• [22.109 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 04/11/25 13:08:12.039
  I0411 13:08:12.039188 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:08:12.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:08:12.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:08:12.049
  STEP: Setting up server cert @ 04/11/25 13:08:12.151
  E0411 13:08:12.289650      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:08:12.413
  STEP: Deploying the webhook pod @ 04/11/25 13:08:12.418
  STEP: Wait for the deployment to be ready @ 04/11/25 13:08:12.425
  I0411 13:08:12.429987 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0411 13:08:13.290612      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:14.290995      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/11/25 13:08:14.442
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:08:14.456
  E0411 13:08:15.291098      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:08:15.457344 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/11/25 13:08:15.466
  STEP: verifying the mutating webhook match conditions @ 04/11/25 13:08:15.475
  STEP: updating the mutating webhook match conditions @ 04/11/25 13:08:15.478
  STEP: verifying the mutating webhook match conditions @ 04/11/25 13:08:15.485
  I0411 13:08:15.522871 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2956" for this suite. @ 04/11/25 13:08:15.524
  STEP: Destroying namespace "webhook-markers-4313" for this suite. @ 04/11/25 13:08:15.529
• [3.495 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 04/11/25 13:08:15.534
  I0411 13:08:15.534668 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 13:08:15.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:08:15.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:08:15.545
  I0411 13:08:15.556717 26 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0411 13:08:15.556768 26 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0411 13:08:15.561317 26 service_accounts.go:282] created pod pod-service-account-mountsa
  I0411 13:08:15.561349 26 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0411 13:08:15.567041 26 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0411 13:08:15.567112 26 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0411 13:08:15.576785 26 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0411 13:08:15.576852 26 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0411 13:08:15.584591 26 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0411 13:08:15.584649 26 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0411 13:08:15.594570 26 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0411 13:08:15.594667 26 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0411 13:08:15.601389 26 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0411 13:08:15.601422 26 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0411 13:08:15.611581 26 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0411 13:08:15.611654 26 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0411 13:08:15.617853 26 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0411 13:08:15.617921 26 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0411 13:08:15.618131 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1798" for this suite. @ 04/11/25 13:08:15.625
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 04/11/25 13:08:15.634
  I0411 13:08:15.634416 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 13:08:15.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:08:15.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:08:15.65
  STEP: Creating service test in namespace statefulset-5314 @ 04/11/25 13:08:15.652
  STEP: Creating a new StatefulSet @ 04/11/25 13:08:15.658
  I0411 13:08:15.668918 26 wait.go:40] Found 0 stateful pods, waiting for 3
  E0411 13:08:16.291388      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:17.292378      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:18.292575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:19.293532      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:20.294550      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:21.295597      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:22.295940      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:23.296961      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:24.297370      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:25.297485      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:08:25.673417 26 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:08:25.673481 26 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:08:25.673500 26 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/11/25 13:08:25.681
  I0411 13:08:25.691432 26 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 04/11/25 13:08:25.691
  E0411 13:08:26.298270      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:27.298603      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:28.299103      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:29.299724      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:30.300382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:31.300566      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:32.300705      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:33.301598      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:34.301705      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:35.302278      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/11/25 13:08:35.7
  STEP: Performing a canary update @ 04/11/25 13:08:35.7
  I0411 13:08:35.709525 26 statefulset.go:2510] Updating stateful set ss2
  I0411 13:08:35.718157 26 wait.go:74] Waiting for Pod statefulset-5314/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0411 13:08:36.302676      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:37.303545      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:38.304109      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:39.304209      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:40.304673      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:41.305358      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:42.305600      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:43.306273      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:44.306475      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:45.307023      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/11/25 13:08:45.719
  I0411 13:08:45.761490 26 wait.go:40] Found 2 stateful pods, waiting for 3
  E0411 13:08:46.307482      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:47.308585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:48.309127      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:49.309285      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:50.309541      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:51.310058      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:52.310382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:53.310822      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:54.311814      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:55.312291      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:08:55.755471 26 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:08:55.755536 26 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:08:55.755556 26 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/11/25 13:08:55.761
  I0411 13:08:55.772513 26 statefulset.go:2510] Updating stateful set ss2
  I0411 13:08:55.783150 26 wait.go:74] Waiting for Pod statefulset-5314/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0411 13:08:56.313413      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:57.313926      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:58.314432      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:08:59.314842      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:00.315442      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:01.315964      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:02.316481      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:03.317113      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:04.318124      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:05.318575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:09:05.792028 26 statefulset.go:2510] Updating stateful set ss2
  I0411 13:09:05.797970 26 wait.go:56] Waiting for StatefulSet statefulset-5314/ss2 to complete update
  I0411 13:09:05.798034 26 wait.go:63] Waiting for Pod statefulset-5314/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0411 13:09:06.319288      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:07.319898      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:08.320537      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:09.320865      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:10.321380      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:11.321411      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:12.321770      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:13.322377      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:14.322534      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:15.322988      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:09:15.801728 26 statefulset.go:138] Deleting all statefulset in ns statefulset-5314
  I0411 13:09:15.804877 26 rest.go:152] Scaling statefulset ss2 to 0
  E0411 13:09:16.323974      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:17.324399      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:18.325045      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:19.325201      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:20.325766      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:21.326138      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:22.326753      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:23.327154      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:24.327869      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:25.328418      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:09:25.820599 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 13:09:25.823547 26 rest.go:90] Deleting statefulset ss2
  I0411 13:09:25.836857 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5314" for this suite. @ 04/11/25 13:09:25.841
• [70.213 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 04/11/25 13:09:25.848
  I0411 13:09:25.848303 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 13:09:25.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:25.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:25.862
  STEP: Creating ServiceAccount "e2e-sa-662vz"  @ 04/11/25 13:09:25.865
  I0411 13:09:25.869653 26 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-662vz"  @ 04/11/25 13:09:25.869
  I0411 13:09:25.875011 26 service_accounts.go:868] AutomountServiceAccountToken: true
  I0411 13:09:25.875261 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6324" for this suite. @ 04/11/25 13:09:25.943
• [0.102 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 04/11/25 13:09:25.95
  I0411 13:09:25.950157 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-webhook @ 04/11/25 13:09:25.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:25.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:25.966
  STEP: Setting up server cert @ 04/11/25 13:09:25.969
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/11/25 13:09:26.214
  STEP: Deploying the custom resource conversion webhook pod @ 04/11/25 13:09:26.219
  STEP: Wait for the deployment to be ready @ 04/11/25 13:09:26.227
  I0411 13:09:26.232394 26 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0411 13:09:26.328783      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:27.329225      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/11/25 13:09:28.244
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:09:28.259
  E0411 13:09:28.329732      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:09:29.259602 26 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0411 13:09:29.267884 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  E0411 13:09:29.330433      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:30.330888      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:31.331479      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/11/25 13:09:31.834
  STEP: Create a v2 custom resource @ 04/11/25 13:09:31.847
  STEP: List CRs in v1 @ 04/11/25 13:09:31.867
  STEP: List CRs in v2 @ 04/11/25 13:09:31.869
  E0411 13:09:32.331589      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:09:32.413140 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-657" for this suite. @ 04/11/25 13:09:32.416
• [6.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/11/25 13:09:32.423
  I0411 13:09:32.423531 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:09:32.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:32.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:32.439
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/11/25 13:09:32.442
  E0411 13:09:33.332103      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:34.332935      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:35.333557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:36.333679      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:09:36.461
  I0411 13:09:36.464054 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-9d7eb240-4eb9-4a60-96b1-44bb9d5101e9 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:09:36.471
  I0411 13:09:36.492717 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8047" for this suite. @ 04/11/25 13:09:36.497
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 04/11/25 13:09:36.502
  I0411 13:09:36.502695 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 13:09:36.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:36.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:36.516
  I0411 13:09:36.519079 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  E0411 13:09:37.334540      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:38.334924      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0411 13:09:39.058872      26 warnings.go:70] unknown field "alpha"
  W0411 13:09:39.058898      26 warnings.go:70] unknown field "beta"
  W0411 13:09:39.058905      26 warnings.go:70] unknown field "delta"
  W0411 13:09:39.058912      26 warnings.go:70] unknown field "epsilon"
  W0411 13:09:39.058919      26 warnings.go:70] unknown field "gamma"
  E0411 13:09:39.335056      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:09:39.593868 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7376" for this suite. @ 04/11/25 13:09:39.597
• [3.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/11/25 13:09:39.602
  I0411 13:09:39.602979 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 13:09:39.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:39.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:39.62
  STEP: Creating secret with name secret-test-aa19d046-a574-48b4-84a1-f19f3b870d87 @ 04/11/25 13:09:39.622
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:09:39.626
  E0411 13:09:40.335037      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:41.335526      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:42.336593      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:43.337101      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:09:43.647
  I0411 13:09:43.650192 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-185ab520-7853-4b1c-ac36-d0393eec65ab container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:09:43.655
  I0411 13:09:43.664943 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2356" for this suite. @ 04/11/25 13:09:43.666
• [4.067 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 04/11/25 13:09:43.669
  I0411 13:09:43.669868 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename disruption @ 04/11/25 13:09:43.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:43.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:43.68
  STEP: Creating a kubernetes client @ 04/11/25 13:09:43.682
  I0411 13:09:43.682433 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename disruption-2 @ 04/11/25 13:09:43.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:43.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:43.782
  STEP: Waiting for the pdb to be processed @ 04/11/25 13:09:43.786
  E0411 13:09:44.337982      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:45.338712      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/11/25 13:09:45.799
  E0411 13:09:46.339401      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:47.339583      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/11/25 13:09:47.811
  E0411 13:09:48.339867      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:49.340562      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/11/25 13:09:49.815
  STEP: listing a collection of PDBs in namespace disruption-1918 @ 04/11/25 13:09:49.821
  STEP: deleting a collection of PDBs @ 04/11/25 13:09:49.825
  STEP: Waiting for the PDB collection to be deleted @ 04/11/25 13:09:49.838
  I0411 13:09:49.842506 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1797" for this suite. @ 04/11/25 13:09:49.845
  I0411 13:09:49.851784 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1918" for this suite. @ 04/11/25 13:09:49.948
• [6.285 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 04/11/25 13:09:49.954
  I0411 13:09:49.954995 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 13:09:49.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:09:49.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:09:49.973
  STEP: Looking for a node to schedule job pods @ 04/11/25 13:09:49.978
  STEP: Creating a job @ 04/11/25 13:09:50.048
  STEP: Waiting for all the pods to be ready @ 04/11/25 13:09:50.054
  E0411 13:09:50.340155      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:51.340472      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:52.341695      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:53.342320      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 04/11/25 13:09:54.062
  STEP: Evict all the Pods @ 04/11/25 13:09:54.064
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-n6k9r/job-2193 @ 04/11/25 13:09:54.064
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-ttn5w/job-2193 @ 04/11/25 13:09:54.064
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-twgfx/job-2193 @ 04/11/25 13:09:54.064
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-n6k9r/job-2193 to be deleted @ 04/11/25 13:09:54.076
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-twgfx/job-2193 to be deleted @ 04/11/25 13:09:54.08
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-ttn5w/job-2193 to be deleted @ 04/11/25 13:09:54.081
  E0411 13:09:54.342699      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:55.343233      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:56.343695      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:57.344540      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 04/11/25 13:09:58.094
  E0411 13:09:58.345546      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:09:59.346204      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:00.346648      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:01.347601      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:02.348054      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:03.348570      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:04.349256      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:05.349752      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:06.350546      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:07.351428      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:08.352394      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:09.353377      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:10.354152      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:11.354576      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:12.355426      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:13.355722      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:14.356492      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:15.356938      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:16.357234      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:17.357413      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:18.358100      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:19.358418      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:20.358915      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:21.359588      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:22.359787      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:23.360383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:24.360909      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:25.361536      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:26.361919      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:27.362701      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:28.363367      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:29.363534      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:30.364566      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:31.365234      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:32.365623      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:33.366362      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:34.367026      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:35.367523      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:36.368482      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:37.368895      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:38.369956      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:39.370241      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:10:40.213056 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2193" for this suite. @ 04/11/25 13:10:40.218
• [50.271 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/11/25 13:10:40.225
  I0411 13:10:40.225989 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:10:40.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:10:40.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:10:40.243
  STEP: Creating projection with secret that has name projected-secret-test-6782c9f0-4592-4877-8d60-7ec855e8c36c @ 04/11/25 13:10:40.246
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:10:40.251
  E0411 13:10:40.370761      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:41.371399      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:42.372012      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:43.372544      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:10:44.271
  I0411 13:10:44.274568 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-a479fa8d-cf57-49d9-9438-cf0a80735110 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:10:44.281
  I0411 13:10:44.297717 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1548" for this suite. @ 04/11/25 13:10:44.301
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/11/25 13:10:44.306
  I0411 13:10:44.306639 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:10:44.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:10:44.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:10:44.323
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/11/25 13:10:44.325
  E0411 13:10:44.372770      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:45.373610      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:46.374472      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:47.375109      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:10:48.35
  I0411 13:10:48.352738 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-fc575edc-5c13-4bda-a8fc-8e9bc46b126d container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:10:48.36
  I0411 13:10:48.374660 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0411 13:10:48.375015      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-3947" for this suite. @ 04/11/25 13:10:48.378
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/11/25 13:10:48.383
  I0411 13:10:48.383804 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename proxy @ 04/11/25 13:10:48.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:10:48.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:10:48.4
  I0411 13:10:48.403768 26 proxy.go:293] Creating pod...
  E0411 13:10:49.376105      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:50.376657      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:10:50.418172 26 proxy.go:317] Creating service...
  I0411 13:10:50.434128 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/DELETE
  I0411 13:10:50.440117 26 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0411 13:10:50.440234 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/GET
  I0411 13:10:50.443698 26 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0411 13:10:50.443802 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/HEAD
  I0411 13:10:50.446156 26 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0411 13:10:50.446237 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/OPTIONS
  I0411 13:10:50.448640 26 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0411 13:10:50.448684 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/PATCH
  I0411 13:10:50.450935 26 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0411 13:10:50.450970 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/POST
  I0411 13:10:50.452753 26 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0411 13:10:50.452789 26 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/pods/agnhost/proxy/some/path/with/PUT
  I0411 13:10:50.454459 26 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0411 13:10:50.454494 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/DELETE
  I0411 13:10:50.457000 26 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0411 13:10:50.457041 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/GET
  I0411 13:10:50.459216 26 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0411 13:10:50.459239 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/HEAD
  I0411 13:10:50.461002 26 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0411 13:10:50.461038 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/OPTIONS
  I0411 13:10:50.463186 26 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0411 13:10:50.463217 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/PATCH
  I0411 13:10:50.465119 26 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0411 13:10:50.465146 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/POST
  I0411 13:10:50.466714 26 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0411 13:10:50.466741 26 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8713/services/test-service/proxy/some/path/with/PUT
  I0411 13:10:50.468192 26 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0411 13:10:50.468299 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8713" for this suite. @ 04/11/25 13:10:50.47
• [2.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 04/11/25 13:10:50.472
  I0411 13:10:50.472856 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename disruption @ 04/11/25 13:10:50.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:10:50.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:10:50.48
  STEP: Waiting for the pdb to be processed @ 04/11/25 13:10:50.485
  E0411 13:10:51.377589      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:52.378650      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/11/25 13:10:52.513
  I0411 13:10:52.520649 26 disruption.go:691] running pods: 0 < 3
  E0411 13:10:53.378971      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:54.379146      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:10:54.521710 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-597" for this suite. @ 04/11/25 13:10:54.524
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 04/11/25 13:10:54.531
  I0411 13:10:54.531605 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 13:10:54.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:10:54.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:10:54.547
  STEP: Creating pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195 @ 04/11/25 13:10:54.55
  E0411 13:10:55.379905      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:56.380724      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 13:10:56.565
  I0411 13:10:56.568757 26 container_probe.go:1749] Initial restart count of pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce is 0
  I0411 13:10:56.571297 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:10:57.381585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:10:58.382319      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:10:58.577395 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:10:59.382202      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:00.382590      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:00.582174 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:01.383228      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:02.383578      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:02.586347 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:03.384374      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:04.384653      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:04.591599 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:05.385650      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:06.386231      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:06.598237 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:07.386954      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:08.387512      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:08.604306 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:09.388210      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:10.388977      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:10.609476 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:11.389361      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:12.389564      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:12.614926 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:13.389800      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:14.389968      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:14.620833 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:15.390436      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:16.390585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:16.626429 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  I0411 13:11:16.626504 26 container_probe.go:1763] Restart count of pod container-probe-4195/liveness-3d252104-68fd-4026-9c03-c585c9d28dce is now 1 (20.057706798s elapsed)
  E0411 13:11:17.391316      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:18.391956      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:18.632493 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:19.392142      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:20.392806      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:20.639101 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:21.393469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:22.393784      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:22.645386 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:23.394299      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:24.394910      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:24.650448 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:25.395381      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:26.395567      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:26.656000 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:27.395731      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:28.396442      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:28.662335 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:29.397112      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:30.397589      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:30.668792 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:31.398707      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:32.399134      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:32.674845 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:33.399685      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:34.400667      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:34.681120 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:35.400908      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:36.401635      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:36.688026 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  I0411 13:11:36.688093 26 container_probe.go:1763] Restart count of pod container-probe-4195/liveness-3d252104-68fd-4026-9c03-c585c9d28dce is now 2 (40.11929597s elapsed)
  E0411 13:11:37.401846      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:38.402393      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:38.693504 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:39.403232      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:40.403838      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:40.698640 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:41.404598      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:42.404931      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:42.704810 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:43.405599      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:44.405737      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:44.707671 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:45.406899      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:46.407614      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:46.713708 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:47.407635      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:48.408639      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:48.719206 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:49.409135      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:50.409450      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:50.724143 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:51.410120      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:52.410720      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:52.730755 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:53.411614      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:54.412580      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:54.737567 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:55.412968      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:56.413847      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:56.742562 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  I0411 13:11:56.742613 26 container_probe.go:1763] Restart count of pod container-probe-4195/liveness-3d252104-68fd-4026-9c03-c585c9d28dce is now 3 (1m0.173815886s elapsed)
  E0411 13:11:57.414058      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:11:58.414553      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:11:58.746199 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:11:59.415346      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:00.415970      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:00.752571 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:01.416553      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:02.417107      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:02.756614 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:03.417235      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:04.418000      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:04.759575 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:05.418629      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:06.419298      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:06.765956 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:07.419983      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:08.420573      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:08.771415 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:09.421517      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:10.422074      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:10.774370 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:11.422324      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:12.422875      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:12.781098 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:13.423933      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:14.424061      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:14.783165 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:15.425472      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:16.425955      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:16.785245 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  I0411 13:12:16.785276 26 container_probe.go:1763] Restart count of pod container-probe-4195/liveness-3d252104-68fd-4026-9c03-c585c9d28dce is now 4 (1m20.216482063s elapsed)
  E0411 13:12:17.426290      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:18.426647      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:18.791483 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:19.427067      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:20.427333      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:20.795676 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:21.428557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:22.429560      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:22.797683 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:23.430689      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:24.431093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:24.804162 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:25.431557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:26.432066      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:26.810410 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:27.433110      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:28.433432      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:28.813109 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:29.433861      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:30.434606      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:30.818999 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:31.434634      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:32.435098      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:32.825166 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:33.435496      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:34.435538      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:34.827977 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:35.435692      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:36.435847      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:36.833799 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:37.436449      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:38.436543      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:38.840901 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:39.436575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:40.437553      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:40.843795 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:41.437825      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:42.438285      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:42.848468 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:43.439526      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:44.440492      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:44.853796 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:45.441091      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:46.441929      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:46.856545 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:47.442427      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:48.442867      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:48.861122 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:49.443493      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:50.443572      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:50.866231 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:51.444507      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:52.445171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:52.869197 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:53.445453      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:54.446576      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:54.874705 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:55.447515      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:56.448616      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:56.880536 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:57.449237      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:12:58.449789      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:12:58.883592 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:12:59.450214      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:00.450745      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:00.888822 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:01.451461      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:02.452581      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:02.894654 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:03.453354      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:04.453416      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:04.900148 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:05.453608      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:06.454212      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:06.906346 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:07.455016      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:08.455509      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:08.909610 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:09.456519      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:10.456955      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:10.916577 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:11.457971      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:12.458703      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:12.921658 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:13.459632      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:14.459712      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:14.927595 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:15.460109      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:16.460512      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:16.932802 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  E0411 13:13:17.461581      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:18.462374      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:18.935753 26 container_probe.go:1759] Get pod liveness-3d252104-68fd-4026-9c03-c585c9d28dce in namespace container-probe-4195
  I0411 13:13:18.935788 26 container_probe.go:1763] Restart count of pod container-probe-4195/liveness-3d252104-68fd-4026-9c03-c585c9d28dce is now 5 (2m22.366992717s elapsed)
  STEP: deleting the pod @ 04/11/25 13:13:18.935
  I0411 13:13:18.947878 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4195" for this suite. @ 04/11/25 13:13:18.95
• [144.422 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/11/25 13:13:18.953
  I0411 13:13:18.953802 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename deployment @ 04/11/25 13:13:18.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:18.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:18.965
  I0411 13:13:18.973006 26 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0411 13:13:19.462361      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:20.462319      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:21.462775      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:22.463245      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:23.463675      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:23.975267 26 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/11/25 13:13:23.975
  I0411 13:13:23.975354 26 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/11/25 13:13:23.979
  I0411 13:13:23.986882 26 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69f7c965-bfdf-4503-b1ee-9551aad97cdf",
      ResourceVersion: (string) (len=5) "25527",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879974003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0411 13:13:23.993173 26 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f4dbe24-c522-48f5-b35b-c273da086e6b",
      ResourceVersion: (string) (len=5) "25532",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879974003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "69f7c965-bfdf-4503-b1ee-9551aad97cdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 66 37 63 39  36 35 2d 62 66 64 66 2d  |\"69f7c965-bfdf-|
              00000120  34 35 30 33 2d 62 31 65  65 2d 39 35 35 31 61 61  |4503-b1ee-9551aa|
              00000130  64 39 37 63 64 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d97cdf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 13:13:23.994325 26 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0411 13:13:23.994838 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59ad80dc-1171-4d7e-9690-254b0a034fba",
      ResourceVersion: (string) (len=5) "25530",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879973998,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "69f7c965-bfdf-4503-b1ee-9551aad97cdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879973998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 36 39 66 37 63 39 36  |"uid\":\"69f7c96|
              00000040  35 2d 62 66 64 66 2d 34  35 30 33 2d 62 31 65 65  |5-bfdf-4503-b1ee|
              00000050  2d 39 35 35 31 61 61 64  39 37 63 64 66 5c 22 7d  |-9551aad97cdf\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0411 13:13:24.004709 26 deployment.go:68] Pod "test-cleanup-controller-2r7wk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-2r7wk",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da3b409b-be02-4909-a736-2dc46cd4e980",
      ResourceVersion: (string) (len=5) "25521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879973998,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "59ad80dc-1171-4d7e-9690-254b0a034fba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879973998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 39 61 64 38 30 64 63  |uid\":\"59ad80dc|
              00000080  2d 31 31 37 31 2d 34 64  37 65 2d 39 36 39 30 2d  |-1171-4d7e-9690-|
              00000090  32 35 34 62 30 61 30 33  34 66 62 61 5c 22 7d 22  |254b0a034fba\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 34 5c 22 7d 22 3a 7b  |.244.1.174\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4s7jm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4s7jm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879973998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879973998,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879973998,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879973999,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://83d212e86f0a0266dd84fdbe921ccf4e2b761eef61dc1a2f20efaa33a0fc29cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4s7jm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 13:13:24.008034 26 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-2hngh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-2hngh",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-4295",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71444023-1c21-468c-9209-66a1f3c98924",
      ResourceVersion: (string) (len=5) "25538",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879974003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "7f4dbe24-c522-48f5-b35b-c273da086e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  34 64 62 65 32 34 2d 63  |d\":\"7f4dbe24-c|
              00000090  35 32 32 2d 34 38 66 35  2d 62 33 35 62 2d 63 32  |522-48f5-b35b-c2|
              000000a0  37 33 64 61 30 38 36 65  36 62 5c 22 7d 22 3a 7b  |73da086e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-db5kp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-db5kp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879974004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0411 13:13:24.010092 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4295" for this suite. @ 04/11/25 13:13:24.015
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 04/11/25 13:13:24.021
  I0411 13:13:24.021633 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename containers @ 04/11/25 13:13:24.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:24.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:24.031
  STEP: Creating a pod to test override all @ 04/11/25 13:13:24.032
  E0411 13:13:24.464408      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:25.464702      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:26.465506      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:27.466041      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:13:28.051
  I0411 13:13:28.054761 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-containers-1eb65c69-d3da-4ee9-9fe9-1985fe083bd8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 13:13:28.073
  I0411 13:13:28.087663 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-994" for this suite. @ 04/11/25 13:13:28.09
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/11/25 13:13:28.096
  I0411 13:13:28.096703 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:13:28.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:28.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:28.113
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 13:13:28.116
  E0411 13:13:28.466157      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:29.466479      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:30.466454      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:31.467009      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:13:32.141
  I0411 13:13:32.144738 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-69633a81-f9b0-49f7-8e6a-d2da7b512b3b container client-container: <nil>
  STEP: delete the pod @ 04/11/25 13:13:32.152
  I0411 13:13:32.165463 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9123" for this suite. @ 04/11/25 13:13:32.168
• [4.078 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/11/25 13:13:32.174
  I0411 13:13:32.174974 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/11/25 13:13:32.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:32.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:32.19
  STEP: create the container to handle the HTTPGet hook request. @ 04/11/25 13:13:32.27
  E0411 13:13:32.467806      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:33.468418      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/11/25 13:13:34.292
  E0411 13:13:34.469069      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:35.469320      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/11/25 13:13:36.312
  STEP: delete the pod with lifecycle hook @ 04/11/25 13:13:36.319
  E0411 13:13:36.469518      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:37.470035      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:38.334805 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9126" for this suite. @ 04/11/25 13:13:38.338
• [6.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/11/25 13:13:38.346
  I0411 13:13:38.346788 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-runtime @ 04/11/25 13:13:38.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:38.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:38.364
  STEP: create the container @ 04/11/25 13:13:38.367
  W0411 13:13:38.377753      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/11/25 13:13:38.377
  E0411 13:13:38.470530      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:39.470899      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:40.470987      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/11/25 13:13:41.396
  STEP: the container should be terminated @ 04/11/25 13:13:41.398
  STEP: the termination message should be set @ 04/11/25 13:13:41.398
  I0411 13:13:41.398044 26 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/11/25 13:13:41.398
  I0411 13:13:41.411657 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6553" for this suite. @ 04/11/25 13:13:41.413
• [3.070 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 04/11/25 13:13:41.417
  I0411 13:13:41.417221 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 13:13:41.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:41.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:41.427
  STEP: creating service nodeport-test with type=NodePort in namespace services-6634 @ 04/11/25 13:13:41.429
  STEP: creating replication controller nodeport-test in namespace services-6634 @ 04/11/25 13:13:41.439
  I0411 13:13:41.446250      26 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-6634, replica count: 2
  E0411 13:13:41.471811      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:42.472706      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:43.473456      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:44.473731      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:44.497902      26 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0411 13:13:44.497931 26 resource.go:361] Creating new exec pod
  E0411 13:13:45.474447      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:46.474356      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:47.475342      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:13:47.512548 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-6634 exec execpod9sw7x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0411 13:13:47.624789 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.109.207.59) 80 port [tcp/http] succeeded!\n"
  I0411 13:13:47.624841 26 builder.go:147] stdout: "nodeport-test-k6kd9"
  I0411 13:13:47.624926 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-6634 exec execpod9sw7x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.207.59 80'
  I0411 13:13:47.726458 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.207.59 80\nConnection to 10.109.207.59 80 port [tcp/http] succeeded!\n"
  I0411 13:13:47.726527 26 builder.go:147] stdout: "nodeport-test-7hrs9"
  I0411 13:13:47.726647 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-6634 exec execpod9sw7x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 30204'
  I0411 13:13:47.810898 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 30204\nConnection to 192.168.49.2 30204 port [tcp/*] succeeded!\n"
  I0411 13:13:47.810941 26 builder.go:147] stdout: "nodeport-test-7hrs9"
  I0411 13:13:47.811013 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=services-6634 exec execpod9sw7x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 30204'
  I0411 13:13:47.904131 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 30204\nConnection to 192.168.49.3 30204 port [tcp/*] succeeded!\n"
  I0411 13:13:47.904215 26 builder.go:147] stdout: "nodeport-test-k6kd9"
  I0411 13:13:47.904452 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6634" for this suite. @ 04/11/25 13:13:47.908
• [6.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/11/25 13:13:47.919
  I0411 13:13:47.919437 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:13:47.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:47.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:47.936
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 13:13:47.94
  E0411 13:13:48.476312      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:49.476403      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:50.476909      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:51.477153      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:13:51.964
  I0411 13:13:51.967806 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-b2958063-4647-4982-a1cc-31386c4e4046 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 13:13:51.975
  I0411 13:13:51.994063 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-618" for this suite. @ 04/11/25 13:13:51.997
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/11/25 13:13:52.002
  I0411 13:13:52.002885 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:13:52.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:52.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:52.042
  STEP: Creating configMap with name configmap-test-volume-5ef1d135-ac73-430c-aafd-8fff52b2e79a @ 04/11/25 13:13:52.044
  STEP: Creating a pod to test consume configMaps @ 04/11/25 13:13:52.047
  E0411 13:13:52.477431      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:53.478381      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:54.478674      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:55.479354      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:13:56.07
  I0411 13:13:56.073751 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-ef660290-4dd3-4e48-9034-a048bfb881ca container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 13:13:56.081
  I0411 13:13:56.097850 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7621" for this suite. @ 04/11/25 13:13:56.101
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/11/25 13:13:56.109
  I0411 13:13:56.109333 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:13:56.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:56.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:56.128
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/11/25 13:13:56.131
  E0411 13:13:56.480076      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:57.480457      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:13:58.147
  I0411 13:13:58.150763 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-88a23096-8ed9-4ea7-b31f-e1b113af1810 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:13:58.158
  I0411 13:13:58.173774 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4154" for this suite. @ 04/11/25 13:13:58.177
• [2.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/11/25 13:13:58.183
  I0411 13:13:58.183560 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename events @ 04/11/25 13:13:58.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:58.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:58.198
  STEP: Create set of events @ 04/11/25 13:13:58.201
  STEP: get a list of Events with a label in the current namespace @ 04/11/25 13:13:58.213
  STEP: delete a list of events @ 04/11/25 13:13:58.215
  I0411 13:13:58.215101 26 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/11/25 13:13:58.223
  I0411 13:13:58.224620 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4347" for this suite. @ 04/11/25 13:13:58.279
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/11/25 13:13:58.286
  I0411 13:13:58.286794 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 13:13:58.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:13:58.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:13:58.302
  STEP: Creating the pod @ 04/11/25 13:13:58.304
  E0411 13:13:58.481277      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:13:59.481527      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:00.482307      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:00.850118 26 pod_client.go:173] Successfully updated pod "annotationupdate31a0fb35-0e22-4c80-9d03-232aab2388a8"
  E0411 13:14:01.483358      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:02.483794      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:03.484433      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:04.485682      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:04.876650 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7904" for this suite. @ 04/11/25 13:14:04.878
• [6.597 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 04/11/25 13:14:04.883
  I0411 13:14:04.883439 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 13:14:04.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:04.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:04.893
  STEP: Creating a job @ 04/11/25 13:14:04.895
  STEP: Ensuring active pods == parallelism @ 04/11/25 13:14:04.897
  E0411 13:14:05.486410      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:06.486924      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/11/25 13:14:06.906
  STEP: deleting Job.batch foo in namespace job-4305, will wait for the garbage collector to delete the pods @ 04/11/25 13:14:06.906
  I0411 13:14:06.966946 26 resources.go:139] Deleting Job.batch foo took: 7.48127ms
  I0411 13:14:07.067606 26 resources.go:163] Terminating Job.batch foo pods took: 100.659197ms
  E0411 13:14:07.487124      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/11/25 13:14:08.067
  I0411 13:14:08.071982 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4305" for this suite. @ 04/11/25 13:14:08.075
• [3.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/11/25 13:14:08.081
  I0411 13:14:08.081397 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 13:14:08.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:08.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:08.098
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 13:14:08.1
  E0411 13:14:08.488067      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:09.488352      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:14:10.117
  I0411 13:14:10.120455 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-d34aff01-47bf-4544-b3bf-dfa8dcbfd907 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 13:14:10.13
  I0411 13:14:10.142629 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8643" for this suite. @ 04/11/25 13:14:10.146
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 04/11/25 13:14:10.151
  I0411 13:14:10.151698 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:14:10.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:10.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:10.168
  STEP: creating a replication controller @ 04/11/25 13:14:10.172
  I0411 13:14:10.172589 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 create -f -'
  I0411 13:14:10.243173 26 builder.go:146] stderr: ""
  I0411 13:14:10.243219 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/11/25 13:14:10.243
  I0411 13:14:10.243319 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0411 13:14:10.294077 26 builder.go:146] stderr: ""
  I0411 13:14:10.294103 26 builder.go:147] stdout: "update-demo-nautilus-dcbf4 update-demo-nautilus-fpz9l "
  I0411 13:14:10.294134 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-dcbf4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:14:10.328407 26 builder.go:146] stderr: ""
  I0411 13:14:10.328447 26 builder.go:147] stdout: ""
  I0411 13:14:10.328459 26 kubectl.go:2499] update-demo-nautilus-dcbf4 is created but not running
  E0411 13:14:10.488949      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:11.489704      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:12.490314      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:13.490341      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:14.490407      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:15.329266 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0411 13:14:15.424891 26 builder.go:146] stderr: ""
  I0411 13:14:15.424957 26 builder.go:147] stdout: "update-demo-nautilus-dcbf4 update-demo-nautilus-fpz9l "
  I0411 13:14:15.425037 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-dcbf4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:14:15.467109 26 builder.go:146] stderr: ""
  I0411 13:14:15.467159 26 builder.go:147] stdout: ""
  I0411 13:14:15.467170 26 kubectl.go:2499] update-demo-nautilus-dcbf4 is created but not running
  E0411 13:14:15.491393      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:16.491822      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:17.492280      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:18.492475      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:19.492992      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:20.467284 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0411 13:14:20.493575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:20.510288 26 builder.go:146] stderr: ""
  I0411 13:14:20.510342 26 builder.go:147] stdout: "update-demo-nautilus-dcbf4 update-demo-nautilus-fpz9l "
  I0411 13:14:20.510414 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-dcbf4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:14:20.549825 26 builder.go:146] stderr: ""
  I0411 13:14:20.549863 26 builder.go:147] stdout: ""
  I0411 13:14:20.549880 26 kubectl.go:2499] update-demo-nautilus-dcbf4 is created but not running
  E0411 13:14:21.494473      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:22.495046      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:23.495653      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:24.496580      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:25.497160      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:25.550778 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0411 13:14:25.598319 26 builder.go:146] stderr: ""
  I0411 13:14:25.598369 26 builder.go:147] stdout: "update-demo-nautilus-dcbf4 update-demo-nautilus-fpz9l "
  I0411 13:14:25.598426 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-dcbf4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:14:25.638556 26 builder.go:146] stderr: ""
  I0411 13:14:25.638598 26 builder.go:147] stdout: "true"
  I0411 13:14:25.638649 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-dcbf4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:14:25.684687 26 builder.go:146] stderr: ""
  I0411 13:14:25.684737 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:14:25.684757 26 kubectl.go:2390] validating pod update-demo-nautilus-dcbf4
  I0411 13:14:25.687252 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:14:25.687319 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:14:25.687336 26 kubectl.go:2517] update-demo-nautilus-dcbf4 is verified up and running
  I0411 13:14:25.687377 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-fpz9l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:14:25.722694 26 builder.go:146] stderr: ""
  I0411 13:14:25.722732 26 builder.go:147] stdout: "true"
  I0411 13:14:25.722781 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods update-demo-nautilus-fpz9l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:14:25.758172 26 builder.go:146] stderr: ""
  I0411 13:14:25.758220 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:14:25.758236 26 kubectl.go:2390] validating pod update-demo-nautilus-fpz9l
  I0411 13:14:25.760519 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:14:25.760568 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:14:25.760589 26 kubectl.go:2517] update-demo-nautilus-fpz9l is verified up and running
  STEP: using delete to clean up resources @ 04/11/25 13:14:25.76
  I0411 13:14:25.760656 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 delete --grace-period=0 --force -f -'
  I0411 13:14:25.808201 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 13:14:25.808242 26 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0411 13:14:25.808294 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get rc,svc -l name=update-demo --no-headers'
  I0411 13:14:25.860711 26 builder.go:146] stderr: "No resources found in kubectl-2687 namespace.\n"
  I0411 13:14:25.860760 26 builder.go:147] stdout: ""
  I0411 13:14:25.860809 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-2687 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0411 13:14:25.904036 26 builder.go:146] stderr: ""
  I0411 13:14:25.904073 26 builder.go:147] stdout: ""
  I0411 13:14:25.904196 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2687" for this suite. @ 04/11/25 13:14:25.906
• [15.759 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 04/11/25 13:14:25.911
  I0411 13:14:25.911206 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:14:25.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:25.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:25.922
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/11/25 13:14:25.923
  I0411 13:14:25.923827 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-828 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0411 13:14:25.965075 26 builder.go:146] stderr: ""
  I0411 13:14:25.965110 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/11/25 13:14:25.965
  I0411 13:14:25.966881 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-828 delete pods e2e-test-httpd-pod'
  E0411 13:14:26.497461      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:27.187710 26 builder.go:146] stderr: ""
  I0411 13:14:27.187774 26 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0411 13:14:27.187977 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-828" for this suite. @ 04/11/25 13:14:27.191
• [1.286 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/11/25 13:14:27.197
  I0411 13:14:27.197615 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/11/25 13:14:27.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:27.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:27.215
  STEP: create the container to handle the HTTPGet hook request. @ 04/11/25 13:14:27.293
  E0411 13:14:27.497946      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:28.498663      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/11/25 13:14:29.317
  E0411 13:14:29.499699      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:30.500404      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/11/25 13:14:31.332
  E0411 13:14:31.500880      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:32.501428      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/11/25 13:14:33.347
  I0411 13:14:33.367591 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3115" for this suite. @ 04/11/25 13:14:33.37
• [6.179 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/11/25 13:14:33.376
  I0411 13:14:33.376942 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:14:33.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:33.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:33.39
  STEP: Creating projection with secret that has name projected-secret-test-map-a9e99d08-7011-4706-80b5-d73cd0b7ba9c @ 04/11/25 13:14:33.392
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:14:33.395
  E0411 13:14:33.502500      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:34.502811      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:14:35.408
  I0411 13:14:35.411369 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-b6aa675b-b4fe-4c69-8cf4-5200e20cb70e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:14:35.418
  I0411 13:14:35.428584 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-393" for this suite. @ 04/11/25 13:14:35.43
• [2.056 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/11/25 13:14:35.433
  I0411 13:14:35.433398 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename controllerrevisions @ 04/11/25 13:14:35.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:35.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:35.444
  E0411 13:14:35.503069      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating DaemonSet "e2e-mfgzr-daemon-set" @ 04/11/25 13:14:35.539
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/11/25 13:14:35.545
  I0411 13:14:35.637935 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mfgzr-daemon-set: 0
  I0411 13:14:35.637990 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0411 13:14:36.503125      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:36.555708 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mfgzr-daemon-set: 1
  I0411 13:14:36.555760 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0411 13:14:37.504027      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:37.556626 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mfgzr-daemon-set: 2
  I0411 13:14:37.556699 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-mfgzr-daemon-set
  STEP: Confirm DaemonSet "e2e-mfgzr-daemon-set" successfully created with "daemonset-name=e2e-mfgzr-daemon-set" label @ 04/11/25 13:14:37.56
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-mfgzr-daemon-set" @ 04/11/25 13:14:37.566
  I0411 13:14:37.569866 26 controller_revision.go:162] Located ControllerRevision: "e2e-mfgzr-daemon-set-67bbd66dfb"
  STEP: Patching ControllerRevision "e2e-mfgzr-daemon-set-67bbd66dfb" @ 04/11/25 13:14:37.572
  I0411 13:14:37.579892 26 controller_revision.go:173] e2e-mfgzr-daemon-set-67bbd66dfb has been patched
  STEP: Create a new ControllerRevision @ 04/11/25 13:14:37.579
  I0411 13:14:37.583778 26 controller_revision.go:191] Created ControllerRevision: e2e-mfgzr-daemon-set-84bb8654f8
  STEP: Confirm that there are two ControllerRevisions @ 04/11/25 13:14:37.583
  I0411 13:14:37.583844 26 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0411 13:14:37.585235 26 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-mfgzr-daemon-set-67bbd66dfb" @ 04/11/25 13:14:37.585
  STEP: Confirm that there is only one ControllerRevision @ 04/11/25 13:14:37.59
  I0411 13:14:37.590078 26 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0411 13:14:37.592453 26 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-mfgzr-daemon-set-84bb8654f8" @ 04/11/25 13:14:37.594
  I0411 13:14:37.602638 26 controller_revision.go:220] e2e-mfgzr-daemon-set-84bb8654f8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/11/25 13:14:37.602
  W0411 13:14:37.609629      26 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/11/25 13:14:37.609
  I0411 13:14:37.609775 26 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0411 13:14:37.634655 26 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-mfgzr-daemon-set-84bb8654f8=updated" @ 04/11/25 13:14:37.634
  STEP: Confirm that there is only one ControllerRevision @ 04/11/25 13:14:37.642
  I0411 13:14:37.642379 26 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0411 13:14:37.645954 26 controller_revision.go:265] Found 1 ControllerRevisions
  I0411 13:14:37.670449 26 controller_revision.go:246] ControllerRevision "e2e-mfgzr-daemon-set-74f6f4fdf9" has revision 3
  STEP: Deleting DaemonSet "e2e-mfgzr-daemon-set" @ 04/11/25 13:14:37.672
  STEP: deleting DaemonSet.extensions e2e-mfgzr-daemon-set in namespace controllerrevisions-2651, will wait for the garbage collector to delete the pods @ 04/11/25 13:14:37.672
  I0411 13:14:37.730253 26 resources.go:139] Deleting DaemonSet.extensions e2e-mfgzr-daemon-set took: 5.747452ms
  I0411 13:14:37.831360 26 resources.go:163] Terminating DaemonSet.extensions e2e-mfgzr-daemon-set pods took: 101.105301ms
  E0411 13:14:38.504073      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:39.504612      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:40.235863 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-mfgzr-daemon-set: 0
  I0411 13:14:40.235945 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-mfgzr-daemon-set
  I0411 13:14:40.239791 26 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26209"},"items":null}

  I0411 13:14:40.242350 26 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26209"},"items":null}

  I0411 13:14:40.250687 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2651" for this suite. @ 04/11/25 13:14:40.253
• [4.827 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/11/25 13:14:40.26
  I0411 13:14:40.260684 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replicaset @ 04/11/25 13:14:40.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:40.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:40.278
  STEP: Create a Replicaset @ 04/11/25 13:14:40.283
  STEP: Verify that the required pods have come up. @ 04/11/25 13:14:40.287
  I0411 13:14:40.289596 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0411 13:14:40.504999      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:41.505499      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:42.506278      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:43.506472      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:44.506888      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:45.294569 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/11/25 13:14:45.294
  STEP: Getting /status @ 04/11/25 13:14:45.294
  I0411 13:14:45.297570 26 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/11/25 13:14:45.297
  I0411 13:14:45.304412 26 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/11/25 13:14:45.304
  I0411 13:14:45.306577 26 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0411 13:14:45.306705 26 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.306808 26 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.307221 26 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.307300 26 replica_set.go:682] Found replicaset test-rs in namespace replicaset-7522 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0411 13:14:45.307326 26 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/11/25 13:14:45.307
  I0411 13:14:45.307390 26 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0411 13:14:45.313057 26 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/11/25 13:14:45.313
  I0411 13:14:45.314717 26 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0411 13:14:45.314809 26 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.314882 26 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.314952 26 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.314970 26 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-7522 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 13:14:45.315044 26 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0411 13:14:45.315063 26 replica_set.go:718] Found replicaset test-rs in namespace replicaset-7522 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0411 13:14:45.315076 26 replica_set.go:729] Replicaset test-rs has a patched status
  I0411 13:14:45.315169 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7522" for this suite. @ 04/11/25 13:14:45.317
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 04/11/25 13:14:45.322
  I0411 13:14:45.322750 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 13:14:45.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:45.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:45.334
  STEP: Counting existing ResourceQuota @ 04/11/25 13:14:45.336
  E0411 13:14:45.507744      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:46.508373      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:47.509027      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:48.509578      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:49.510471      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/11/25 13:14:50.339
  STEP: Ensuring resource quota status is calculated @ 04/11/25 13:14:50.345
  E0411 13:14:50.510500      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:51.511711      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:14:52.351005 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6914" for this suite. @ 04/11/25 13:14:52.354
• [7.038 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 04/11/25 13:14:52.361
  I0411 13:14:52.361123 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:14:52.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:52.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:52.38
  I0411 13:14:52.383367 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-6209 version'
  I0411 13:14:52.421605 26 builder.go:146] stderr: ""
  I0411 13:14:52.421649 26 builder.go:147] stdout: "Client Version: v1.32.2\nKustomize Version: v5.5.0\nServer Version: v1.32.2\n"
  I0411 13:14:52.421845 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6209" for this suite. @ 04/11/25 13:14:52.457
• [0.106 seconds]
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/11/25 13:14:52.466
  I0411 13:14:52.466878 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 13:14:52.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:14:52.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:14:52.484
  STEP: creating the pod @ 04/11/25 13:14:52.487
  STEP: waiting for pod running @ 04/11/25 13:14:52.495
  E0411 13:14:52.511615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:53.511894      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/11/25 13:14:54.503
  I0411 13:14:54.507160 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2289 PodName:var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:14:54.507229 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:14:54.507300 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2289/pods/var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  E0411 13:14:54.512930      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: test for file in mounted path @ 04/11/25 13:14:54.568
  I0411 13:14:54.571687 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2289 PodName:var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:14:54.571724 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:14:54.571788 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2289/pods/var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/11/25 13:14:54.631
  I0411 13:14:55.146035 26 pod_client.go:173] Successfully updated pod "var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856"
  STEP: waiting for annotated pod running @ 04/11/25 13:14:55.146
  STEP: deleting the pod gracefully @ 04/11/25 13:14:55.149
  I0411 13:14:55.149717 26 delete.go:62] Deleting pod "var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856" in namespace "var-expansion-2289"
  I0411 13:14:55.157124 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-b45fb4db-8181-4da5-b69f-1e7ddaa0c856" to be fully deleted
  E0411 13:14:55.514093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:56.514455      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:57.514766      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:58.515240      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:14:59.515287      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:00.515781      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:01.516699      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:02.517639      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:03.517989      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:04.518452      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:05.518656      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:06.519311      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:07.520347      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:08.520972      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:09.521157      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:10.521817      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:11.522635      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:12.523355      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:13.523890      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:14.524931      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:15.526111      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:16.526574      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:17.527142      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:18.527963      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:19.528261      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:20.528839      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:21.529630      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:22.530682      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:23.531151      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:24.531645      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:25.532386      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:26.532660      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:27.246005 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2289" for this suite. @ 04/11/25 13:15:27.249
• [34.791 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 04/11/25 13:15:27.257
  I0411 13:15:27.257913 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:15:27.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:15:27.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:15:27.278
  STEP: creating Agnhost RC @ 04/11/25 13:15:27.282
  I0411 13:15:27.282324 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-9858 create -f -'
  I0411 13:15:27.352735 26 builder.go:146] stderr: ""
  I0411 13:15:27.352793 26 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/11/25 13:15:27.352
  E0411 13:15:27.533136      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:28.359348 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 13:15:28.359406 26 framework.go:733] Found 0 / 1
  E0411 13:15:28.533481      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:29.360611 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 13:15:29.360674 26 framework.go:733] Found 1 / 1
  I0411 13:15:29.360708 26 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/11/25 13:15:29.36
  I0411 13:15:29.364031 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 13:15:29.364082 26 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0411 13:15:29.364146 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-9858 patch pod agnhost-primary-92nf2 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0411 13:15:29.415520 26 builder.go:146] stderr: ""
  I0411 13:15:29.415548 26 builder.go:147] stdout: "pod/agnhost-primary-92nf2 patched\n"
  STEP: checking annotations @ 04/11/25 13:15:29.415
  I0411 13:15:29.417389 26 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0411 13:15:29.417404 26 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0411 13:15:29.417479 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9858" for this suite. @ 04/11/25 13:15:29.419
• [2.165 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/11/25 13:15:29.422
  I0411 13:15:29.422660 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubelet-test @ 04/11/25 13:15:29.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:15:29.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:15:29.434
  I0411 13:15:29.453129 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3995" for this suite. @ 04/11/25 13:15:29.521
• [0.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/11/25 13:15:29.527
  I0411 13:15:29.527697 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 13:15:29.528
  E0411 13:15:29.533491      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:15:29.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:15:29.537
  I0411 13:15:29.569431 26 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"b5c8d156-60f9-4962-bc00-ff78f883c6c2", Controller:(*bool)(0xc003cdd726), BlockOwnerDeletion:(*bool)(0xc003cdd727)}}
  I0411 13:15:29.581463 26 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"cfc35568-5ef4-4539-90da-f752f663c6c0", Controller:(*bool)(0xc003cdd9be), BlockOwnerDeletion:(*bool)(0xc003cdd9bf)}}
  I0411 13:15:29.589217 26 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"50eefc8a-c614-4f2d-ac62-1591e03698cb", Controller:(*bool)(0xc00388a34e), BlockOwnerDeletion:(*bool)(0xc00388a34f)}}
  E0411 13:15:30.533986      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:31.534571      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:32.534883      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:33.535249      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:34.535410      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:34.628441 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2765" for this suite. @ 04/11/25 13:15:34.631
• [5.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 04/11/25 13:15:34.636
  I0411 13:15:34.636356 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 13:15:34.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:15:34.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:15:34.649
  STEP: Creating service test in namespace statefulset-8318 @ 04/11/25 13:15:34.651
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/11/25 13:15:34.654
  STEP: Creating stateful set ss in namespace statefulset-8318 @ 04/11/25 13:15:34.682
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8318 @ 04/11/25 13:15:34.685
  I0411 13:15:34.698065 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0411 13:15:35.535872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:36.536780      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:37.537548      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:38.538093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:39.538437      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:40.538762      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:41.539267      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:42.539731      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:43.540488      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:44.540876      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:44.688093 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/11/25 13:15:44.688
  I0411 13:15:44.689640 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 13:15:44.782979 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 13:15:44.783043 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 13:15:44.783064 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 13:15:44.786234 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0411 13:15:45.541259      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:46.541532      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:47.542139      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:48.542683      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:49.543476      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:50.543645      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:51.544522      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:52.544863      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:53.545507      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:15:54.546529      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:54.790961 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0411 13:15:54.791040 26 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0411 13:15:54.893107 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999126s
  E0411 13:15:55.546843      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:55.896457 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.909568776s
  E0411 13:15:56.547312      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:56.903295 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.906316249s
  E0411 13:15:57.547522      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:57.910678 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.899886221s
  E0411 13:15:58.548612      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:58.914253 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.892173339s
  E0411 13:15:59.548872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:15:59.920990 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.888277539s
  E0411 13:16:00.549612      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:00.927992 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.8818152s
  E0411 13:16:01.550332      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:01.931195 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.874889316s
  E0411 13:16:02.551545      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:02.938282 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.871754902s
  E0411 13:16:03.551657      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:03.944760 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 864.341429ms
  E0411 13:16:04.552127      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8318 @ 04/11/25 13:16:04.945
  I0411 13:16:04.947443 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 13:16:05.036536 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 13:16:05.036602 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 13:16:05.036624 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 13:16:05.039406 26 wait.go:40] Found 1 stateful pods, waiting for 3
  E0411 13:16:05.552975      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:06.553382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:07.554407      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:08.554723      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:09.554820      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:10.555377      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:11.555652      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:12.556524      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:13.557065      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:14.557304      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:15.044443 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:16:15.044501 26 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0411 13:16:15.044519 26 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/11/25 13:16:15.044
  STEP: Scale down will halt with unhealthy stateful pod @ 04/11/25 13:16:15.044
  I0411 13:16:15.050593 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 13:16:15.175354 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 13:16:15.175407 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 13:16:15.175424 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 13:16:15.175479 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 13:16:15.266786 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 13:16:15.266825 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 13:16:15.266840 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 13:16:15.266886 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0411 13:16:15.363031 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0411 13:16:15.363097 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0411 13:16:15.363120 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0411 13:16:15.363138 26 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0411 13:16:15.366071 26 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0411 13:16:15.558623      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:16.558986      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:17.559585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:18.559890      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:19.560659      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:20.561684      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:21.562576      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:22.562856      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:23.563513      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:24.563885      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:25.372599 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0411 13:16:25.372656 26 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0411 13:16:25.372673 26 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0411 13:16:25.473388 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999126s
  E0411 13:16:25.564644      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:26.479061 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.910002196s
  E0411 13:16:26.565312      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:27.484766 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.904538512s
  E0411 13:16:27.565872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:28.490542 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.898884788s
  E0411 13:16:28.566774      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:29.496295 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.892823313s
  E0411 13:16:29.567601      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:30.502471 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.887336917s
  E0411 13:16:30.567912      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:31.509835 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.880398346s
  E0411 13:16:31.568122      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:32.512385 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.873780447s
  E0411 13:16:32.568454      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:33.519612 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.870465612s
  E0411 13:16:33.569000      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:34.526193 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 863.824843ms
  E0411 13:16:34.569297      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8318 @ 04/11/25 13:16:35.527
  I0411 13:16:35.530008 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0411 13:16:35.569389      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:35.610971 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 13:16:35.611025 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 13:16:35.611041 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 13:16:35.611091 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 13:16:35.713897 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 13:16:35.713941 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 13:16:35.713954 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 13:16:35.714003 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=statefulset-8318 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0411 13:16:35.811453 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0411 13:16:35.811497 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0411 13:16:35.811509 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0411 13:16:35.811520 26 rest.go:152] Scaling statefulset ss to 0
  E0411 13:16:36.570139      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:37.571482      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:38.571522      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:39.572293      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:40.572847      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:41.573362      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:42.573869      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:43.574655      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:44.575157      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:45.575666      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/11/25 13:16:45.821
  I0411 13:16:45.821411 26 statefulset.go:138] Deleting all statefulset in ns statefulset-8318
  I0411 13:16:45.825172 26 rest.go:152] Scaling statefulset ss to 0
  I0411 13:16:45.830708 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 13:16:45.833909 26 rest.go:90] Deleting statefulset ss
  I0411 13:16:45.846637 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8318" for this suite. @ 04/11/25 13:16:45.85
• [71.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/11/25 13:16:45.856
  I0411 13:16:45.856266 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename prestop @ 04/11/25 13:16:45.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:16:45.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:16:45.866
  STEP: Creating server pod server in namespace prestop-9821 @ 04/11/25 13:16:45.868
  STEP: Waiting for pods to come up. @ 04/11/25 13:16:45.874
  E0411 13:16:46.575801      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:47.576146      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9821 @ 04/11/25 13:16:47.885
  E0411 13:16:48.576439      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:49.577455      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/11/25 13:16:49.9
  E0411 13:16:50.578200      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:51.578215      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:52.578581      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:53.579409      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:54.579458      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:54.916805 26 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/11/25 13:16:54.917
  I0411 13:16:54.931401 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9821" for this suite. @ 04/11/25 13:16:54.935
• [9.084 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 04/11/25 13:16:54.94
  I0411 13:16:54.940750 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 13:16:54.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:16:54.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:16:54.958
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7028.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-7028.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 04/11/25 13:16:54.96
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7028.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7028.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/11/25 13:16:54.96
  STEP: creating a pod to probe /etc/hosts @ 04/11/25 13:16:54.96
  STEP: submitting the pod to kubernetes @ 04/11/25 13:16:54.96
  E0411 13:16:55.580419      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:56.581469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/11/25 13:16:56.976
  STEP: looking for the results for each expected name from probers @ 04/11/25 13:16:56.98
  I0411 13:16:56.992853 26 dns_common.go:546] DNS probes using dns-7028/dns-test-036542d6-96a3-4c95-8b04-e63bd72188b5 succeeded

  STEP: deleting the pod @ 04/11/25 13:16:56.993
  I0411 13:16:57.006615 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7028" for this suite. @ 04/11/25 13:16:57.01
• [2.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/11/25 13:16:57.015
  I0411 13:16:57.015870 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 13:16:57.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:16:57.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:16:57.033
  STEP: creating the pod @ 04/11/25 13:16:57.036
  STEP: submitting the pod to kubernetes @ 04/11/25 13:16:57.036
  STEP: verifying QOS class is set on the pod @ 04/11/25 13:16:57.045
  I0411 13:16:57.048555 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3757" for this suite. @ 04/11/25 13:16:57.112
• [0.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/11/25 13:16:57.119
  I0411 13:16:57.119223 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename limitrange @ 04/11/25 13:16:57.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:16:57.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:16:57.14
  STEP: Creating LimitRange "e2e-limitrange-lfskg" in namespace "limitrange-6825" @ 04/11/25 13:16:57.144
  STEP: Creating another limitRange in another namespace @ 04/11/25 13:16:57.148
  I0411 13:16:57.238667 26 limit_range.go:299] Namespace "e2e-limitrange-lfskg-9801" created
  I0411 13:16:57.238736 26 limit_range.go:300] Creating LimitRange "e2e-limitrange-lfskg" in namespace "e2e-limitrange-lfskg-9801"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-lfskg" @ 04/11/25 13:16:57.244
  I0411 13:16:57.247923 26 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-lfskg" in "limitrange-6825" namespace @ 04/11/25 13:16:57.247
  I0411 13:16:57.255168 26 limit_range.go:335] LimitRange "e2e-limitrange-lfskg" has been patched
  STEP: Delete LimitRange "e2e-limitrange-lfskg" by Collection with labelSelector: "e2e-limitrange-lfskg=patched" @ 04/11/25 13:16:57.255
  STEP: Confirm that the limitRange "e2e-limitrange-lfskg" has been deleted @ 04/11/25 13:16:57.261
  I0411 13:16:57.261362 26 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0411 13:16:57.264048 26 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-lfskg=patched"
  I0411 13:16:57.264076 26 limit_range.go:344] LimitRange "e2e-limitrange-lfskg" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-lfskg" @ 04/11/25 13:16:57.264
  I0411 13:16:57.266419 26 limit_range.go:350] Found 1 limitRange
  I0411 13:16:57.266504 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6825" for this suite. @ 04/11/25 13:16:57.269
  STEP: Destroying namespace "e2e-limitrange-lfskg-9801" for this suite. @ 04/11/25 13:16:57.273
• [0.158 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 04/11/25 13:16:57.277
  I0411 13:16:57.277206 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:16:57.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:16:57.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:16:57.341
  STEP: Setting up server cert @ 04/11/25 13:16:57.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:16:57.552
  STEP: Deploying the webhook pod @ 04/11/25 13:16:57.556
  STEP: Wait for the deployment to be ready @ 04/11/25 13:16:57.563
  I0411 13:16:57.567778 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0411 13:16:57.581886      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:16:58.582550      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:16:59.578442 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 11, 13, 16, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 13, 16, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 11, 13, 16, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 11, 13, 16, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0411 13:16:59.583406      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:00.584570      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/11/25 13:17:01.581
  E0411 13:17:01.584834      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:17:01.6
  E0411 13:17:02.585490      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:02.601502 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/11/25 13:17:02.663
  STEP: Creating a configMap that should be mutated @ 04/11/25 13:17:02.68
  STEP: Deleting the collection of validation webhooks @ 04/11/25 13:17:02.697
  STEP: Creating a configMap that should not be mutated @ 04/11/25 13:17:02.719
  I0411 13:17:02.746519 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5588" for this suite. @ 04/11/25 13:17:02.748
  STEP: Destroying namespace "webhook-markers-8" for this suite. @ 04/11/25 13:17:02.752
• [5.482 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/11/25 13:17:02.759
  I0411 13:17:02.759969 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pod-network-test @ 04/11/25 13:17:02.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:17:02.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:17:02.774
  STEP: Performing setup for networking test in namespace pod-network-test-5526 @ 04/11/25 13:17:02.776
  STEP: creating a selector @ 04/11/25 13:17:02.776
  STEP: Creating the service pods in kubernetes @ 04/11/25 13:17:02.776
  I0411 13:17:02.776115 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0411 13:17:03.586383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:04.586837      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:05.587468      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:06.588473      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:07.588581      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:08.589395      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:09.590548      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:10.591521      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:11.592663      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:12.593688      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:13.594660      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:14.595078      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:15.595801      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:16.596458      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/11/25 13:17:16.914
  E0411 13:17:17.597573      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:18.598227      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:18.941697 26 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0411 13:17:18.941744 26 utils.go:496] Going to poll 10.244.0.182 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0411 13:17:18.943830 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.182 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5526 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:17:18.943862 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:17:18.943920 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5526/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.182+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0411 13:17:19.598396      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:20.014013 26 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0411 13:17:20.014047 26 utils.go:496] Going to poll 10.244.1.202 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0411 13:17:20.016140 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.202 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5526 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:17:20.016162 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:17:20.016208 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5526/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.202+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0411 13:17:20.598515      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:21.083729 26 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0411 13:17:21.083941 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5526" for this suite. @ 04/11/25 13:17:21.088
• [18.336 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 04/11/25 13:17:21.095
  I0411 13:17:21.095743 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 13:17:21.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:17:21.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:17:21.113
  STEP: Creating pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943 @ 04/11/25 13:17:21.116
  E0411 13:17:21.599445      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:22.600635      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 13:17:23.13
  I0411 13:17:23.132359 26 container_probe.go:1749] Initial restart count of pod liveness-4f41b431-304c-4c6f-9781-202d6929515d is 0
  I0411 13:17:23.134826 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:23.601687      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:24.602383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:25.139856 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:25.603486      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:26.603368      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:27.144626 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:27.604479      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:28.605155      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:29.152110 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:29.605297      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:30.605553      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:31.157888 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:31.606381      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:32.606967      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:33.161358 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:33.607102      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:34.607852      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:35.166316 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:35.607666      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:36.608440      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:37.171501 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:37.609017      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:38.609544      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:39.177874 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:39.609379      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:40.609431      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:41.183763 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:41.610498      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:42.610543      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:43.188903 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:43.611561      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:44.611717      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:45.194103 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:45.611907      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:46.612387      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:47.200827 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:47.613608      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:48.614537      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:49.206673 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:49.615280      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:50.615362      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:51.209195 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:51.615922      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:52.616655      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:53.216089 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:53.617491      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:54.617993      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:55.220952 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:55.618477      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:56.619388      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:57.225955 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:57.619734      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:17:58.620469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:17:59.232453 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:17:59.620609      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:00.621069      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:01.237409 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:01.621883      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:02.622504      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:03.244212 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:03.622625      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:04.623486      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:05.251089 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:05.624429      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:06.624497      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:07.256758 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:07.625249      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:08.625295      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:09.263475 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:09.626091      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:10.626489      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:11.268684 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:11.627278      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:12.627923      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:13.275022 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:13.628494      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:14.629219      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:15.280010 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:15.629628      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:16.629653      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:17.285355 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:17.629905      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:18.630171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:19.292217 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:19.630847      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:20.631456      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:21.298354 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:21.631872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:22.632566      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:23.304735 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:23.633274      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:24.633653      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:25.309044 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:25.634549      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:26.635503      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:27.316012 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:27.635531      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:28.636128      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:29.322334 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:29.636445      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:30.636872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:31.328525 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:31.637645      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:32.638480      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:33.333109 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:33.638518      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:34.639136      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:35.339976 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:35.639325      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:36.639367      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:37.346001 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:37.639631      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:38.640394      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:39.352535 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:39.641386      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:40.641947      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:41.358483 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:41.642957      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:42.643457      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:43.365151 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:43.643573      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:44.644707      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:45.370379 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:45.644844      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:46.645408      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:47.376894 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:47.646384      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:48.646720      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:49.384226 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:49.647787      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:50.648512      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:51.388309 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:51.648919      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:52.649485      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:53.395192 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:53.650607      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:54.650616      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:55.401271 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:55.651692      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:56.652383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:57.407242 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:57.652691      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:18:58.653320      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:18:59.412907 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:18:59.654372      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:00.654872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:01.419076 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:01.655737      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:02.656354      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:03.424479 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:03.657143      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:04.657313      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:05.429596 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:05.657795      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:06.657891      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:07.434522 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:07.658817      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:08.659776      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:09.437039 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:09.660708      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:10.660938      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:11.441657 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:11.661964      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:12.662542      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:13.444823 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:13.663341      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:14.663886      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:15.448490 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:15.664917      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:16.665138      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:17.452711 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:17.665960      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:18.666526      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:19.457515 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:19.666909      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:20.667525      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:21.463730 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:21.668304      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:22.668452      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:23.469319 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:23.668531      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:24.669597      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:25.475307 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:25.670559      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:26.670688      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:27.480031 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:27.671437      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:28.671791      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:29.485797 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:29.671885      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:30.672554      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:31.491634 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:31.673065      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:32.673651      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:33.497839 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:33.674316      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:34.675572      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:35.503918 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:35.675112      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:36.675591      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:37.510354 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:37.676586      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:38.676719      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:39.515384 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:39.677900      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:40.678419      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:41.521897 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:41.679314      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:42.679381      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:43.526660 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:43.679684      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:44.680378      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:45.531815 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:45.681262      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:46.681518      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:47.537261 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:47.681398      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:48.682677      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:49.542620 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:49.682870      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:50.683562      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:51.548387 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:51.683779      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:52.684439      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:53.555487 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:53.684571      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:54.684987      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:55.562587 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:55.686059      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:56.686495      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:57.568306 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:57.686557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:19:58.687629      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:19:59.574955 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:19:59.688073      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:00.688838      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:01.578560 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:01.688917      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:02.689588      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:03.583513 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:03.689741      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:04.690533      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:05.588910 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:05.691262      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:06.691528      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:07.595273 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:07.692598      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:08.693310      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:09.600722 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:09.694310      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:10.694645      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:11.606860 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:11.694935      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:12.695327      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:13.612680 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:13.695847      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:14.696375      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:15.618237 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:15.697493      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:16.698088      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:17.624329 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:17.698625      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:18.698969      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:19.630353 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:19.699742      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:20.700215      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:21.639413 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:21.700646      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:22.701621      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:23.642566 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:23.701932      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:24.702644      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:25.649655 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:25.702778      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:26.703115      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:27.655088 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:27.703394      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:28.703803      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:29.660820 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:29.704842      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:30.705910      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:31.665664 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:31.706688      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:32.707284      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:33.670281 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:33.707460      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:34.707894      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:35.674915 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:35.708056      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:36.708531      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:37.680939 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:37.709397      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:38.709369      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:39.685795 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:39.710084      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:40.710801      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:41.688462 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:41.711643      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:42.712074      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:43.695530 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:43.712724      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:44.713098      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:45.701423 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:45.713704      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:46.714647      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:47.704408 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:47.714546      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:48.715050      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:49.709645 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:49.715841      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:50.716122      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:51.715602 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:51.716500      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:52.716918      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:53.717475      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:53.718337 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:54.718499      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:55.719091      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:55.723962 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:56.719322      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:57.719789      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:57.729549 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:20:58.720844      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:20:59.721383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:20:59.736343 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:00.722421      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:01.723427      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:01.742493 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:02.723320      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:03.723587      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:03.747798 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:04.723911      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:05.724414      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:05.754629 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:06.725601      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:07.725821      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:07.759850 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:08.726385      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:09.727145      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:09.766642 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:10.727552      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:11.727820      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:11.773076 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:12.728146      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:13.728668      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:13.778691 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:14.728785      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:15.729256      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:15.781060 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:16.730350      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:17.730597      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:17.786898 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:18.731422      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:19.731382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:19.792946 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:20.731839      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:21.732215      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:21:21.797812 26 container_probe.go:1759] Get pod liveness-4f41b431-304c-4c6f-9781-202d6929515d in namespace container-probe-1943
  E0411 13:21:22.733106      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:23.733402      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/11/25 13:21:23.799
  I0411 13:21:23.816832 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1943" for this suite. @ 04/11/25 13:21:23.823
• [242.734 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/11/25 13:21:23.829
  I0411 13:21:23.829438 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:21:23.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:21:23.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:21:23.845
  STEP: Creating configMap with name configmap-test-volume-map-9df79dad-043b-491d-ae35-f66831925491 @ 04/11/25 13:21:23.847
  STEP: Creating a pod to test consume configMaps @ 04/11/25 13:21:23.851
  E0411 13:21:24.733726      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:25.734604      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:26.734549      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:27.735557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:21:27.871
  I0411 13:21:27.874352 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-0e5067d5-262e-4a67-8b0f-ffed00f6bfe6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 13:21:27.893
  I0411 13:21:27.908712 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2113" for this suite. @ 04/11/25 13:21:27.912
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/11/25 13:21:27.918
  I0411 13:21:27.918485 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename cronjob @ 04/11/25 13:21:27.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:21:27.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:21:27.938
  STEP: Creating a cronjob @ 04/11/25 13:21:27.941
  STEP: Ensuring more than one job is running at a time @ 04/11/25 13:21:27.947
  E0411 13:21:28.736510      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:29.736917      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:30.737644      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:31.738798      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:32.739027      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:33.739756      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:34.740581      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:35.740120      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:36.741169      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:37.741398      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:38.741385      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:39.741993      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:40.742731      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:41.743655      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:42.744730      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:43.745387      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:44.745445      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:45.746099      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:46.746109      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:47.746098      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:48.746508      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:49.746377      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:50.747255      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:51.747626      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:52.748101      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:53.748276      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:54.748571      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:55.749255      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:56.749369      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:57.749898      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:58.750153      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:21:59.750471      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:00.750444      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:01.751039      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:02.751316      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:03.751640      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:04.752304      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:05.752275      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:06.752538      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:07.753259      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:08.753887      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:09.754588      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:10.755620      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:11.755957      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:12.756999      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:13.757682      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:14.758140      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:15.758499      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:16.759528      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:17.759837      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:18.760392      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:19.760588      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:20.761425      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:21.761775      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:22.762166      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:23.762414      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:24.763575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:25.764157      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:26.764979      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:27.766153      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:28.766488      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:29.766503      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:30.766912      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:31.767492      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:32.768121      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:33.769136      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:34.769566      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:35.769481      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:36.769738      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:37.770284      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:38.770466      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:39.771596      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:40.772575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:41.772912      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:42.773859      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:43.774654      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:44.775649      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:45.776255      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:46.776309      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:47.776383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:48.777061      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:49.777552      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:50.778524      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:51.778913      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:52.779010      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:53.779501      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:54.779807      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:55.780415      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:56.780915      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:57.781735      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:58.781898      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:22:59.782146      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:00.782581      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:01.783490      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/11/25 13:23:01.949
  STEP: Removing cronjob @ 04/11/25 13:23:01.951
  I0411 13:23:01.954320 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4698" for this suite. @ 04/11/25 13:23:01.956
• [94.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/11/25 13:23:01.959
  I0411 13:23:01.959800 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:23:01.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:01.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:01.972
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/11/25 13:23:01.975
  E0411 13:23:02.784077      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:03.784845      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:23:03.99
  I0411 13:23:03.993699 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-f04c5a90-4053-49be-8372-52f7fe0025dc container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:23:04.01
  I0411 13:23:04.024844 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9636" for this suite. @ 04/11/25 13:23:04.029
• [2.076 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 04/11/25 13:23:04.035
  I0411 13:23:04.035816 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 13:23:04.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:04.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:04.048
  STEP: Creating a job @ 04/11/25 13:23:04.05
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/11/25 13:23:04.055
  E0411 13:23:04.785621      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:05.786447      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/11/25 13:23:06.063
  STEP: updating /status @ 04/11/25 13:23:06.073
  STEP: get /status @ 04/11/25 13:23:06.084
  I0411 13:23:06.087398 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7399" for this suite. @ 04/11/25 13:23:06.09
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/11/25 13:23:06.096
  I0411 13:23:06.096348 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-pred @ 04/11/25 13:23:06.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:06.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:06.114
  I0411 13:23:06.116776 26 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0411 13:23:06.195951 26 util.go:396] Waiting for terminating namespaces to be deleted...
  I0411 13:23:06.199250 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0411 13:23:06.203691 26 predicates.go:957] coredns-668d6bf9bc-c7wkv from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203734 26 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0411 13:23:06.203752 26 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203764 26 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0411 13:23:06.203777 26 predicates.go:957] kindnet-sppkx from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203794 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 13:23:06.203807 26 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203818 26 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0411 13:23:06.203829 26 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203840 26 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0411 13:23:06.203851 26 predicates.go:957] kube-proxy-2nq7z from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203861 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 13:23:06.203873 26 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203893 26 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0411 13:23:06.203906 26 predicates.go:957] storage-provisioner from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.203919 26 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0411 13:23:06.203930 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-rfzgx from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 13:23:06.203940 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 13:23:06.203949 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0411 13:23:06.203961 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0411 13:23:06.207595 26 predicates.go:957] concurrent-29072962-hzd9l from cronjob-4698 started at 2025-04-11 13:22:00 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207630 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:23:06.207649 26 predicates.go:957] concurrent-29072963-s9cmk from cronjob-4698 started at 2025-04-11 13:23:00 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207664 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:23:06.207677 26 predicates.go:957] suspend-false-to-true-lqkvq from job-7399 started at 2025-04-11 13:23:04 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207689 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:23:06.207702 26 predicates.go:957] suspend-false-to-true-xbjqt from job-7399 started at 2025-04-11 13:23:04 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207721 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:23:06.207733 26 predicates.go:957] kindnet-zpgj5 from kube-system started at 2025-04-11 12:53:25 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207747 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 13:23:06.207760 26 predicates.go:957] kube-proxy-tn29z from kube-system started at 2025-04-11 11:52:06 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207772 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 13:23:06.207803 26 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-11 11:52:59 +0000 UTC (1 container statuses recorded)
  I0411 13:23:06.207817 26 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0411 13:23:06.207828 26 predicates.go:957] sonobuoy-e2e-job-040191c692314dcd from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 13:23:06.207839 26 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0411 13:23:06.207849 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 13:23:06.207862 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-w7b8t from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 13:23:06.207891 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 13:23:06.207902 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/11/25 13:23:06.207
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1835465abdfbcc51], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 04/11/25 13:23:06.228
  E0411 13:23:06.786945      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:07.230743 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5976" for this suite. @ 04/11/25 13:23:07.234
• [1.146 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/11/25 13:23:07.242
  I0411 13:23:07.242263 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:23:07.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:07.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:07.259
  STEP: Creating configMap with name cm-test-opt-del-cdab73fe-b1a2-492a-a233-f495270ddf10 @ 04/11/25 13:23:07.337
  STEP: Creating configMap with name cm-test-opt-upd-1be1d5fa-d728-4ffb-bb8e-d12335a2d26a @ 04/11/25 13:23:07.344
  STEP: Creating the pod @ 04/11/25 13:23:07.349
  E0411 13:23:07.787926      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:08.788466      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-cdab73fe-b1a2-492a-a233-f495270ddf10 @ 04/11/25 13:23:09.398
  STEP: Updating configmap cm-test-opt-upd-1be1d5fa-d728-4ffb-bb8e-d12335a2d26a @ 04/11/25 13:23:09.404
  STEP: Creating configMap with name cm-test-opt-create-6459b5a6-2909-4893-b6ff-8d3b93724ab2 @ 04/11/25 13:23:09.41
  STEP: waiting to observe update in volume @ 04/11/25 13:23:09.416
  E0411 13:23:09.788839      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:10.789630      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:11.790171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:12.790806      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:13.462557 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-113" for this suite. @ 04/11/25 13:23:13.466
• [6.231 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/11/25 13:23:13.473
  I0411 13:23:13.473317 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename namespaces @ 04/11/25 13:23:13.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:13.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:13.489
  STEP: creating a Namespace @ 04/11/25 13:23:13.492
  STEP: patching the Namespace @ 04/11/25 13:23:13.583
  STEP: get the Namespace and ensuring it has the label @ 04/11/25 13:23:13.585
  I0411 13:23:13.587536 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2116" for this suite. @ 04/11/25 13:23:13.589
  STEP: Destroying namespace "nspatchtest-112bb9ad-92dc-434a-88ff-6124c188385a-3374" for this suite. @ 04/11/25 13:23:13.592
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/11/25 13:23:13.596
  I0411 13:23:13.596169 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/11/25 13:23:13.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:13.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:13.691
  STEP: fetching the /apis discovery document @ 04/11/25 13:23:13.694
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/11/25 13:23:13.695
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/11/25 13:23:13.695
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/11/25 13:23:13.695
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/11/25 13:23:13.696
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/11/25 13:23:13.696
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/11/25 13:23:13.697
  I0411 13:23:13.697266 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4663" for this suite. @ 04/11/25 13:23:13.7
• [0.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 04/11/25 13:23:13.706
  I0411 13:23:13.706708 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 13:23:13.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:13.79
  E0411 13:23:13.790688      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:13.793
  STEP: apply creating a deployment @ 04/11/25 13:23:13.796
  I0411 13:23:13.807113 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8955" for this suite. @ 04/11/25 13:23:13.81
• [0.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 04/11/25 13:23:13.816
  I0411 13:23:13.816314 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 13:23:13.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:13.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:13.893
  STEP: Creating a ResourceQuota with best effort scope @ 04/11/25 13:23:13.897
  STEP: Ensuring ResourceQuota status is calculated @ 04/11/25 13:23:13.903
  E0411 13:23:14.791433      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:15.792049      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/11/25 13:23:15.911
  STEP: Ensuring ResourceQuota status is calculated @ 04/11/25 13:23:15.916
  E0411 13:23:16.792815      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:17.793108      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/11/25 13:23:17.923
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/11/25 13:23:17.939
  E0411 13:23:18.793497      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:19.793911      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/11/25 13:23:19.947
  E0411 13:23:20.794220      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:21.794658      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/11/25 13:23:21.953
  STEP: Ensuring resource quota status released the pod usage @ 04/11/25 13:23:21.967
  E0411 13:23:22.794815      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:23.795433      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/11/25 13:23:23.971
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/11/25 13:23:23.984
  E0411 13:23:24.795797      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:25.796301      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/11/25 13:23:25.989
  E0411 13:23:26.796662      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:27.796887      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/11/25 13:23:27.994
  STEP: Ensuring resource quota status released the pod usage @ 04/11/25 13:23:28.007
  E0411 13:23:28.797463      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:29.797826      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:30.014325 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-528" for this suite. @ 04/11/25 13:23:30.018
• [16.209 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/11/25 13:23:30.024
  I0411 13:23:30.025019 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename init-container @ 04/11/25 13:23:30.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:30.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:30.039
  STEP: creating the pod @ 04/11/25 13:23:30.041
  I0411 13:23:30.041468 26 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0411 13:23:30.798423      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:31.799387      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:32.799705      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:33.800093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:34.306404 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-929" for this suite. @ 04/11/25 13:23:34.308
• [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/11/25 13:23:34.312
  I0411 13:23:34.312544 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename replicaset @ 04/11/25 13:23:34.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:34.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:34.323
  I0411 13:23:34.332262 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0411 13:23:34.800345      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:35.800488      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:36.801629      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:37.801926      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:38.802202      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:39.334312 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/11/25 13:23:39.334
  STEP: Scaling up "test-rs" replicaset @ 04/11/25 13:23:39.334
  I0411 13:23:39.339268 26 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/11/25 13:23:39.339
  I0411 13:23:39.344837 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7456 with ReadyReplicas 1, AvailableReplicas 1
  I0411 13:23:39.352898 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7456 with ReadyReplicas 1, AvailableReplicas 1
  I0411 13:23:39.360965 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7456 with ReadyReplicas 1, AvailableReplicas 1
  I0411 13:23:39.364738 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7456 with ReadyReplicas 1, AvailableReplicas 1
  E0411 13:23:39.802818      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:40.290064 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7456 with ReadyReplicas 2, AvailableReplicas 2
  I0411 13:23:40.726688 26 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7456 with ReadyReplicas 3 found true
  I0411 13:23:40.726912 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7456" for this suite. @ 04/11/25 13:23:40.731
• [6.424 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 04/11/25 13:23:40.736
  I0411 13:23:40.736445 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 13:23:40.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:40.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:40.754
  E0411 13:23:40.803735      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 04/11/25 13:23:40.841
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/11/25 13:23:40.846
  I0411 13:23:40.936504 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:23:40.936553 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0411 13:23:41.804291      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:41.855029 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0411 13:23:41.855083 26 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  E0411 13:23:42.805266      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:42.854827 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 13:23:42.854869 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 04/11/25 13:23:42.857
  I0411 13:23:42.860284 26 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/11/25 13:23:42.86
  I0411 13:23:42.869604 26 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/11/25 13:23:42.869
  I0411 13:23:42.872142 26 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0411 13:23:42.872324 26 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.872464 26 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.872581 26 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.872617 26 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-5123 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0411 13:23:42.872640 26 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/11/25 13:23:42.872
  STEP: watching for the daemon set status to be patched @ 04/11/25 13:23:42.88
  I0411 13:23:42.882684 26 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0411 13:23:42.882870 26 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.883010 26 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.883182 26 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.883223 26 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-5123 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0411 13:23:42.883306 26 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0411 13:23:42.883327 26 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-5123 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0411 13:23:42.883339 26 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/11/25 13:23:42.886
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5123, will wait for the garbage collector to delete the pods @ 04/11/25 13:23:42.886
  I0411 13:23:42.947867 26 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.148726ms
  I0411 13:23:43.048151 26 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.257782ms
  E0411 13:23:43.806248      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:44.806836      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:23:45.451361 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:23:45.451412 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0411 13:23:45.454322 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27826"},"items":null}

  I0411 13:23:45.456576 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27826"},"items":null}

  I0411 13:23:45.465085 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5123" for this suite. @ 04/11/25 13:23:45.467
• [4.736 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 04/11/25 13:23:45.472
  I0411 13:23:45.472338 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename cronjob @ 04/11/25 13:23:45.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:45.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:45.483
  STEP: Creating a cronjob @ 04/11/25 13:23:45.485
  STEP: creating @ 04/11/25 13:23:45.485
  STEP: getting @ 04/11/25 13:23:45.49
  STEP: listing @ 04/11/25 13:23:45.491
  STEP: watching @ 04/11/25 13:23:45.492
  I0411 13:23:45.492877 26 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 04/11/25 13:23:45.493
  STEP: cluster-wide watching @ 04/11/25 13:23:45.494
  I0411 13:23:45.494358 26 cronjob.go:407] starting watch
  STEP: patching @ 04/11/25 13:23:45.494
  STEP: updating @ 04/11/25 13:23:45.498
  I0411 13:23:45.503042 26 cronjob.go:431] waiting for watch events with expected annotations
  I0411 13:23:45.503071 26 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 04/11/25 13:23:45.503
  STEP: updating /status @ 04/11/25 13:23:45.506
  STEP: get /status @ 04/11/25 13:23:45.51
  STEP: deleting @ 04/11/25 13:23:45.511
  STEP: deleting a collection @ 04/11/25 13:23:45.518
  I0411 13:23:45.523547 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5796" for this suite. @ 04/11/25 13:23:45.562
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/11/25 13:23:45.571
  I0411 13:23:45.571512 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:23:45.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:45.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:45.586
  STEP: Creating configMap with name projected-configmap-test-volume-2adfd6f4-17e0-426e-b2e3-74e440ef3992 @ 04/11/25 13:23:45.589
  STEP: Creating a pod to test consume configMaps @ 04/11/25 13:23:45.592
  E0411 13:23:45.807479      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:46.808214      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:23:47.607
  I0411 13:23:47.610502 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-8fe85b42-77e4-449c-9ea8-7ad40c2ac16e container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 13:23:47.618
  I0411 13:23:47.632413 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4068" for this suite. @ 04/11/25 13:23:47.635
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/11/25 13:23:47.64
  I0411 13:23:47.640060 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/11/25 13:23:47.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:47.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:47.653
  STEP: creating a target pod @ 04/11/25 13:23:47.656
  E0411 13:23:47.809093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:48.809920      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/11/25 13:23:49.674
  E0411 13:23:49.810437      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:50.811430      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/11/25 13:23:51.693
  I0411 13:23:51.693272 26 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7183 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0411 13:23:51.693299 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0411 13:23:51.693376 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7183/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0411 13:23:51.770543 26 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/11/25 13:23:51.778
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/11/25 13:23:51.781
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/11/25 13:23:51.793
  I0411 13:23:51.798486 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7183" for this suite. @ 04/11/25 13:23:51.803
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/11/25 13:23:51.81
  I0411 13:23:51.810874 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:23:51.811
  E0411 13:23:51.811490      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:51.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:51.827
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/11/25 13:23:51.828
  E0411 13:23:52.812133      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:53.812582      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:23:53.837
  I0411 13:23:53.839326 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-1d824b05-9034-4109-8f3d-f26d314b547f container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:23:53.843
  I0411 13:23:53.853934 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7131" for this suite. @ 04/11/25 13:23:53.855
• [2.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/11/25 13:23:53.863
  I0411 13:23:53.863247 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename tables @ 04/11/25 13:23:53.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:53.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:53.875
  I0411 13:23:53.879290 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-476" for this suite. @ 04/11/25 13:23:53.958
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/11/25 13:23:53.966
  I0411 13:23:53.966512 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename lease-test @ 04/11/25 13:23:53.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:53.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:53.984
  I0411 13:23:54.028189 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5471" for this suite. @ 04/11/25 13:23:54.058
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 04/11/25 13:23:54.062
  I0411 13:23:54.062301 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 13:23:54.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:23:54.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:23:54.084
  E0411 13:23:54.813562      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:55.814233      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:56.814396      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:57.815515      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:58.816429      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:23:59.816754      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:00.817061      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:01.817624      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:02.817460      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:03.818506      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:04.818864      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:05.819436      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:06.820501      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:07.821641      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:08.822421      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:09.823222      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:10.823640      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/11/25 13:24:11.092
  E0411 13:24:11.824377      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:12.824698      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:13.825222      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:14.825292      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:15.826159      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/11/25 13:24:16.098
  STEP: Ensuring resource quota status is calculated @ 04/11/25 13:24:16.105
  E0411 13:24:16.826464      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:17.826872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/11/25 13:24:18.108
  STEP: Ensuring resource quota status captures configMap creation @ 04/11/25 13:24:18.119
  E0411 13:24:18.828010      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:19.828519      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/11/25 13:24:20.125
  STEP: Ensuring resource quota status released usage @ 04/11/25 13:24:20.132
  E0411 13:24:20.829397      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:21.830545      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:24:22.136991 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2730" for this suite. @ 04/11/25 13:24:22.14
• [28.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 04/11/25 13:24:22.148
  I0411 13:24:22.148215 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 13:24:22.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:24:22.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:24:22.164
  I0411 13:24:22.167599 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  W0411 13:24:22.168607      26 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00416f050 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0411 13:24:22.831382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:23.831483      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0411 13:24:24.719256      26 warnings.go:70] unknown field "alpha"
  W0411 13:24:24.719302      26 warnings.go:70] unknown field "beta"
  W0411 13:24:24.719310      26 warnings.go:70] unknown field "delta"
  W0411 13:24:24.719318      26 warnings.go:70] unknown field "epsilon"
  W0411 13:24:24.719325      26 warnings.go:70] unknown field "gamma"
  E0411 13:24:24.831805      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:24:25.257702 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4468" for this suite. @ 04/11/25 13:24:25.261
• [3.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/11/25 13:24:25.267
  I0411 13:24:25.267738 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename var-expansion @ 04/11/25 13:24:25.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:24:25.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:24:25.288
  STEP: creating the pod with failed condition @ 04/11/25 13:24:25.291
  E0411 13:24:25.832332      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:26.832575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:27.833597      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:28.833675      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:29.834587      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:30.835170      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:31.835530      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:32.836362      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:33.836766      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:34.837310      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:35.838092      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:36.838556      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:37.838969      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:38.839350      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:39.840603      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:40.840585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:41.841316      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:42.841574      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:43.842305      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:44.842487      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:45.842719      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:46.843161      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:47.843215      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:48.843985      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:49.844616      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:50.844882      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:51.846171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:52.846766      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:53.847461      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:54.848739      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:55.849106      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:56.849645      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:57.850392      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:58.850741      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:24:59.851730      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:00.852633      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:01.853599      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:02.854451      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:03.855414      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:04.855612      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:05.856259      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:06.856811      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:07.857375      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:08.857721      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:09.857943      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:10.858396      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:11.859204      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:12.859824      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:13.860798      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:14.861728      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:15.861823      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:16.862420      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:17.863069      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:18.863636      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:19.864281      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:20.864575      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:21.864837      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:22.865518      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:23.865703      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:24.867053      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:25.867750      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:26.868500      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:27.869303      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:28.869962      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:29.870717      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:30.871080      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:31.871469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:32.871911      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:33.872857      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:34.873950      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:35.873434      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:36.874642      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:37.875813      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:38.876231      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:39.877037      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:40.877749      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:41.877896      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:42.878515      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:43.878884      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:44.879587      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:45.880636      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:46.881290      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:47.881322      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:48.881887      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:49.881939      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:50.882289      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:51.882462      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:52.882532      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:53.882469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:54.883756      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:55.883885      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:56.884395      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:57.884627      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:58.884892      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:25:59.885256      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:00.885761      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:01.886702      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:02.887150      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:03.888214      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:04.888546      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:05.889211      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:06.889665      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:07.889828      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:08.890224      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:09.890548      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:10.891229      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:11.891440      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:12.891946      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:13.893044      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:14.893615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:15.894062      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:16.894507      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:17.895228      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:18.896087      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:19.896398      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:20.896789      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:21.897033      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:22.897551      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:23.898417      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:24.899525      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/11/25 13:26:25.3
  I0411 13:26:25.816594 26 pod_client.go:173] Successfully updated pod "var-expansion-0e3d3b18-07b5-4465-8665-651cb7d52e5f"
  STEP: waiting for pod running @ 04/11/25 13:26:25.816
  E0411 13:26:25.899862      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:26.900026      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/11/25 13:26:27.825
  I0411 13:26:27.825606 26 delete.go:62] Deleting pod "var-expansion-0e3d3b18-07b5-4465-8665-651cb7d52e5f" in namespace "var-expansion-1740"
  I0411 13:26:27.835124 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-0e3d3b18-07b5-4465-8665-651cb7d52e5f" to be fully deleted
  E0411 13:26:27.901221      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:28.902217      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:29.903035      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:30.903792      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:31.904008      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:32.904318      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:33.905010      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:34.905523      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:35.905417      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:36.905910      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:37.906635      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:38.906912      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:39.907213      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:40.907823      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:41.907903      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:42.908462      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:43.908727      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:44.909168      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:45.909641      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:46.910149      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:47.910597      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:48.911164      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:49.912110      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:50.912694      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:51.912699      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:52.913685      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:53.914619      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:54.915857      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:55.916442      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:56.916689      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:57.917493      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:58.918735      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:26:59.919236      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:26:59.934561 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1740" for this suite. @ 04/11/25 13:26:59.938
• [154.678 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 04/11/25 13:26:59.945
  I0411 13:26:59.945989 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-selectable-fields @ 04/11/25 13:26:59.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:26:59.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:26:59.963
  STEP: Setting up server cert @ 04/11/25 13:26:59.966
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/11/25 13:27:00.097
  STEP: Deploying the custom resource conversion webhook pod @ 04/11/25 13:27:00.102
  STEP: Wait for the deployment to be ready @ 04/11/25 13:27:00.11
  I0411 13:27:00.115191 26 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0411 13:27:00.919256      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:01.919474      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/11/25 13:27:02.128
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:27:02.142
  E0411 13:27:02.920291      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:03.143504 26 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 04/11/25 13:27:03.152
  I0411 13:27:03.152364 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Creating a custom resource conversion webhook @ 04/11/25 13:27:03.668
  E0411 13:27:03.920396      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:04.920637      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 04/11/25 13:27:05.725
  STEP: Registering informers with field selectors @ 04/11/25 13:27:05.732
  STEP: Creating custom resources @ 04/11/25 13:27:05.732
  STEP: Listing v2 custom resources with field selector host=host1 @ 04/11/25 13:27:05.755
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 04/11/25 13:27:05.758
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 04/11/25 13:27:05.761
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 04/11/25 13:27:05.763
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 04/11/25 13:27:05.765
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 04/11/25 13:27:05.771
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 04/11/25 13:27:05.771
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 04/11/25 13:27:05.771
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 04/11/25 13:27:05.771
  STEP: Deleting one custom resources to ensure that deletions are observed @ 04/11/25 13:27:05.771
  STEP: Updating one custom resources to ensure that deletions are observed @ 04/11/25 13:27:05.781
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 04/11/25 13:27:05.792
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 04/11/25 13:27:05.794
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 04/11/25 13:27:05.796
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 04/11/25 13:27:05.801
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 04/11/25 13:27:05.801
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 04/11/25 13:27:05.801
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 04/11/25 13:27:05.801
  E0411 13:27:05.921720      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:06.351615 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-9539" for this suite. @ 04/11/25 13:27:06.354
• [6.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/11/25 13:27:06.361
  I0411 13:27:06.361327 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename ingress @ 04/11/25 13:27:06.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:06.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:06.379
  STEP: getting /apis @ 04/11/25 13:27:06.382
  STEP: getting /apis/networking.k8s.io @ 04/11/25 13:27:06.385
  STEP: getting /apis/networking.k8s.iov1 @ 04/11/25 13:27:06.386
  STEP: creating @ 04/11/25 13:27:06.386
  STEP: getting @ 04/11/25 13:27:06.397
  STEP: listing @ 04/11/25 13:27:06.398
  STEP: watching @ 04/11/25 13:27:06.4
  I0411 13:27:06.400330 26 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/11/25 13:27:06.4
  STEP: cluster-wide watching @ 04/11/25 13:27:06.402
  I0411 13:27:06.402141 26 ingress.go:198] starting watch
  STEP: patching @ 04/11/25 13:27:06.402
  STEP: updating @ 04/11/25 13:27:06.406
  I0411 13:27:06.413285 26 ingress.go:221] waiting for watch events with expected annotations
  I0411 13:27:06.413327 26 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/11/25 13:27:06.413
  STEP: updating /status @ 04/11/25 13:27:06.417
  STEP: get /status @ 04/11/25 13:27:06.421
  STEP: deleting @ 04/11/25 13:27:06.424
  STEP: deleting a collection @ 04/11/25 13:27:06.43
  I0411 13:27:06.435914 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1595" for this suite. @ 04/11/25 13:27:06.455
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/11/25 13:27:06.461
  I0411 13:27:06.461272 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 13:27:06.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:06.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:06.474
  STEP: create the deployment @ 04/11/25 13:27:06.475
  W0411 13:27:06.482073      26 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/11/25 13:27:06.482
  E0411 13:27:06.921697      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/11/25 13:27:06.985
  STEP: wait for all rs to be garbage collected @ 04/11/25 13:27:06.992
  STEP: expected 0 pods, got 2 pods @ 04/11/25 13:27:07.003
  STEP: Gathering metrics @ 04/11/25 13:27:07.502
  I0411 13:27:07.576395 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0411 13:27:07.576509 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1244" for this suite. @ 04/11/25 13:27:07.578
• [1.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/11/25 13:27:07.582
  I0411 13:27:07.582719 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 13:27:07.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:07.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:07.594
  STEP: Creating secret with name secret-test-7b4f482b-f1b5-4138-bca1-3a7b22d80407 @ 04/11/25 13:27:07.596
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:27:07.599
  E0411 13:27:07.922587      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:08.922927      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:09.923729      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:10.924316      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:27:11.614
  I0411 13:27:11.616261 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-af9ef01f-8030-4f42-bb28-6a51a7e7f649 container secret-env-test: <nil>
  STEP: delete the pod @ 04/11/25 13:27:11.623
  I0411 13:27:11.631657 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1218" for this suite. @ 04/11/25 13:27:11.633
• [4.054 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 04/11/25 13:27:11.636
  I0411 13:27:11.636548 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 13:27:11.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:11.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:11.682
  STEP: Creating service test in namespace statefulset-3520 @ 04/11/25 13:27:11.685
  STEP: Creating statefulset ss in namespace statefulset-3520 @ 04/11/25 13:27:11.698
  I0411 13:27:11.717880 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0411 13:27:11.924591      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:12.925159      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:13.925777      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:14.926452      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:15.927088      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:16.927836      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:17.928679      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:18.928772      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:19.929456      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:20.929956      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:21.711546 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/11/25 13:27:21.717
  STEP: Getting /status @ 04/11/25 13:27:21.728
  I0411 13:27:21.732874 26 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/11/25 13:27:21.732
  I0411 13:27:21.741101 26 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/11/25 13:27:21.741
  I0411 13:27:21.743395 26 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0411 13:27:21.743457 26 statefulset.go:1114] Found Statefulset ss in namespace statefulset-3520 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 13:27:21.743476 26 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/11/25 13:27:21.743
  I0411 13:27:21.743518 26 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0411 13:27:21.752283 26 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/11/25 13:27:21.752
  I0411 13:27:21.754447 26 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0411 13:27:21.754488 26 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-3520 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0411 13:27:21.754578 26 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0411 13:27:21.754642 26 statefulset.go:138] Deleting all statefulset in ns statefulset-3520
  I0411 13:27:21.757069 26 rest.go:152] Scaling statefulset ss to 0
  E0411 13:27:21.930103      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:22.930681      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:23.931427      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:24.931950      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:25.932614      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:26.933365      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:27.934004      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:28.934602      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:29.935371      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:30.935837      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:31.770597 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 13:27:31.773219 26 rest.go:90] Deleting statefulset ss
  I0411 13:27:31.787711 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3520" for this suite. @ 04/11/25 13:27:31.79
• [20.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 04/11/25 13:27:31.796
  I0411 13:27:31.796208 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:27:31.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:31.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:31.812
  STEP: Setting up server cert @ 04/11/25 13:27:31.911
  E0411 13:27:31.936568      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:27:32.072
  STEP: Deploying the webhook pod @ 04/11/25 13:27:32.077
  STEP: Wait for the deployment to be ready @ 04/11/25 13:27:32.087
  I0411 13:27:32.089353 26 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0411 13:27:32.937685      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:33.938704      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/11/25 13:27:34.1
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:27:34.111
  E0411 13:27:34.939713      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:35.112103 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0411 13:27:35.120659 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6894-crds.webhook.example.com via the AdmissionRegistration API @ 04/11/25 13:27:35.636
  STEP: Creating a custom resource while v1 is storage version @ 04/11/25 13:27:35.658
  E0411 13:27:35.939391      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:36.939655      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/11/25 13:27:37.694
  STEP: Patching the custom resource while v2 is storage version @ 04/11/25 13:27:37.713
  E0411 13:27:37.940632      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:38.268996 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9931" for this suite. @ 04/11/25 13:27:38.272
  STEP: Destroying namespace "webhook-markers-522" for this suite. @ 04/11/25 13:27:38.279
• [6.489 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/11/25 13:27:38.285
  I0411 13:27:38.285415 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename daemonsets @ 04/11/25 13:27:38.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:38.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:38.303
  I0411 13:27:38.384732 26 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0411 13:27:38.391079 26 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0411 13:27:38.475307 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:27:38.475346 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0411 13:27:38.940834      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:39.401297 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:27:39.401342 26 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0411 13:27:39.941724      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:40.398656 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0411 13:27:40.398707 26 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0411 13:27:40.398729 26 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0411 13:27:40.408850 26 daemon_set.go:102] Updating DaemonSet daemon-set
  E0411 13:27:40.942070      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:41.415599 26 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0411 13:27:41.420439 26 daemon_set.go:102] Updating DaemonSet daemon-set
  I0411 13:27:41.420476 26 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0411 13:27:41.422526 26 daemon_set.go:1193] Wrong image for pod: daemon-set-jvhsz. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0411 13:27:41.422561 26 daemon_set.go:1198] Pod daemon-set-jvhsz is not available
  E0411 13:27:41.943411      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:42.943494      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:43.944099      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:44.423579 26 daemon_set.go:1198] Pod daemon-set-5ll5k is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/11/25 13:27:44.429
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7755, will wait for the garbage collector to delete the pods @ 04/11/25 13:27:44.429
  I0411 13:27:44.485046 26 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.702947ms
  I0411 13:27:44.585541 26 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.493284ms
  E0411 13:27:44.944930      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:45.889782 26 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0411 13:27:45.889850 26 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0411 13:27:45.892984 26 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28679"},"items":null}

  I0411 13:27:45.895442 26 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28679"},"items":null}

  I0411 13:27:45.904445 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7755" for this suite. @ 04/11/25 13:27:45.907
• [7.628 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/11/25 13:27:45.913
  I0411 13:27:45.913827 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:27:45.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:45.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:45.937
  E0411 13:27:45.945824      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating configMap with name configmap-test-upd-72304f96-c5aa-4297-9960-4666d141472f @ 04/11/25 13:27:46.001
  STEP: Creating the pod @ 04/11/25 13:27:46.008
  E0411 13:27:46.946555      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:47.946834      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/11/25 13:27:48.025
  STEP: Waiting for pod with binary data @ 04/11/25 13:27:48.029
  I0411 13:27:48.035727 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7143" for this suite. @ 04/11/25 13:27:48.039
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/11/25 13:27:48.046
  I0411 13:27:48.046803 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 13:27:48.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:48.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:48.058
  STEP: create the deployment @ 04/11/25 13:27:48.06
  W0411 13:27:48.065190      26 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/11/25 13:27:48.065
  STEP: delete the deployment @ 04/11/25 13:27:48.569
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/11/25 13:27:48.574
  E0411 13:27:48.946899      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/11/25 13:27:49.089
  I0411 13:27:49.163063 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0411 13:27:49.163157 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-885" for this suite. @ 04/11/25 13:27:49.165
• [1.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/11/25 13:27:49.169
  I0411 13:27:49.169805 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:27:49.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:49.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:49.18
  STEP: creating a ConfigMap @ 04/11/25 13:27:49.182
  STEP: fetching the ConfigMap @ 04/11/25 13:27:49.185
  STEP: patching the ConfigMap @ 04/11/25 13:27:49.186
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/11/25 13:27:49.19
  STEP: deleting the ConfigMap by collection with a label selector @ 04/11/25 13:27:49.191
  STEP: listing all ConfigMaps in test namespace @ 04/11/25 13:27:49.196
  I0411 13:27:49.198575 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2535" for this suite. @ 04/11/25 13:27:49.268
• [0.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/11/25 13:27:49.276
  I0411 13:27:49.276623 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename runtimeclass @ 04/11/25 13:27:49.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:49.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:49.292
  I0411 13:27:49.300908 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6259" for this suite. @ 04/11/25 13:27:49.369
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/11/25 13:27:49.378
  I0411 13:27:49.378303 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename runtimeclass @ 04/11/25 13:27:49.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:49.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:49.393
  E0411 13:27:49.947045      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:50.947455      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:51.421757 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3690" for this suite. @ 04/11/25 13:27:51.425
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/11/25 13:27:51.431
  I0411 13:27:51.431408 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename pods @ 04/11/25 13:27:51.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:51.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:51.448
  I0411 13:27:51.450440 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: creating the pod @ 04/11/25 13:27:51.45
  STEP: submitting the pod to kubernetes @ 04/11/25 13:27:51.451
  E0411 13:27:51.948379      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:52.949548      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:27:53.474501 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2709" for this suite. @ 04/11/25 13:27:53.476
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/11/25 13:27:53.481
  I0411 13:27:53.481567 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 13:27:53.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:53.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:53.49
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 13:27:53.492
  E0411 13:27:53.950337      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:54.950428      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:55.950874      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:56.951239      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:27:57.511
  I0411 13:27:57.513849 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-52983861-f322-4f0a-b36f-d301d8786ade container client-container: <nil>
  STEP: delete the pod @ 04/11/25 13:27:57.521
  I0411 13:27:57.541367 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9494" for this suite. @ 04/11/25 13:27:57.545
• [4.069 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/11/25 13:27:57.551
  I0411 13:27:57.551163 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 13:27:57.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:27:57.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:27:57.57
  STEP: Creating secret with name s-test-opt-del-e49b8d13-32c6-490b-baf7-0d12567b7c23 @ 04/11/25 13:27:57.646
  STEP: Creating secret with name s-test-opt-upd-97cf12be-f3d3-4f3d-9dd9-cd401209bf4e @ 04/11/25 13:27:57.651
  STEP: Creating the pod @ 04/11/25 13:27:57.655
  E0411 13:27:57.951264      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:27:58.951978      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e49b8d13-32c6-490b-baf7-0d12567b7c23 @ 04/11/25 13:27:59.698
  STEP: Updating secret s-test-opt-upd-97cf12be-f3d3-4f3d-9dd9-cd401209bf4e @ 04/11/25 13:27:59.704
  STEP: Creating secret with name s-test-opt-create-2f35001a-8218-466f-9618-9cefb2e96a55 @ 04/11/25 13:27:59.71
  STEP: waiting to observe update in volume @ 04/11/25 13:27:59.715
  E0411 13:27:59.952709      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:00.953155      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:01.954256      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:02.955583      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:03.955969      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:04.956474      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:05.957345      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:06.958005      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:07.958804      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:08.959427      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:09.959636      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:10.960293      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:11.961195      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:12.961556      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:13.961997      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:14.962642      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:15.963509      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:16.964015      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:17.964748      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:18.965782      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:19.966300      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:20.966870      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:21.966947      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:22.967739      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:23.968630      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:24.969475      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:25.970514      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:26.971677      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:27.972604      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:28.972858      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:29.973734      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:30.974393      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:31.975528      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:32.975628      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:33.976354      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:34.976929      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:35.977608      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:36.978607      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:37.979451      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:38.979988      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:39.980869      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:40.981888      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:41.982285      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:42.982765      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:43.983047      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:44.984126      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:45.984382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:46.984549      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:47.984890      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:48.985755      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:49.986619      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:50.986951      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:51.987646      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:52.988453      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:53.988874      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:54.989718      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:55.990385      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:56.990594      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:57.991211      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:58.991892      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:28:59.992040      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:00.992864      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:01.993636      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:02.994382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:03.995234      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:04.995450      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:05.995469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:06.996012      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:07.996271      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:08.997128      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:09.997615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:10.997719      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:11.998395      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:12.999158      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:13.999458      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:14.999474      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:15.999972      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:17.000478      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:18.000723      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:19.000947      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:20.001423      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:21.001543      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:22.001872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:23.002519      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:24.002906      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:25.003437      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:26.003806      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:27.004272      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:28.004919      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:29.005093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:30.005643      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:29:30.305195 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-313" for this suite. @ 04/11/25 13:29:30.308
• [92.763 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 04/11/25 13:29:30.314
  I0411 13:29:30.314726 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename svcaccounts @ 04/11/25 13:29:30.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:29:30.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:29:30.331
  I0411 13:29:30.337372 26 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-8441"
  I0411 13:29:30.341289 26 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-8441"
  STEP: waiting for a new root ca configmap created @ 04/11/25 13:29:30.842
  I0411 13:29:30.847074 26 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-8441"
  I0411 13:29:30.854814 26 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-8441"
  E0411 13:29:31.006305      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/11/25 13:29:31.355
  I0411 13:29:31.361199 26 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-8441"
  I0411 13:29:31.361451 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8441" for this suite. @ 04/11/25 13:29:31.365
• [1.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 04/11/25 13:29:31.371
  I0411 13:29:31.371505 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 13:29:31.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:29:31.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:29:31.39
  STEP: Looking for a node to schedule job pod @ 04/11/25 13:29:31.394
  STEP: Creating a job @ 04/11/25 13:29:31.467
  STEP: Ensuring job fails @ 04/11/25 13:29:31.475
  E0411 13:29:32.006710      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:33.007648      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:34.008634      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:35.009373      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:36.010239      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:37.010656      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:29:37.495682 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9314" for this suite. @ 04/11/25 13:29:37.499
• [6.136 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/11/25 13:29:37.508
  I0411 13:29:37.508042 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename gc @ 04/11/25 13:29:37.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:29:37.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:29:37.526
  STEP: create the rc @ 04/11/25 13:29:37.601
  W0411 13:29:37.608725      26 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0411 13:29:38.011334      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:39.012342      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:40.012950      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:41.013887      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:42.013982      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:43.014485      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/11/25 13:29:43.614
  STEP: wait for the rc to be deleted @ 04/11/25 13:29:43.622
  E0411 13:29:44.015500      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:45.015624      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:46.016627      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:47.017413      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:48.017993      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/11/25 13:29:48.628
  E0411 13:29:49.018548      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:50.019526      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:51.019488      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:52.020205      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:53.020448      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:54.020972      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:55.021419      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:56.022107      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:57.022323      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:58.022769      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:29:59.022990      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:00.023744      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:01.023992      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:02.024499      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:03.025071      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:04.025604      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:05.026707      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:06.026809      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:07.027366      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:08.028380      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:09.028868      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:10.029334      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:11.029950      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:12.030544      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:13.031135      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:14.031599      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:15.032268      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:16.032811      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:17.033504      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:18.033870      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/11/25 13:30:18.641
  I0411 13:30:18.730047 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0411 13:30:18.730090 26 delete.go:95] Deleting pod "simpletest.rc-22pgb" in namespace "gc-2866"
  I0411 13:30:18.740796 26 delete.go:95] Deleting pod "simpletest.rc-24r7h" in namespace "gc-2866"
  I0411 13:30:18.749608 26 delete.go:95] Deleting pod "simpletest.rc-2dmfc" in namespace "gc-2866"
  I0411 13:30:18.758199 26 delete.go:95] Deleting pod "simpletest.rc-2gpvl" in namespace "gc-2866"
  I0411 13:30:18.769942 26 delete.go:95] Deleting pod "simpletest.rc-2tl2z" in namespace "gc-2866"
  I0411 13:30:18.782761 26 delete.go:95] Deleting pod "simpletest.rc-2zpx2" in namespace "gc-2866"
  I0411 13:30:18.798620 26 delete.go:95] Deleting pod "simpletest.rc-2zss6" in namespace "gc-2866"
  I0411 13:30:18.806909 26 delete.go:95] Deleting pod "simpletest.rc-4khv7" in namespace "gc-2866"
  I0411 13:30:18.818292 26 delete.go:95] Deleting pod "simpletest.rc-55dzf" in namespace "gc-2866"
  I0411 13:30:18.826683 26 delete.go:95] Deleting pod "simpletest.rc-564nw" in namespace "gc-2866"
  I0411 13:30:18.839133 26 delete.go:95] Deleting pod "simpletest.rc-5dvtr" in namespace "gc-2866"
  I0411 13:30:18.849785 26 delete.go:95] Deleting pod "simpletest.rc-5h8km" in namespace "gc-2866"
  I0411 13:30:18.860215 26 delete.go:95] Deleting pod "simpletest.rc-5q49k" in namespace "gc-2866"
  I0411 13:30:18.879234 26 delete.go:95] Deleting pod "simpletest.rc-5rlnl" in namespace "gc-2866"
  I0411 13:30:18.889782 26 delete.go:95] Deleting pod "simpletest.rc-5tqgq" in namespace "gc-2866"
  I0411 13:30:18.902162 26 delete.go:95] Deleting pod "simpletest.rc-5wxmz" in namespace "gc-2866"
  I0411 13:30:18.913689 26 delete.go:95] Deleting pod "simpletest.rc-6hmrx" in namespace "gc-2866"
  I0411 13:30:18.927966 26 delete.go:95] Deleting pod "simpletest.rc-7lgfm" in namespace "gc-2866"
  I0411 13:30:18.943468 26 delete.go:95] Deleting pod "simpletest.rc-7lv59" in namespace "gc-2866"
  I0411 13:30:18.953893 26 delete.go:95] Deleting pod "simpletest.rc-7sf2c" in namespace "gc-2866"
  I0411 13:30:18.973416 26 delete.go:95] Deleting pod "simpletest.rc-82psm" in namespace "gc-2866"
  I0411 13:30:18.987128 26 delete.go:95] Deleting pod "simpletest.rc-8qtw5" in namespace "gc-2866"
  I0411 13:30:19.008332 26 delete.go:95] Deleting pod "simpletest.rc-8wsrt" in namespace "gc-2866"
  I0411 13:30:19.020815 26 delete.go:95] Deleting pod "simpletest.rc-9df8d" in namespace "gc-2866"
  E0411 13:30:19.033916      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:30:19.036309 26 delete.go:95] Deleting pod "simpletest.rc-9dpdb" in namespace "gc-2866"
  I0411 13:30:19.053508 26 delete.go:95] Deleting pod "simpletest.rc-9dxhf" in namespace "gc-2866"
  I0411 13:30:19.074696 26 delete.go:95] Deleting pod "simpletest.rc-9jtt2" in namespace "gc-2866"
  I0411 13:30:19.088204 26 delete.go:95] Deleting pod "simpletest.rc-9m749" in namespace "gc-2866"
  I0411 13:30:19.112620 26 delete.go:95] Deleting pod "simpletest.rc-9rbh6" in namespace "gc-2866"
  I0411 13:30:19.131443 26 delete.go:95] Deleting pod "simpletest.rc-b4px8" in namespace "gc-2866"
  I0411 13:30:19.157650 26 delete.go:95] Deleting pod "simpletest.rc-bbtvb" in namespace "gc-2866"
  I0411 13:30:19.174982 26 delete.go:95] Deleting pod "simpletest.rc-bfk9f" in namespace "gc-2866"
  I0411 13:30:19.189207 26 delete.go:95] Deleting pod "simpletest.rc-btglf" in namespace "gc-2866"
  I0411 13:30:19.208918 26 delete.go:95] Deleting pod "simpletest.rc-c8scq" in namespace "gc-2866"
  I0411 13:30:19.226556 26 delete.go:95] Deleting pod "simpletest.rc-cdh45" in namespace "gc-2866"
  I0411 13:30:19.239654 26 delete.go:95] Deleting pod "simpletest.rc-cp4ld" in namespace "gc-2866"
  I0411 13:30:19.257542 26 delete.go:95] Deleting pod "simpletest.rc-cvhmz" in namespace "gc-2866"
  I0411 13:30:19.268120 26 delete.go:95] Deleting pod "simpletest.rc-cvth8" in namespace "gc-2866"
  I0411 13:30:19.285731 26 delete.go:95] Deleting pod "simpletest.rc-drbln" in namespace "gc-2866"
  I0411 13:30:19.303447 26 delete.go:95] Deleting pod "simpletest.rc-dv7m7" in namespace "gc-2866"
  I0411 13:30:19.327270 26 delete.go:95] Deleting pod "simpletest.rc-dzfwh" in namespace "gc-2866"
  I0411 13:30:19.342485 26 delete.go:95] Deleting pod "simpletest.rc-f5579" in namespace "gc-2866"
  I0411 13:30:19.355434 26 delete.go:95] Deleting pod "simpletest.rc-fmh48" in namespace "gc-2866"
  I0411 13:30:19.374496 26 delete.go:95] Deleting pod "simpletest.rc-fsf6b" in namespace "gc-2866"
  I0411 13:30:19.390929 26 delete.go:95] Deleting pod "simpletest.rc-fx9hn" in namespace "gc-2866"
  I0411 13:30:19.409225 26 delete.go:95] Deleting pod "simpletest.rc-g75j9" in namespace "gc-2866"
  I0411 13:30:19.430082 26 delete.go:95] Deleting pod "simpletest.rc-gj9pf" in namespace "gc-2866"
  I0411 13:30:19.448714 26 delete.go:95] Deleting pod "simpletest.rc-gnxln" in namespace "gc-2866"
  I0411 13:30:19.465026 26 delete.go:95] Deleting pod "simpletest.rc-h46bs" in namespace "gc-2866"
  I0411 13:30:19.486460 26 delete.go:95] Deleting pod "simpletest.rc-h66kb" in namespace "gc-2866"
  I0411 13:30:19.503383 26 delete.go:95] Deleting pod "simpletest.rc-hb84r" in namespace "gc-2866"
  I0411 13:30:19.523349 26 delete.go:95] Deleting pod "simpletest.rc-jxh4v" in namespace "gc-2866"
  I0411 13:30:19.544906 26 delete.go:95] Deleting pod "simpletest.rc-k5gsm" in namespace "gc-2866"
  I0411 13:30:19.565332 26 delete.go:95] Deleting pod "simpletest.rc-kjc5t" in namespace "gc-2866"
  I0411 13:30:19.582153 26 delete.go:95] Deleting pod "simpletest.rc-l74g4" in namespace "gc-2866"
  I0411 13:30:19.594968 26 delete.go:95] Deleting pod "simpletest.rc-lhvw6" in namespace "gc-2866"
  I0411 13:30:19.612285 26 delete.go:95] Deleting pod "simpletest.rc-lr7ds" in namespace "gc-2866"
  I0411 13:30:19.628902 26 delete.go:95] Deleting pod "simpletest.rc-lwvbr" in namespace "gc-2866"
  I0411 13:30:19.643010 26 delete.go:95] Deleting pod "simpletest.rc-m8fgw" in namespace "gc-2866"
  I0411 13:30:19.667345 26 delete.go:95] Deleting pod "simpletest.rc-m9zmc" in namespace "gc-2866"
  I0411 13:30:19.680908 26 delete.go:95] Deleting pod "simpletest.rc-mbvtm" in namespace "gc-2866"
  I0411 13:30:19.688263 26 delete.go:95] Deleting pod "simpletest.rc-mdndk" in namespace "gc-2866"
  I0411 13:30:19.703078 26 delete.go:95] Deleting pod "simpletest.rc-mj2c8" in namespace "gc-2866"
  I0411 13:30:19.713296 26 delete.go:95] Deleting pod "simpletest.rc-mjpqn" in namespace "gc-2866"
  I0411 13:30:19.725864 26 delete.go:95] Deleting pod "simpletest.rc-mpfzq" in namespace "gc-2866"
  I0411 13:30:19.740667 26 delete.go:95] Deleting pod "simpletest.rc-n9q77" in namespace "gc-2866"
  I0411 13:30:19.764039 26 delete.go:95] Deleting pod "simpletest.rc-ndszd" in namespace "gc-2866"
  I0411 13:30:19.779071 26 delete.go:95] Deleting pod "simpletest.rc-nm9z9" in namespace "gc-2866"
  I0411 13:30:19.795226 26 delete.go:95] Deleting pod "simpletest.rc-npv9k" in namespace "gc-2866"
  I0411 13:30:19.807302 26 delete.go:95] Deleting pod "simpletest.rc-nrssk" in namespace "gc-2866"
  I0411 13:30:19.842621 26 delete.go:95] Deleting pod "simpletest.rc-ntdrq" in namespace "gc-2866"
  I0411 13:30:19.895822 26 delete.go:95] Deleting pod "simpletest.rc-nw7qt" in namespace "gc-2866"
  I0411 13:30:19.942490 26 delete.go:95] Deleting pod "simpletest.rc-p86rg" in namespace "gc-2866"
  I0411 13:30:19.999474 26 delete.go:95] Deleting pod "simpletest.rc-p9k2c" in namespace "gc-2866"
  E0411 13:30:20.034851      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:30:20.048857 26 delete.go:95] Deleting pod "simpletest.rc-pgxkk" in namespace "gc-2866"
  I0411 13:30:20.094275 26 delete.go:95] Deleting pod "simpletest.rc-ph6jw" in namespace "gc-2866"
  I0411 13:30:20.145955 26 delete.go:95] Deleting pod "simpletest.rc-phvtp" in namespace "gc-2866"
  I0411 13:30:20.191316 26 delete.go:95] Deleting pod "simpletest.rc-pl9pn" in namespace "gc-2866"
  I0411 13:30:20.242827 26 delete.go:95] Deleting pod "simpletest.rc-pvx9k" in namespace "gc-2866"
  I0411 13:30:20.298067 26 delete.go:95] Deleting pod "simpletest.rc-qbpb5" in namespace "gc-2866"
  I0411 13:30:20.338596 26 delete.go:95] Deleting pod "simpletest.rc-qcqwt" in namespace "gc-2866"
  I0411 13:30:20.389443 26 delete.go:95] Deleting pod "simpletest.rc-qv59t" in namespace "gc-2866"
  I0411 13:30:20.442799 26 delete.go:95] Deleting pod "simpletest.rc-r2sbm" in namespace "gc-2866"
  I0411 13:30:20.488613 26 delete.go:95] Deleting pod "simpletest.rc-r4xnv" in namespace "gc-2866"
  I0411 13:30:20.541388 26 delete.go:95] Deleting pod "simpletest.rc-s48jj" in namespace "gc-2866"
  I0411 13:30:20.591450 26 delete.go:95] Deleting pod "simpletest.rc-sbh56" in namespace "gc-2866"
  I0411 13:30:20.643414 26 delete.go:95] Deleting pod "simpletest.rc-snfsq" in namespace "gc-2866"
  I0411 13:30:20.690472 26 delete.go:95] Deleting pod "simpletest.rc-stk28" in namespace "gc-2866"
  I0411 13:30:20.740409 26 delete.go:95] Deleting pod "simpletest.rc-t4d9q" in namespace "gc-2866"
  I0411 13:30:20.792813 26 delete.go:95] Deleting pod "simpletest.rc-tdspt" in namespace "gc-2866"
  I0411 13:30:20.842237 26 delete.go:95] Deleting pod "simpletest.rc-tdxc5" in namespace "gc-2866"
  I0411 13:30:20.887898 26 delete.go:95] Deleting pod "simpletest.rc-v4pnz" in namespace "gc-2866"
  I0411 13:30:20.936468 26 delete.go:95] Deleting pod "simpletest.rc-vb5rb" in namespace "gc-2866"
  I0411 13:30:20.990479 26 delete.go:95] Deleting pod "simpletest.rc-vq55r" in namespace "gc-2866"
  E0411 13:30:21.035171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:30:21.040259 26 delete.go:95] Deleting pod "simpletest.rc-w4v68" in namespace "gc-2866"
  I0411 13:30:21.090822 26 delete.go:95] Deleting pod "simpletest.rc-wt68n" in namespace "gc-2866"
  I0411 13:30:21.137884 26 delete.go:95] Deleting pod "simpletest.rc-xnfwc" in namespace "gc-2866"
  I0411 13:30:21.187579 26 delete.go:95] Deleting pod "simpletest.rc-xq9xf" in namespace "gc-2866"
  I0411 13:30:21.242341 26 delete.go:95] Deleting pod "simpletest.rc-zjx8f" in namespace "gc-2866"
  I0411 13:30:21.290967 26 delete.go:95] Deleting pod "simpletest.rc-zwx6n" in namespace "gc-2866"
  I0411 13:30:21.340472 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2866" for this suite. @ 04/11/25 13:30:21.385
• [43.926 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 04/11/25 13:30:21.434
  I0411 13:30:21.434127 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename field-validation @ 04/11/25 13:30:21.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:21.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:21.448
  I0411 13:30:21.450544 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  E0411 13:30:22.035250      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:23.035390      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0411 13:30:23.998801      26 warnings.go:70] unknown field "alpha"
  W0411 13:30:23.998843      26 warnings.go:70] unknown field "beta"
  W0411 13:30:23.998855      26 warnings.go:70] unknown field "delta"
  W0411 13:30:23.998864      26 warnings.go:70] unknown field "epsilon"
  W0411 13:30:23.998883      26 warnings.go:70] unknown field "gamma"
  E0411 13:30:24.035870      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:30:24.541551 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1857" for this suite. @ 04/11/25 13:30:24.544
• [3.118 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 04/11/25 13:30:24.552
  I0411 13:30:24.552207 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename csinodes @ 04/11/25 13:30:24.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:24.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:24.567
  STEP: Creating initial csiNode "e2e-csinode-cjvqr" @ 04/11/25 13:30:24.57
  STEP: Getting initial csiNode "e2e-csinode-cjvqr" @ 04/11/25 13:30:24.574
  STEP: Patching initial csiNode: "e2e-csinode-cjvqr" @ 04/11/25 13:30:24.576
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-cjvqr=patched" @ 04/11/25 13:30:24.582
  STEP: Delete initial csiNode: "e2e-csinode-cjvqr" @ 04/11/25 13:30:24.583
  STEP: Confirm deletion of csiNode "e2e-csinode-cjvqr" @ 04/11/25 13:30:24.586
  STEP: Creating replacement csiNode "e2e-csinode-g2dw4" @ 04/11/25 13:30:24.587
  STEP: Getting replacement csiNode "e2e-csinode-g2dw4" @ 04/11/25 13:30:24.59
  STEP: Updating replacement csiNode "e2e-csinode-g2dw4" @ 04/11/25 13:30:24.591
  STEP: DeleteCollection of CSINodes with "e2e-csinode-g2dw4=updated" label @ 04/11/25 13:30:24.594
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-g2dw4=updated" @ 04/11/25 13:30:24.598
  I0411 13:30:24.599323 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-5171" for this suite. @ 04/11/25 13:30:24.644
• [0.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/11/25 13:30:24.648
  I0411 13:30:24.648171 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename namespaces @ 04/11/25 13:30:24.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:24.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:24.663
  STEP: Creating namespace "e2e-ns-lpx72" @ 04/11/25 13:30:24.665
  I0411 13:30:24.770524 26 namespace.go:411] Namespace "e2e-ns-lpx72-3078" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-lpx72-3078" @ 04/11/25 13:30:24.77
  I0411 13:30:24.776052 26 namespace.go:434] Namespace "e2e-ns-lpx72-3078" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-lpx72-3078" @ 04/11/25 13:30:24.776
  I0411 13:30:24.780695 26 namespace.go:463] Namespace "e2e-ns-lpx72-3078" has []v1.FinalizerName{"kubernetes"}
  I0411 13:30:24.780942 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6001" for this suite. @ 04/11/25 13:30:24.784
  STEP: Destroying namespace "e2e-ns-lpx72-3078" for this suite. @ 04/11/25 13:30:24.788
• [0.145 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 04/11/25 13:30:24.793
  I0411 13:30:24.793584 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:30:24.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:24.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:24.873
  STEP: validating api versions @ 04/11/25 13:30:24.876
  I0411 13:30:24.876775 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-5284 api-versions'
  I0411 13:30:24.918057 26 builder.go:146] stderr: ""
  I0411 13:30:24.918092 26 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0411 13:30:24.918160 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5284" for this suite. @ 04/11/25 13:30:24.92
• [0.131 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 04/11/25 13:30:24.924
  I0411 13:30:24.924025 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename resourcequota @ 04/11/25 13:30:24.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:24.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:24.973
  STEP: Creating a ResourceQuota with terminating scope @ 04/11/25 13:30:24.977
  STEP: Ensuring ResourceQuota status is calculated @ 04/11/25 13:30:24.981
  E0411 13:30:25.036756      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:26.037648      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/11/25 13:30:26.983
  STEP: Ensuring ResourceQuota status is calculated @ 04/11/25 13:30:26.986
  E0411 13:30:27.038436      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:28.038903      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/11/25 13:30:28.992
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/11/25 13:30:29.006
  E0411 13:30:29.039645      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:30.040557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/11/25 13:30:31.011
  E0411 13:30:31.040784      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:32.040982      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/11/25 13:30:33.016
  STEP: Ensuring resource quota status released the pod usage @ 04/11/25 13:30:33.027
  E0411 13:30:33.041524      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:34.042459      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/11/25 13:30:35.033
  E0411 13:30:35.042498      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/11/25 13:30:35.045
  E0411 13:30:36.042749      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:37.042968      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/11/25 13:30:37.051
  E0411 13:30:38.043679      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:39.043821      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/11/25 13:30:39.056
  STEP: Ensuring resource quota status released the pod usage @ 04/11/25 13:30:39.067
  E0411 13:30:40.044498      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:41.044984      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:30:41.072853 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6649" for this suite. @ 04/11/25 13:30:41.076
• [16.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/11/25 13:30:41.082
  I0411 13:30:41.082677 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename server-version @ 04/11/25 13:30:41.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:41.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:41.102
  STEP: Request ServerVersion @ 04/11/25 13:30:41.106
  STEP: Confirm major version @ 04/11/25 13:30:41.107
  I0411 13:30:41.107463 26 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/11/25 13:30:41.107
  I0411 13:30:41.107524 26 server_version.go:58] cleanMinorVersion: 32
  I0411 13:30:41.107553 26 server_version.go:62] Minor version: 32
  I0411 13:30:41.107710 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3801" for this suite. @ 04/11/25 13:30:41.178
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/11/25 13:30:41.184
  I0411 13:30:41.184571 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:30:41.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:41.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:41.203
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/11/25 13:30:41.206
  E0411 13:30:42.045447      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:43.045615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:30:43.22
  I0411 13:30:43.223063 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-5df05915-ea5d-4bf8-a484-2ce6de4bec53 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:30:43.232
  I0411 13:30:43.246314 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4253" for this suite. @ 04/11/25 13:30:43.249
• [2.070 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/11/25 13:30:43.254
  I0411 13:30:43.254824 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:30:43.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:43.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:43.271
  STEP: Creating configMap with name cm-test-opt-del-c74afb1b-4848-4379-876f-5171274f8619 @ 04/11/25 13:30:43.351
  STEP: Creating configMap with name cm-test-opt-upd-36e572cc-0345-4039-b8a7-7de5238ca0cc @ 04/11/25 13:30:43.356
  STEP: Creating the pod @ 04/11/25 13:30:43.36
  E0411 13:30:44.045980      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:45.046642      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-c74afb1b-4848-4379-876f-5171274f8619 @ 04/11/25 13:30:45.403
  STEP: Updating configmap cm-test-opt-upd-36e572cc-0345-4039-b8a7-7de5238ca0cc @ 04/11/25 13:30:45.409
  STEP: Creating configMap with name cm-test-opt-create-cc3e43ab-3708-49f6-ac37-203be8d719c3 @ 04/11/25 13:30:45.415
  STEP: waiting to observe update in volume @ 04/11/25 13:30:45.419
  E0411 13:30:46.047359      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:47.047529      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:48.047773      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:49.048714      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:30:49.459797 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8321" for this suite. @ 04/11/25 13:30:49.463
• [6.216 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/11/25 13:30:49.47
  I0411 13:30:49.470643 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-runtime @ 04/11/25 13:30:49.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:49.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:49.489
  STEP: create the container @ 04/11/25 13:30:49.493
  W0411 13:30:49.501531      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/11/25 13:30:49.501
  E0411 13:30:50.049547      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:51.050441      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:52.051224      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/11/25 13:30:52.521
  STEP: the container should be terminated @ 04/11/25 13:30:52.526
  STEP: the termination message should be set @ 04/11/25 13:30:52.526
  I0411 13:30:52.526669 26 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/11/25 13:30:52.526
  I0411 13:30:52.547000 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1202" for this suite. @ 04/11/25 13:30:52.55
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 04/11/25 13:30:52.557
  I0411 13:30:52.557327 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename containers @ 04/11/25 13:30:52.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:52.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:52.573
  STEP: Creating a pod to test override arguments @ 04/11/25 13:30:52.575
  E0411 13:30:53.052114      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:54.053034      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:55.053773      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:56.054543      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:30:56.589
  I0411 13:30:56.591406 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-containers-8aa15e0a-6611-465c-8a83-d4a1626c7c8e container agnhost-container: <nil>
  STEP: delete the pod @ 04/11/25 13:30:56.596
  I0411 13:30:56.606687 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8758" for this suite. @ 04/11/25 13:30:56.608
• [4.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/11/25 13:30:56.611
  I0411 13:30:56.611752 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:30:56.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:56.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:56.622
  STEP: Creating secret with name projected-secret-test-62935fde-9cf3-47d7-8332-4880a6875f0a @ 04/11/25 13:30:56.623
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:30:56.626
  E0411 13:30:57.055469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:30:58.055872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:30:58.643
  I0411 13:30:58.647949 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-597ad920-0dbb-4bcb-a0c6-74814e67e40f container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:30:58.657
  I0411 13:30:58.670381 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6607" for this suite. @ 04/11/25 13:30:58.673
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/11/25 13:30:58.68
  I0411 13:30:58.680363 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/11/25 13:30:58.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:58.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:58.695
  STEP: Creating two CSIDrivers @ 04/11/25 13:30:58.698
  STEP: Getting "inline-driver-56db5328-48e4-45c3-b731-73cb6974b11a" & "inline-driver-8cc72dce-c982-47ee-8caf-207e42ad2588" @ 04/11/25 13:30:58.713
  STEP: Patching the CSIDriver "inline-driver-8cc72dce-c982-47ee-8caf-207e42ad2588" @ 04/11/25 13:30:58.718
  STEP: Updating the CSIDriver "inline-driver-8cc72dce-c982-47ee-8caf-207e42ad2588" @ 04/11/25 13:30:58.725
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2439" @ 04/11/25 13:30:58.733
  STEP: Deleting CSIDriver "inline-driver-56db5328-48e4-45c3-b731-73cb6974b11a" @ 04/11/25 13:30:58.735
  STEP: Confirm deletion of CSIDriver "inline-driver-56db5328-48e4-45c3-b731-73cb6974b11a" @ 04/11/25 13:30:58.74
  STEP: Deleting CSIDriver "inline-driver-8cc72dce-c982-47ee-8caf-207e42ad2588" via DeleteCollection @ 04/11/25 13:30:58.742
  STEP: Confirm deletion of CSIDriver "inline-driver-8cc72dce-c982-47ee-8caf-207e42ad2588" @ 04/11/25 13:30:58.747
  I0411 13:30:58.749139 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2439" for this suite. @ 04/11/25 13:30:58.775
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 04/11/25 13:30:58.782
  I0411 13:30:58.782842 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename statefulset @ 04/11/25 13:30:58.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:30:58.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:30:58.798
  STEP: Creating service test in namespace statefulset-8778 @ 04/11/25 13:30:58.8
  STEP: Looking for a node to schedule stateful set and pod @ 04/11/25 13:30:58.805
  STEP: Creating pod with conflicting port in namespace statefulset-8778 @ 04/11/25 13:30:58.874
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8778 @ 04/11/25 13:30:58.882
  E0411 13:30:59.056738      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:00.057276      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-8778 @ 04/11/25 13:31:00.892
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8778 @ 04/11/25 13:31:00.9
  I0411 13:31:00.911349 26 statefulset.go:872] Observed stateful pod in namespace: statefulset-8778, name: ss-0, uid: 14e92e35-4350-482a-8fb5-5d7f0412cb58, status phase: Pending. Waiting for statefulset controller to delete.
  I0411 13:31:00.921059 26 statefulset.go:872] Observed stateful pod in namespace: statefulset-8778, name: ss-0, uid: 14e92e35-4350-482a-8fb5-5d7f0412cb58, status phase: Failed. Waiting for statefulset controller to delete.
  I0411 13:31:00.927775 26 statefulset.go:872] Observed stateful pod in namespace: statefulset-8778, name: ss-0, uid: 14e92e35-4350-482a-8fb5-5d7f0412cb58, status phase: Failed. Waiting for statefulset controller to delete.
  I0411 13:31:00.933269 26 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-8778
  STEP: Removing pod with conflicting port in namespace statefulset-8778 @ 04/11/25 13:31:00.933
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8778 and will be in running state @ 04/11/25 13:31:00.965
  E0411 13:31:01.057849      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:02.058301      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:02.977010 26 statefulset.go:138] Deleting all statefulset in ns statefulset-8778
  I0411 13:31:02.980772 26 rest.go:152] Scaling statefulset ss to 0
  E0411 13:31:03.058337      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:04.058710      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:05.059258      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:06.059876      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:07.060557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:08.061362      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:09.062100      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:10.062867      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:11.063609      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:12.064173      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:12.999230 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0411 13:31:13.002430 26 rest.go:90] Deleting statefulset ss
  I0411 13:31:13.014781 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8778" for this suite. @ 04/11/25 13:31:13.017
• [14.243 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 04/11/25 13:31:13.026
  I0411 13:31:13.026611 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 13:31:13.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:13.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:13.041
  I0411 13:31:13.044417 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  E0411 13:31:13.064603      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:14.065125      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/11/25 13:31:14.191
  I0411 13:31:14.191959 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 create -f -'
  E0411 13:31:15.065541      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:16.066303      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:16.259456 26 builder.go:146] stderr: ""
  I0411 13:31:16.259521 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0411 13:31:16.259595 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 delete e2e-test-crd-publish-openapi-5959-crds test-foo'
  I0411 13:31:16.311915 26 builder.go:146] stderr: ""
  I0411 13:31:16.311963 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0411 13:31:16.312009 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 apply -f -'
  I0411 13:31:16.360310 26 builder.go:146] stderr: ""
  I0411 13:31:16.360354 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0411 13:31:16.360401 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 delete e2e-test-crd-publish-openapi-5959-crds test-foo'
  I0411 13:31:16.402661 26 builder.go:146] stderr: ""
  I0411 13:31:16.402705 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5959-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/11/25 13:31:16.402
  I0411 13:31:16.402789 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 create -f -'
  I0411 13:31:16.442043 26 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/11/25 13:31:16.442
  I0411 13:31:16.442149 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 create -f -'
  I0411 13:31:16.481985 26 builder.go:135] rc: 1
  I0411 13:31:16.482037 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 apply -f -'
  I0411 13:31:16.522526 26 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/11/25 13:31:16.522
  I0411 13:31:16.522662 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 create -f -'
  I0411 13:31:16.567117 26 builder.go:135] rc: 1
  I0411 13:31:16.567217 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 --namespace=crd-publish-openapi-6198 apply -f -'
  I0411 13:31:16.608898 26 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/11/25 13:31:16.608
  I0411 13:31:16.609047 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 explain e2e-test-crd-publish-openapi-5959-crds'
  I0411 13:31:16.647129 26 builder.go:146] stderr: ""
  I0411 13:31:16.647184 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5959-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/11/25 13:31:16.647
  I0411 13:31:16.647365 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 explain e2e-test-crd-publish-openapi-5959-crds.metadata'
  I0411 13:31:16.687297 26 builder.go:146] stderr: ""
  I0411 13:31:16.687427 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5959-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0411 13:31:16.687617 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 explain e2e-test-crd-publish-openapi-5959-crds.spec'
  I0411 13:31:16.726340 26 builder.go:146] stderr: ""
  I0411 13:31:16.726386 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5959-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0411 13:31:16.726478 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 explain e2e-test-crd-publish-openapi-5959-crds.spec.bars'
  I0411 13:31:16.761056 26 builder.go:146] stderr: ""
  I0411 13:31:16.761100 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5959-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/11/25 13:31:16.761
  I0411 13:31:16.761277 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-6198 explain e2e-test-crd-publish-openapi-5959-crds.spec.bars2'
  I0411 13:31:16.799998 26 builder.go:135] rc: 1
  E0411 13:31:17.067314      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:17.953523 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6198" for this suite. @ 04/11/25 13:31:17.958
• [4.938 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 04/11/25 13:31:17.964
  I0411 13:31:17.964574 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubectl @ 04/11/25 13:31:17.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:17.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:17.975
  STEP: creating a replication controller @ 04/11/25 13:31:17.977
  I0411 13:31:17.977159 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 create -f -'
  I0411 13:31:18.049356 26 builder.go:146] stderr: ""
  I0411 13:31:18.049382 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/11/25 13:31:18.049
  I0411 13:31:18.049439 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0411 13:31:18.067766      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:18.099162 26 builder.go:146] stderr: ""
  I0411 13:31:18.099207 26 builder.go:147] stdout: "update-demo-nautilus-g5gsb update-demo-nautilus-lqhfp "
  I0411 13:31:18.099259 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-g5gsb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:31:18.139886 26 builder.go:146] stderr: ""
  I0411 13:31:18.139929 26 builder.go:147] stdout: ""
  I0411 13:31:18.139941 26 kubectl.go:2499] update-demo-nautilus-g5gsb is created but not running
  E0411 13:31:19.068913      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:20.069491      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:21.070040      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:22.070530      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:23.071373      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:23.140706 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0411 13:31:23.189158 26 builder.go:146] stderr: ""
  I0411 13:31:23.189200 26 builder.go:147] stdout: "update-demo-nautilus-g5gsb update-demo-nautilus-lqhfp "
  I0411 13:31:23.189241 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-g5gsb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:31:23.228893 26 builder.go:146] stderr: ""
  I0411 13:31:23.228931 26 builder.go:147] stdout: "true"
  I0411 13:31:23.228986 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-g5gsb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:31:23.264524 26 builder.go:146] stderr: ""
  I0411 13:31:23.264558 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:31:23.264570 26 kubectl.go:2390] validating pod update-demo-nautilus-g5gsb
  I0411 13:31:23.267034 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:31:23.267084 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:31:23.267099 26 kubectl.go:2517] update-demo-nautilus-g5gsb is verified up and running
  I0411 13:31:23.267139 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-lqhfp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:31:23.305060 26 builder.go:146] stderr: ""
  I0411 13:31:23.305108 26 builder.go:147] stdout: "true"
  I0411 13:31:23.305154 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-lqhfp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:31:23.350850 26 builder.go:146] stderr: ""
  I0411 13:31:23.350895 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:31:23.350909 26 kubectl.go:2390] validating pod update-demo-nautilus-lqhfp
  I0411 13:31:23.352994 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:31:23.353049 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:31:23.353066 26 kubectl.go:2517] update-demo-nautilus-lqhfp is verified up and running
  STEP: scaling down the replication controller @ 04/11/25 13:31:23.353
  I0411 13:31:23.354486 26 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0411 13:31:23.354533 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0411 13:31:24.072504      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:24.404669 26 builder.go:146] stderr: ""
  I0411 13:31:24.404741 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/11/25 13:31:24.404
  I0411 13:31:24.404891 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0411 13:31:24.458134 26 builder.go:146] stderr: ""
  I0411 13:31:24.458170 26 builder.go:147] stdout: "update-demo-nautilus-lqhfp "
  I0411 13:31:24.458252 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-lqhfp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:31:24.492860 26 builder.go:146] stderr: ""
  I0411 13:31:24.492896 26 builder.go:147] stdout: "true"
  I0411 13:31:24.492939 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-lqhfp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:31:24.527979 26 builder.go:146] stderr: ""
  I0411 13:31:24.528031 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:31:24.528045 26 kubectl.go:2390] validating pod update-demo-nautilus-lqhfp
  I0411 13:31:24.530136 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:31:24.530192 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:31:24.530207 26 kubectl.go:2517] update-demo-nautilus-lqhfp is verified up and running
  STEP: scaling up the replication controller @ 04/11/25 13:31:24.53
  I0411 13:31:24.531251 26 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0411 13:31:24.531285 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0411 13:31:25.073171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:25.582523 26 builder.go:146] stderr: ""
  I0411 13:31:25.582599 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/11/25 13:31:25.582
  I0411 13:31:25.582759 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0411 13:31:25.628100 26 builder.go:146] stderr: ""
  I0411 13:31:25.628146 26 builder.go:147] stdout: "update-demo-nautilus-ffxvd update-demo-nautilus-lqhfp "
  I0411 13:31:25.628201 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-ffxvd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:31:25.671503 26 builder.go:146] stderr: ""
  I0411 13:31:25.671535 26 builder.go:147] stdout: "true"
  I0411 13:31:25.671565 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-ffxvd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:31:25.714756 26 builder.go:146] stderr: ""
  I0411 13:31:25.714782 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:31:25.714790 26 kubectl.go:2390] validating pod update-demo-nautilus-ffxvd
  I0411 13:31:25.717066 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:31:25.717112 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:31:25.717126 26 kubectl.go:2517] update-demo-nautilus-ffxvd is verified up and running
  I0411 13:31:25.717187 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-lqhfp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0411 13:31:25.756467 26 builder.go:146] stderr: ""
  I0411 13:31:25.756513 26 builder.go:147] stdout: "true"
  I0411 13:31:25.756566 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods update-demo-nautilus-lqhfp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0411 13:31:25.794770 26 builder.go:146] stderr: ""
  I0411 13:31:25.794805 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0411 13:31:25.794817 26 kubectl.go:2390] validating pod update-demo-nautilus-lqhfp
  I0411 13:31:25.796495 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0411 13:31:25.796531 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0411 13:31:25.796542 26 kubectl.go:2517] update-demo-nautilus-lqhfp is verified up and running
  STEP: using delete to clean up resources @ 04/11/25 13:31:25.796
  I0411 13:31:25.796613 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 delete --grace-period=0 --force -f -'
  I0411 13:31:25.844976 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0411 13:31:25.845015 26 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0411 13:31:25.845067 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get rc,svc -l name=update-demo --no-headers'
  I0411 13:31:25.892650 26 builder.go:146] stderr: "No resources found in kubectl-7407 namespace.\n"
  I0411 13:31:25.892686 26 builder.go:147] stdout: ""
  I0411 13:31:25.892730 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=kubectl-7407 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0411 13:31:25.935157 26 builder.go:146] stderr: ""
  I0411 13:31:25.935203 26 builder.go:147] stdout: ""
  I0411 13:31:25.935312 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7407" for this suite. @ 04/11/25 13:31:25.937
• [7.976 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 04/11/25 13:31:25.94
  I0411 13:31:25.940687 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename job @ 04/11/25 13:31:25.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:25.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:25.953
  STEP: Creating a job @ 04/11/25 13:31:25.954
  STEP: Ensuring active pods == parallelism @ 04/11/25 13:31:25.959
  E0411 13:31:26.074420      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:27.074772      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/11/25 13:31:27.971
  E0411 13:31:28.075593      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:28.491660 26 pod_client.go:173] Successfully updated pod "adopt-release-qz9xh"
  STEP: Checking that the Job readopts the Pod @ 04/11/25 13:31:28.491
  E0411 13:31:29.075680      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:30.076125      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/11/25 13:31:30.5
  I0411 13:31:31.010308 26 pod_client.go:173] Successfully updated pod "adopt-release-qz9xh"
  STEP: Checking that the Job releases the Pod @ 04/11/25 13:31:31.01
  E0411 13:31:31.076094      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:32.076510      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:33.018027 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9280" for this suite. @ 04/11/25 13:31:33.021
• [7.088 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/11/25 13:31:33.028
  I0411 13:31:33.028888 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename projected @ 04/11/25 13:31:33.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:33.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:33.047
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 13:31:33.051
  E0411 13:31:33.077051      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:34.077634      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:35.078776      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:36.079339      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:31:37.077
  E0411 13:31:37.079919      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:37.080635 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-84b2f7be-bdf3-4019-90b1-98e9661fbbb6 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 13:31:37.09
  I0411 13:31:37.109745 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3838" for this suite. @ 04/11/25 13:31:37.113
• [4.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/11/25 13:31:37.118
  I0411 13:31:37.118653 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename sched-pred @ 04/11/25 13:31:37.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:37.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:37.14
  I0411 13:31:37.142685 26 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0411 13:31:37.217717 26 util.go:396] Waiting for terminating namespaces to be deleted...
  I0411 13:31:37.220719 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0411 13:31:37.225227 26 predicates.go:957] coredns-668d6bf9bc-c7wkv from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225265 26 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0411 13:31:37.225281 26 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225294 26 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0411 13:31:37.225306 26 predicates.go:957] kindnet-sppkx from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225316 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 13:31:37.225327 26 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225337 26 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0411 13:31:37.225364 26 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225374 26 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0411 13:31:37.225386 26 predicates.go:957] kube-proxy-2nq7z from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225410 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 13:31:37.225423 26 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-11 11:51:19 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225433 26 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0411 13:31:37.225444 26 predicates.go:957] storage-provisioner from kube-system started at 2025-04-11 11:51:24 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.225454 26 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0411 13:31:37.225465 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-rfzgx from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 13:31:37.225475 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 13:31:37.225484 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0411 13:31:37.225495 26 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0411 13:31:37.228985 26 predicates.go:957] adopt-release-qxg7v from job-9280 started at 2025-04-11 13:31:32 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.229023 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:31:37.229037 26 predicates.go:957] adopt-release-qz9xh from job-9280 started at 2025-04-11 13:31:25 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.229047 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:31:37.229058 26 predicates.go:957] adopt-release-w8q7j from job-9280 started at 2025-04-11 13:31:25 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.229067 26 predicates.go:959] 	Container c ready: true, restart count 0
  I0411 13:31:37.229077 26 predicates.go:957] kindnet-zpgj5 from kube-system started at 2025-04-11 12:53:25 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.229092 26 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0411 13:31:37.229102 26 predicates.go:957] kube-proxy-tn29z from kube-system started at 2025-04-11 11:52:06 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.229111 26 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0411 13:31:37.229130 26 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-11 11:52:59 +0000 UTC (1 container statuses recorded)
  I0411 13:31:37.229139 26 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0411 13:31:37.229149 26 predicates.go:957] sonobuoy-e2e-job-040191c692314dcd from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 13:31:37.229158 26 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0411 13:31:37.229167 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 13:31:37.229191 26 predicates.go:957] sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-w7b8t from sonobuoy started at 2025-04-11 11:53:04 +0000 UTC (2 container statuses recorded)
  I0411 13:31:37.229201 26 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0411 13:31:37.229210 26 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8sconformance @ 04/11/25 13:31:37.242
  STEP: verifying the node has the label node k8sconformance-m02 @ 04/11/25 13:31:37.255
  I0411 13:31:37.329806 26 predicates.go:372] Pod adopt-release-qxg7v requesting resource cpu=0m on Node k8sconformance-m02
  I0411 13:31:37.329898 26 predicates.go:372] Pod adopt-release-qz9xh requesting resource cpu=0m on Node k8sconformance-m02
  I0411 13:31:37.329922 26 predicates.go:372] Pod adopt-release-w8q7j requesting resource cpu=0m on Node k8sconformance-m02
  I0411 13:31:37.329941 26 predicates.go:372] Pod coredns-668d6bf9bc-c7wkv requesting resource cpu=100m on Node k8sconformance
  I0411 13:31:37.329957 26 predicates.go:372] Pod etcd-k8sconformance requesting resource cpu=100m on Node k8sconformance
  I0411 13:31:37.329971 26 predicates.go:372] Pod kindnet-sppkx requesting resource cpu=100m on Node k8sconformance
  I0411 13:31:37.329985 26 predicates.go:372] Pod kindnet-zpgj5 requesting resource cpu=100m on Node k8sconformance-m02
  I0411 13:31:37.330001 26 predicates.go:372] Pod kube-apiserver-k8sconformance requesting resource cpu=250m on Node k8sconformance
  I0411 13:31:37.330016 26 predicates.go:372] Pod kube-controller-manager-k8sconformance requesting resource cpu=200m on Node k8sconformance
  I0411 13:31:37.330032 26 predicates.go:372] Pod kube-proxy-2nq7z requesting resource cpu=0m on Node k8sconformance
  I0411 13:31:37.330048 26 predicates.go:372] Pod kube-proxy-tn29z requesting resource cpu=0m on Node k8sconformance-m02
  I0411 13:31:37.330063 26 predicates.go:372] Pod kube-scheduler-k8sconformance requesting resource cpu=100m on Node k8sconformance
  I0411 13:31:37.330079 26 predicates.go:372] Pod storage-provisioner requesting resource cpu=0m on Node k8sconformance
  I0411 13:31:37.330115 26 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node k8sconformance-m02
  I0411 13:31:37.330130 26 predicates.go:372] Pod sonobuoy-e2e-job-040191c692314dcd requesting resource cpu=0m on Node k8sconformance-m02
  I0411 13:31:37.330145 26 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-rfzgx requesting resource cpu=0m on Node k8sconformance
  I0411 13:31:37.330161 26 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-d5bc11a954ab49cf-w7b8t requesting resource cpu=0m on Node k8sconformance-m02
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/11/25 13:31:37.33
  I0411 13:31:37.330264 26 predicates.go:382] Creating a pod which consumes cpu=7805m on Node k8sconformance
  I0411 13:31:37.339209 26 predicates.go:382] Creating a pod which consumes cpu=8330m on Node k8sconformance-m02
  E0411 13:31:38.080333      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:39.080603      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/11/25 13:31:39.369
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b.183546d1bf0e1a4d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3889/filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b to k8sconformance] @ 04/11/25 13:31:39.372
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b.183546d1db396b77], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/11/25 13:31:39.372
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b.183546d1dcfe9d4c], Reason = [Created], Message = [Created container: filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b] @ 04/11/25 13:31:39.372
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b.183546d1e239ddc6], Reason = [Started], Message = [Started container filler-pod-a1e8cfd5-0c7b-482a-958c-d057a935086b] @ 04/11/25 13:31:39.372
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4.183546d1bfc8d40d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3889/filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4 to k8sconformance-m02] @ 04/11/25 13:31:39.372
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4.183546d1dc1e2053], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/11/25 13:31:39.373
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4.183546d1de19b77f], Reason = [Created], Message = [Created container: filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4] @ 04/11/25 13:31:39.373
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4.183546d1e24865ef], Reason = [Started], Message = [Started container filler-pod-a6365b47-310c-493b-8e60-11f2ce8231d4] @ 04/11/25 13:31:39.373
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183546d2385ab2b7], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 04/11/25 13:31:39.382
  E0411 13:31:40.080726      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label node off the node k8sconformance @ 04/11/25 13:31:40.384
  STEP: verifying the node doesn't have the label node @ 04/11/25 13:31:40.398
  STEP: removing the label node off the node k8sconformance-m02 @ 04/11/25 13:31:40.403
  STEP: verifying the node doesn't have the label node @ 04/11/25 13:31:40.414
  I0411 13:31:40.418874 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3889" for this suite. @ 04/11/25 13:31:40.423
• [3.312 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/11/25 13:31:40.431
  I0411 13:31:40.431584 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename proxy @ 04/11/25 13:31:40.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:40.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:40.453
  I0411 13:31:40.457587 26 proxy.go:387] Creating pod...
  E0411 13:31:41.081078      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:42.081574      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:42.475533 26 proxy.go:411] Creating service...
  I0411 13:31:42.489132 26 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=DELETE
  I0411 13:31:42.494382 26 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0411 13:31:42.494435 26 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=OPTIONS
  I0411 13:31:42.496063 26 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0411 13:31:42.496093 26 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=PATCH
  I0411 13:31:42.497726 26 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0411 13:31:42.497786 26 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=POST
  I0411 13:31:42.500720 26 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0411 13:31:42.500769 26 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=PUT
  I0411 13:31:42.503370 26 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0411 13:31:42.503420 26 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=DELETE
  I0411 13:31:42.507035 26 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0411 13:31:42.507084 26 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0411 13:31:42.510015 26 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0411 13:31:42.510067 26 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=PATCH
  I0411 13:31:42.512988 26 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0411 13:31:42.513034 26 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=POST
  I0411 13:31:42.515505 26 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0411 13:31:42.515542 26 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=PUT
  I0411 13:31:42.518064 26 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0411 13:31:42.518137 26 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=GET
  I0411 13:31:42.519843 26 proxy.go:487] http.Client request:GET StatusCode:301
  I0411 13:31:42.519882 26 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=GET
  I0411 13:31:42.521713 26 proxy.go:487] http.Client request:GET StatusCode:301
  I0411 13:31:42.521743 26 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/pods/agnhost/proxy?method=HEAD
  I0411 13:31:42.522977 26 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0411 13:31:42.523006 26 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7553/services/e2e-proxy-test-service/proxy?method=HEAD
  I0411 13:31:42.524745 26 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0411 13:31:42.524907 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7553" for this suite. @ 04/11/25 13:31:42.527
• [2.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/11/25 13:31:42.533
  I0411 13:31:42.533095 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:31:42.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:42.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:42.547
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/11/25 13:31:42.549
  E0411 13:31:43.082107      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:44.082312      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:45.082992      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:46.083915      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:31:46.567
  I0411 13:31:46.570275 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-03ec5daf-7951-4ec5-8cb7-b6769f1cd8db container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:31:46.578
  I0411 13:31:46.594434 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3534" for this suite. @ 04/11/25 13:31:46.598
• [4.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/11/25 13:31:46.603
  I0411 13:31:46.603619 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename kubelet-test @ 04/11/25 13:31:46.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:46.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:46.619
  STEP: Waiting for pod completion @ 04/11/25 13:31:46.629
  E0411 13:31:47.084276      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:48.085165      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:49.085564      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:50.086307      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:31:50.652881 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5782" for this suite. @ 04/11/25 13:31:50.656
• [4.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/11/25 13:31:50.663
  I0411 13:31:50.663404 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename emptydir @ 04/11/25 13:31:50.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:50.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:50.681
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/11/25 13:31:50.684
  E0411 13:31:51.087061      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:52.087424      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:53.087621      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:54.087933      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:31:54.7
  I0411 13:31:54.701967 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-cde2378b-3365-43e5-8649-f524dd01d951 container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:31:54.706
  I0411 13:31:54.717307 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8803" for this suite. @ 04/11/25 13:31:54.719
• [4.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/11/25 13:31:54.722
  I0411 13:31:54.722384 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename downward-api @ 04/11/25 13:31:54.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:54.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:54.731
  STEP: Creating a pod to test downward API volume plugin @ 04/11/25 13:31:54.733
  E0411 13:31:55.088210      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:56.088510      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:57.089337      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:31:58.089873      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:31:58.751
  I0411 13:31:58.754512 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-46f587df-a0dd-477e-a43e-07acace55682 container client-container: <nil>
  STEP: delete the pod @ 04/11/25 13:31:58.762
  I0411 13:31:58.781059 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1681" for this suite. @ 04/11/25 13:31:58.785
• [4.068 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 04/11/25 13:31:58.79
  I0411 13:31:58.790580 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename dns @ 04/11/25 13:31:58.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:31:58.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:31:58.805
  STEP: Creating a test headless service @ 04/11/25 13:31:58.808
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7131.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7131.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7131.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7131.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 119.31.103.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.103.31.119_udp@PTR;check="$$(dig +tcp +noall +answer +search 119.31.103.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.103.31.119_tcp@PTR;sleep 1; done
   @ 04/11/25 13:31:58.826
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7131.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7131.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7131.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7131.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7131.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 119.31.103.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.103.31.119_udp@PTR;check="$$(dig +tcp +noall +answer +search 119.31.103.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.103.31.119_tcp@PTR;sleep 1; done
   @ 04/11/25 13:31:58.826
  STEP: creating a pod to probe DNS @ 04/11/25 13:31:58.826
  STEP: submitting the pod to kubernetes @ 04/11/25 13:31:58.826
  E0411 13:31:59.090431      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:00.090821      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/11/25 13:32:00.845
  STEP: looking for the results for each expected name from probers @ 04/11/25 13:32:00.848
  I0411 13:32:00.851590 26 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7131.svc.cluster.local from pod dns-7131/dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87: the server could not find the requested resource (get pods dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87)
  I0411 13:32:00.853681 26 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7131.svc.cluster.local from pod dns-7131/dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87: the server could not find the requested resource (get pods dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87)
  I0411 13:32:00.855871 26 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local from pod dns-7131/dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87: the server could not find the requested resource (get pods dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87)
  I0411 13:32:00.857223 26 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local from pod dns-7131/dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87: the server could not find the requested resource (get pods dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87)
  I0411 13:32:00.875388 26 dns_common.go:506] Lookups using dns-7131/dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87 failed for: [agnhost_udp@dns-test-service.dns-7131.svc.cluster.local agnhost_tcp@dns-test-service.dns-7131.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7131.svc.cluster.local]

  I0411 13:32:00.879551 26 dns_common.go:514] Pod client logs for webserver: 
  I0411 13:32:00.884083 26 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0411 13:32:00.888355 26 dns_common.go:514] Pod client logs for jessie-querier: 
  E0411 13:32:01.090780      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:02.091539      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:03.091768      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:04.092109      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:05.092376      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:05.892682 26 dns_common.go:546] DNS probes using dns-7131/dns-test-9fd31c99-d356-4124-980d-0063f4bc7d87 succeeded

  STEP: deleting the pod @ 04/11/25 13:32:05.892
  STEP: deleting the test service @ 04/11/25 13:32:05.911
  STEP: deleting the test headless service @ 04/11/25 13:32:05.941
  I0411 13:32:05.948915 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7131" for this suite. @ 04/11/25 13:32:05.952
• [7.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 04/11/25 13:32:05.956
  I0411 13:32:05.956484 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename webhook @ 04/11/25 13:32:05.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:05.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:05.968
  STEP: Setting up server cert @ 04/11/25 13:32:06.07
  E0411 13:32:06.092598      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/11/25 13:32:06.214
  STEP: Deploying the webhook pod @ 04/11/25 13:32:06.219
  STEP: Wait for the deployment to be ready @ 04/11/25 13:32:06.227
  I0411 13:32:06.230149 26 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0411 13:32:07.093380      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:08.093872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/11/25 13:32:08.243
  STEP: Verifying the service has paired with the endpoint @ 04/11/25 13:32:08.259
  E0411 13:32:09.094510      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:09.260867 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/11/25 13:32:09.267
  I0411 13:32:09.301504 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-522" for this suite. @ 04/11/25 13:32:09.303
  STEP: Destroying namespace "webhook-markers-2654" for this suite. @ 04/11/25 13:32:09.307
• [3.356 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 04/11/25 13:32:09.312
  I0411 13:32:09.312219 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename security-context @ 04/11/25 13:32:09.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:09.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:09.321
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/11/25 13:32:09.323
  E0411 13:32:10.094872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:11.094897      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:12.095419      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:13.095452      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:32:13.34
  I0411 13:32:13.342875 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod security-context-a3660b2a-a18f-451c-8dfa-1d3e5c8d89be container test-container: <nil>
  STEP: delete the pod @ 04/11/25 13:32:13.351
  I0411 13:32:13.368269 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6532" for this suite. @ 04/11/25 13:32:13.372
• [4.065 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/11/25 13:32:13.377
  I0411 13:32:13.377382 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename events @ 04/11/25 13:32:13.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:13.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:13.389
  STEP: creating a test event @ 04/11/25 13:32:13.391
  STEP: listing all events in all namespaces @ 04/11/25 13:32:13.393
  STEP: patching the test event @ 04/11/25 13:32:13.395
  STEP: fetching the test event @ 04/11/25 13:32:13.401
  STEP: updating the test event @ 04/11/25 13:32:13.402
  STEP: getting the test event @ 04/11/25 13:32:13.409
  STEP: deleting the test event @ 04/11/25 13:32:13.411
  STEP: listing all events in all namespaces @ 04/11/25 13:32:13.415
  I0411 13:32:13.418684 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5836" for this suite. @ 04/11/25 13:32:13.474
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/11/25 13:32:13.481
  I0411 13:32:13.481291 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename secrets @ 04/11/25 13:32:13.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:13.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:13.498
  STEP: Creating secret with name secret-test-de9cb721-9692-469d-9dc7-a93d40103527 @ 04/11/25 13:32:13.501
  STEP: Creating a pod to test consume secrets @ 04/11/25 13:32:13.505
  E0411 13:32:14.096269      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:15.096750      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:16.097751      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:17.098390      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/11/25 13:32:17.529
  I0411 13:32:17.534025 26 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-ee7c0fd8-4533-4d5c-86c3-f3b4c388a780 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/11/25 13:32:17.543
  I0411 13:32:17.565773 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-33" for this suite. @ 04/11/25 13:32:17.568
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 04/11/25 13:32:17.573
  I0411 13:32:17.573405 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/11/25 13:32:17.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:17.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:17.587
  I0411 13:32:17.589941 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  E0411 13:32:18.098604      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/11/25 13:32:18.748
  I0411 13:32:18.749101 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-990 --namespace=crd-publish-openapi-990 create -f -'
  E0411 13:32:19.099352      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:20.099991      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:20.808195 26 builder.go:146] stderr: ""
  I0411 13:32:20.808267 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5855-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0411 13:32:20.808351 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-990 --namespace=crd-publish-openapi-990 delete e2e-test-crd-publish-openapi-5855-crds test-cr'
  I0411 13:32:20.857034 26 builder.go:146] stderr: ""
  I0411 13:32:20.857075 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5855-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0411 13:32:20.857112 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-990 --namespace=crd-publish-openapi-990 apply -f -'
  I0411 13:32:20.898622 26 builder.go:146] stderr: ""
  I0411 13:32:20.898666 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5855-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0411 13:32:20.898710 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-990 --namespace=crd-publish-openapi-990 delete e2e-test-crd-publish-openapi-5855-crds test-cr'
  I0411 13:32:20.937234 26 builder.go:146] stderr: ""
  I0411 13:32:20.937264 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5855-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/11/25 13:32:20.937
  I0411 13:32:20.937324 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1813883137 --namespace=crd-publish-openapi-990 explain e2e-test-crd-publish-openapi-5855-crds'
  I0411 13:32:20.974112 26 builder.go:146] stderr: ""
  I0411 13:32:20.974155 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5855-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0411 13:32:21.100940      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:22.101867      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:22.122720 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-990" for this suite. @ 04/11/25 13:32:22.128
• [4.562 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 04/11/25 13:32:22.135
  I0411 13:32:22.135568 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename services @ 04/11/25 13:32:22.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:22.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:22.148
  STEP: fetching services @ 04/11/25 13:32:22.149
  I0411 13:32:22.151850 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9089" for this suite. @ 04/11/25 13:32:22.153
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 04/11/25 13:32:22.158
  I0411 13:32:22.158418 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename container-probe @ 04/11/25 13:32:22.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:32:22.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:32:22.253
  STEP: Creating pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358 @ 04/11/25 13:32:22.257
  E0411 13:32:23.102649      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:24.103081      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/11/25 13:32:24.276
  I0411 13:32:24.279285 26 container_probe.go:1749] Initial restart count of pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 is 0
  I0411 13:32:24.282337 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:25.103257      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:26.103405      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:26.288536 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:27.103526      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:28.104642      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:28.294852 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:29.104952      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:30.105566      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:30.300467 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:31.105583      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:32.106654      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:32.306100 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:33.107151      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:34.108049      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:34.311961 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:35.108888      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:36.109291      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:36.318031 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:37.109996      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:38.110424      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:38.320907 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:39.111099      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:40.111599      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:40.326989 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:41.112675      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:42.113254      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:42.333568 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:43.113470      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:44.113910      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:44.338796 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:45.114615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:46.115489      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:46.344432 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:47.115590      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:48.115598      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:48.350343 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:49.115827      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:50.116474      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:50.356465 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:51.117587      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:52.117567      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:52.360760 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:53.117772      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:54.117898      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:54.367329 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:55.119007      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:56.119615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:56.373699 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:57.120633      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:32:58.121304      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:32:58.379036 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:32:59.121925      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:00.122274      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:00.384164 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:01.122456      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:02.122905      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:02.391600 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:03.123062      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:04.123535      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:04.396556 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:05.124425      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:06.124721      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:06.402639 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:07.124975      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:08.125330      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:08.409304 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:09.125811      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:10.126502      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:10.415448 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:11.127037      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:12.127795      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:12.420094 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:13.128436      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:14.128720      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:14.424261 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:15.129397      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:16.130549      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:16.429410 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:17.131430      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:18.132511      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:18.435607 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:19.133506      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:20.133998      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:20.439856 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:21.134414      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:22.134477      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:22.444497 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:23.135211      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:24.136086      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:24.449234 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:25.136591      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:26.136872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:26.455702 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  E0411 13:33:27.137425      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0411 13:33:28.137996      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0411 13:33:28.461098 26 container_probe.go:1759] Get pod test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 in namespace container-probe-3358
  I0411 13:33:28.461201 26 container_probe.go:1763] Restart count of pod container-probe-3358/test-grpc-4a24751d-1921-49bd-8ceb-2615e21446c2 is now 1 (1m4.181864641s elapsed)
  STEP: deleting the pod @ 04/11/25 13:33:28.461
  I0411 13:33:28.475590 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3358" for this suite. @ 04/11/25 13:33:28.479
• [66.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/11/25 13:33:28.485
  I0411 13:33:28.485256 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1813883137
  STEP: Building a namespace api object, basename configmap @ 04/11/25 13:33:28.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/11/25 13:33:28.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/11/25 13:33:28.495
  I0411 13:33:28.520273 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7027" for this suite. @ 04/11/25 13:33:28.579
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0411 13:33:28.585018 26 suites.go:34] Running AfterSuite actions on node 1
  I0411 13:33:28.585069 26 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 411 of 6622 Specs in 6004.688 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h40m5.197506465s
Test Suite Passed
