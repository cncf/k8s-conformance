  I0507 13:59:25.776633      25 e2e.go:109] Starting e2e run "f0dbccc4-0455-4e7c-9127-5fae0cbf053e" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1746626365 - will randomize all specs

Will run 411 of 6625 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0507 13:59:25.868963 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 13:59:25.869853 25 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0507 13:59:25.880604 25 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0507 13:59:25.882109 25 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kindnet' (0 seconds elapsed)
  I0507 13:59:25.882138 25 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0507 13:59:25.882151 25 e2e.go:245] e2e test version: v1.32.4
  I0507 13:59:25.882785 25 e2e.go:254] kube-apiserver version: v1.32.4
  I0507 13:59:25.882855 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 13:59:25.884595 25 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/07/25 13:59:25.958
  I0507 13:59:25.958161 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 13:59:25.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 13:59:25.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 13:59:25.967
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 13:59:25.969
  STEP: Saw pod success @ 05/07/25 13:59:35.999
  I0507 13:59:36.002691 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-eae035f6-9ff5-4f49-91b2-d3018b664a6f container client-container: <nil>
  STEP: delete the pod @ 05/07/25 13:59:36.02
  I0507 13:59:36.035038 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-778" for this suite. @ 05/07/25 13:59:36.038
• [10.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 05/07/25 13:59:36.043
  I0507 13:59:36.043637 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 13:59:36.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 13:59:36.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 13:59:36.058
  STEP: Setting up server cert @ 05/07/25 13:59:36.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 13:59:36.366
  STEP: Deploying the webhook pod @ 05/07/25 13:59:36.369
  STEP: Wait for the deployment to be ready @ 05/07/25 13:59:36.375
  I0507 13:59:36.380010 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 13:59:38.394
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 13:59:38.407
  I0507 13:59:39.407813 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/07/25 13:59:39.416
  I0507 13:59:39.453258 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5544" for this suite. @ 05/07/25 13:59:39.454
  STEP: Destroying namespace "webhook-markers-1055" for this suite. @ 05/07/25 13:59:39.459
• [3.421 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 05/07/25 13:59:39.465
  I0507 13:59:39.465058 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 13:59:39.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 13:59:39.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 13:59:39.475
  STEP: Setting up server cert @ 05/07/25 13:59:39.488
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 13:59:39.602
  STEP: Deploying the webhook pod @ 05/07/25 13:59:39.604
  STEP: Wait for the deployment to be ready @ 05/07/25 13:59:39.611
  I0507 13:59:39.615087 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 13:59:41.626
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 13:59:41.641
  I0507 13:59:42.642861 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/07/25 13:59:42.656
  I0507 13:59:42.671604 25 webhook.go:2669] Waiting for webhook configuration to be ready...
  I0507 13:59:52.785967 25 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: create the configmap with a random name @ 05/07/25 13:59:52.888
  STEP: verify the configmap is mutated @ 05/07/25 13:59:52.903
  STEP: create the configmap with 'skip-me' name @ 05/07/25 13:59:52.903
  I0507 13:59:52.939357 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4472" for this suite. @ 05/07/25 13:59:52.947
  STEP: Destroying namespace "webhook-markers-7625" for this suite. @ 05/07/25 13:59:52.957
• [13.498 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 05/07/25 13:59:52.963
  I0507 13:59:52.963137 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 13:59:52.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 13:59:52.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 13:59:52.977
  STEP: Counting existing ResourceQuota @ 05/07/25 13:59:52.978
  STEP: Creating a ResourceQuota @ 05/07/25 13:59:57.981
  STEP: Ensuring resource quota status is calculated @ 05/07/25 13:59:57.988
  I0507 13:59:59.993879 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2302" for this suite. @ 05/07/25 13:59:59.997
• [7.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 05/07/25 14:00:00.004
  I0507 14:00:00.004125 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 14:00:00.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:00.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:00.018
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/07/25 14:00:00.021
  I0507 14:00:00.029473 25 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7889  788c0185-1f23-4026-8b8b-ee92ef9a1d28 833 0 2025-05-07 14:00:00 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-05-07 14:00:00 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-84xt7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-84xt7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/07/25 14:00:02.038
  I0507 14:00:02.038264 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7889 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:00:02.038294 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:00:02.038405 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-7889/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/07/25 14:00:02.124
  I0507 14:00:02.124570 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7889 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:00:02.124582 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:00:02.124614 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-7889/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0507 14:00:02.198639 25 dns.go:450] Deleting pod test-dns-nameservers...
  I0507 14:00:02.210129 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7889" for this suite. @ 05/07/25 14:00:02.213
• [2.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/07/25 14:00:02.218
  I0507 14:00:02.218254 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 14:00:02.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:02.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:02.231
  I0507 14:00:02.242041 25 endpointslice.go:1045] Endpoints addresses: [192.168.49.2] , ports: [8443]
  I0507 14:00:02.242074 25 endpointslice.go:1075] EndpointSlices addresses: [192.168.49.2] , ports: [8443]
  I0507 14:00:02.242180 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5923" for this suite. @ 05/07/25 14:00:02.315
• [0.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/07/25 14:00:02.321
  I0507 14:00:02.321760 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 14:00:02.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:02.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:02.336
  I0507 14:00:08.363384 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2388" for this suite. @ 05/07/25 14:00:08.366
• [6.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/07/25 14:00:08.371
  I0507 14:00:08.371454 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 14:00:08.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:08.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:08.387
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/07/25 14:00:08.389
  STEP: Saw pod success @ 05/07/25 14:00:12.408
  I0507 14:00:12.410435 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-9057559f-6ffc-429b-86b9-4d3112487a0c container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:00:12.415
  I0507 14:00:12.431203 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-884" for this suite. @ 05/07/25 14:00:12.434
• [4.068 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 05/07/25 14:00:12.44
  I0507 14:00:12.440103 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 14:00:12.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:12.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:12.452
  STEP: Creating a suspended job @ 05/07/25 14:00:12.456
  STEP: Patching the Job @ 05/07/25 14:00:12.462
  STEP: Watching for Job to be patched @ 05/07/25 14:00:12.473
  I0507 14:00:12.474466 25 job.go:1309] Event ADDED observed for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-job-label:e2e-br4h6] and annotations: map[]
  I0507 14:00:12.474529 25 job.go:1312] Event MODIFIED found for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[]
  STEP: Updating the job @ 05/07/25 14:00:12.474
  STEP: Watching for Job to be updated @ 05/07/25 14:00:12.48
  I0507 14:00:12.481283 25 job.go:1312] Event MODIFIED found for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  I0507 14:00:12.481327 25 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/07/25 14:00:12.481
  I0507 14:00:12.482786 25 job.go:1187] Job: e2e-br4h6 as labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6]
  STEP: Waiting for job to complete @ 05/07/25 14:00:12.482
  STEP: Delete a job collection with a labelselector @ 05/07/25 14:00:20.513
  STEP: Watching for Job to be deleted @ 05/07/25 14:00:20.52
  I0507 14:00:20.523252 25 job.go:1309] Event MODIFIED observed for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  I0507 14:00:20.523314 25 job.go:1309] Event MODIFIED observed for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  I0507 14:00:20.523347 25 job.go:1309] Event MODIFIED observed for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  I0507 14:00:20.523535 25 job.go:1309] Event MODIFIED observed for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  I0507 14:00:20.523673 25 job.go:1309] Event MODIFIED observed for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  I0507 14:00:20.523724 25 job.go:1312] Event DELETED found for Job e2e-br4h6 in namespace job-5065 with labels: map[e2e-br4h6:patched e2e-job-label:e2e-br4h6] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/07/25 14:00:20.523
  I0507 14:00:20.526776 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5065" for this suite. @ 05/07/25 14:00:20.53
• [8.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/07/25 14:00:20.536
  I0507 14:00:20.536707 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 14:00:20.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:20.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:20.559
  STEP: create the container @ 05/07/25 14:00:20.561
  W0507 14:00:20.565536      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/07/25 14:00:20.565
  STEP: get the container status @ 05/07/25 14:00:23.583
  STEP: the container should be terminated @ 05/07/25 14:00:23.585
  STEP: the termination message should be set @ 05/07/25 14:00:23.585
  I0507 14:00:23.585893 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/07/25 14:00:23.585
  I0507 14:00:23.601404 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9468" for this suite. @ 05/07/25 14:00:23.605
• [3.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/07/25 14:00:23.61
  I0507 14:00:23.610418 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 14:00:23.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:23.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:23.623
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/07/25 14:00:23.626
  STEP: Saw pod success @ 05/07/25 14:00:27.644
  I0507 14:00:27.647121 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-4a28352d-e418-4f05-82d3-dc7d791a5f27 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:00:27.654
  I0507 14:00:27.669897 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4130" for this suite. @ 05/07/25 14:00:27.673
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/07/25 14:00:27.678
  I0507 14:00:27.678849 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 14:00:27.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:27.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:27.694
  I0507 14:00:27.696674 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:00:30.780169 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7634" for this suite. @ 05/07/25 14:00:30.784
• [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/07/25 14:00:30.791
  I0507 14:00:30.791066 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 14:00:30.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:30.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:30.806
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/07/25 14:00:30.809
  STEP: Saw pod success @ 05/07/25 14:00:34.83
  I0507 14:00:34.833862 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-0ba68cb0-2567-443a-beee-6006115a849b container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:00:34.841
  I0507 14:00:34.860553 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9126" for this suite. @ 05/07/25 14:00:34.864
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/07/25 14:00:34.87
  I0507 14:00:34.870800 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 14:00:34.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:34.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:34.884
  STEP: Deleting RuntimeClass runtimeclass-5017-delete-me @ 05/07/25 14:00:34.891
  STEP: Waiting for the RuntimeClass to disappear @ 05/07/25 14:00:34.898
  I0507 14:00:34.908027 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5017" for this suite. @ 05/07/25 14:00:34.965
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/07/25 14:00:34.973
  I0507 14:00:34.973292 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/07/25 14:00:34.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:34.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:34.986
  STEP: creating a target pod @ 05/07/25 14:00:34.989
  STEP: adding an ephemeral container @ 05/07/25 14:00:37.022
  STEP: checking pod container endpoints @ 05/07/25 14:00:39.048
  I0507 14:00:39.048083 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3969 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:00:39.048114 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:00:39.048187 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3969/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0507 14:00:39.114441 25 exec_util.go:108] Exec stderr: ""
  I0507 14:00:39.121183 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3969" for this suite. @ 05/07/25 14:00:39.124
• [4.157 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/07/25 14:00:39.129
  I0507 14:00:39.129925 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:00:39.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:39.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:39.14
  I0507 14:00:39.143593 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/07/25 14:00:40.345
  I0507 14:00:40.345363 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 create -f -'
  I0507 14:00:42.398983 25 builder.go:146] stderr: ""
  I0507 14:00:42.399056 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1511-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0507 14:00:42.399137 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 delete e2e-test-crd-publish-openapi-1511-crds test-foo'
  I0507 14:00:42.443791 25 builder.go:146] stderr: ""
  I0507 14:00:42.443832 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1511-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0507 14:00:42.443873 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 apply -f -'
  I0507 14:00:42.489892 25 builder.go:146] stderr: ""
  I0507 14:00:42.489936 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1511-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0507 14:00:42.489978 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 delete e2e-test-crd-publish-openapi-1511-crds test-foo'
  I0507 14:00:42.532346 25 builder.go:146] stderr: ""
  I0507 14:00:42.532375 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1511-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/07/25 14:00:42.532
  I0507 14:00:42.532419 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 create -f -'
  I0507 14:00:42.570923 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/07/25 14:00:42.57
  I0507 14:00:42.570999 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 create -f -'
  I0507 14:00:42.611363 25 builder.go:135] rc: 1
  I0507 14:00:42.611438 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 apply -f -'
  I0507 14:00:42.648885 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/07/25 14:00:42.648
  I0507 14:00:42.649030 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 create -f -'
  I0507 14:00:42.684865 25 builder.go:135] rc: 1
  I0507 14:00:42.684942 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 --namespace=crd-publish-openapi-646 apply -f -'
  I0507 14:00:42.723425 25 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/07/25 14:00:42.723
  I0507 14:00:42.723555 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 explain e2e-test-crd-publish-openapi-1511-crds'
  I0507 14:00:42.758763 25 builder.go:146] stderr: ""
  I0507 14:00:42.758805 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1511-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/07/25 14:00:42.758
  I0507 14:00:42.759046 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 explain e2e-test-crd-publish-openapi-1511-crds.metadata'
  I0507 14:00:42.794415 25 builder.go:146] stderr: ""
  I0507 14:00:42.794533 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1511-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0507 14:00:42.794719 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 explain e2e-test-crd-publish-openapi-1511-crds.spec'
  I0507 14:00:42.829084 25 builder.go:146] stderr: ""
  I0507 14:00:42.829118 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1511-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0507 14:00:42.829202 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 explain e2e-test-crd-publish-openapi-1511-crds.spec.bars'
  I0507 14:00:42.866471 25 builder.go:146] stderr: ""
  I0507 14:00:42.866517 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1511-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/07/25 14:00:42.866
  I0507 14:00:42.866682 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-646 explain e2e-test-crd-publish-openapi-1511-crds.spec.bars2'
  I0507 14:00:42.900557 25 builder.go:135] rc: 1
  I0507 14:00:44.045497 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-646" for this suite. @ 05/07/25 14:00:44.051
• [4.928 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 05/07/25 14:00:44.058
  I0507 14:00:44.059003 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename disruption @ 05/07/25 14:00:44.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:44.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:44.068
  STEP: Creating a kubernetes client @ 05/07/25 14:00:44.07
  I0507 14:00:44.070575 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename disruption-2 @ 05/07/25 14:00:44.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:44.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:44.081
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:00:44.088
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:00:46.1
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:00:48.111
  STEP: listing a collection of PDBs across all namespaces @ 05/07/25 14:00:50.118
  STEP: listing a collection of PDBs in namespace disruption-1084 @ 05/07/25 14:00:50.121
  STEP: deleting a collection of PDBs @ 05/07/25 14:00:50.124
  STEP: Waiting for the PDB collection to be deleted @ 05/07/25 14:00:50.134
  I0507 14:00:50.137395 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8658" for this suite. @ 05/07/25 14:00:50.14
  I0507 14:00:50.146975 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1084" for this suite. @ 05/07/25 14:00:50.242
• [6.189 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/07/25 14:00:50.248
  I0507 14:00:50.248684 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 14:00:50.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:00:50.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:00:50.263
  I0507 14:01:12.340097 25 container_probe.go:92] Container started at 2025-05-07 14:00:50 +0000 UTC, pod became ready at 2025-05-07 14:01:12 +0000 UTC
  I0507 14:01:12.340292 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3398" for this suite. @ 05/07/25 14:01:12.343
• [22.100 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/07/25 14:01:12.349
  I0507 14:01:12.349243 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 14:01:12.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:12.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:12.364
  STEP: creating a Deployment @ 05/07/25 14:01:12.37
  STEP: waiting for Deployment to be created @ 05/07/25 14:01:12.376
  STEP: waiting for all Replicas to be Ready @ 05/07/25 14:01:12.377
  I0507 14:01:12.379478 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.379535 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.389201 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.389278 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.401617 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.401703 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.425772 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:12.425802 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 14:01:13.408021 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0507 14:01:13.408053 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0507 14:01:20.492482 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/07/25 14:01:20.492
  I0507 14:01:20.502389 25 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/07/25 14:01:20.502
  I0507 14:01:20.503491 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503520 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503533 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503542 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503553 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503561 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503613 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503635 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 0
  I0507 14:01:20.503720 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:20.503732 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:20.503745 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.503757 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.503769 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.503777 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.511271 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.511310 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.526856 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.526880 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:20.532802 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:20.532859 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:20.542353 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:20.542376 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:21.504412 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:21.504462 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:21.525998 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  STEP: listing Deployments @ 05/07/25 14:01:21.526
  I0507 14:01:21.528091 25 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/07/25 14:01:21.528
  I0507 14:01:21.536904 25 deployment.go:360] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/07/25 14:01:21.536
  I0507 14:01:21.542729 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:21.545479 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:21.564209 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:21.584200 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:21.592280 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:22.525150 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:28.584848 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:28.605987 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:28.640289 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 14:01:35.654694 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/07/25 14:01:35.675
  STEP: fetching the DeploymentStatus @ 05/07/25 14:01:35.683
  I0507 14:01:35.687220 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:35.687354 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:35.687429 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:35.687632 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:35.687833 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 1
  I0507 14:01:35.687893 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:35.687995 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 3
  I0507 14:01:35.688079 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:35.688134 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 2
  I0507 14:01:35.688484 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-8737 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/07/25 14:01:35.688
  I0507 14:01:35.695314 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695372 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695422 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695451 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695527 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695548 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695640 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695657 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695670 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695815 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695846 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.695968 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.696027 25 deployment.go:475] observed event type MODIFIED
  I0507 14:01:35.698640 25 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0507 14:01:35.703104 25 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8737",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25782e06-56f2-48ec-88b5-d509f6195bda",
      ResourceVersion: (string) (len=4) "1357",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "12ac5a37-c53d-43ab-8352-60dfc9bbb4e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 32 61 63  35 61 33 37 2d 63 35 33  |":\"12ac5a37-c53|
              00000130  64 2d 34 33 61 62 2d 38  33 35 32 2d 36 30 64 66  |d-43ab-8352-60df|
              00000140  63 39 62 62 62 34 65 32  5c 22 7d 22 3a 7b 7d 7d  |c9bbb4e2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0507 14:01:35.709485 25 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8737",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bc08db5-1695-425e-baa2-1f08ea2e74b8",
      ResourceVersion: (string) (len=4) "1445",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "12ac5a37-c53d-43ab-8352-60dfc9bbb4e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 32 61 63  35 61 33 37 2d 63 35 33  |":\"12ac5a37-c53|
              00000130  64 2d 34 33 61 62 2d 38  33 35 32 2d 36 30 64 66  |d-43ab-8352-60df|
              00000140  63 39 62 62 62 34 65 32  5c 22 7d 22 3a 7b 7d 7d  |c9bbb4e2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0507 14:01:35.719197 25 deployment.go:669] pod: "test-deployment-79899bcfcc-5c5gb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-5c5gb",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-8737",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25de4bb0-7666-462e-bff4-23761cb13b2b",
      ResourceVersion: (string) (len=4) "1462",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "1bc08db5-1695-425e-baa2-1f08ea2e74b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 62 63 30 38 64 62 35  |uid\":\"1bc08db5|
              000000a0  2d 31 36 39 35 2d 34 32  35 65 2d 62 61 61 32 2d  |-1695-425e-baa2-|
              000000b0  31 66 30 38 65 61 32 65  37 34 62 38 5c 22 7d 22  |1f08ea2e74b8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  31 5c 22 7d 22 3a 7b 22  |.244.1.21\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dh5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dh5z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882223288,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://faa7bcd1b9e46fb1901abc1c76a8dd4573335c4c774450d587799375cd95455e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2dh5z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 14:01:35.723346 25 deployment.go:669] pod: "test-deployment-79899bcfcc-qmk8h":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-qmk8h",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-8737",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a0c6e9d-afe9-46b5-8c67-61d3b36ec12f",
      ResourceVersion: (string) (len=4) "1444",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223288,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "1bc08db5-1695-425e-baa2-1f08ea2e74b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 62 63 30 38 64 62 35  |uid\":\"1bc08db5|
              000000a0  2d 31 36 39 35 2d 34 32  35 65 2d 62 61 61 32 2d  |-1695-425e-baa2-|
              000000b0  31 66 30 38 65 61 32 65  37 34 62 38 5c 22 7d 22  |1f08ea2e74b8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 35  5c 22 7d 22 3a 7b 22 2e  |.244.0.5\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8mlqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8mlqg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=10) "10.244.0.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.0.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223288,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882223295,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://87ed2f2fda21c68ffafa538f35b121a2ed56284c105c449563a66305e44f4a32",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8mlqg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 14:01:35.726746 25 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8737",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6d12901-9f53-4955-8651-5e45d3b6fbc3",
      ResourceVersion: (string) (len=4) "1453",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "12ac5a37-c53d-43ab-8352-60dfc9bbb4e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 32 61 63  35 61 33 37 2d 63 35 33  |":\"12ac5a37-c53|
              00000130  64 2d 34 33 61 62 2d 38  33 35 32 2d 36 30 64 66  |d-43ab-8352-60df|
              00000140  63 39 62 62 62 34 65 32  5c 22 7d 22 3a 7b 7d 7d  |c9bbb4e2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223295,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0507 14:01:35.809156 25 deployment.go:669] pod: "test-deployment-f78d658f9-vnq4k":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-vnq4k",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-8737",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2687bd5-77a9-41db-91df-a66492382601",
      ResourceVersion: (string) (len=4) "1448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "b6d12901-9f53-4955-8651-5e45d3b6fbc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 36 64 31 32 39 30 31  |uid\":\"b6d12901|
              000000a0  2d 39 66 35 33 2d 34 39  35 35 2d 38 36 35 31 2d  |-9f53-4955-8651-|
              000000b0  35 65 34 35 64 33 62 36  66 62 63 33 5c 22 7d 22  |5e45d3b6fbc3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 34  5c 22 7d 22 3a 7b 22 2e  |.244.0.4\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvb5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvb5v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882223281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=10) "10.244.0.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.0.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882223281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882223282,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=73) "docker://f555884be8970c96d0323d8c9c6d7a7b0b8ed7a4a6577a4aa0bca3c5f91b29a5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nvb5v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 14:01:35.811041 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8737" for this suite. @ 05/07/25 14:01:35.813
• [23.468 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/07/25 14:01:35.817
  I0507 14:01:35.817659 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 14:01:35.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:35.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:35.826
  STEP: creating a policy with variables @ 05/07/25 14:01:35.833
  STEP: waiting until the marker is denied @ 05/07/25 14:01:35.85
  STEP: testing a replicated Deployment to be allowed @ 05/07/25 14:01:36.557
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/07/25 14:01:36.569
  I0507 14:01:36.617658 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3483" for this suite. @ 05/07/25 14:01:36.624
• [0.813 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/07/25 14:01:36.63
  I0507 14:01:36.630553 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename watch @ 05/07/25 14:01:36.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:36.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:36.645
  STEP: creating a new configmap @ 05/07/25 14:01:36.647
  STEP: modifying the configmap once @ 05/07/25 14:01:36.649
  STEP: modifying the configmap a second time @ 05/07/25 14:01:36.656
  STEP: deleting the configmap @ 05/07/25 14:01:36.66
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/07/25 14:01:36.665
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/07/25 14:01:36.666
  I0507 14:01:36.666246 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5885  b9a1a8db-8bb8-43b1-8919-76af714882f7 1596 0 2025-05-07 14:01:36 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-07 14:01:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:01:36.666355 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5885  b9a1a8db-8bb8-43b1-8919-76af714882f7 1597 0 2025-05-07 14:01:36 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-07 14:01:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:01:36.666440 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5885" for this suite. @ 05/07/25 14:01:36.725
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 05/07/25 14:01:36.73
  I0507 14:01:36.730877 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 14:01:36.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:36.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:36.744
  STEP: Creating service test in namespace statefulset-7084 @ 05/07/25 14:01:36.747
  STEP: Looking for a node to schedule stateful set and pod @ 05/07/25 14:01:36.751
  STEP: Creating pod with conflicting port in namespace statefulset-7084 @ 05/07/25 14:01:36.825
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7084 @ 05/07/25 14:01:36.833
  STEP: Creating statefulset with conflicting port in namespace statefulset-7084 @ 05/07/25 14:01:38.841
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7084 @ 05/07/25 14:01:38.846
  I0507 14:01:38.865592 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-7084, name: ss-0, uid: 4bddefa8-b312-4bd3-bf80-9116452798d9, status phase: Pending. Waiting for statefulset controller to delete.
  I0507 14:01:38.874346 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-7084, name: ss-0, uid: 4bddefa8-b312-4bd3-bf80-9116452798d9, status phase: Failed. Waiting for statefulset controller to delete.
  I0507 14:01:38.879254 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-7084, name: ss-0, uid: 4bddefa8-b312-4bd3-bf80-9116452798d9, status phase: Failed. Waiting for statefulset controller to delete.
  I0507 14:01:38.882636 25 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-7084
  STEP: Removing pod with conflicting port in namespace statefulset-7084 @ 05/07/25 14:01:38.882
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7084 and will be in running state @ 05/07/25 14:01:38.894
  I0507 14:01:40.902834 25 statefulset.go:138] Deleting all statefulset in ns statefulset-7084
  I0507 14:01:40.962105 25 rest.go:152] Scaling statefulset ss to 0
  I0507 14:01:50.975955 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 14:01:50.978874 25 rest.go:90] Deleting statefulset ss
  I0507 14:01:50.990553 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7084" for this suite. @ 05/07/25 14:01:50.993
• [14.270 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 05/07/25 14:01:51.001
  I0507 14:01:51.001139 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 14:01:51.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:51.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:51.015
  STEP: apply creating a deployment @ 05/07/25 14:01:51.018
  I0507 14:01:51.030705 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8386" for this suite. @ 05/07/25 14:01:51.096
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/07/25 14:01:51.104
  I0507 14:01:51.104786 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:01:51.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:51.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:51.118
  STEP: Creating projection with secret that has name projected-secret-test-map-5e3b4933-f657-4255-aac3-fb6499511dce @ 05/07/25 14:01:51.121
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:01:51.126
  STEP: Saw pod success @ 05/07/25 14:01:53.143
  I0507 14:01:53.146128 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-62f621ba-afee-4f25-a0d2-1bd27b18b183 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:01:53.153
  I0507 14:01:53.166784 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6875" for this suite. @ 05/07/25 14:01:53.169
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 05/07/25 14:01:53.175
  I0507 14:01:53.175966 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:01:53.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:53.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:53.189
  I0507 14:01:53.194453 25 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-9185"
  I0507 14:01:53.198541 25 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-9185"
  STEP: waiting for a new root ca configmap created @ 05/07/25 14:01:53.699
  I0507 14:01:53.703415 25 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-9185"
  I0507 14:01:53.708924 25 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-9185"
  STEP: waiting for the root ca configmap reconciled @ 05/07/25 14:01:54.209
  I0507 14:01:54.215067 25 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-9185"
  I0507 14:01:54.215291 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9185" for this suite. @ 05/07/25 14:01:54.218
• [1.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/07/25 14:01:54.225
  I0507 14:01:54.225709 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:01:54.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:54.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:54.24
  STEP: Creating configMap with name projected-configmap-test-volume-7cdae61e-542c-47b0-99cd-fb7e868047df @ 05/07/25 14:01:54.243
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:01:54.248
  STEP: Saw pod success @ 05/07/25 14:01:58.264
  I0507 14:01:58.266885 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-cb39c513-951a-4deb-a0b5-c50eca9389a3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:01:58.272
  I0507 14:01:58.285040 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5667" for this suite. @ 05/07/25 14:01:58.286
• [4.065 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 05/07/25 14:01:58.291
  I0507 14:01:58.291285 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:01:58.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:58.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:58.3
  STEP: Creating ServiceAccount "e2e-sa-896dl"  @ 05/07/25 14:01:58.303
  I0507 14:01:58.306992 25 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-896dl"  @ 05/07/25 14:01:58.307
  I0507 14:01:58.312487 25 service_accounts.go:868] AutomountServiceAccountToken: true
  I0507 14:01:58.312667 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5209" for this suite. @ 05/07/25 14:01:58.388
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/07/25 14:01:58.398
  I0507 14:01:58.398229 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:01:58.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:01:58.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:01:58.411
  STEP: Creating the pod @ 05/07/25 14:01:58.414
  I0507 14:02:00.957806 25 pod_client.go:173] Successfully updated pod "annotationupdate03318c5c-b338-47f4-9ae2-17aef61649f6"
  I0507 14:02:02.974901 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2507" for this suite. @ 05/07/25 14:02:02.977
• [4.586 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/07/25 14:02:02.984
  I0507 14:02:02.984279 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:02:02.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:02.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:03
  STEP: Creating configMap with name configmap-test-volume-4c8408c1-37c7-4b70-bd94-73cd0ee4f78e @ 05/07/25 14:02:03.004
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:02:03.009
  STEP: Saw pod success @ 05/07/25 14:02:07.03
  I0507 14:02:07.032929 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-b1ff40a7-cf27-409c-b4cd-8363405deaab container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:02:07.039
  I0507 14:02:07.055573 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9342" for this suite. @ 05/07/25 14:02:07.059
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 05/07/25 14:02:07.065
  I0507 14:02:07.065818 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:02:07.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:07.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:07.077
  STEP: creating a ServiceAccount @ 05/07/25 14:02:07.081
  STEP: watching for the ServiceAccount to be added @ 05/07/25 14:02:07.088
  STEP: patching the ServiceAccount @ 05/07/25 14:02:07.09
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/07/25 14:02:07.095
  STEP: deleting the ServiceAccount @ 05/07/25 14:02:07.098
  I0507 14:02:07.106303 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1173" for this suite. @ 05/07/25 14:02:07.161
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 05/07/25 14:02:07.168
  I0507 14:02:07.168183 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:02:07.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:07.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:07.182
  STEP: creating the pod @ 05/07/25 14:02:07.185
  I0507 14:02:07.185335 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 create -f -'
  I0507 14:02:07.264401 25 builder.go:146] stderr: ""
  I0507 14:02:07.264437 25 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/07/25 14:02:09.271
  I0507 14:02:09.271211 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 label pods pause testing-label=testing-label-value'
  I0507 14:02:09.320466 25 builder.go:146] stderr: ""
  I0507 14:02:09.320491 25 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/07/25 14:02:09.32
  I0507 14:02:09.320540 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 get pod pause -L testing-label'
  I0507 14:02:09.356402 25 builder.go:146] stderr: ""
  I0507 14:02:09.356430 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/07/25 14:02:09.356
  I0507 14:02:09.356474 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 label pods pause testing-label-'
  I0507 14:02:09.399782 25 builder.go:146] stderr: ""
  I0507 14:02:09.399822 25 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/07/25 14:02:09.399
  I0507 14:02:09.399900 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 get pod pause -L testing-label'
  I0507 14:02:09.437480 25 builder.go:146] stderr: ""
  I0507 14:02:09.437526 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/07/25 14:02:09.437
  I0507 14:02:09.437640 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 delete --grace-period=0 --force -f -'
  I0507 14:02:09.482138 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 14:02:09.482172 25 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0507 14:02:09.482214 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 get rc,svc -l name=pause --no-headers'
  I0507 14:02:09.521298 25 builder.go:146] stderr: "No resources found in kubectl-6969 namespace.\n"
  I0507 14:02:09.521325 25 builder.go:147] stdout: ""
  I0507 14:02:09.521358 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6969 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0507 14:02:09.557519 25 builder.go:146] stderr: ""
  I0507 14:02:09.557557 25 builder.go:147] stdout: ""
  I0507 14:02:09.557664 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6969" for this suite. @ 05/07/25 14:02:09.559
• [2.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 05/07/25 14:02:09.563
  I0507 14:02:09.563348 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 14:02:09.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:09.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:09.57
  STEP: Discovering how many secrets are in namespace by default @ 05/07/25 14:02:09.571
  STEP: Counting existing ResourceQuota @ 05/07/25 14:02:14.574
  STEP: Creating a ResourceQuota @ 05/07/25 14:02:19.58
  STEP: Ensuring resource quota status is calculated @ 05/07/25 14:02:19.585
  STEP: Creating a Secret @ 05/07/25 14:02:21.591
  STEP: Ensuring resource quota status captures secret creation @ 05/07/25 14:02:21.602
  STEP: Deleting a secret @ 05/07/25 14:02:23.609
  STEP: Ensuring resource quota status released usage @ 05/07/25 14:02:23.614
  I0507 14:02:25.619652 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9421" for this suite. @ 05/07/25 14:02:25.623
• [16.064 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 05/07/25 14:02:25.627
  I0507 14:02:25.627347 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:02:25.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:25.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:25.641
  STEP: fetching services @ 05/07/25 14:02:25.644
  I0507 14:02:25.647780 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1471" for this suite. @ 05/07/25 14:02:25.725
• [0.105 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 05/07/25 14:02:25.732
  I0507 14:02:25.732157 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename volumeattachment @ 05/07/25 14:02:25.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:25.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:25.746
  STEP: Create VolumeAttachment "va-e2e-cph49" on node "k8sconformance-m02" @ 05/07/25 14:02:25.825
  STEP: Patch VolumeAttachment "va-e2e-cph49" on node "k8sconformance-m02" @ 05/07/25 14:02:25.83
  STEP: Reading "va-e2e-cph49" Status @ 05/07/25 14:02:25.835
  STEP: Patching "va-e2e-cph49" Status @ 05/07/25 14:02:25.839
  I0507 14:02:25.844793 25 volume_attachment.go:224] "va-e2e-cph49" Status.Attached: true
  STEP: Updating "va-e2e-cph49" Status @ 05/07/25 14:02:25.844
  I0507 14:02:25.851462 25 volume_attachment.go:240] "va-e2e-cph49" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-cph49" on node "k8sconformance-m02" @ 05/07/25 14:02:25.851
  STEP: Confirm deletion of VolumeAttachment "va-e2e-cph49" on node "k8sconformance-m02" @ 05/07/25 14:02:25.857
  I0507 14:02:25.860133 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2299" for this suite. @ 05/07/25 14:02:25.929
• [0.203 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/07/25 14:02:25.935
  I0507 14:02:25.935776 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/07/25 14:02:25.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:25.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:25.949
  STEP: Cleaning up the secret @ 05/07/25 14:02:27.98
  STEP: Cleaning up the configmap @ 05/07/25 14:02:27.984
  STEP: Cleaning up the pod @ 05/07/25 14:02:27.989
  I0507 14:02:28.000608 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8111" for this suite. @ 05/07/25 14:02:28.004
• [2.074 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 05/07/25 14:02:28.009
  I0507 14:02:28.009632 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 14:02:28.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:02:28.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:02:28.022
  STEP: Looking for a node to schedule job pods @ 05/07/25 14:02:28.026
  STEP: Creating a job @ 05/07/25 14:02:28.106
  STEP: Waiting for all the pods to be ready @ 05/07/25 14:02:28.113
  STEP: Fetch all running pods @ 05/07/25 14:02:34.133
  STEP: Evict all the Pods @ 05/07/25 14:02:34.137
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-8v6cs/job-7975 @ 05/07/25 14:02:34.137
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-6mkft/job-7975 @ 05/07/25 14:02:34.137
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-vgffj/job-7975 @ 05/07/25 14:02:34.137
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-6mkft/job-7975 to be deleted @ 05/07/25 14:02:34.153
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-8v6cs/job-7975 to be deleted @ 05/07/25 14:02:34.156
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-vgffj/job-7975 to be deleted @ 05/07/25 14:02:34.156
  STEP: Ensuring job reaches completions @ 05/07/25 14:02:40.173
  I0507 14:03:22.292553 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7975" for this suite. @ 05/07/25 14:03:22.295
• [54.293 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 05/07/25 14:03:22.302
  I0507 14:03:22.302683 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:03:22.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:03:22.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:03:22.317
  STEP: Setting up server cert @ 05/07/25 14:03:22.337
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:03:22.514
  STEP: Deploying the webhook pod @ 05/07/25 14:03:22.517
  STEP: Wait for the deployment to be ready @ 05/07/25 14:03:22.524
  I0507 14:03:22.528300 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:03:24.539
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:03:24.553
  I0507 14:03:25.553686 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 14:03:25.561836 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-298-crds.webhook.example.com via the AdmissionRegistration API @ 05/07/25 14:03:26.074
  STEP: Creating a custom resource while v1 is storage version @ 05/07/25 14:03:26.092
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/07/25 14:03:28.129
  STEP: Patching the custom resource while v2 is storage version @ 05/07/25 14:03:28.145
  I0507 14:03:28.724480 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4289" for this suite. @ 05/07/25 14:03:28.728
  STEP: Destroying namespace "webhook-markers-5997" for this suite. @ 05/07/25 14:03:28.735
• [6.440 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 05/07/25 14:03:28.742
  I0507 14:03:28.742563 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:03:28.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:03:28.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:03:28.756
  STEP: creating Agnhost RC @ 05/07/25 14:03:28.76
  I0507 14:03:28.760132 25 kubectl.go:1544] namespace kubectl-5512
  I0507 14:03:28.760204 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-5512 create -f -'
  I0507 14:03:28.839061 25 builder.go:146] stderr: ""
  I0507 14:03:28.839096 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/07/25 14:03:28.839
  I0507 14:03:29.842891 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:03:29.842941 25 framework.go:733] Found 1 / 1
  I0507 14:03:29.842967 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0507 14:03:29.845956 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:03:29.846012 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 14:03:29.846028 25 kubectl.go:1551] wait on agnhost-primary startup in kubectl-5512 
  I0507 14:03:29.846099 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-5512 logs agnhost-primary-4lg8f agnhost-primary'
  I0507 14:03:29.890909 25 builder.go:146] stderr: ""
  I0507 14:03:29.890936 25 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/07/25 14:03:29.89
  I0507 14:03:29.890993 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-5512 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0507 14:03:29.942999 25 builder.go:146] stderr: ""
  I0507 14:03:29.943080 25 builder.go:147] stdout: "service/rm2 exposed\n"
  I0507 14:03:29.945276 25 utils.go:1203] Service rm2 in namespace kubectl-5512 found.
  STEP: exposing service @ 05/07/25 14:03:31.953
  I0507 14:03:31.953745 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-5512 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0507 14:03:32.005724 25 builder.go:146] stderr: ""
  I0507 14:03:32.005790 25 builder.go:147] stdout: "service/rm3 exposed\n"
  I0507 14:03:32.008222 25 utils.go:1203] Service rm3 in namespace kubectl-5512 found.
  I0507 14:03:34.013008 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5512" for this suite. @ 05/07/25 14:03:34.015
• [5.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/07/25 14:03:34.02
  I0507 14:03:34.020981 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:03:34.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:03:34.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:03:34.03
  STEP: Creating configMap that has name configmap-test-emptyKey-0a81e6d5-110a-42b5-bc60-399cf33cde40 @ 05/07/25 14:03:34.033
  I0507 14:03:34.034817 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9136" for this suite. @ 05/07/25 14:03:34.118
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 05/07/25 14:03:34.124
  I0507 14:03:34.124432 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 14:03:34.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:03:34.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:03:34.137
  STEP: Creating a ResourceQuota with terminating scope @ 05/07/25 14:03:34.141
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 14:03:34.145
  STEP: Creating a ResourceQuota with not terminating scope @ 05/07/25 14:03:36.148
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 14:03:36.154
  STEP: Creating a long running pod @ 05/07/25 14:03:38.16
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/07/25 14:03:38.172
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/07/25 14:03:40.178
  STEP: Deleting the pod @ 05/07/25 14:03:42.184
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 14:03:42.199
  STEP: Creating a terminating pod @ 05/07/25 14:03:44.206
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/07/25 14:03:44.218
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/07/25 14:03:46.222
  STEP: Deleting the pod @ 05/07/25 14:03:48.228
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 14:03:48.24
  I0507 14:03:50.247388 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4682" for this suite. @ 05/07/25 14:03:50.25
• [16.134 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 05/07/25 14:03:50.258
  I0507 14:03:50.258916 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 14:03:50.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:03:50.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:03:50.273
  I0507 14:03:50.290970 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 14:04:50.298113 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/07/25 14:04:50.301
  STEP: Adding a custom resource @ 05/07/25 14:04:50.301
  I0507 14:04:50.322344 25 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0507 14:04:50.329789 25 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/07/25 14:04:50.329
  I0507 14:04:50.353960 25 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0507 14:04:50.357309 25 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/07/25 14:04:50.357
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/07/25 14:04:52.376
  STEP: Removing a custom resource @ 05/07/25 14:04:56.441
  STEP: Removing a custom resource @ 05/07/25 14:04:56.447
  I0507 14:04:56.457757 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5947" for this suite. @ 05/07/25 14:04:56.46
• [66.207 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 05/07/25 14:04:56.466
  I0507 14:04:56.466260 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:04:56.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:04:56.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:04:56.482
  STEP: creating Agnhost RC @ 05/07/25 14:04:56.485
  I0507 14:04:56.485404 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8471 create -f -'
  I0507 14:04:56.564156 25 builder.go:146] stderr: ""
  I0507 14:04:56.564183 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/07/25 14:04:56.564
  I0507 14:04:57.570418 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:04:57.570469 25 framework.go:733] Found 1 / 1
  I0507 14:04:57.570492 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/07/25 14:04:57.57
  I0507 14:04:57.573587 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:04:57.573620 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 14:04:57.573682 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8471 patch pod agnhost-primary-f74kf -p {"metadata":{"annotations":{"x":"y"}}}'
  I0507 14:04:57.619794 25 builder.go:146] stderr: ""
  I0507 14:04:57.619834 25 builder.go:147] stdout: "pod/agnhost-primary-f74kf patched\n"
  STEP: checking annotations @ 05/07/25 14:04:57.619
  I0507 14:04:57.621607 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:04:57.621627 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 14:04:57.621717 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8471" for this suite. @ 05/07/25 14:04:57.623
• [1.161 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/07/25 14:04:57.627
  I0507 14:04:57.627314 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:04:57.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:04:57.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:04:57.634
  I0507 14:04:57.656481 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5550" for this suite. @ 05/07/25 14:04:57.726
• [0.105 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 05/07/25 14:04:57.733
  I0507 14:04:57.733102 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 14:04:57.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:04:57.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:04:57.746
  I0507 14:04:57.748613 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:05:00.823735 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2271" for this suite. @ 05/07/25 14:05:00.826
• [3.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/07/25 14:05:00.832
  I0507 14:05:00.832677 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 14:05:00.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:05:00.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:05:00.844
  STEP: Creating pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832 @ 05/07/25 14:05:00.848
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 14:05:02.864
  I0507 14:05:02.867426 25 container_probe.go:1749] Initial restart count of pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 is 0
  I0507 14:05:02.870031 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:04.876293 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:06.883081 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:08.889344 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:10.893595 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:12.899542 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:14.904829 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:16.910762 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:18.916312 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:20.919148 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:22.925262 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:24.929765 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:26.933077 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:28.938315 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:30.944606 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:32.950616 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:34.957217 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:36.962891 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:38.969255 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:40.975874 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:42.982079 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:44.989116 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:46.994395 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:49.000898 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:51.006749 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:53.013580 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:55.016325 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:57.022390 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:05:59.026488 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:01.029635 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:03.035150 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:05.039956 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:07.046933 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:09.052970 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:11.058098 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:13.061643 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:15.068114 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:17.075000 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:19.081413 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:21.087567 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:23.093497 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:25.099675 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:27.104414 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:29.111475 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:31.117579 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:33.124069 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:35.130177 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:37.135868 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:39.142339 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:41.148822 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:43.154347 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:45.160402 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:47.165897 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:49.172164 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:51.177130 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:53.182851 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:55.188379 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:57.193658 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:06:59.199742 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:01.204447 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:03.207328 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:05.212297 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:07.219328 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:09.224759 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:11.229994 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:13.236342 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:15.242766 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:17.249606 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:19.256058 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:21.262274 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:23.269145 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:25.275237 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:27.282227 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:29.288176 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:31.294276 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:33.299946 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:35.305758 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:37.311487 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:39.316545 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:41.322606 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:43.327764 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:45.333455 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:47.340555 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:49.345626 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:51.351212 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:53.356954 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:55.362577 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:57.369458 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:07:59.375802 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:01.381668 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:03.385092 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:05.389379 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:07.396447 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:09.402532 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:11.409162 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:13.415997 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:15.422080 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:17.429246 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:19.435915 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:21.439337 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:23.442464 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:25.446769 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:27.452909 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:29.458885 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:31.463533 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:33.468961 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:35.477061 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:37.482683 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:39.489288 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:41.492356 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:43.496846 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:45.500021 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:47.504781 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:49.509823 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:51.513630 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:53.519910 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:55.526476 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:57.532250 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:08:59.538234 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  I0507 14:09:01.542558 25 container_probe.go:1759] Get pod test-grpc-1cf2ba68-3797-4cc1-b7ec-0972a5e68d56 in namespace container-probe-832
  STEP: deleting the pod @ 05/07/25 14:09:03.544
  I0507 14:09:03.558410 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-832" for this suite. @ 05/07/25 14:09:03.563
• [242.736 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 05/07/25 14:09:03.569
  I0507 14:09:03.569440 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:09:03.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:09:03.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:09:03.582
  I0507 14:09:03.584113 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 create -f -'
  I0507 14:09:03.668795 25 builder.go:146] stderr: ""
  I0507 14:09:03.668831 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0507 14:09:03.668876 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 create -f -'
  I0507 14:09:03.759267 25 builder.go:146] stderr: ""
  I0507 14:09:03.759314 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/07/25 14:09:03.759
  I0507 14:09:04.766229 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:09:04.766288 25 framework.go:733] Found 1 / 1
  I0507 14:09:04.766317 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0507 14:09:04.769456 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 14:09:04.769494 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 14:09:04.769566 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 describe pod agnhost-primary-fwpdf'
  I0507 14:09:04.813565 25 builder.go:146] stderr: ""
  I0507 14:09:04.813640 25 builder.go:147] stdout: "Name:             agnhost-primary-fwpdf\nNamespace:        kubectl-849\nPriority:         0\nService Account:  default\nNode:             k8sconformance-m02/192.168.49.3\nStart Time:       Wed, 07 May 2025 14:09:03 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.36\nIPs:\n  IP:           10.244.1.36\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://79d0d271a3fc272e4501c423aeec5c492353b869293535bb769c031b968cab73\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 07 May 2025 14:09:04 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-lbkfg (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-lbkfg:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-849/agnhost-primary-fwpdf to k8sconformance-m02\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0507 14:09:04.813696 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 describe rc agnhost-primary'
  I0507 14:09:04.864891 25 builder.go:146] stderr: ""
  I0507 14:09:04.864938 25 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-849\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-fwpdf\n"
  I0507 14:09:04.864995 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 describe service agnhost-primary'
  I0507 14:09:04.906057 25 builder.go:146] stderr: ""
  I0507 14:09:04.906094 25 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-849\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.111.109.233\nIPs:                      10.111.109.233\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.1.36:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0507 14:09:04.908376 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 describe node k8sconformance'
  I0507 14:09:04.960766 25 builder.go:146] stderr: ""
  I0507 14:09:04.960876 25 builder.go:147] stdout: "Name:               k8sconformance\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8sconformance\n                    kubernetes.io/os=linux\n                    minikube.k8s.io/commit=eba8fc9e50a5163435012c29b9c74f58cb30a472\n                    minikube.k8s.io/name=k8sconformance\n                    minikube.k8s.io/primary=true\n                    minikube.k8s.io/updated_at=2025_05_07T09_58_04_0700\n                    minikube.k8s.io/version=v1.35.0\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 07 May 2025 13:58:01 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8sconformance\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 07 May 2025 14:08:57 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Wed, 07 May 2025 14:04:51 +0000   Wed, 07 May 2025 13:58:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Wed, 07 May 2025 14:04:51 +0000   Wed, 07 May 2025 13:58:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Wed, 07 May 2025 14:04:51 +0000   Wed, 07 May 2025 13:58:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Wed, 07 May 2025 14:04:51 +0000   Wed, 07 May 2025 13:58:01 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.49.2\n  Hostname:    k8sconformance\nCapacity:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             31955736Ki\n  pods:               110\nAllocatable:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             31955736Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ab11ed9e8f9f42e9a1c1919cc427462d\n  System UUID:                87869fa9-d219-405f-bbed-e7bf89a4dda3\n  Boot ID:                    94737f13-8ab7-4337-8f5e-c35dfd6b2a5b\n  Kernel Version:             6.11.0-25-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://28.0.4\n  Kubelet Version:            v1.32.4\n  Kube-Proxy Version:         v1.32.4\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-668d6bf9bc-kg25h                                   100m (0%)     0 (0%)      70Mi (0%)        170Mi (0%)     10m\n  kube-system                 etcd-k8sconformance                                        100m (0%)     0 (0%)      100Mi (0%)       0 (0%)         11m\n  kube-system                 kindnet-rnsjv                                              100m (0%)     100m (0%)   50Mi (0%)        50Mi (0%)      10m\n  kube-system                 kube-apiserver-k8sconformance                              250m (2%)     0 (0%)      0 (0%)           0 (0%)         11m\n  kube-system                 kube-controller-manager-k8sconformance                     200m (1%)     0 (0%)      0 (0%)           0 (0%)         11m\n  kube-system                 kube-proxy-xzmjp                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         10m\n  kube-system                 kube-scheduler-k8sconformance                              100m (0%)     0 (0%)      0 (0%)           0 (0%)         11m\n  kube-system                 storage-provisioner                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         10m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-667f212615894918-l5ngp    0 (0%)        0 (0%)      0 (0%)           0 (0%)         10m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (7%)   100m (0%)\n  memory             220Mi (0%)  220Mi (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                From             Message\n  ----    ------                   ----               ----             -------\n  Normal  Starting                 10m                kube-proxy       \n  Normal  Starting                 11m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  11m (x8 over 11m)  kubelet          Node k8sconformance status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    11m (x8 over 11m)  kubelet          Node k8sconformance status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     11m (x7 over 11m)  kubelet          Node k8sconformance status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  11m                kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 11m                kubelet          Starting kubelet.\n  Normal  NodeAllocatableEnforced  11m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  11m                kubelet          Node k8sconformance status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    11m                kubelet          Node k8sconformance status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     11m                kubelet          Node k8sconformance status is now: NodeHasSufficientPID\n  Normal  RegisteredNode           10m                node-controller  Node k8sconformance event: Registered Node k8sconformance in Controller\n"
  I0507 14:09:04.960937 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-849 describe namespace kubectl-849'
  I0507 14:09:05.000413 25 builder.go:146] stderr: ""
  I0507 14:09:05.000457 25 builder.go:147] stdout: "Name:         kubectl-849\nLabels:       e2e-framework=kubectl\n              e2e-run=f0dbccc4-0455-4e7c-9127-5fae0cbf053e\n              kubernetes.io/metadata.name=kubectl-849\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0507 14:09:05.000566 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-849" for this suite. @ 05/07/25 14:09:05.002
• [1.438 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/07/25 14:09:05.007
  I0507 14:09:05.007856 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:09:05.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:09:05.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:09:05.014
  STEP: creating the pod @ 05/07/25 14:09:05.016
  STEP: setting up watch @ 05/07/25 14:09:05.016
  STEP: submitting the pod to kubernetes @ 05/07/25 14:09:05.118
  STEP: verifying the pod is in kubernetes @ 05/07/25 14:09:05.128
  STEP: verifying pod creation was observed @ 05/07/25 14:09:05.132
  STEP: deleting the pod gracefully @ 05/07/25 14:09:07.143
  STEP: verifying pod deletion was observed @ 05/07/25 14:09:07.153
  I0507 14:09:08.464965 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1806" for this suite. @ 05/07/25 14:09:08.467
• [3.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 05/07/25 14:09:08.473
  I0507 14:09:08.473697 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 14:09:08.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:09:08.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:09:08.486
  STEP: Creating service test in namespace statefulset-8443 @ 05/07/25 14:09:08.49
  STEP: Creating a new StatefulSet @ 05/07/25 14:09:08.495
  I0507 14:09:08.503105 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0507 14:09:18.508403 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:09:18.508462 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:09:18.508479 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:09:18.516526 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8443 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:09:18.617478 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:09:18.617528 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:09:18.617540 25 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/07/25 14:09:28.628
  I0507 14:09:28.637782 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 05/07/25 14:09:28.637
  STEP: Updating Pods in reverse ordinal order @ 05/07/25 14:09:38.648
  I0507 14:09:38.651135 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8443 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:09:38.729430 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:09:38.729476 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:09:38.729494 25 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 05/07/25 14:09:58.743
  I0507 14:09:58.743836 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8443 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:09:58.844241 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:09:58.844318 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:09:58.844401 25 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:10:08.862961 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/07/25 14:10:18.874
  I0507 14:10:18.877245 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8443 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:10:18.959647 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:10:18.959695 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:10:18.959717 25 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:10:28.974899 25 statefulset.go:138] Deleting all statefulset in ns statefulset-8443
  I0507 14:10:28.977295 25 rest.go:152] Scaling statefulset ss2 to 0
  I0507 14:10:38.992574 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 14:10:38.995318 25 rest.go:90] Deleting statefulset ss2
  I0507 14:10:39.006929 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8443" for this suite. @ 05/07/25 14:10:39.01
• [90.545 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/07/25 14:10:39.019
  I0507 14:10:39.019172 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 14:10:39.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:10:39.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:10:39.034
  STEP: create the container @ 05/07/25 14:10:39.037
  W0507 14:10:39.044898      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/07/25 14:10:39.045
  STEP: get the container status @ 05/07/25 14:10:42.062
  STEP: the container should be terminated @ 05/07/25 14:10:42.065
  STEP: the termination message should be set @ 05/07/25 14:10:42.065
  I0507 14:10:42.065550 25 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/07/25 14:10:42.065
  I0507 14:10:42.081259 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6825" for this suite. @ 05/07/25 14:10:42.084
• [3.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 05/07/25 14:10:42.091
  I0507 14:10:42.091704 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 14:10:42.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:10:42.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:10:42.105
  STEP: Creating resourceQuota "e2e-rq-status-l9gv7" @ 05/07/25 14:10:42.111
  I0507 14:10:42.117081 25 resource_quota.go:1102] Resource quota "e2e-rq-status-l9gv7" reports spec: hard cpu limit of 500m
  I0507 14:10:42.117129 25 resource_quota.go:1104] Resource quota "e2e-rq-status-l9gv7" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-l9gv7" /status @ 05/07/25 14:10:42.117
  STEP: Confirm /status for "e2e-rq-status-l9gv7" resourceQuota via watch @ 05/07/25 14:10:42.126
  I0507 14:10:42.128007 25 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-l9gv7" in namespace "resourcequota-9809" with hard status: v1.ResourceList(nil)
  I0507 14:10:42.128094 25 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-l9gv7" in namespace "resourcequota-9809" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0507 14:10:42.128115 25 resource_quota.go:1141] ResourceQuota "e2e-rq-status-l9gv7" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/07/25 14:10:42.129
  I0507 14:10:42.133718 25 resource_quota.go:1152] Resource quota "e2e-rq-status-l9gv7" reports spec: hard cpu limit of 1
  I0507 14:10:42.133738 25 resource_quota.go:1153] Resource quota "e2e-rq-status-l9gv7" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-l9gv7" /status @ 05/07/25 14:10:42.133
  STEP: Confirm /status for "e2e-rq-status-l9gv7" resourceQuota via watch @ 05/07/25 14:10:42.139
  I0507 14:10:42.140359 25 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-l9gv7" in namespace "resourcequota-9809" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0507 14:10:42.140382 25 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-l9gv7" in namespace "resourcequota-9809" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0507 14:10:42.140392 25 resource_quota.go:1185] ResourceQuota "e2e-rq-status-l9gv7" /status was patched
  STEP: Get "e2e-rq-status-l9gv7" /status @ 05/07/25 14:10:42.14
  I0507 14:10:42.142096 25 resource_quota.go:1196] Resourcequota "e2e-rq-status-l9gv7" reports status: hard cpu of 1
  I0507 14:10:42.142124 25 resource_quota.go:1198] Resourcequota "e2e-rq-status-l9gv7" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-l9gv7" /status before checking Spec is unchanged @ 05/07/25 14:10:42.143
  I0507 14:10:42.146405 25 resource_quota.go:1218] Resourcequota "e2e-rq-status-l9gv7" reports status: hard cpu of 2
  I0507 14:10:42.146427 25 resource_quota.go:1220] Resourcequota "e2e-rq-status-l9gv7" reports status: hard memory of 2Gi
  I0507 14:10:42.147324 25 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-l9gv7" in namespace "resourcequota-9809" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0507 14:10:42.148709 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a258a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a258d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:10:47.150007 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a259b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a259f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25a28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:10:52.153477 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007205a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007205d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:10:57.151659 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25b18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25b78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:02.154757 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25c98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25cc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:07.153395 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007208b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:12.153386 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25dd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:17.153164 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720af8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720ba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720c00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:22.152899 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25f38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a25f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:27.153590 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720e58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720eb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:32.152632 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000721050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000721080), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007210e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:37.150933 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007211a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007211d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000721200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:42.152321 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007212c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007212f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000721320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:47.152691 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94db0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94de0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:52.153706 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:11:57.153257 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b95068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b95098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b950c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:02.153470 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007202d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:07.154109 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038700c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:12.153840 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007204e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000720558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:17.153027 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038701b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038701e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:22.153020 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:27.153860 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:32.151341 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a000a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a000d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:37.152767 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003870570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038705a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038705d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:42.154201 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a001f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:47.149529 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a003c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:52.152967 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a004b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a004e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:12:57.152737 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a005a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a005d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a00600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:13:02.153070 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b940f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:13:07.152971 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-l9gv7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-l9gv7", GenerateName:"", Namespace:"resourcequota-9809", SelfLink:"", UID:"132d6228-c6a8-4f89-9c2a-fdd242fb77fe", ResourceVersion:"3477", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-l9gv7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 10, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b94288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0507 14:13:12.153827 25 resource_quota.go:1260] ResourceQuota "e2e-rq-status-l9gv7" Spec was unchanged and /status reset
  I0507 14:13:12.154091 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9809" for this suite. @ 05/07/25 14:13:12.157
• [150.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/07/25 14:13:12.164
  I0507 14:13:12.164106 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename chunking @ 05/07/25 14:13:12.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:13:12.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:13:12.177
  STEP: creating a large number of resources @ 05/07/25 14:13:12.18
  STEP: retrieving those results in paged fashion several times @ 05/07/25 14:13:29.872
  I0507 14:13:29.920626 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0507 14:13:29.971654 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0507 14:13:30.022016 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0507 14:13:30.070787 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0507 14:13:30.120693 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0507 14:13:30.171531 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0507 14:13:30.221542 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0507 14:13:30.268975 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0507 14:13:30.321454 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0507 14:13:30.371412 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0507 14:13:30.420634 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0507 14:13:30.472023 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0507 14:13:30.521140 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0507 14:13:30.569439 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0507 14:13:30.620742 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0507 14:13:30.672322 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0507 14:13:30.720563 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0507 14:13:30.770877 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0507 14:13:30.821569 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0507 14:13:30.871887 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0507 14:13:30.921269 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0507 14:13:30.970977 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0507 14:13:31.017246 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0507 14:13:31.069912 25 chunking.go:98] Retrieved 9/17 results with rv 4112 and continue 
  I0507 14:13:31.121687 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0507 14:13:31.171430 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0507 14:13:31.221346 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0507 14:13:31.272109 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0507 14:13:31.320976 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0507 14:13:31.370800 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0507 14:13:31.421634 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0507 14:13:31.472019 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0507 14:13:31.521046 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0507 14:13:31.569907 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0507 14:13:31.621570 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0507 14:13:31.671490 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0507 14:13:31.721581 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0507 14:13:31.771343 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0507 14:13:31.820670 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0507 14:13:31.871893 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0507 14:13:31.921752 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0507 14:13:31.971367 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0507 14:13:32.021690 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0507 14:13:32.071626 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0507 14:13:32.120683 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0507 14:13:32.172329 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0507 14:13:32.221336 25 chunking.go:98] Retrieved 17/17 results with rv 4112 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0507 14:13:32.272241 25 chunking.go:98] Retrieved 9/17 results with rv 4112 and continue 
  I0507 14:13:32.322069 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0507 14:13:32.372279 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0507 14:13:32.419855 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0507 14:13:32.471782 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0507 14:13:32.521158 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0507 14:13:32.571321 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0507 14:13:32.621408 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0507 14:13:32.670972 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0507 14:13:32.720807 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0507 14:13:32.770953 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0507 14:13:32.821661 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0507 14:13:32.871984 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0507 14:13:32.920716 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0507 14:13:32.971767 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0507 14:13:33.021729 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0507 14:13:33.071104 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0507 14:13:33.121738 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0507 14:13:33.171577 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0507 14:13:33.221011 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0507 14:13:33.269038 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0507 14:13:33.322132 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0507 14:13:33.371149 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0507 14:13:33.420066 25 chunking.go:98] Retrieved 17/17 results with rv 4113 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0507 14:13:33.469864 25 chunking.go:98] Retrieved 9/17 results with rv 4113 and continue 
  STEP: retrieving those results all at once @ 05/07/25 14:13:33.469
  I0507 14:13:33.527761 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2836" for this suite. @ 05/07/25 14:13:33.572
• [21.461 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/07/25 14:13:33.625
  I0507 14:13:33.625619 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename certificates @ 05/07/25 14:13:33.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:13:33.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:13:33.64
  STEP: getting /apis @ 05/07/25 14:13:33.893
  STEP: getting /apis/certificates.k8s.io @ 05/07/25 14:13:33.896
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/07/25 14:13:33.896
  STEP: creating @ 05/07/25 14:13:33.897
  STEP: getting @ 05/07/25 14:13:33.907
  STEP: listing @ 05/07/25 14:13:33.908
  STEP: watching @ 05/07/25 14:13:33.909
  I0507 14:13:33.909759 25 certificates.go:316] starting watch
  STEP: patching @ 05/07/25 14:13:33.91
  STEP: updating @ 05/07/25 14:13:33.919
  I0507 14:13:33.925548 25 certificates.go:332] waiting for watch events with expected annotations
  I0507 14:13:33.925592 25 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/07/25 14:13:33.925
  STEP: patching /approval @ 05/07/25 14:13:33.927
  STEP: updating /approval @ 05/07/25 14:13:33.931
  STEP: getting /status @ 05/07/25 14:13:33.934
  STEP: patching /status @ 05/07/25 14:13:33.936
  STEP: updating /status @ 05/07/25 14:13:33.94
  STEP: deleting @ 05/07/25 14:13:33.946
  STEP: deleting a collection @ 05/07/25 14:13:33.951
  I0507 14:13:33.957405 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1483" for this suite. @ 05/07/25 14:13:33.959
• [0.336 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/07/25 14:13:33.962
  I0507 14:13:33.962495 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename subpath @ 05/07/25 14:13:33.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:13:33.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:13:33.971
  STEP: Setting up data @ 05/07/25 14:13:33.972
  STEP: Creating pod pod-subpath-test-configmap-lsnp @ 05/07/25 14:13:33.977
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 14:13:33.977
  STEP: Saw pod success @ 05/07/25 14:13:56.051
  I0507 14:13:56.054199 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-lsnp container test-container-subpath-configmap-lsnp: <nil>
  STEP: delete the pod @ 05/07/25 14:13:56.072
  STEP: Deleting pod pod-subpath-test-configmap-lsnp @ 05/07/25 14:13:56.088
  I0507 14:13:56.088311 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-lsnp" in namespace "subpath-1363"
  I0507 14:13:56.090617 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1363" for this suite. @ 05/07/25 14:13:56.093
• [22.136 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 05/07/25 14:13:56.099
  I0507 14:13:56.099206 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:13:56.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:13:56.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:13:56.112
  STEP: Setting up server cert @ 05/07/25 14:13:56.128
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:13:56.335
  STEP: Deploying the webhook pod @ 05/07/25 14:13:56.339
  STEP: Wait for the deployment to be ready @ 05/07/25 14:13:56.345
  I0507 14:13:56.349621 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:13:58.361
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:13:58.374
  I0507 14:13:59.375265 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/07/25 14:13:59.442
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 14:13:59.469
  STEP: Deleting the collection of validation webhooks @ 05/07/25 14:13:59.495
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 14:13:59.523
  I0507 14:13:59.559873 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2903" for this suite. @ 05/07/25 14:13:59.562
  STEP: Destroying namespace "webhook-markers-5834" for this suite. @ 05/07/25 14:13:59.566
• [3.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 05/07/25 14:13:59.57
  I0507 14:13:59.570051 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 14:13:59.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:13:59.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:13:59.579
  STEP: Counting existing ResourceQuota @ 05/07/25 14:13:59.58
  STEP: Creating a ResourceQuota @ 05/07/25 14:14:04.585
  STEP: Ensuring resource quota status is calculated @ 05/07/25 14:14:04.59
  STEP: Creating a ReplicaSet @ 05/07/25 14:14:06.596
  STEP: Ensuring resource quota status captures replicaset creation @ 05/07/25 14:14:06.609
  STEP: Deleting a ReplicaSet @ 05/07/25 14:14:08.616
  STEP: Ensuring resource quota status released usage @ 05/07/25 14:14:08.623
  I0507 14:14:10.629334 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5836" for this suite. @ 05/07/25 14:14:10.632
• [11.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 05/07/25 14:14:10.639
  I0507 14:14:10.639369 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:14:10.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:14:10.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:14:10.654
  STEP: Setting up server cert @ 05/07/25 14:14:10.679
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:14:10.872
  STEP: Deploying the webhook pod @ 05/07/25 14:14:10.875
  STEP: Wait for the deployment to be ready @ 05/07/25 14:14:10.883
  I0507 14:14:10.887170 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:14:12.899
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:14:12.911
  I0507 14:14:13.912152 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/07/25 14:14:13.919
  STEP: verifying the mutating webhook match conditions @ 05/07/25 14:14:13.927
  STEP: updating the mutating webhook match conditions @ 05/07/25 14:14:13.929
  STEP: verifying the mutating webhook match conditions @ 05/07/25 14:14:13.937
  I0507 14:14:13.973108 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7473" for this suite. @ 05/07/25 14:14:13.975
  STEP: Destroying namespace "webhook-markers-8370" for this suite. @ 05/07/25 14:14:13.981
• [3.346 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/07/25 14:14:13.985
  I0507 14:14:13.985635 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 14:14:13.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:14:13.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:14:13.996
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 14:14:14.077
  STEP: create the pod with lifecycle hook @ 05/07/25 14:14:16.101
  STEP: check poststart hook @ 05/07/25 14:14:18.117
  STEP: delete the pod with lifecycle hook @ 05/07/25 14:14:18.124
  I0507 14:14:20.141692 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5960" for this suite. @ 05/07/25 14:14:20.145
• [6.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/07/25 14:14:20.152
  I0507 14:14:20.152616 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 14:14:20.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:14:20.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:14:20.167
  I0507 14:14:22.196199 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4602" for this suite. @ 05/07/25 14:14:22.199
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 05/07/25 14:14:22.205
  I0507 14:14:22.205282 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:14:22.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:14:22.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:14:22.22
  I0507 14:14:22.234643 25 service_accounts.go:647] created pod
  STEP: Saw pod success @ 05/07/25 14:14:26.247
  I0507 14:14:56.248094 25 service_accounts.go:653] polling logs
  I0507 14:14:56.258819 25 service_accounts.go:663] Pod logs: 
  I0507 14:14:22.889874       1 log.go:245] OK: Got token
  I0507 14:14:22.889916       1 log.go:245] validating with in-cluster discovery
  I0507 14:14:22.890043       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0507 14:14:22.890053       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2281:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00027dda0), NotBefore:(*jwt.NumericDate)(0xc00027de90), IssuedAt:(*jwt.NumericDate)(0xc00027ddb0), ID:"d1e00785-b96e-456a-be3f-2f0ac2730a52"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2281", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"3491d7a0-5ad1-4feb-8710-955c24d89d9c"}}}
  I0507 14:14:22.895539       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0507 14:14:22.900719       1 log.go:245] OK: Validated signature on JWT
  I0507 14:14:22.900785       1 log.go:245] OK: Got valid claims from token!
  I0507 14:14:22.900808       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2281:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0005a4a98), NotBefore:(*jwt.NumericDate)(0xc0005a4ac0), IssuedAt:(*jwt.NumericDate)(0xc0005a4aa0), ID:"d1e00785-b96e-456a-be3f-2f0ac2730a52"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2281", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"3491d7a0-5ad1-4feb-8710-955c24d89d9c"}}}

  I0507 14:14:56.258906 25 service_accounts.go:667] completed pod
  I0507 14:14:56.267115 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2281" for this suite. @ 05/07/25 14:14:56.271
• [34.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/07/25 14:14:56.276
  I0507 14:14:56.276967 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 14:14:56.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:14:56.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:14:56.292
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/07/25 14:14:56.296
  STEP: Saw pod success @ 05/07/25 14:15:00.316
  I0507 14:15:00.317652 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-0af222d0-a76c-4331-93c2-3a3d92dbb98c container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:15:00.322
  I0507 14:15:00.332081 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5992" for this suite. @ 05/07/25 14:15:00.337
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/07/25 14:15:00.343
  I0507 14:15:00.343485 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 14:15:00.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:15:00.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:15:00.351
  I0507 14:15:02.391406 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5192" for this suite. @ 05/07/25 14:15:02.394
• [2.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 05/07/25 14:15:02.398
  I0507 14:15:02.398593 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 14:15:02.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:15:02.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:15:02.411
  I0507 14:15:02.425801 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 14:16:02.433029 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/07/25 14:16:02.436
  I0507 14:16:02.436106 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/07/25 14:16:02.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:02.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:02.449
  STEP: Finding an available node @ 05/07/25 14:16:02.453
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/07/25 14:16:02.453
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/07/25 14:16:04.473
  I0507 14:16:04.482191 25 preemption.go:709] found a healthy node: k8sconformance-m02
  STEP: Adding a custom resource @ 05/07/25 14:16:04.485
  I0507 14:16:10.544403 25 preemption.go:828] pods created so far: [1 1 1]
  I0507 14:16:10.544444 25 preemption.go:829] length of pods created so far: 3
  I0507 14:16:14.556604 25 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 05/07/25 14:16:21.557
  STEP: Removing a custom resource @ 05/07/25 14:16:21.605
  STEP: Removing a custom resource @ 05/07/25 14:16:21.613
  I0507 14:16:21.623206 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1198" for this suite. @ 05/07/25 14:16:21.626
  I0507 14:16:21.632786 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9446" for this suite. @ 05/07/25 14:16:21.729
• [79.337 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/07/25 14:16:21.735
  I0507 14:16:21.735855 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 14:16:21.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:21.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:21.752
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/07/25 14:16:21.761
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/07/25 14:16:36.838
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/07/25 14:16:36.841
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/07/25 14:16:36.845
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/07/25 14:16:36.845
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/07/25 14:16:36.865
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/07/25 14:16:39.883
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/07/25 14:16:40.893
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/07/25 14:16:40.897
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/07/25 14:16:40.898
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/07/25 14:16:40.918
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/07/25 14:16:41.926
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/07/25 14:16:43.942
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/07/25 14:16:43.947
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/07/25 14:16:43.947
  I0507 14:16:43.969151 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2841" for this suite. @ 05/07/25 14:16:43.972
• [22.242 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/07/25 14:16:43.977
  I0507 14:16:43.977843 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:16:43.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:43.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:43.991
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:16:43.994
  STEP: Saw pod success @ 05/07/25 14:16:46.01
  I0507 14:16:46.013676 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-84ca2556-6735-44ab-a68b-2adcee02fa71 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:16:46.026
  I0507 14:16:46.040715 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-193" for this suite. @ 05/07/25 14:16:46.043
• [2.071 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 05/07/25 14:16:46.048
  I0507 14:16:46.048588 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-webhook @ 05/07/25 14:16:46.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:46.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:46.061
  STEP: Setting up server cert @ 05/07/25 14:16:46.064
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/07/25 14:16:46.191
  STEP: Deploying the custom resource conversion webhook pod @ 05/07/25 14:16:46.193
  STEP: Wait for the deployment to be ready @ 05/07/25 14:16:46.2
  I0507 14:16:46.205382 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:16:48.217
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:16:48.229
  I0507 14:16:49.229703 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0507 14:16:49.238131 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Creating a v1 custom resource @ 05/07/25 14:16:51.799
  STEP: Create a v2 custom resource @ 05/07/25 14:16:51.814
  STEP: List CRs in v1 @ 05/07/25 14:16:51.849
  STEP: List CRs in v2 @ 05/07/25 14:16:51.852
  I0507 14:16:52.400904 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7530" for this suite. @ 05/07/25 14:16:52.403
• [6.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 05/07/25 14:16:52.411
  I0507 14:16:52.411186 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename csinodes @ 05/07/25 14:16:52.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:52.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:52.425
  STEP: Creating initial csiNode "e2e-csinode-5xwf9" @ 05/07/25 14:16:52.429
  STEP: Getting initial csiNode "e2e-csinode-5xwf9" @ 05/07/25 14:16:52.432
  STEP: Patching initial csiNode: "e2e-csinode-5xwf9" @ 05/07/25 14:16:52.433
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-5xwf9=patched" @ 05/07/25 14:16:52.436
  STEP: Delete initial csiNode: "e2e-csinode-5xwf9" @ 05/07/25 14:16:52.437
  STEP: Confirm deletion of csiNode "e2e-csinode-5xwf9" @ 05/07/25 14:16:52.44
  STEP: Creating replacement csiNode "e2e-csinode-nbm2t" @ 05/07/25 14:16:52.441
  STEP: Getting replacement csiNode "e2e-csinode-nbm2t" @ 05/07/25 14:16:52.444
  STEP: Updating replacement csiNode "e2e-csinode-nbm2t" @ 05/07/25 14:16:52.445
  STEP: DeleteCollection of CSINodes with "e2e-csinode-nbm2t=updated" label @ 05/07/25 14:16:52.45
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-nbm2t=updated" @ 05/07/25 14:16:52.453
  I0507 14:16:52.455385 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-7347" for this suite. @ 05/07/25 14:16:52.504
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/07/25 14:16:52.508
  I0507 14:16:52.508572 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename events @ 05/07/25 14:16:52.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:52.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:52.519
  STEP: Create set of events @ 05/07/25 14:16:52.52
  I0507 14:16:52.523721 25 core_events.go:198] created test-event-1
  I0507 14:16:52.526540 25 core_events.go:198] created test-event-2
  I0507 14:16:52.529577 25 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/07/25 14:16:52.529
  STEP: delete collection of events @ 05/07/25 14:16:52.53
  I0507 14:16:52.530999 25 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/07/25 14:16:52.542
  I0507 14:16:52.542034 25 core_events.go:230] requesting list of events to confirm quantity
  I0507 14:16:52.543455 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1221" for this suite. @ 05/07/25 14:16:52.606
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 05/07/25 14:16:52.611
  I0507 14:16:52.611864 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl-logs @ 05/07/25 14:16:52.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:52.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:52.625
  STEP: creating a pod @ 05/07/25 14:16:52.628
  I0507 14:16:52.628402 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0507 14:16:52.690009 25 builder.go:146] stderr: ""
  I0507 14:16:52.690060 25 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/07/25 14:16:52.69
  I0507 14:16:52.690195 25 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0507 14:16:54.699492 25 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/07/25 14:16:54.699
  I0507 14:16:54.699729 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 logs logs-generator logs-generator'
  I0507 14:16:54.743935 25 builder.go:146] stderr: ""
  I0507 14:16:54.743978 25 builder.go:147] stdout: "I0507 14:16:53.329839       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/tgzw 242\nI0507 14:16:53.530180       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/pbw 456\nI0507 14:16:53.729872       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/cjl 405\nI0507 14:16:53.930361       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/4zc 257\nI0507 14:16:54.130743       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/dqd 494\nI0507 14:16:54.330188       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/kmx2 553\nI0507 14:16:54.530746       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/q6rd 406\nI0507 14:16:54.729970       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/n7r 588\n"
  STEP: limiting log lines @ 05/07/25 14:16:54.744
  I0507 14:16:54.744062 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 logs logs-generator logs-generator --tail=1'
  I0507 14:16:54.786910 25 builder.go:146] stderr: ""
  I0507 14:16:54.786949 25 builder.go:147] stdout: "I0507 14:16:54.729970       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/n7r 588\n"
  I0507 14:16:54.786961 25 logs.go:180] got output "I0507 14:16:54.729970       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/n7r 588\n"
  STEP: limiting log bytes @ 05/07/25 14:16:54.786
  I0507 14:16:54.787026 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 logs logs-generator logs-generator --limit-bytes=1'
  I0507 14:16:54.832966 25 builder.go:146] stderr: ""
  I0507 14:16:54.832999 25 builder.go:147] stdout: "I"
  I0507 14:16:54.833010 25 logs.go:186] got output "I"
  STEP: exposing timestamps @ 05/07/25 14:16:54.833
  I0507 14:16:54.833086 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 logs logs-generator logs-generator --tail=1 --timestamps'
  I0507 14:16:54.879751 25 builder.go:146] stderr: ""
  I0507 14:16:54.879785 25 builder.go:147] stdout: "2025-05-07T14:16:54.730071016Z I0507 14:16:54.729970       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/n7r 588\n"
  I0507 14:16:54.879796 25 logs.go:192] got output "2025-05-07T14:16:54.730071016Z I0507 14:16:54.729970       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/n7r 588\n"
  STEP: restricting to a time range @ 05/07/25 14:16:54.879
  I0507 14:16:57.381618 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 logs logs-generator logs-generator --since=1s'
  I0507 14:16:57.425575 25 builder.go:146] stderr: ""
  I0507 14:16:57.425605 25 builder.go:147] stdout: "I0507 14:16:56.530753       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/8ptk 463\nI0507 14:16:56.730160       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/h2cb 569\nI0507 14:16:56.930714       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/wd7 321\nI0507 14:16:57.130088       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/mpp 415\nI0507 14:16:57.330690       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/cc7 476\n"
  I0507 14:16:57.425635 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 logs logs-generator logs-generator --since=24h'
  I0507 14:16:57.478170 25 builder.go:146] stderr: ""
  I0507 14:16:57.478234 25 builder.go:147] stdout: "I0507 14:16:53.329839       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/tgzw 242\nI0507 14:16:53.530180       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/pbw 456\nI0507 14:16:53.729872       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/cjl 405\nI0507 14:16:53.930361       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/4zc 257\nI0507 14:16:54.130743       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/dqd 494\nI0507 14:16:54.330188       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/kmx2 553\nI0507 14:16:54.530746       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/q6rd 406\nI0507 14:16:54.729970       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/n7r 588\nI0507 14:16:54.930444       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/7798 500\nI0507 14:16:55.129924       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/794 282\nI0507 14:16:55.330590       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/qcp 255\nI0507 14:16:55.530094       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/kh5 345\nI0507 14:16:55.730654       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/c7t9 219\nI0507 14:16:55.929971       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/lgnh 333\nI0507 14:16:56.130633       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/t7x5 583\nI0507 14:16:56.330043       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/dz6q 534\nI0507 14:16:56.530753       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/8ptk 463\nI0507 14:16:56.730160       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/h2cb 569\nI0507 14:16:56.930714       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/wd7 321\nI0507 14:16:57.130088       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/mpp 415\nI0507 14:16:57.330690       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/cc7 476\n"
  I0507 14:16:57.478317 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-logs-6426 delete pod logs-generator'
  I0507 14:16:58.140074 25 builder.go:146] stderr: ""
  I0507 14:16:58.140137 25 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0507 14:16:58.140289 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6426" for this suite. @ 05/07/25 14:16:58.144
• [5.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/07/25 14:16:58.152
  I0507 14:16:58.152197 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 14:16:58.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:16:58.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:16:58.161
  I0507 14:17:02.190145 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-780" for this suite. @ 05/07/25 14:17:02.193
• [4.049 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/07/25 14:17:02.201
  I0507 14:17:02.201254 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 14:17:02.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:02.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:02.214
  STEP: create the deployment @ 05/07/25 14:17:02.217
  W0507 14:17:02.223794      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/07/25 14:17:02.223
  STEP: delete the deployment @ 05/07/25 14:17:02.729
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/07/25 14:17:02.734
  STEP: Gathering metrics @ 05/07/25 14:17:03.367
  I0507 14:17:03.460004 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 14:17:03.460115 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-972" for this suite. @ 05/07/25 14:17:03.462
• [1.265 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/07/25 14:17:03.466
  I0507 14:17:03.466314 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:17:03.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:03.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:03.473
  STEP: creating pod @ 05/07/25 14:17:03.475
  I0507 14:17:05.487177 25 pods.go:83] Pod pod-hostip-c6a3bff5-a1e3-4564-aad7-7ced473bd153 has hostIP: 192.168.49.3
  I0507 14:17:05.487288 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5193" for this suite. @ 05/07/25 14:17:05.488
• [2.026 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/07/25 14:17:05.492
  I0507 14:17:05.492122 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/07/25 14:17:05.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:05.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:05.504
  STEP: creating @ 05/07/25 14:17:05.506
  STEP: getting @ 05/07/25 14:17:05.516
  STEP: listing in namespace @ 05/07/25 14:17:05.519
  STEP: patching @ 05/07/25 14:17:05.523
  STEP: deleting @ 05/07/25 14:17:05.54
  I0507 14:17:05.550553 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6873" for this suite. @ 05/07/25 14:17:05.552
• [0.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/07/25 14:17:05.555
  I0507 14:17:05.555735 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename ingressclass @ 05/07/25 14:17:05.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:05.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:05.565
  STEP: getting /apis @ 05/07/25 14:17:05.566
  STEP: getting /apis/networking.k8s.io @ 05/07/25 14:17:05.568
  STEP: getting /apis/networking.k8s.iov1 @ 05/07/25 14:17:05.569
  STEP: creating @ 05/07/25 14:17:05.569
  STEP: getting @ 05/07/25 14:17:05.579
  STEP: listing @ 05/07/25 14:17:05.581
  STEP: watching @ 05/07/25 14:17:05.582
  I0507 14:17:05.582774 25 ingressclass.go:348] starting watch
  STEP: patching @ 05/07/25 14:17:05.583
  STEP: updating @ 05/07/25 14:17:05.586
  I0507 14:17:05.589792 25 ingressclass.go:364] waiting for watch events with expected annotations
  I0507 14:17:05.589832 25 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/07/25 14:17:05.589
  STEP: deleting a collection @ 05/07/25 14:17:05.595
  I0507 14:17:05.610974 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5519" for this suite. @ 05/07/25 14:17:05.653
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/07/25 14:17:05.658
  I0507 14:17:05.658147 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 14:17:05.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:05.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:05.667
  STEP: referencing a single matching pod @ 05/07/25 14:17:07.73
  STEP: referencing matching pods with named port @ 05/07/25 14:17:07.736
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/07/25 14:17:07.742
  STEP: recreating EndpointSlices after they've been deleted @ 05/07/25 14:17:07.746
  I0507 14:17:07.765345 25 endpointslice.go:938] EndpointSlice for Service endpointslice-9581/example-named-port not found
  I0507 14:17:09.772247 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9581" for this suite. @ 05/07/25 14:17:09.775
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 05/07/25 14:17:09.782
  I0507 14:17:09.782362 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:17:09.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:09.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:09.797
  STEP: Creating a pod to test downward api env vars @ 05/07/25 14:17:09.801
  STEP: Saw pod success @ 05/07/25 14:17:13.825
  I0507 14:17:13.827954 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-e3783ded-d824-4510-b896-3d64e2523616 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 14:17:13.835
  I0507 14:17:13.850056 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3992" for this suite. @ 05/07/25 14:17:13.853
• [4.076 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 05/07/25 14:17:13.859
  I0507 14:17:13.859050 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:17:13.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:13.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:13.871
  STEP: Setting up server cert @ 05/07/25 14:17:13.886
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:17:13.968
  STEP: Deploying the webhook pod @ 05/07/25 14:17:13.971
  STEP: Wait for the deployment to be ready @ 05/07/25 14:17:13.977
  I0507 14:17:13.980177 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/07/25 14:17:15.992
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:17:16.005
  I0507 14:17:17.005881 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/07/25 14:17:17.012
  STEP: create a pod that should be denied by the webhook @ 05/07/25 14:17:17.028
  STEP: create a pod that causes the webhook to hang @ 05/07/25 14:17:17.038
  STEP: create a configmap that should be denied by the webhook @ 05/07/25 14:17:27.046
  STEP: create a configmap that should be admitted by the webhook @ 05/07/25 14:17:27.069
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/07/25 14:17:27.077
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/07/25 14:17:27.083
  STEP: create a namespace that bypass the webhook @ 05/07/25 14:17:27.087
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/07/25 14:17:27.095
  I0507 14:17:27.138323 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2317" for this suite. @ 05/07/25 14:17:27.143
  STEP: Destroying namespace "webhook-markers-666" for this suite. @ 05/07/25 14:17:27.147
  STEP: Destroying namespace "exempted-namespace-6541" for this suite. @ 05/07/25 14:17:27.154
• [13.301 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 05/07/25 14:17:27.16
  I0507 14:17:27.160105 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:17:27.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:27.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:27.175
  STEP: Setting up server cert @ 05/07/25 14:17:27.188
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:17:27.379
  STEP: Deploying the webhook pod @ 05/07/25 14:17:27.383
  STEP: Wait for the deployment to be ready @ 05/07/25 14:17:27.39
  I0507 14:17:27.394493 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:17:29.406
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:17:29.42
  I0507 14:17:30.420767 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 14:17:30.428800 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2534-crds.webhook.example.com via the AdmissionRegistration API @ 05/07/25 14:17:30.936
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/07/25 14:17:30.946
  I0507 14:17:33.517401 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1953" for this suite. @ 05/07/25 14:17:33.522
  STEP: Destroying namespace "webhook-markers-7599" for this suite. @ 05/07/25 14:17:33.527
• [6.375 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/07/25 14:17:33.535
  I0507 14:17:33.535792 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 14:17:33.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:17:33.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:17:33.549
  STEP: Creating pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792 @ 05/07/25 14:17:33.552
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 14:17:35.57
  I0507 14:17:35.573819 25 container_probe.go:1749] Initial restart count of pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 is 0
  I0507 14:17:35.576148 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:37.581961 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:39.587789 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:41.593430 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:43.598464 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:45.603548 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:47.610274 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:49.615594 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:51.620934 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:53.626240 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:55.632066 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:57.638883 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:17:59.643209 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:01.649656 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:03.655955 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:05.661586 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:07.667866 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:09.674204 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:11.679765 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:13.686044 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:15.692943 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:17.699695 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:19.705731 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:21.712285 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:23.716894 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:25.721331 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:27.727641 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:29.733219 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:31.737915 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:33.743259 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:35.748668 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:37.755723 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:39.761773 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:41.768079 25 container_probe.go:1759] Get pod test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 in namespace container-probe-792
  I0507 14:18:41.768159 25 container_probe.go:1763] Restart count of pod container-probe-792/test-grpc-e57b96ed-79dd-4233-8b47-b71162422040 is now 1 (1m6.19429008s elapsed)
  STEP: deleting the pod @ 05/07/25 14:18:41.768
  I0507 14:18:41.780422 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-792" for this suite. @ 05/07/25 14:18:41.784
• [68.255 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/07/25 14:18:41.791
  I0507 14:18:41.791521 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:18:41.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:41.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:41.804
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:18:41.806
  STEP: Saw pod success @ 05/07/25 14:18:45.827
  I0507 14:18:45.830155 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-55d8b0e9-6734-4a51-b8fe-39066f4ba5ba container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:18:45.844
  I0507 14:18:45.858853 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-779" for this suite. @ 05/07/25 14:18:45.862
• [4.076 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/07/25 14:18:45.867
  I0507 14:18:45.867398 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:18:45.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:45.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:45.879
  STEP: Creating a pod to test downward api env vars @ 05/07/25 14:18:45.881
  STEP: Saw pod success @ 05/07/25 14:18:49.901
  I0507 14:18:49.903767 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-4003064d-774d-4323-b654-497de2355917 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 14:18:49.911
  I0507 14:18:49.926408 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3058" for this suite. @ 05/07/25 14:18:49.93
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/07/25 14:18:49.936
  I0507 14:18:49.936029 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 14:18:49.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:49.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:49.947
  I0507 14:18:49.949567 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:18:50.967739 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8822" for this suite. @ 05/07/25 14:18:50.971
• [1.039 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/07/25 14:18:50.975
  I0507 14:18:50.975015 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename discovery @ 05/07/25 14:18:50.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:50.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:50.985
  STEP: Setting up server cert @ 05/07/25 14:18:50.989
  STEP: Requesting APIResourceList from "/api/v1" @ 05/07/25 14:18:51.202
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/07/25 14:18:51.203
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/07/25 14:18:51.204
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/07/25 14:18:51.205
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/07/25 14:18:51.205
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/07/25 14:18:51.206
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/07/25 14:18:51.206
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/07/25 14:18:51.207
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/07/25 14:18:51.207
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/07/25 14:18:51.208
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/07/25 14:18:51.208
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/07/25 14:18:51.209
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/07/25 14:18:51.209
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/07/25 14:18:51.21
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/07/25 14:18:51.21
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/07/25 14:18:51.211
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/07/25 14:18:51.211
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/07/25 14:18:51.212
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/07/25 14:18:51.212
  I0507 14:18:51.213449 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6531" for this suite. @ 05/07/25 14:18:51.214
• [0.243 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 05/07/25 14:18:51.218
  I0507 14:18:51.218507 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:18:51.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:51.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:51.225
  STEP: Setting up server cert @ 05/07/25 14:18:51.235
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:18:51.577
  STEP: Deploying the webhook pod @ 05/07/25 14:18:51.58
  STEP: Wait for the deployment to be ready @ 05/07/25 14:18:51.587
  I0507 14:18:51.591462 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:18:53.597
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:18:53.607
  I0507 14:18:54.607810 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/07/25 14:18:54.674
  STEP: Creating a configMap that should be mutated @ 05/07/25 14:18:54.688
  STEP: Deleting the collection of validation webhooks @ 05/07/25 14:18:54.707
  STEP: Creating a configMap that should not be mutated @ 05/07/25 14:18:54.74
  I0507 14:18:54.777265 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7413" for this suite. @ 05/07/25 14:18:54.778
  STEP: Destroying namespace "webhook-markers-9253" for this suite. @ 05/07/25 14:18:54.782
• [3.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/07/25 14:18:54.786
  I0507 14:18:54.786753 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename podtemplate @ 05/07/25 14:18:54.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:54.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:54.796
  I0507 14:18:54.816898 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7008" for this suite. @ 05/07/25 14:18:54.881
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/07/25 14:18:54.887
  I0507 14:18:54.887727 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:18:54.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:54.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:54.899
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:18:54.902
  STEP: Saw pod success @ 05/07/25 14:18:58.923
  I0507 14:18:58.925773 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-e217d1ce-7b11-4142-bb2b-3907c43a19da container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:18:58.934
  I0507 14:18:58.949979 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1561" for this suite. @ 05/07/25 14:18:58.953
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 05/07/25 14:18:58.959
  I0507 14:18:58.959055 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 14:18:58.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:18:58.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:18:58.974
  I0507 14:18:58.987629 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 14:19:58.993816 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/07/25 14:19:58.997
  STEP: Adding a custom resource @ 05/07/25 14:19:58.997
  I0507 14:19:59.018006 25 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0507 14:19:59.026008 25 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/07/25 14:19:59.026
  I0507 14:19:59.043564 25 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0507 14:19:59.050025 25 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/07/25 14:19:59.05
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/07/25 14:20:01.068
  STEP: Removing a custom resource @ 05/07/25 14:20:05.11
  STEP: Removing a custom resource @ 05/07/25 14:20:05.121
  I0507 14:20:05.134015 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6270" for this suite. @ 05/07/25 14:20:05.137
• [66.183 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/07/25 14:20:05.142
  I0507 14:20:05.142626 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 14:20:05.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:05.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:05.156
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 14:20:05.162
  STEP: create the pod with lifecycle hook @ 05/07/25 14:20:07.181
  STEP: check poststart hook @ 05/07/25 14:20:09.197
  STEP: delete the pod with lifecycle hook @ 05/07/25 14:20:09.21
  I0507 14:20:13.233529 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7392" for this suite. @ 05/07/25 14:20:13.237
• [8.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 05/07/25 14:20:13.243
  I0507 14:20:13.243573 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 14:20:13.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:13.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:13.258
  I0507 14:20:13.262050 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  W0507 14:20:13.263096      25 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000cb2100 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0507 14:20:15.809705      25 warnings.go:70] unknown field "alpha"
  W0507 14:20:15.809747      25 warnings.go:70] unknown field "beta"
  W0507 14:20:15.809759      25 warnings.go:70] unknown field "delta"
  W0507 14:20:15.809768      25 warnings.go:70] unknown field "epsilon"
  W0507 14:20:15.809778      25 warnings.go:70] unknown field "gamma"
  I0507 14:20:16.347908 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5271" for this suite. @ 05/07/25 14:20:16.35
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/07/25 14:20:16.357
  I0507 14:20:16.357449 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename init-container @ 05/07/25 14:20:16.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:16.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:16.371
  STEP: creating the pod @ 05/07/25 14:20:16.374
  I0507 14:20:16.375024 25 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0507 14:20:21.056958 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3665" for this suite. @ 05/07/25 14:20:21.06
• [4.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/07/25 14:20:21.066
  I0507 14:20:21.066042 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename proxy @ 05/07/25 14:20:21.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:21.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:21.078
  I0507 14:20:21.081058 25 proxy.go:293] Creating pod...
  I0507 14:20:23.096783 25 proxy.go:317] Creating service...
  I0507 14:20:23.111735 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/DELETE
  I0507 14:20:23.115994 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 14:20:23.116032 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/GET
  I0507 14:20:23.117681 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0507 14:20:23.117735 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/HEAD
  I0507 14:20:23.120573 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0507 14:20:23.120624 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/OPTIONS
  I0507 14:20:23.123371 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 14:20:23.123443 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/PATCH
  I0507 14:20:23.126737 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 14:20:23.126807 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/POST
  I0507 14:20:23.129424 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 14:20:23.129459 25 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/pods/agnhost/proxy/some/path/with/PUT
  I0507 14:20:23.131561 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 14:20:23.131598 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/DELETE
  I0507 14:20:23.133968 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 14:20:23.134006 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/GET
  I0507 14:20:23.136581 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0507 14:20:23.136614 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/HEAD
  I0507 14:20:23.141299 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0507 14:20:23.141334 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/OPTIONS
  I0507 14:20:23.144360 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 14:20:23.144411 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/PATCH
  I0507 14:20:23.147641 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 14:20:23.147681 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/POST
  I0507 14:20:23.150438 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 14:20:23.150474 25 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1216/services/test-service/proxy/some/path/with/PUT
  I0507 14:20:23.153111 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 14:20:23.153249 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1216" for this suite. @ 05/07/25 14:20:23.155
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/07/25 14:20:23.159
  I0507 14:20:23.159893 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 14:20:23.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:23.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:23.171
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/07/25 14:20:23.265
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 14:20:23.271
  I0507 14:20:23.363337 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:20:23.363390 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:20:24.279316 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:20:24.279368 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:20:25.281295 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:20:25.281350 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/07/25 14:20:25.283
  I0507 14:20:25.383624 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:20:25.383684 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:20:26.305183 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:20:26.305233 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/07/25 14:20:26.305
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 14:20:26.309
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8740, will wait for the garbage collector to delete the pods @ 05/07/25 14:20:26.309
  I0507 14:20:26.369230 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.392665ms
  I0507 14:20:26.470080 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.853113ms
  I0507 14:20:28.072607 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:20:28.072635 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 14:20:28.074924 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6515"},"items":null}

  I0507 14:20:28.076570 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6515"},"items":null}

  I0507 14:20:28.083348 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8740" for this suite. @ 05/07/25 14:20:28.085
• [4.930 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/07/25 14:20:28.09
  I0507 14:20:28.090315 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 14:20:28.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:28.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:28.102
  I0507 14:20:28.112410 25 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0507 14:20:33.117230 25 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 14:20:33.117
  I0507 14:20:33.117344 25 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/07/25 14:20:33.222
  I0507 14:20:33.227805 25 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a185ba7-ee68-4afd-af33-40658baf9346",
      ResourceVersion: (string) (len=4) "6572",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224433,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 14:20:33.230670 25 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0507 14:20:33.230701 25 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0507 14:20:33.230954 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99cece08-5b30-4b14-9d98-3c5f0b381eb6",
      ResourceVersion: (string) (len=4) "6574",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3a185ba7-ee68-4afd-af33-40658baf9346",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 61 31 38 35 62 61  |"uid\":\"3a185ba|
              00000040  37 2d 65 65 36 38 2d 34  61 66 64 2d 61 66 33 33  |7-ee68-4afd-af33|
              00000050  2d 34 30 36 35 38 62 61  66 39 33 34 36 5c 22 7d  |-40658baf9346\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:20:33.239873 25 deployment.go:68] Pod "test-cleanup-controller-85tzw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-85tzw",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5df429f5-f136-40b2-944b-344da3d8a268",
      ResourceVersion: (string) (len=4) "6544",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "99cece08-5b30-4b14-9d98-3c5f0b381eb6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  39 39 63 65 63 65 30 38  |uid\":\"99cece08|
              00000080  2d 35 62 33 30 2d 34 62  31 34 2d 39 64 39 38 2d  |-5b30-4b14-9d98-|
              00000090  33 63 35 66 30 62 33 38  31 65 62 36 5c 22 7d 22  |3c5f0b381eb6\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 38  32 5c 22 7d 22 3a 7b 22  |.244.1.82\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tnjcs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tnjcs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882224428,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://ea143899789d4edcefc825a63f4c2ffca51d193d95366f0604b0f85fc12d8a59",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tnjcs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 14:20:33.242586 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1338" for this suite. @ 05/07/25 14:20:33.247
• [5.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/07/25 14:20:33.258
  I0507 14:20:33.258142 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:20:33.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:20:33.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:20:33.266
  STEP: Creating configMap with name configmap-test-upd-5039a6fb-977c-4254-8a98-5f8efcfb84a4 @ 05/07/25 14:20:33.347
  STEP: Creating the pod @ 05/07/25 14:20:33.351
  STEP: Updating configmap configmap-test-upd-5039a6fb-977c-4254-8a98-5f8efcfb84a4 @ 05/07/25 14:20:35.389
  STEP: waiting to observe update in volume @ 05/07/25 14:20:35.397
  I0507 14:22:03.931257 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3886" for this suite. @ 05/07/25 14:22:03.934
• [90.681 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/07/25 14:22:03.939
  I0507 14:22:03.939206 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:22:03.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:22:03.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:22:03.954
  STEP: Creating configMap with name cm-test-opt-del-b92686ec-310d-4364-9a3f-b7d2c7dca59e @ 05/07/25 14:22:04.036
  STEP: Creating configMap with name cm-test-opt-upd-ce3218a9-ebd6-46a6-aa7a-dd553deefac0 @ 05/07/25 14:22:04.041
  STEP: Creating the pod @ 05/07/25 14:22:04.045
  STEP: Deleting configmap cm-test-opt-del-b92686ec-310d-4364-9a3f-b7d2c7dca59e @ 05/07/25 14:22:06.091
  STEP: Updating configmap cm-test-opt-upd-ce3218a9-ebd6-46a6-aa7a-dd553deefac0 @ 05/07/25 14:22:06.098
  STEP: Creating configMap with name cm-test-opt-create-67d3419b-fd9c-45f8-8600-448f6625ecdf @ 05/07/25 14:22:06.103
  STEP: waiting to observe update in volume @ 05/07/25 14:22:06.107
  I0507 14:22:10.150522 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6565" for this suite. @ 05/07/25 14:22:10.153
• [6.222 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 05/07/25 14:22:10.161
  I0507 14:22:10.161095 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:22:10.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:22:10.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:22:10.172
  STEP: Setting up server cert @ 05/07/25 14:22:10.186
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:22:10.381
  STEP: Deploying the webhook pod @ 05/07/25 14:22:10.385
  STEP: Wait for the deployment to be ready @ 05/07/25 14:22:10.391
  I0507 14:22:10.396232 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:22:12.407
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:22:12.42
  I0507 14:22:13.421125 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 14:22:13.429463 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/07/25 14:22:13.939
  STEP: Creating a custom resource that should be denied by the webhook @ 05/07/25 14:22:13.957
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/07/25 14:22:15.978
  STEP: Updating the custom resource with disallowed data should be denied @ 05/07/25 14:22:15.987
  STEP: Deleting the custom resource should be denied @ 05/07/25 14:22:15.995
  STEP: Remove the offending key and value from the custom resource data @ 05/07/25 14:22:16
  STEP: Deleting the updated custom resource should be successful @ 05/07/25 14:22:16.006
  I0507 14:22:16.549669 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5592" for this suite. @ 05/07/25 14:22:16.553
  STEP: Destroying namespace "webhook-markers-9013" for this suite. @ 05/07/25 14:22:16.561
• [6.406 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/07/25 14:22:16.567
  I0507 14:22:16.567398 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:22:16.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:22:16.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:22:16.582
  STEP: Creating secret with name secret-test-map-89d1dfeb-fc09-4dfd-a55d-4c8d7171ae25 @ 05/07/25 14:22:16.585
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:22:16.59
  STEP: Saw pod success @ 05/07/25 14:22:20.613
  I0507 14:22:20.614635 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-8ae0767e-2f5f-4486-baf3-d7612d5a7137 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:22:20.618
  I0507 14:22:20.627402 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9327" for this suite. @ 05/07/25 14:22:20.628
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/07/25 14:22:20.631
  I0507 14:22:20.631909 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 14:22:20.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:22:20.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:22:20.639
  I0507 14:23:20.651432 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7471" for this suite. @ 05/07/25 14:23:20.653
• [60.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/07/25 14:23:20.658
  I0507 14:23:20.658909 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 14:23:20.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:23:20.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:23:20.669
  I0507 14:23:20.671478 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:23:26.866687 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9297" for this suite. @ 05/07/25 14:23:26.87
• [6.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/07/25 14:23:26.879
  I0507 14:23:26.879611 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 14:23:26.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:23:26.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:23:26.892
  I0507 14:23:26.906994 25 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0507 14:23:31.910411 25 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 14:23:31.91
  I0507 14:23:31.910564 25 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0507 14:23:33.916624 25 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0507 14:23:33.925390 25 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0507 14:23:35.932594 25 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0507 14:23:35.938134 25 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0507 14:23:35.942556 25 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0507 14:23:35.951198 25 deployment.go:314] Updating deployment test-rollover-deployment
  I0507 14:23:35.951260 25 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0507 14:23:37.960229 25 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0507 14:23:37.966159 25 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0507 14:23:37.970584 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 14:23:37.970659 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 14:23:39.978987 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 14:23:39.979071 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 14:23:41.979085 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 14:23:41.979169 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 14:23:43.977909 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 14:23:43.978001 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 14:23:45.979917 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 14:23:45.979992 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 23, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 23, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 14:23:47.980477 25 deployment.go:95] 
  I0507 14:23:47.980557 25 deployment.go:974] Ensure that both old replica sets have no replicas
  I0507 14:23:47.987752 25 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1664",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da5392d9-5ebd-493d-97ca-4b944f020b4c",
      ResourceVersion: (string) (len=4) "7121",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 14:23:47.991592 25 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1664",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb4df34a-7146-4486-81eb-6badf6795061",
      ResourceVersion: (string) (len=4) "7111",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224615,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "da5392d9-5ebd-493d-97ca-4b944f020b4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 35 33 39 32  64 39 2d 35 65 62 64 2d  |\"da5392d9-5ebd-|
              00000120  34 39 33 64 2d 39 37 63  61 2d 34 62 39 34 34 66  |493d-97ca-4b944f|
              00000130  30 32 30 62 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |020b4c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:23:47.992565 25 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0507 14:23:47.992883 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1664",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "770e1b80-533d-4f3d-af41-dd85747d9e7d",
      ResourceVersion: (string) (len=4) "7120",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "da5392d9-5ebd-493d-97ca-4b944f020b4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 61 35 33 39 32 64 39  2d 35 65 62 64 2d 34 39  |da5392d9-5ebd-49|
              000000c0  33 64 2d 39 37 63 61 2d  34 62 39 34 34 66 30 32  |3d-97ca-4b944f02|
              000000d0  30 62 34 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |0b4c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:23:47.994131 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1664",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc202c04-dd9a-4e38-8394-4007bc6c4678",
      ResourceVersion: (string) (len=4) "7085",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "da5392d9-5ebd-493d-97ca-4b944f020b4c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 35 33 39 32  64 39 2d 35 65 62 64 2d  |\"da5392d9-5ebd-|
              00000120  34 39 33 64 2d 39 37 63  61 2d 34 62 39 34 34 66  |493d-97ca-4b944f|
              00000130  30 32 30 62 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |020b4c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:23:47.999277 25 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-4bcpj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-4bcpj",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-1664",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e6d6e88-5583-4060-bb64-231eef0c17c9",
      ResourceVersion: (string) (len=4) "7099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224615,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "cb4df34a-7146-4486-81eb-6badf6795061",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  34 64 66 33 34 61 2d 37  |d\":\"cb4df34a-7|
              00000090  31 34 36 2d 34 34 38 36  2d 38 31 65 62 2d 36 62  |146-4486-81eb-6b|
              000000a0  61 64 66 36 37 39 35 30  36 31 5c 22 7d 22 3a 7b  |adf6795061\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 39  30 5c 22 7d 22 3a 7b 22  |.244.1.90\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bdnrz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bdnrz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882224615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882224615,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882224616,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=73) "docker://3abf302d84e556fd215e1e6ca4afade370743cd8ef3711669a381740d41d5202",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bdnrz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 14:23:48.001112 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1664" for this suite. @ 05/07/25 14:23:48.003
• [21.131 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/07/25 14:23:48.01
  I0507 14:23:48.010639 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 14:23:48.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:23:48.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:23:48.024
  STEP: Creating simple DaemonSet "daemon-set" @ 05/07/25 14:23:48.038
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 14:23:48.043
  I0507 14:23:48.140807 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:23:48.140859 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:23:49.054190 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:23:49.054270 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:23:50.052214 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:23:50.052262 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/07/25 14:23:50.054
  I0507 14:23:50.156907 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:23:50.156984 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:23:51.074204 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:23:51.074254 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:23:52.072462 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:23:52.072519 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:23:53.071551 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:23:53.071600 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 14:23:53.074
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4580, will wait for the garbage collector to delete the pods @ 05/07/25 14:23:53.074
  I0507 14:23:53.135861 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.441906ms
  I0507 14:23:53.236858 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.995441ms
  I0507 14:23:54.841943 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:23:54.842014 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 14:23:54.845437 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7219"},"items":null}

  I0507 14:23:54.847816 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7219"},"items":null}

  I0507 14:23:54.855551 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4580" for this suite. @ 05/07/25 14:23:54.858
• [6.852 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/07/25 14:23:54.863
  I0507 14:23:54.863065 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:23:54.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:23:54.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:23:54.876
  I0507 14:23:54.879321 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/07/25 14:23:56.026
  I0507 14:23:56.026114 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-6504 --namespace=crd-publish-openapi-6504 create -f -'
  I0507 14:23:56.079987 25 builder.go:146] stderr: ""
  I0507 14:23:56.080031 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-58-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0507 14:23:56.080080 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-6504 --namespace=crd-publish-openapi-6504 delete e2e-test-crd-publish-openapi-58-crds test-cr'
  I0507 14:23:56.122782 25 builder.go:146] stderr: ""
  I0507 14:23:56.122816 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-58-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0507 14:23:56.122860 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-6504 --namespace=crd-publish-openapi-6504 apply -f -'
  I0507 14:23:56.165789 25 builder.go:146] stderr: ""
  I0507 14:23:56.165828 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-58-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0507 14:23:56.165874 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-6504 --namespace=crd-publish-openapi-6504 delete e2e-test-crd-publish-openapi-58-crds test-cr'
  I0507 14:23:56.206057 25 builder.go:146] stderr: ""
  I0507 14:23:56.206099 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-58-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/07/25 14:23:56.206
  I0507 14:23:56.206168 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-6504 explain e2e-test-crd-publish-openapi-58-crds'
  I0507 14:23:56.246708 25 builder.go:146] stderr: ""
  I0507 14:23:56.246744 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-58-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0507 14:23:57.391843 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6504" for this suite. @ 05/07/25 14:23:57.397
• [2.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 05/07/25 14:23:57.403
  I0507 14:23:57.403223 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 14:23:57.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:23:57.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:23:57.414
  STEP: Creating a test headless service @ 05/07/25 14:23:57.416
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6205.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6205.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6205.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6205.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 195.213.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.213.195_udp@PTR;check="$$(dig +tcp +noall +answer +search 195.213.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.213.195_tcp@PTR;sleep 1; done
   @ 05/07/25 14:23:57.428
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6205.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6205.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6205.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6205.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6205.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6205.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 195.213.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.213.195_udp@PTR;check="$$(dig +tcp +noall +answer +search 195.213.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.213.195_tcp@PTR;sleep 1; done
   @ 05/07/25 14:23:57.428
  STEP: creating a pod to probe DNS @ 05/07/25 14:23:57.428
  STEP: submitting the pod to kubernetes @ 05/07/25 14:23:57.428
  STEP: retrieving the pod @ 05/07/25 14:24:13.482
  STEP: looking for the results for each expected name from probers @ 05/07/25 14:24:13.485
  I0507 14:24:13.525550 25 dns_common.go:546] DNS probes using dns-6205/dns-test-b34e88ce-b3df-40fe-990b-fc52f2a2063f succeeded

  STEP: deleting the pod @ 05/07/25 14:24:13.525
  STEP: deleting the test service @ 05/07/25 14:24:13.538
  STEP: deleting the test headless service @ 05/07/25 14:24:13.555
  I0507 14:24:13.562258 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6205" for this suite. @ 05/07/25 14:24:13.566
• [16.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/07/25 14:24:13.569
  I0507 14:24:13.569797 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:24:13.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:13.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:13.577
  STEP: Creating projection with secret that has name secret-emptykey-test-b8117fb0-3af6-4611-9a00-a7078bd5a1b9 @ 05/07/25 14:24:13.58
  I0507 14:24:13.581250 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5401" for this suite. @ 05/07/25 14:24:13.667
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/07/25 14:24:13.674
  I0507 14:24:13.674413 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 14:24:13.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:13.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:13.687
  I0507 14:24:13.690720 25 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/07/25 14:24:14.702
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/07/25 14:24:14.709
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/07/25 14:24:15.718
  I0507 14:24:15.728096 25 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/07/25 14:24:15.728
  I0507 14:24:16.736976 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7560" for this suite. @ 05/07/25 14:24:16.74
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/07/25 14:24:16.751
  I0507 14:24:16.751045 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:24:16.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:16.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:16.764
  STEP: creating the pod @ 05/07/25 14:24:16.767
  STEP: submitting the pod to kubernetes @ 05/07/25 14:24:16.767
  W0507 14:24:16.772485      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/07/25 14:24:18.781
  STEP: updating the pod @ 05/07/25 14:24:18.79
  I0507 14:24:19.304404 25 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-2e38c5af-44cf-47d9-93f8-28aab8d7f755"
  I0507 14:24:23.322978 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-441" for this suite. @ 05/07/25 14:24:23.326
• [6.580 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 05/07/25 14:24:23.331
  I0507 14:24:23.331542 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename containers @ 05/07/25 14:24:23.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:23.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:23.346
  STEP: Creating a pod to test override command @ 05/07/25 14:24:23.349
  STEP: Saw pod success @ 05/07/25 14:24:27.375
  I0507 14:24:27.378258 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-containers-edf2e735-e8b7-43f2-89f0-f7a4ed24e563 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:24:27.395
  I0507 14:24:27.408731 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6502" for this suite. @ 05/07/25 14:24:27.412
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 05/07/25 14:24:27.417
  I0507 14:24:27.417808 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:24:27.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:27.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:27.43
  I0507 14:24:27.446462 25 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0507 14:24:27.446540 25 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0507 14:24:27.450770 25 service_accounts.go:282] created pod pod-service-account-mountsa
  I0507 14:24:27.450811 25 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0507 14:24:27.456998 25 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0507 14:24:27.457063 25 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0507 14:24:27.464092 25 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0507 14:24:27.464160 25 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0507 14:24:27.475176 25 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0507 14:24:27.475250 25 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0507 14:24:27.484151 25 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0507 14:24:27.484244 25 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0507 14:24:27.492672 25 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0507 14:24:27.492762 25 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0507 14:24:27.500729 25 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0507 14:24:27.500815 25 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0507 14:24:27.507249 25 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0507 14:24:27.507330 25 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0507 14:24:27.507568 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1236" for this suite. @ 05/07/25 14:24:27.512
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/07/25 14:24:27.52
  I0507 14:24:27.520988 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:24:27.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:27.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:27.531
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:24:27.533
  STEP: Saw pod success @ 05/07/25 14:24:31.562
  I0507 14:24:31.565870 25 output.go:207] Trying to get logs from node k8sconformance pod downwardapi-volume-a5e28ec5-5729-48cf-a522-384328eff565 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:24:31.583
  I0507 14:24:31.596142 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2497" for this suite. @ 05/07/25 14:24:31.599
• [4.083 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/07/25 14:24:31.603
  I0507 14:24:31.603732 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename tables @ 05/07/25 14:24:31.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:31.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:31.615
  I0507 14:24:31.619748 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7616" for this suite. @ 05/07/25 14:24:31.701
• [0.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/07/25 14:24:31.707
  I0507 14:24:31.707918 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:24:31.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:31.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:31.72
  STEP: set up a multi version CRD @ 05/07/25 14:24:31.723
  I0507 14:24:31.724279 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: rename a version @ 05/07/25 14:24:34.793
  STEP: check the new version name is served @ 05/07/25 14:24:34.806
  STEP: check the old version name is removed @ 05/07/25 14:24:35.452
  STEP: check the other version is not changed @ 05/07/25 14:24:36.062
  I0507 14:24:38.436910 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3314" for this suite. @ 05/07/25 14:24:38.442
• [6.738 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 05/07/25 14:24:38.446
  I0507 14:24:38.446205 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:24:38.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:38.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:38.453
  STEP: Setting up server cert @ 05/07/25 14:24:38.464
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:24:38.601
  STEP: Deploying the webhook pod @ 05/07/25 14:24:38.604
  STEP: Wait for the deployment to be ready @ 05/07/25 14:24:38.61
  I0507 14:24:38.614905 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:24:40.623
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:24:40.635
  I0507 14:24:41.635610 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 14:24:41.642814 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8223-crds.webhook.example.com via the AdmissionRegistration API @ 05/07/25 14:24:42.155
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/07/25 14:24:42.174
  I0507 14:24:44.765663 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7955" for this suite. @ 05/07/25 14:24:44.77
  STEP: Destroying namespace "webhook-markers-5304" for this suite. @ 05/07/25 14:24:44.778
• [6.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/07/25 14:24:44.785
  I0507 14:24:44.785086 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 14:24:44.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:44.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:44.799
  STEP: create the rc @ 05/07/25 14:24:44.872
  W0507 14:24:44.878613      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/07/25 14:24:50.884
  STEP: wait for the rc to be deleted @ 05/07/25 14:24:50.89
  I0507 14:24:51.905267 25 garbage_collector.go:670] 80 pods remaining
  I0507 14:24:51.905323 25 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0507 14:24:51.905339 25 garbage_collector.go:678] 
  I0507 14:24:52.899012 25 garbage_collector.go:670] 71 pods remaining
  I0507 14:24:52.899038 25 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0507 14:24:52.899045 25 garbage_collector.go:678] 
  I0507 14:24:53.903689 25 garbage_collector.go:670] 60 pods remaining
  I0507 14:24:53.903968 25 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0507 14:24:53.903995 25 garbage_collector.go:678] 
  I0507 14:24:54.900295 25 garbage_collector.go:670] 40 pods remaining
  I0507 14:24:54.900348 25 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0507 14:24:54.900363 25 garbage_collector.go:678] 
  I0507 14:24:55.901659 25 garbage_collector.go:670] 31 pods remaining
  I0507 14:24:55.901691 25 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0507 14:24:55.901699 25 garbage_collector.go:678] 
  I0507 14:24:56.900597 25 garbage_collector.go:670] 20 pods remaining
  I0507 14:24:56.900638 25 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0507 14:24:56.900652 25 garbage_collector.go:678] 
  STEP: Gathering metrics @ 05/07/25 14:24:57.899
  I0507 14:24:57.988521 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 14:24:57.988675 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-651" for this suite. @ 05/07/25 14:24:57.99
• [13.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/07/25 14:24:57.995
  I0507 14:24:57.995314 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/07/25 14:24:57.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:58.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:58.01
  STEP: Creating two CSIDrivers @ 05/07/25 14:24:58.012
  STEP: Getting "inline-driver-a5058b22-1905-45c6-8efc-2f28483a6282" & "inline-driver-204e1735-2cf1-4314-a957-6bdf0d08b31b" @ 05/07/25 14:24:58.024
  STEP: Patching the CSIDriver "inline-driver-204e1735-2cf1-4314-a957-6bdf0d08b31b" @ 05/07/25 14:24:58.027
  STEP: Updating the CSIDriver "inline-driver-204e1735-2cf1-4314-a957-6bdf0d08b31b" @ 05/07/25 14:24:58.031
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-435" @ 05/07/25 14:24:58.037
  STEP: Deleting CSIDriver "inline-driver-a5058b22-1905-45c6-8efc-2f28483a6282" @ 05/07/25 14:24:58.038
  STEP: Confirm deletion of CSIDriver "inline-driver-a5058b22-1905-45c6-8efc-2f28483a6282" @ 05/07/25 14:24:58.042
  STEP: Deleting CSIDriver "inline-driver-204e1735-2cf1-4314-a957-6bdf0d08b31b" via DeleteCollection @ 05/07/25 14:24:58.044
  STEP: Confirm deletion of CSIDriver "inline-driver-204e1735-2cf1-4314-a957-6bdf0d08b31b" @ 05/07/25 14:24:58.048
  I0507 14:24:58.050225 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-435" for this suite. @ 05/07/25 14:24:58.092
• [0.100 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 05/07/25 14:24:58.095
  I0507 14:24:58.095645 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 14:24:58.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:24:58.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:24:58.106
  STEP: Creating a test headless service @ 05/07/25 14:24:58.108
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7108.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-7108.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 05/07/25 14:24:58.112
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7108.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7108.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/07/25 14:24:58.112
  STEP: creating a pod to probe DNS @ 05/07/25 14:24:58.112
  STEP: submitting the pod to kubernetes @ 05/07/25 14:24:58.112
  STEP: retrieving the pod @ 05/07/25 14:25:00.127
  STEP: looking for the results for each expected name from probers @ 05/07/25 14:25:00.13
  I0507 14:25:00.141342 25 dns_common.go:546] DNS probes using dns-7108/dns-test-8670d515-aec9-46f0-8f59-aa14eb8cfbe9 succeeded

  STEP: deleting the pod @ 05/07/25 14:25:00.141
  STEP: deleting the test headless service @ 05/07/25 14:25:00.155
  I0507 14:25:00.170314 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7108" for this suite. @ 05/07/25 14:25:00.175
• [2.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 05/07/25 14:25:00.182
  I0507 14:25:00.182309 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 14:25:00.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:25:00.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:25:00.196
  STEP: Creating simple DaemonSet "daemon-set" @ 05/07/25 14:25:00.287
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 14:25:00.291
  I0507 14:25:00.382018 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:25:00.382078 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:25:01.302037 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:25:01.302086 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:25:02.298616 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:25:02.298663 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/07/25 14:25:02.3
  I0507 14:25:02.303124 25 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/07/25 14:25:02.303
  I0507 14:25:02.309472 25 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/07/25 14:25:02.309
  I0507 14:25:02.310810 25 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0507 14:25:02.310875 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.310919 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.311078 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.311107 25 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-10 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 14:25:02.311121 25 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/07/25 14:25:02.311
  STEP: watching for the daemon set status to be patched @ 05/07/25 14:25:02.316
  I0507 14:25:02.318647 25 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0507 14:25:02.318717 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.318765 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.318941 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.318971 25 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-10 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 14:25:02.319079 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 14:25:02.319118 25 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-10 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0507 14:25:02.319138 25 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 14:25:02.323
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-10, will wait for the garbage collector to delete the pods @ 05/07/25 14:25:02.323
  I0507 14:25:02.383025 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.92896ms
  I0507 14:25:02.483496 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.463482ms
  I0507 14:25:05.088958 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:25:05.089039 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 14:25:05.092357 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9594"},"items":null}

  I0507 14:25:05.094539 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9594"},"items":null}

  I0507 14:25:05.102059 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-10" for this suite. @ 05/07/25 14:25:05.104
• [4.926 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/07/25 14:25:05.109
  I0507 14:25:05.109038 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename events @ 05/07/25 14:25:05.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:25:05.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:25:05.122
  STEP: Create set of events @ 05/07/25 14:25:05.125
  STEP: get a list of Events with a label in the current namespace @ 05/07/25 14:25:05.141
  STEP: delete a list of events @ 05/07/25 14:25:05.144
  I0507 14:25:05.144413 25 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/07/25 14:25:05.16
  I0507 14:25:05.162929 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-289" for this suite. @ 05/07/25 14:25:05.197
• [0.093 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/07/25 14:25:05.202
  I0507 14:25:05.202277 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 14:25:05.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:25:05.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:25:05.216
  I0507 14:25:05.218535 25 replica_set.go:191] Creating ReplicaSet my-hostname-basic-e8b5d2f9-3988-4216-8b16-d6c53a685ac2
  I0507 14:25:05.223831 25 resource.go:87] Pod name my-hostname-basic-e8b5d2f9-3988-4216-8b16-d6c53a685ac2: Found 0 pods out of 1
  I0507 14:25:10.226810 25 resource.go:87] Pod name my-hostname-basic-e8b5d2f9-3988-4216-8b16-d6c53a685ac2: Found 1 pods out of 1
  I0507 14:25:10.226872 25 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-e8b5d2f9-3988-4216-8b16-d6c53a685ac2" is running
  I0507 14:25:10.229480 25 replica_set.go:220] Pod "my-hostname-basic-e8b5d2f9-3988-4216-8b16-d6c53a685ac2-fbhzv" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 14:25:06 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 14:25:05 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 14:25:06 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 14:25:06 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 14:25:05 +0000 UTC Reason: Message:}])
  I0507 14:25:10.229557 25 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/07/25 14:25:10.229
  I0507 14:25:10.233673 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1194" for this suite. @ 05/07/25 14:25:10.235
• [5.036 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/07/25 14:25:10.238
  I0507 14:25:10.238038 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:25:10.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:25:10.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:25:10.247
  STEP: Creating configMap with name configmap-test-volume-06075c4a-b5c0-4469-afcc-dd3674eaa8c1 @ 05/07/25 14:25:10.248
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:25:10.251
  STEP: Saw pod success @ 05/07/25 14:25:14.269
  I0507 14:25:14.272308 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-1a61f8f4-b6b0-4add-850b-e44dc4c0f4b7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:25:14.279
  I0507 14:25:14.293943 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4201" for this suite. @ 05/07/25 14:25:14.297
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/07/25 14:25:14.305
  I0507 14:25:14.305055 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename chunking @ 05/07/25 14:25:14.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:25:14.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:25:14.319
  STEP: creating a large number of resources @ 05/07/25 14:25:14.322
  STEP: retrieving the first page @ 05/07/25 14:25:32.013
  I0507 14:25:32.061690 25 chunking.go:163] Retrieved 40/40 results with rv 10124 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 05/07/25 14:25:32.061
  I0507 14:25:52.069925 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:26:12.067921 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:26:32.070006 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:26:52.069255 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:27:12.069571 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:27:32.069968 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:27:52.069480 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:28:12.069151 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:28:32.067958 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:28:52.068964 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:29:12.070621 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:29:32.070184 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:29:52.069177 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:30:12.070391 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:30:32.069445 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:30:52.068525 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:31:12.069639 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:31:32.070449 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:31:52.069198 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:32:12.068937 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:32:32.070196 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:32:52.071201 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTAxMjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0507 14:33:12.067403 25 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0507 14:33:12.067464 25 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/07/25 14:33:12.067
  STEP: retrieving all remaining pages @ 05/07/25 14:33:12.071
  I0507 14:33:12.075211 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0507 14:33:12.078574 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0507 14:33:12.081974 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0507 14:33:12.085639 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0507 14:33:12.088624 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0507 14:33:12.091737 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0507 14:33:12.095126 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA1MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0507 14:33:12.098877 25 chunking.go:221] Retrieved 40/40 results with rv 10537 and continue 
  I0507 14:33:12.099090 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4732" for this suite. @ 05/07/25 14:33:12.101
• [477.803 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/07/25 14:33:12.107
  I0507 14:33:12.107827 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 14:33:12.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:12.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:12.121
  I0507 14:33:12.124301 25 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0507 14:33:12.128559 25 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0507 14:33:12.134185 25 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0507 14:33:14.142460 25 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0507 14:33:14.144639 25 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0507 14:33:14.154748 25 deployment.go:314] Updating deployment test-recreate-deployment
  I0507 14:33:14.154808 25 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0507 14:33:14.222684 25 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1530a1cc-29fd-477a-87af-bf4fafb11e55",
      ResourceVersion: (string) (len=5) "10586",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225192,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 14:33:14.243890 25 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fe56eb8-3f09-416f-819e-ffbd72a3d3b4",
      ResourceVersion: (string) (len=5) "10583",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1530a1cc-29fd-477a-87af-bf4fafb11e55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 33 30 61 31  63 63 2d 32 39 66 64 2d  |\"1530a1cc-29fd-|
              00000120  34 37 37 61 2d 38 37 61  66 2d 62 66 34 66 61 66  |477a-87af-bf4faf|
              00000130  62 31 31 65 35 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b11e55\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:33:14.244688 25 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0507 14:33:14.244922 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cec6c61-ed35-4e8e-833d-2c88224045b5",
      ResourceVersion: (string) (len=5) "10574",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225192,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "1530a1cc-29fd-477a-87af-bf4fafb11e55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 33 30 61 31  63 63 2d 32 39 66 64 2d  |\"1530a1cc-29fd-|
              00000120  34 37 37 61 2d 38 37 61  66 2d 62 66 34 66 61 66  |477a-87af-bf4faf|
              00000130  62 31 31 65 35 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b11e55\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:33:14.249052 25 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-hg4ql" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-hg4ql",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abc4eb58-370d-4011-bb5a-69507b6f66cd",
      ResourceVersion: (string) (len=5) "10585",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "5fe56eb8-3f09-416f-819e-ffbd72a3d3b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  65 35 36 65 62 38 2d 33  |d\":\"5fe56eb8-3|
              00000090  66 30 39 2d 34 31 36 66  2d 38 31 39 65 2d 66 66  |f09-416f-819e-ff|
              000000a0  62 64 37 32 61 33 64 33  62 34 5c 22 7d 22 3a 7b  |bd72a3d3b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7pk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7pk2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7pk2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 14:33:14.249817 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-637" for this suite. @ 05/07/25 14:33:14.251
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 05/07/25 14:33:14.256
  I0507 14:33:14.256543 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:33:14.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:14.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:14.267
  STEP: creating service endpoint-test2 in namespace services-8578 @ 05/07/25 14:33:14.269
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8578 to expose endpoints map[] @ 05/07/25 14:33:14.277
  I0507 14:33:14.281406 25 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0507 14:33:15.289960 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8578 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8578 @ 05/07/25 14:33:15.29
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8578 to expose endpoints map[pod1:[80]] @ 05/07/25 14:33:17.307
  I0507 14:33:17.316401 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8578 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/07/25 14:33:17.316
  I0507 14:33:17.316487 25 resource.go:361] Creating new exec pod
  I0507 14:33:20.328980 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8578 exec execpod5f85p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0507 14:33:20.448104 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.111.20.216) 80 port [tcp/http] succeeded!\n"
  I0507 14:33:20.448142 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:33:20.448212 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8578 exec execpod5f85p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.20.216 80'
  I0507 14:33:20.548015 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.20.216 80\nConnection to 10.111.20.216 80 port [tcp/http] succeeded!\n"
  I0507 14:33:20.548070 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8578 @ 05/07/25 14:33:20.548
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8578 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/07/25 14:33:22.565
  I0507 14:33:22.576341 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8578 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/07/25 14:33:22.576
  I0507 14:33:23.576684 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8578 exec execpod5f85p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0507 14:33:23.674279 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.111.20.216) 80 port [tcp/http] succeeded!\n"
  I0507 14:33:23.674336 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:33:23.674439 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8578 exec execpod5f85p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.20.216 80'
  I0507 14:33:23.773668 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.20.216 80\nConnection to 10.111.20.216 80 port [tcp/http] succeeded!\n"
  I0507 14:33:23.773729 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8578 @ 05/07/25 14:33:23.773
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8578 to expose endpoints map[pod2:[80]] @ 05/07/25 14:33:23.788
  I0507 14:33:23.801442 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8578 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/07/25 14:33:23.801
  I0507 14:33:24.802108 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8578 exec execpod5f85p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0507 14:33:24.902649 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.111.20.216) 80 port [tcp/http] succeeded!\n"
  I0507 14:33:24.902707 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:33:24.902795 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8578 exec execpod5f85p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.20.216 80'
  I0507 14:33:25.003971 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.20.216 80\nConnection to 10.111.20.216 80 port [tcp/http] succeeded!\n"
  I0507 14:33:25.004047 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8578 @ 05/07/25 14:33:25.004
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8578 to expose endpoints map[] @ 05/07/25 14:33:25.015
  I0507 14:33:26.038349 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-8578 exposes endpoints map[]
  I0507 14:33:26.054643 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8578" for this suite. @ 05/07/25 14:33:26.059
• [11.806 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/07/25 14:33:26.062
  I0507 14:33:26.062417 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:33:26.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:26.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:26.069
  STEP: Create a pod @ 05/07/25 14:33:26.071
  STEP: patching /status @ 05/07/25 14:33:28.083
  I0507 14:33:28.094599 25 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0507 14:33:28.094834 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6381" for this suite. @ 05/07/25 14:33:28.098
• [2.041 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/07/25 14:33:28.104
  I0507 14:33:28.104214 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename subpath @ 05/07/25 14:33:28.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:28.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:28.119
  STEP: Setting up data @ 05/07/25 14:33:28.122
  STEP: Creating pod pod-subpath-test-secret-fd4h @ 05/07/25 14:33:28.131
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 14:33:28.131
  STEP: Saw pod success @ 05/07/25 14:33:52.204
  I0507 14:33:52.207028 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-secret-fd4h container test-container-subpath-secret-fd4h: <nil>
  STEP: delete the pod @ 05/07/25 14:33:52.224
  STEP: Deleting pod pod-subpath-test-secret-fd4h @ 05/07/25 14:33:52.24
  I0507 14:33:52.240423 25 delete.go:62] Deleting pod "pod-subpath-test-secret-fd4h" in namespace "subpath-581"
  I0507 14:33:52.242969 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-581" for this suite. @ 05/07/25 14:33:52.246
• [24.146 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/07/25 14:33:52.25
  I0507 14:33:52.250595 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename conformance-tests @ 05/07/25 14:33:52.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:52.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:52.266
  STEP: Getting node addresses @ 05/07/25 14:33:52.269
  I0507 14:33:52.269618 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0507 14:33:52.348339 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9645" for this suite. @ 05/07/25 14:33:52.352
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/07/25 14:33:52.359
  I0507 14:33:52.359093 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 14:33:52.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:52.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:52.373
  STEP: creating a Deployment @ 05/07/25 14:33:52.38
  I0507 14:33:52.380605 25 deployment.go:507] Creating simple deployment test-deployment-sk27l
  I0507 14:33:52.391447 25 deployment.go:223] deployment "test-deployment-sk27l" doesn't have the required revision set
  STEP: Getting /status @ 05/07/25 14:33:54.404
  I0507 14:33:54.407033 25 deployment.go:532] Deployment test-deployment-sk27l has Conditions: [{Available True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sk27l-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/07/25 14:33:54.407
  I0507 14:33:54.415649 25 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 33, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 33, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 14, 33, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 14, 33, 52, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-sk27l-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/07/25 14:33:54.415
  I0507 14:33:54.418069 25 deployment.go:579] Observed &Deployment event: ADDED
  I0507 14:33:54.418128 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sk27l-6fb4c74686"}
  I0507 14:33:54.418284 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0507 14:33:54.418322 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sk27l-6fb4c74686"}
  I0507 14:33:54.418346 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 14:33:54.418487 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0507 14:33:54.418533 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 14:33:54.418555 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sk27l-6fb4c74686" is progressing.}
  I0507 14:33:54.418691 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0507 14:33:54.418719 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 14:33:54.418741 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sk27l-6fb4c74686" has successfully progressed.}
  I0507 14:33:54.418874 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0507 14:33:54.418902 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 14:33:54.418926 25 deployment.go:575] Observed Deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sk27l-6fb4c74686" has successfully progressed.}
  I0507 14:33:54.418956 25 deployment.go:572] Found Deployment test-deployment-sk27l in namespace deployment-3783 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 14:33:54.418976 25 deployment.go:583] Deployment test-deployment-sk27l has an updated status
  STEP: patching the Statefulset Status @ 05/07/25 14:33:54.419
  I0507 14:33:54.419033 25 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0507 14:33:54.427496 25 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/07/25 14:33:54.427
  I0507 14:33:54.429621 25 deployment.go:616] Observed &Deployment event: ADDED
  I0507 14:33:54.429687 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sk27l-6fb4c74686"}
  I0507 14:33:54.429833 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0507 14:33:54.429865 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sk27l-6fb4c74686"}
  I0507 14:33:54.429885 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 14:33:54.430024 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0507 14:33:54.430061 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 14:33:54.430083 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:52 +0000 UTC 2025-05-07 14:33:52 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sk27l-6fb4c74686" is progressing.}
  I0507 14:33:54.430222 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0507 14:33:54.430251 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 14:33:54.430270 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sk27l-6fb4c74686" has successfully progressed.}
  I0507 14:33:54.430413 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0507 14:33:54.430442 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 14:33:54.430461 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 14:33:53 +0000 UTC 2025-05-07 14:33:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sk27l-6fb4c74686" has successfully progressed.}
  I0507 14:33:54.430480 25 deployment.go:612] Observed deployment test-deployment-sk27l in namespace deployment-3783 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 14:33:54.430626 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0507 14:33:54.430658 25 deployment.go:609] Found deployment test-deployment-sk27l in namespace deployment-3783 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0507 14:33:54.430678 25 deployment.go:620] Deployment test-deployment-sk27l has a patched status
  I0507 14:33:54.435494 25 deployment.go:633] Deployment "test-deployment-sk27l":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-sk27l",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3783",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68288e9f-1d9c-4baf-ac43-a33473601636",
      ResourceVersion: (string) (len=5) "11194",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-sk27l-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 14:33:54.501293 25 deployment.go:40] New ReplicaSet "test-deployment-sk27l-6fb4c74686" of Deployment "test-deployment-sk27l":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-sk27l-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3783",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80ed0309-bfdc-4b59-b5ad-5e72434f8777",
      ResourceVersion: (string) (len=5) "11188",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-sk27l",
          UID: (types.UID) (len=36) "68288e9f-1d9c-4baf-ac43-a33473601636",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 38 32  |k:{\"uid\":\"682|
              00000120  38 38 65 39 66 2d 31 64  39 63 2d 34 62 61 66 2d  |88e9f-1d9c-4baf-|
              00000130  61 63 34 33 2d 61 33 33  34 37 33 36 30 31 36 33  |ac43-a3347360163|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:33:54.506632 25 deployment.go:68] Pod "test-deployment-sk27l-6fb4c74686-r4s58" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-sk27l-6fb4c74686-r4s58",
      GenerateName: (string) (len=33) "test-deployment-sk27l-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-3783",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6932eb3e-7e9b-4e98-a68e-38c1dad39f86",
      ResourceVersion: (string) (len=5) "11187",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-sk27l-6fb4c74686",
          UID: (types.UID) (len=36) "80ed0309-bfdc-4b59-b5ad-5e72434f8777",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 30 65 64 30 33 30  39 2d 62 66 64 63 2d 34  |"80ed0309-bfdc-4|
              000000a0  62 35 39 2d 62 35 61 64  2d 35 65 37 32 34 33 34  |b59-b5ad-5e72434|
              000000b0  66 38 37 37 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |f8777\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  36 30 5c 22 7d 22 3a 7b  |.244.1.160\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2srp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2srp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882225232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882225232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882225232,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://295cba2a2268c8eadde90a27f89414d6ec7a71cb583ada2417c52500cd532823",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x2srp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 14:33:54.508676 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3783" for this suite. @ 05/07/25 14:33:54.512
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/07/25 14:33:54.517
  I0507 14:33:54.517805 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 14:33:54.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:54.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:54.531
  STEP: create the container @ 05/07/25 14:33:54.534
  W0507 14:33:54.543195      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/07/25 14:33:54.543
  STEP: get the container status @ 05/07/25 14:33:56.557
  STEP: the container should be terminated @ 05/07/25 14:33:56.56
  STEP: the termination message should be set @ 05/07/25 14:33:56.56
  I0507 14:33:56.560104 25 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/07/25 14:33:56.56
  I0507 14:33:56.573039 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9190" for this suite. @ 05/07/25 14:33:56.576
• [2.064 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 05/07/25 14:33:56.581
  I0507 14:33:56.581856 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 14:33:56.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:56.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:56.595
  I0507 14:33:56.598606 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 14:33:56.683260 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0507 14:33:56.686184 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0507 14:33:56.690150 25 predicates.go:957] coredns-668d6bf9bc-kg25h from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690183 25 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0507 14:33:56.690199 25 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690211 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0507 14:33:56.690223 25 predicates.go:957] kindnet-rnsjv from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690233 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 14:33:56.690244 25 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690254 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0507 14:33:56.690265 25 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690281 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0507 14:33:56.690292 25 predicates.go:957] kube-proxy-xzmjp from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690301 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 14:33:56.690317 25 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690327 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0507 14:33:56.690337 25 predicates.go:957] storage-provisioner from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.690347 25 predicates.go:959] 	Container storage-provisioner ready: true, restart count 1
  I0507 14:33:56.690358 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-l5ngp from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 14:33:56.690371 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 14:33:56.690379 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0507 14:33:56.690389 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0507 14:33:56.693477 25 predicates.go:957] test-deployment-sk27l-6fb4c74686-r4s58 from deployment-3783 started at 2025-05-07 14:33:52 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.693520 25 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0507 14:33:56.693537 25 predicates.go:957] kindnet-7h4w2 from kube-system started at 2025-05-07 13:58:19 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.693549 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 14:33:56.693561 25 predicates.go:957] kube-proxy-nwnr4 from kube-system started at 2025-05-07 13:58:19 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.693572 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 14:33:56.693583 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-07 13:58:43 +0000 UTC (1 container statuses recorded)
  I0507 14:33:56.693593 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 14:33:56.693604 25 predicates.go:957] sonobuoy-e2e-job-889ff4cea7414d9e from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 14:33:56.693619 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0507 14:33:56.693629 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 14:33:56.693639 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-6fk5k from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 14:33:56.693651 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 14:33:56.693664 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8sconformance @ 05/07/25 14:33:56.705
  STEP: verifying the node has the label node k8sconformance-m02 @ 05/07/25 14:33:56.743
  I0507 14:33:56.791183 25 predicates.go:372] Pod test-deployment-sk27l-6fb4c74686-r4s58 requesting resource cpu=0m on Node k8sconformance-m02
  I0507 14:33:56.791208 25 predicates.go:372] Pod coredns-668d6bf9bc-kg25h requesting resource cpu=100m on Node k8sconformance
  I0507 14:33:56.791217 25 predicates.go:372] Pod etcd-k8sconformance requesting resource cpu=100m on Node k8sconformance
  I0507 14:33:56.791224 25 predicates.go:372] Pod kindnet-7h4w2 requesting resource cpu=100m on Node k8sconformance-m02
  I0507 14:33:56.791230 25 predicates.go:372] Pod kindnet-rnsjv requesting resource cpu=100m on Node k8sconformance
  I0507 14:33:56.791236 25 predicates.go:372] Pod kube-apiserver-k8sconformance requesting resource cpu=250m on Node k8sconformance
  I0507 14:33:56.791242 25 predicates.go:372] Pod kube-controller-manager-k8sconformance requesting resource cpu=200m on Node k8sconformance
  I0507 14:33:56.791247 25 predicates.go:372] Pod kube-proxy-nwnr4 requesting resource cpu=0m on Node k8sconformance-m02
  I0507 14:33:56.791262 25 predicates.go:372] Pod kube-proxy-xzmjp requesting resource cpu=0m on Node k8sconformance
  I0507 14:33:56.791268 25 predicates.go:372] Pod kube-scheduler-k8sconformance requesting resource cpu=100m on Node k8sconformance
  I0507 14:33:56.791274 25 predicates.go:372] Pod storage-provisioner requesting resource cpu=0m on Node k8sconformance
  I0507 14:33:56.791280 25 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node k8sconformance-m02
  I0507 14:33:56.791285 25 predicates.go:372] Pod sonobuoy-e2e-job-889ff4cea7414d9e requesting resource cpu=0m on Node k8sconformance-m02
  I0507 14:33:56.791293 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-667f212615894918-6fk5k requesting resource cpu=0m on Node k8sconformance-m02
  I0507 14:33:56.791304 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-667f212615894918-l5ngp requesting resource cpu=0m on Node k8sconformance
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/07/25 14:33:56.791
  I0507 14:33:56.791334 25 predicates.go:382] Creating a pod which consumes cpu=7805m on Node k8sconformance
  I0507 14:33:56.796764 25 predicates.go:382] Creating a pod which consumes cpu=8330m on Node k8sconformance-m02
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/07/25 14:33:58.815
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c.183d454f2a2fecc0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8022/filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c to k8sconformance] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c.183d454f4879d68d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c.183d454f4af6a2df], Reason = [Created], Message = [Created container: filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c.183d454f5046f01f], Reason = [Started], Message = [Started container filler-pod-1fa893e2-7c2b-477f-bba8-2423f9a0012c] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e.183d454f2aacc356], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8022/filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e to k8sconformance-m02] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e.183d454f48784801], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e.183d454f4b0c570e], Reason = [Created], Message = [Created container: filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e.183d454f4feb85aa], Reason = [Started], Message = [Started container filler-pod-2bf9ce57-fd11-45fa-89b1-f5537976803e] @ 05/07/25 14:33:58.818
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183d454fa2e35dbe], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/07/25 14:33:58.831
  STEP: removing the label node off the node k8sconformance @ 05/07/25 14:33:59.848
  STEP: verifying the node doesn't have the label node @ 05/07/25 14:33:59.861
  STEP: removing the label node off the node k8sconformance-m02 @ 05/07/25 14:33:59.865
  STEP: verifying the node doesn't have the label node @ 05/07/25 14:33:59.875
  I0507 14:33:59.880973 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8022" for this suite. @ 05/07/25 14:33:59.886
• [3.314 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/07/25 14:33:59.896
  I0507 14:33:59.896347 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename events @ 05/07/25 14:33:59.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:59.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:59.916
  STEP: creating a test event @ 05/07/25 14:33:59.92
  STEP: listing all events in all namespaces @ 05/07/25 14:33:59.924
  STEP: patching the test event @ 05/07/25 14:33:59.93
  STEP: fetching the test event @ 05/07/25 14:33:59.935
  STEP: updating the test event @ 05/07/25 14:33:59.937
  STEP: getting the test event @ 05/07/25 14:33:59.943
  STEP: deleting the test event @ 05/07/25 14:33:59.945
  STEP: listing all events in all namespaces @ 05/07/25 14:33:59.947
  I0507 14:33:59.950076 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8611" for this suite. @ 05/07/25 14:33:59.951
• [0.060 seconds]
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/07/25 14:33:59.955
  I0507 14:33:59.955755 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename lease-test @ 05/07/25 14:33:59.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:33:59.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:33:59.963
  I0507 14:33:59.990285 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5717" for this suite. @ 05/07/25 14:34:00.054
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/07/25 14:34:00.062
  I0507 14:34:00.062464 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:34:00.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:00.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:00.076
  STEP: Creating configMap with name configmap-projected-all-test-volume-29d54513-6843-41a3-a97d-23d60bae9956 @ 05/07/25 14:34:00.079
  STEP: Creating secret with name secret-projected-all-test-volume-07d85c70-8f24-48e8-9184-13fe61fdfa5a @ 05/07/25 14:34:00.085
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/07/25 14:34:00.089
  W0507 14:34:00.097085      25 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 05/07/25 14:34:04.111
  I0507 14:34:04.114375 25 output.go:207] Trying to get logs from node k8sconformance pod projected-volume-81bcfd3f-afcf-411e-8474-0056fac5225a container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:34:04.128
  I0507 14:34:04.140354 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6802" for this suite. @ 05/07/25 14:34:04.143
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/07/25 14:34:04.149
  I0507 14:34:04.149938 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:34:04.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:04.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:04.163
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:34:04.166
  STEP: Saw pod success @ 05/07/25 14:34:08.192
  I0507 14:34:08.195756 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-155e3384-24bf-43a4-9002-1e7f7f1b1238 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:34:08.202
  I0507 14:34:08.218620 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9055" for this suite. @ 05/07/25 14:34:08.222
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 05/07/25 14:34:08.23
  I0507 14:34:08.230853 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 14:34:08.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:08.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:08.243
  STEP: Creating namespace "e2e-ns-p7hbv" @ 05/07/25 14:34:08.246
  I0507 14:34:08.254029 25 namespace.go:412] Namespace "e2e-ns-p7hbv-4570" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-p7hbv-4570" @ 05/07/25 14:34:08.254
  I0507 14:34:08.260670 25 namespace.go:435] Namespace "e2e-ns-p7hbv-4570" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-p7hbv-4570" @ 05/07/25 14:34:08.26
  I0507 14:34:08.267204 25 namespace.go:464] Namespace "e2e-ns-p7hbv-4570" has []v1.FinalizerName{"kubernetes"}
  I0507 14:34:08.267449 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9610" for this suite. @ 05/07/25 14:34:08.324
  STEP: Destroying namespace "e2e-ns-p7hbv-4570" for this suite. @ 05/07/25 14:34:08.333
• [0.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/07/25 14:34:08.339
  I0507 14:34:08.339067 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:34:08.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:08.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:08.353
  STEP: Creating configMap with name configmap-test-volume-map-52b133b5-7b45-4c7a-abd6-61e56d999b29 @ 05/07/25 14:34:08.357
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:34:08.361
  STEP: Saw pod success @ 05/07/25 14:34:12.385
  I0507 14:34:12.388059 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-66f71eb8-9361-4e05-8d4d-c90109b1b605 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:34:12.395
  I0507 14:34:12.408497 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8010" for this suite. @ 05/07/25 14:34:12.412
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/07/25 14:34:12.417
  I0507 14:34:12.418026 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:34:12.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:12.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:12.433
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:34:12.436
  STEP: Saw pod success @ 05/07/25 14:34:16.457
  I0507 14:34:16.460833 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-dbbf523f-b6aa-4e82-a1eb-648aebaff97b container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:34:16.467
  I0507 14:34:16.486636 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9521" for this suite. @ 05/07/25 14:34:16.49
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/07/25 14:34:16.496
  I0507 14:34:16.496927 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/07/25 14:34:16.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:16.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:16.51
  STEP: mirroring a new custom Endpoint @ 05/07/25 14:34:16.524
  I0507 14:34:16.533743 25 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/07/25 14:34:18.541
  STEP: mirroring deletion of a custom Endpoint @ 05/07/25 14:34:18.552
  I0507 14:34:18.562866 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5896" for this suite. @ 05/07/25 14:34:18.566
• [2.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/07/25 14:34:18.572
  I0507 14:34:18.572171 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 14:34:18.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:18.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:18.583
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/07/25 14:34:18.585
  STEP: Saw pod success @ 05/07/25 14:34:22.607
  I0507 14:34:22.610674 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-9419edc1-24f7-48ea-9cae-e8fec5a08b77 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:34:22.617
  I0507 14:34:22.633375 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7783" for this suite. @ 05/07/25 14:34:22.637
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/07/25 14:34:22.643
  I0507 14:34:22.643156 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 14:34:22.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:22.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:22.656
  I0507 14:34:24.677753 25 delete.go:62] Deleting pod "var-expansion-eaa8cd34-71a6-40c8-8960-0f552ed17260" in namespace "var-expansion-7306"
  I0507 14:34:24.685750 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-eaa8cd34-71a6-40c8-8960-0f552ed17260" to be fully deleted
  I0507 14:34:26.694136 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7306" for this suite. @ 05/07/25 14:34:26.697
• [4.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 05/07/25 14:34:26.703
  I0507 14:34:26.704007 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename security-context @ 05/07/25 14:34:26.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:26.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:26.717
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/07/25 14:34:26.72
  STEP: Saw pod success @ 05/07/25 14:34:30.742
  I0507 14:34:30.745921 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod security-context-c59db93f-010f-4bb4-bef6-1de043579462 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:34:30.752
  I0507 14:34:30.767020 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7005" for this suite. @ 05/07/25 14:34:30.77
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 05/07/25 14:34:30.779
  I0507 14:34:30.779436 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename disruption @ 05/07/25 14:34:30.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:30.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:30.789
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:34:30.798
  STEP: Updating PodDisruptionBudget status @ 05/07/25 14:34:32.804
  STEP: Waiting for all pods to be running @ 05/07/25 14:34:32.813
  I0507 14:34:32.817241 25 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 05/07/25 14:34:34.82
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:34:34.835
  STEP: Patching PodDisruptionBudget status @ 05/07/25 14:34:34.842
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:34:34.851
  I0507 14:34:34.854577 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8580" for this suite. @ 05/07/25 14:34:34.857
• [4.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 05/07/25 14:34:34.862
  I0507 14:34:34.862551 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:34:34.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:34.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:34.873
  STEP: creating an Endpoint @ 05/07/25 14:34:34.878
  STEP: waiting for available Endpoint @ 05/07/25 14:34:34.882
  STEP: listing all Endpoints @ 05/07/25 14:34:34.884
  STEP: updating the Endpoint @ 05/07/25 14:34:34.886
  STEP: fetching the Endpoint @ 05/07/25 14:34:34.892
  STEP: patching the Endpoint @ 05/07/25 14:34:34.896
  STEP: fetching the Endpoint @ 05/07/25 14:34:34.902
  STEP: deleting the Endpoint by Collection @ 05/07/25 14:34:34.903
  STEP: waiting for Endpoint deletion @ 05/07/25 14:34:34.907
  STEP: fetching the Endpoint @ 05/07/25 14:34:34.908
  I0507 14:34:34.911515 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8586" for this suite. @ 05/07/25 14:34:34.96
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 05/07/25 14:34:34.967
  I0507 14:34:34.967842 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 14:34:34.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:34.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:34.98
  STEP: Creating a test headless service @ 05/07/25 14:34:34.983
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-9714.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-9714.svc.cluster.local;sleep 1; done
   @ 05/07/25 14:34:34.988
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9714.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9714.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9714.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9714.svc.cluster.local;sleep 1; done
   @ 05/07/25 14:34:34.988
  STEP: creating a pod to probe DNS @ 05/07/25 14:34:34.989
  STEP: submitting the pod to kubernetes @ 05/07/25 14:34:34.989
  STEP: retrieving the pod @ 05/07/25 14:34:37.008
  STEP: looking for the results for each expected name from probers @ 05/07/25 14:34:37.011
  I0507 14:34:37.023878 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9714.svc.cluster.local from pod dns-9714/dns-test-5ec54d01-90b0-4042-8455-27df699d11a7: the server could not find the requested resource (get pods dns-test-5ec54d01-90b0-4042-8455-27df699d11a7)
  I0507 14:34:37.034082 25 dns_common.go:506] Lookups using dns-9714/dns-test-5ec54d01-90b0-4042-8455-27df699d11a7 failed for: [agnhost_tcp@dns-test-service-2.dns-9714.svc.cluster.local]

  I0507 14:34:37.041124 25 dns_common.go:514] Pod client logs for webserver: 
  I0507 14:34:37.047974 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0507 14:34:37.055072 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0507 14:34:42.034276 25 dns_common.go:546] DNS probes using dns-9714/dns-test-5ec54d01-90b0-4042-8455-27df699d11a7 succeeded

  STEP: deleting the pod @ 05/07/25 14:34:42.034
  STEP: deleting the test headless service @ 05/07/25 14:34:42.047
  I0507 14:34:42.061682 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9714" for this suite. @ 05/07/25 14:34:42.068
• [7.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/07/25 14:34:42.075
  I0507 14:34:42.075457 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 14:34:42.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:42.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:42.086
  STEP: Performing setup for networking test in namespace pod-network-test-8407 @ 05/07/25 14:34:42.089
  STEP: creating a selector @ 05/07/25 14:34:42.089
  STEP: Creating the service pods in kubernetes @ 05/07/25 14:34:42.089
  I0507 14:34:42.089782 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/07/25 14:34:54.228
  I0507 14:34:56.247464 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 14:34:56.247545 25 networking.go:42] Breadth first check of 10.244.0.84 on host 192.168.49.2...
  I0507 14:34:56.249912 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.172:9080/dial?request=hostname&protocol=http&host=10.244.0.84&port=8083&tries=1'] Namespace:pod-network-test-8407 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:34:56.249943 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:34:56.250004 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8407/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.84%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 14:34:56.327118 25 utils.go:356] Waiting for responses: map[]
  I0507 14:34:56.327150 25 utils.go:360] reached 10.244.0.84 after 0/1 tries
  I0507 14:34:56.327161 25 networking.go:42] Breadth first check of 10.244.1.171 on host 192.168.49.3...
  I0507 14:34:56.329372 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.172:9080/dial?request=hostname&protocol=http&host=10.244.1.171&port=8083&tries=1'] Namespace:pod-network-test-8407 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:34:56.329394 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:34:56.329433 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8407/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.172%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.171%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 14:34:56.386207 25 utils.go:356] Waiting for responses: map[]
  I0507 14:34:56.386252 25 utils.go:360] reached 10.244.1.171 after 0/1 tries
  I0507 14:34:56.386270 25 networking.go:53] Going to retry 0 out of 2 pods....
  I0507 14:34:56.386411 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8407" for this suite. @ 05/07/25 14:34:56.388
• [14.319 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/07/25 14:34:56.394
  I0507 14:34:56.394851 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 14:34:56.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:56.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:56.406
  I0507 14:34:58.436974 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9664" for this suite. @ 05/07/25 14:34:58.44
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/07/25 14:34:58.447
  I0507 14:34:58.447445 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename apf @ 05/07/25 14:34:58.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:58.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:58.461
  STEP: getting /apis @ 05/07/25 14:34:58.463
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/07/25 14:34:58.466
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/07/25 14:34:58.467
  STEP: creating @ 05/07/25 14:34:58.467
  STEP: getting @ 05/07/25 14:34:58.48
  STEP: listing @ 05/07/25 14:34:58.482
  STEP: watching @ 05/07/25 14:34:58.484
  I0507 14:34:58.484875 25 flowcontrol.go:394] starting watch
  STEP: patching @ 05/07/25 14:34:58.485
  STEP: updating @ 05/07/25 14:34:58.492
  I0507 14:34:58.497562 25 flowcontrol.go:422] waiting for watch events with expected annotations
  I0507 14:34:58.497608 25 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/07/25 14:34:58.497
  STEP: patching /status @ 05/07/25 14:34:58.499
  STEP: updating /status @ 05/07/25 14:34:58.504
  STEP: deleting @ 05/07/25 14:34:58.534
  STEP: deleting a collection @ 05/07/25 14:34:58.543
  I0507 14:34:58.555647 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1930" for this suite. @ 05/07/25 14:34:58.559
• [0.117 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/07/25 14:34:58.564
  I0507 14:34:58.564221 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 14:34:58.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:34:58.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:34:58.579
  STEP: Creating pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463 @ 05/07/25 14:34:58.582
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 14:35:00.598
  I0507 14:35:00.601326 25 container_probe.go:1749] Initial restart count of pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 is 0
  I0507 14:35:00.603600 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:02.609436 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:04.613340 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:06.616216 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:08.621992 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:10.628058 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:12.635945 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:14.641557 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:16.646671 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:18.653582 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:20.657619 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:22.664391 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:24.670883 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:26.674838 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:28.680347 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:30.686636 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:32.694330 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:34.700607 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:36.705096 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:38.710960 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:40.717531 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:42.725530 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:44.730456 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:46.736917 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:48.743815 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:50.750113 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:52.757940 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:54.764147 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:56.768966 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:35:58.772858 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:00.776731 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:02.783273 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:04.786926 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:06.793160 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:08.797709 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:10.803319 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:12.810045 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:14.815373 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:16.821903 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:18.828246 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:20.832740 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:22.839396 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:24.845361 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:26.848851 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:28.854877 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:30.860981 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:32.867481 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:34.873398 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:36.879258 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:38.885602 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:40.890350 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:42.897093 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:44.900376 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:46.905182 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:48.910316 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:50.916258 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:52.922453 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:54.928784 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:56.934250 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:36:58.940883 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:00.946669 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:02.953256 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:04.958856 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:06.965112 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:08.970763 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:10.975069 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:12.981753 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:14.985748 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:16.991092 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:18.995516 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:21.001696 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:23.007213 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:25.009669 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:27.015884 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:29.022675 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:31.025685 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:33.031767 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:35.037790 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:37.041908 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:39.047373 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:41.053627 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:43.060246 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:45.066776 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:47.072664 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:49.078990 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:51.084476 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:53.091323 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:55.096744 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:57.102379 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:37:59.109109 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:01.113327 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:03.119955 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:05.126135 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:07.131926 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:09.137726 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:11.142577 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:13.149169 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:15.155809 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:17.162134 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:19.168655 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:21.173844 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:23.179728 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:25.185489 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:27.190127 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:29.195633 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:31.200810 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:33.206627 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:35.212317 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:37.215438 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:39.219128 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:41.223152 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:43.226542 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:45.231415 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:47.236884 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:49.239419 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:51.242679 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:53.248931 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:55.253153 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:57.259449 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  I0507 14:38:59.264286 25 container_probe.go:1759] Get pod liveness-6a57f162-7f05-499d-b6ca-bc77018548a0 in namespace container-probe-7463
  STEP: deleting the pod @ 05/07/25 14:39:01.267
  I0507 14:39:01.277971 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7463" for this suite. @ 05/07/25 14:39:01.284
• [242.724 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 05/07/25 14:39:01.29
  I0507 14:39:01.290430 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 14:39:01.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:39:01.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:39:01.302
  STEP: Creating service test in namespace statefulset-9083 @ 05/07/25 14:39:01.304
  STEP: Creating a new StatefulSet @ 05/07/25 14:39:01.307
  I0507 14:39:01.314199 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0507 14:39:11.318770 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:39:11.318830 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:39:11.318844 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/07/25 14:39:11.327
  I0507 14:39:11.336262 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 05/07/25 14:39:11.336
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/07/25 14:39:21.345
  STEP: Performing a canary update @ 05/07/25 14:39:21.345
  I0507 14:39:21.356059 25 statefulset.go:2510] Updating stateful set ss2
  I0507 14:39:21.363907 25 wait.go:74] Waiting for Pod statefulset-9083/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/07/25 14:39:31.365
  I0507 14:39:31.406465 25 wait.go:40] Found 2 stateful pods, waiting for 3
  I0507 14:39:41.403678 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:39:41.403739 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:39:41.403760 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/07/25 14:39:41.409
  I0507 14:39:41.420000 25 statefulset.go:2510] Updating stateful set ss2
  I0507 14:39:41.428648 25 wait.go:74] Waiting for Pod statefulset-9083/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0507 14:39:51.442241 25 statefulset.go:2510] Updating stateful set ss2
  I0507 14:39:51.449934 25 wait.go:56] Waiting for StatefulSet statefulset-9083/ss2 to complete update
  I0507 14:39:51.450016 25 wait.go:63] Waiting for Pod statefulset-9083/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0507 14:40:01.448618 25 statefulset.go:138] Deleting all statefulset in ns statefulset-9083
  I0507 14:40:01.451269 25 rest.go:152] Scaling statefulset ss2 to 0
  I0507 14:40:11.467353 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 14:40:11.469979 25 rest.go:90] Deleting statefulset ss2
  I0507 14:40:11.481089 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9083" for this suite. @ 05/07/25 14:40:11.484
• [70.202 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/07/25 14:40:11.492
  I0507 14:40:11.492309 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:40:11.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:11.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:11.503
  STEP: Creating secret with name secret-test-e355d2c5-3659-48e4-a8f7-7ce9931e6dc7 @ 05/07/25 14:40:11.505
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:40:11.509
  STEP: Saw pod success @ 05/07/25 14:40:15.529
  I0507 14:40:15.532340 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-d16fe522-da22-4f06-ad31-839ccfe9c732 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:40:15.55
  I0507 14:40:15.561888 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6176" for this suite. @ 05/07/25 14:40:15.564
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/07/25 14:40:15.569
  I0507 14:40:15.569637 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 14:40:15.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:15.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:15.58
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 14:40:15.667
  STEP: create the pod with lifecycle hook @ 05/07/25 14:40:17.69
  STEP: delete the pod with lifecycle hook @ 05/07/25 14:40:19.707
  STEP: check prestop hook @ 05/07/25 14:40:21.721
  I0507 14:40:21.737818 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6039" for this suite. @ 05/07/25 14:40:21.74
• [6.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 05/07/25 14:40:21.746
  I0507 14:40:21.746916 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename security-context @ 05/07/25 14:40:21.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:21.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:21.76
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/07/25 14:40:21.762
  STEP: Saw pod success @ 05/07/25 14:40:25.781
  I0507 14:40:25.784247 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod security-context-2bc99e85-6c4a-43ac-b295-ee7181246bc4 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:40:25.79
  I0507 14:40:25.804941 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6262" for this suite. @ 05/07/25 14:40:25.808
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/07/25 14:40:25.814
  I0507 14:40:25.814329 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename init-container @ 05/07/25 14:40:25.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:25.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:25.831
  STEP: creating the pod @ 05/07/25 14:40:25.838
  I0507 14:40:25.838200 25 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0507 14:40:29.012625 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1285" for this suite. @ 05/07/25 14:40:29.016
• [3.207 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 05/07/25 14:40:29.021
  I0507 14:40:29.021622 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:40:29.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:29.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:29.036
  STEP: creating service nodeport-test with type=NodePort in namespace services-8171 @ 05/07/25 14:40:29.038
  STEP: creating replication controller nodeport-test in namespace services-8171 @ 05/07/25 14:40:29.051
  I0507 14:40:29.057043      25 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-8171, replica count: 2
  I0507 14:40:32.108168      25 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 14:40:32.108271 25 resource.go:361] Creating new exec pod
  I0507 14:40:35.123745 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8171 exec execpodjmb8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0507 14:40:35.231319 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.100.73.134) 80 port [tcp/http] succeeded!\n"
  I0507 14:40:35.231375 25 builder.go:147] stdout: "nodeport-test-6wjrs"
  I0507 14:40:35.231473 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8171 exec execpodjmb8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.73.134 80'
  I0507 14:40:35.336324 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.73.134 80\nConnection to 10.100.73.134 80 port [tcp/http] succeeded!\n"
  I0507 14:40:35.336388 25 builder.go:147] stdout: "nodeport-test-bpn5c"
  I0507 14:40:35.336522 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8171 exec execpodjmb8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 30298'
  I0507 14:40:35.447330 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 30298\nConnection to 192.168.49.2 30298 port [tcp/*] succeeded!\n"
  I0507 14:40:35.447392 25 builder.go:147] stdout: ""
  I0507 14:40:36.336706 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8171 exec execpodjmb8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 30298'
  I0507 14:40:36.419708 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 30298\nConnection to 192.168.49.2 30298 port [tcp/*] succeeded!\n"
  I0507 14:40:36.419746 25 builder.go:147] stdout: "nodeport-test-6wjrs"
  I0507 14:40:36.419821 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8171 exec execpodjmb8s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 30298'
  I0507 14:40:36.504735 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 30298\nConnection to 192.168.49.3 30298 port [tcp/*] succeeded!\n"
  I0507 14:40:36.504780 25 builder.go:147] stdout: "nodeport-test-6wjrs"
  I0507 14:40:36.504899 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8171" for this suite. @ 05/07/25 14:40:36.506
• [7.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/07/25 14:40:36.513
  I0507 14:40:36.513392 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename ingress @ 05/07/25 14:40:36.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:36.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:36.523
  STEP: getting /apis @ 05/07/25 14:40:36.526
  STEP: getting /apis/networking.k8s.io @ 05/07/25 14:40:36.528
  STEP: getting /apis/networking.k8s.iov1 @ 05/07/25 14:40:36.529
  STEP: creating @ 05/07/25 14:40:36.53
  STEP: getting @ 05/07/25 14:40:36.54
  STEP: listing @ 05/07/25 14:40:36.542
  STEP: watching @ 05/07/25 14:40:36.543
  I0507 14:40:36.544015 25 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/07/25 14:40:36.544
  STEP: cluster-wide watching @ 05/07/25 14:40:36.546
  I0507 14:40:36.546420 25 ingress.go:198] starting watch
  STEP: patching @ 05/07/25 14:40:36.547
  STEP: updating @ 05/07/25 14:40:36.551
  I0507 14:40:36.557516 25 ingress.go:221] waiting for watch events with expected annotations
  I0507 14:40:36.557562 25 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/07/25 14:40:36.557
  STEP: updating /status @ 05/07/25 14:40:36.562
  STEP: get /status @ 05/07/25 14:40:36.569
  STEP: deleting @ 05/07/25 14:40:36.571
  STEP: deleting a collection @ 05/07/25 14:40:36.579
  I0507 14:40:36.589231 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8818" for this suite. @ 05/07/25 14:40:36.609
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 05/07/25 14:40:36.616
  I0507 14:40:36.616593 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename volumeattachment @ 05/07/25 14:40:36.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:36.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:36.631
  STEP: Create VolumeAttachment "va-e2e-fdw98" on node "k8sconformance-m02" @ 05/07/25 14:40:36.71
  STEP: Get VolumeAttachment "va-e2e-fdw98" on node "k8sconformance-m02" @ 05/07/25 14:40:36.715
  STEP: Patch VolumeAttachment "va-e2e-fdw98" on node "k8sconformance-m02" @ 05/07/25 14:40:36.717
  STEP: List VolumeAttachments with "va-e2e-fdw98=patched" label @ 05/07/25 14:40:36.722
  STEP: Delete VolumeAttachment "va-e2e-fdw98" on node "k8sconformance-m02" @ 05/07/25 14:40:36.724
  STEP: Confirm deletion of VolumeAttachment "va-e2e-fdw98" on node "k8sconformance-m02" @ 05/07/25 14:40:36.728
  STEP: Create VolumeAttachment "va-e2e-47zjr" on node "k8sconformance" @ 05/07/25 14:40:36.81
  STEP: Update the VolumeAttachment "va-e2e-47zjr" on node "k8sconformance" with label "va-e2e=updated" @ 05/07/25 14:40:36.818
  STEP: Create VolumeAttachment "va-e2e-g4wll" on node "k8sconformance" @ 05/07/25 14:40:36.911
  STEP: Update the VolumeAttachment "va-e2e-g4wll" on node "k8sconformance" with label "va-e2e=updated" @ 05/07/25 14:40:36.916
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/07/25 14:40:36.923
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/07/25 14:40:36.931
  I0507 14:40:36.934017 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6320" for this suite. @ 05/07/25 14:40:37.011
• [0.401 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/07/25 14:40:37.017
  I0507 14:40:37.017306 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 14:40:37.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:37.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:37.028
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/07/25 14:40:37.031
  I0507 14:40:37.039037 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0507 14:40:42.044222 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 14:40:42.044
  STEP: getting scale subresource @ 05/07/25 14:40:42.044
  STEP: updating a scale subresource @ 05/07/25 14:40:42.046
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/07/25 14:40:42.052
  STEP: Patch a scale subresource @ 05/07/25 14:40:42.055
  I0507 14:40:42.066014 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9375" for this suite. @ 05/07/25 14:40:42.071
• [5.061 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/07/25 14:40:42.078
  I0507 14:40:42.078841 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 14:40:42.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:42.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:42.088
  STEP: create the container @ 05/07/25 14:40:42.09
  W0507 14:40:42.094215      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/07/25 14:40:42.094
  STEP: get the container status @ 05/07/25 14:40:45.107
  STEP: the container should be terminated @ 05/07/25 14:40:45.11
  STEP: the termination message should be set @ 05/07/25 14:40:45.11
  I0507 14:40:45.110683 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/07/25 14:40:45.11
  I0507 14:40:45.126530 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-863" for this suite. @ 05/07/25 14:40:45.129
• [3.056 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 05/07/25 14:40:45.134
  I0507 14:40:45.134910 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:40:45.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:45.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:45.146
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 14:40:45.148
  I0507 14:40:45.148789 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-9127 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0507 14:40:45.195591 25 builder.go:146] stderr: ""
  I0507 14:40:45.195661 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/07/25 14:40:45.195
  I0507 14:40:45.195783 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-9127 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0507 14:40:45.239850 25 builder.go:146] stderr: ""
  I0507 14:40:45.239889 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 14:40:45.239
  I0507 14:40:45.241453 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-9127 delete pods e2e-test-httpd-pod'
  I0507 14:40:47.239779 25 builder.go:146] stderr: ""
  I0507 14:40:47.239819 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0507 14:40:47.239951 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9127" for this suite. @ 05/07/25 14:40:47.241
• [2.110 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/07/25 14:40:47.245
  I0507 14:40:47.245431 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:40:47.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:40:47.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:40:47.254
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-4ccd742a-8be8-45b3-a267-bb7d60261a9d @ 05/07/25 14:40:47.344
  STEP: Creating the pod @ 05/07/25 14:40:47.35
  STEP: Updating configmap projected-configmap-test-upd-4ccd742a-8be8-45b3-a267-bb7d60261a9d @ 05/07/25 14:40:49.377
  STEP: waiting to observe update in volume @ 05/07/25 14:40:49.383
  I0507 14:41:57.782642 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8969" for this suite. @ 05/07/25 14:41:57.786
• [70.547 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/07/25 14:41:57.792
  I0507 14:41:57.792689 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:41:57.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:41:57.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:41:57.811
  STEP: creating the pod @ 05/07/25 14:41:57.814
  STEP: submitting the pod to kubernetes @ 05/07/25 14:41:57.814
  STEP: verifying the pod is in kubernetes @ 05/07/25 14:41:59.833
  STEP: updating the pod @ 05/07/25 14:41:59.836
  I0507 14:42:00.352739 25 pod_client.go:173] Successfully updated pod "pod-update-9f002c36-3e86-45aa-aa9a-ad70ab5bcedc"
  STEP: verifying the updated pod is in kubernetes @ 05/07/25 14:42:00.356
  I0507 14:42:00.358630 25 pods.go:391] Pod update OK
  I0507 14:42:00.358801 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3883" for this suite. @ 05/07/25 14:42:00.361
• [2.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/07/25 14:42:00.367
  I0507 14:42:00.367399 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:42:00.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:00.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:00.379
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:42:00.381
  STEP: Saw pod success @ 05/07/25 14:42:04.405
  I0507 14:42:04.407904 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-c55899c1-e514-4eae-b09c-1a45fc10435a container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:42:04.415
  I0507 14:42:04.431464 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5292" for this suite. @ 05/07/25 14:42:04.437
• [4.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/07/25 14:42:04.441
  I0507 14:42:04.441963 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 14:42:04.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:04.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:04.453
  I0507 14:42:04.488933 25 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"7595ac35-888d-4fce-9e61-618b7bc002f5", Controller:(*bool)(0xc003aa652a), BlockOwnerDeletion:(*bool)(0xc003aa652b)}}
  I0507 14:42:04.497193 25 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"cc25ba0e-bc60-4cff-aef9-519630a2c969", Controller:(*bool)(0xc003aa67be), BlockOwnerDeletion:(*bool)(0xc003aa67bf)}}
  I0507 14:42:04.502440 25 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"41985060-8a4e-4341-bec8-6a6341a8225b", Controller:(*bool)(0xc0049dc436), BlockOwnerDeletion:(*bool)(0xc0049dc437)}}
  I0507 14:42:09.564398 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3609" for this suite. @ 05/07/25 14:42:09.568
• [5.133 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/07/25 14:42:09.575
  I0507 14:42:09.575093 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:42:09.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:09.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:09.59
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/07/25 14:42:09.593
  I0507 14:42:09.593952 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:42:10.779313 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:42:15.408987 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8932" for this suite. @ 05/07/25 14:42:15.415
• [5.846 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 05/07/25 14:42:15.421
  I0507 14:42:15.421466 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:42:15.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:15.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:15.431
  I0507 14:42:15.433777 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-3742 version'
  I0507 14:42:15.468828 25 builder.go:146] stderr: ""
  I0507 14:42:15.468863 25 builder.go:147] stdout: "Client Version: v1.32.4\nKustomize Version: v5.5.0\nServer Version: v1.32.4\n"
  I0507 14:42:15.469044 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3742" for this suite. @ 05/07/25 14:42:15.471
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/07/25 14:42:15.474
  I0507 14:42:15.474513 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 14:42:15.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:15.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:15.486
  I0507 14:42:19.502626 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9400" for this suite. @ 05/07/25 14:42:19.505
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/07/25 14:42:19.513
  I0507 14:42:19.513973 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 14:42:19.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:19.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:19.527
  STEP: getting /apis @ 05/07/25 14:42:19.53
  STEP: getting /apis/discovery.k8s.io @ 05/07/25 14:42:19.534
  STEP: getting /apis/discovery.k8s.iov1 @ 05/07/25 14:42:19.535
  STEP: creating @ 05/07/25 14:42:19.536
  STEP: getting @ 05/07/25 14:42:19.55
  STEP: listing @ 05/07/25 14:42:19.552
  STEP: watching @ 05/07/25 14:42:19.554
  I0507 14:42:19.554981 25 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/07/25 14:42:19.556
  STEP: cluster-wide watching @ 05/07/25 14:42:19.558
  I0507 14:42:19.558384 25 endpointslice.go:459] starting watch
  STEP: patching @ 05/07/25 14:42:19.559
  STEP: updating @ 05/07/25 14:42:19.563
  I0507 14:42:19.570631 25 endpointslice.go:482] waiting for watch events with expected annotations
  I0507 14:42:19.570688 25 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/07/25 14:42:19.57
  STEP: deleting a collection @ 05/07/25 14:42:19.58
  I0507 14:42:19.593111 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9963" for this suite. @ 05/07/25 14:42:19.608
• [0.100 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/07/25 14:42:19.614
  I0507 14:42:19.614032 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 14:42:19.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:19.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:19.628
  STEP: Creating a pod to test env composition @ 05/07/25 14:42:19.631
  STEP: Saw pod success @ 05/07/25 14:42:23.653
  I0507 14:42:23.656720 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-12a943ba-746a-47c9-9a42-8e7dae07ab7c container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 14:42:23.663
  I0507 14:42:23.676917 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3006" for this suite. @ 05/07/25 14:42:23.68
• [4.071 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 05/07/25 14:42:23.685
  I0507 14:42:23.685041 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 14:42:23.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:23.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:23.697
  STEP: apply creating a deployment @ 05/07/25 14:42:23.699
  I0507 14:42:23.707300 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5304" for this suite. @ 05/07/25 14:42:23.782
• [0.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/07/25 14:42:23.788
  I0507 14:42:23.788806 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 14:42:23.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:23.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:23.8
  STEP: create the rc @ 05/07/25 14:42:23.803
  W0507 14:42:23.808674      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/07/25 14:42:28.811
  STEP: wait for all pods to be garbage collected @ 05/07/25 14:42:28.815
  STEP: Gathering metrics @ 05/07/25 14:42:33.824
  I0507 14:42:33.914457 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 14:42:33.914731 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1644" for this suite. @ 05/07/25 14:42:33.918
• [10.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/07/25 14:42:33.923
  I0507 14:42:33.923363 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:42:33.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:33.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:33.931
  STEP: Creating configMap configmap-8438/configmap-test-b7f02dc3-5d58-4a8d-bccc-17cae9c27dbb @ 05/07/25 14:42:33.932
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:42:33.934
  STEP: Saw pod success @ 05/07/25 14:42:37.953
  I0507 14:42:37.956736 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-d2865b7d-9be1-467d-9565-643f48444774 container env-test: <nil>
  STEP: delete the pod @ 05/07/25 14:42:37.964
  I0507 14:42:37.978128 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8438" for this suite. @ 05/07/25 14:42:37.981
• [4.064 seconds]
------------------------------
SSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 05/07/25 14:42:37.987
  I0507 14:42:37.987291 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename fake-node @ 05/07/25 14:42:37.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:37.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:38
  STEP: Create "e2e-fake-node-zrvj5" @ 05/07/25 14:42:38.003
  STEP: Getting "e2e-fake-node-zrvj5" @ 05/07/25 14:42:38.007
  STEP: Patching "e2e-fake-node-zrvj5" @ 05/07/25 14:42:38.009
  STEP: Listing nodes with LabelSelector "e2e-fake-node-zrvj5=patched" @ 05/07/25 14:42:38.024
  STEP: Updating "e2e-fake-node-zrvj5" @ 05/07/25 14:42:38.081
  STEP: Delete "e2e-fake-node-zrvj5" @ 05/07/25 14:42:38.086
  STEP: Confirm deletion of "e2e-fake-node-zrvj5" @ 05/07/25 14:42:38.089
  I0507 14:42:38.092401 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-2146" for this suite. @ 05/07/25 14:42:38.094
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/07/25 14:42:38.097
  I0507 14:42:38.097224 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:42:38.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:38.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:38.105
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:42:38.107
  STEP: Saw pod success @ 05/07/25 14:42:42.129
  I0507 14:42:42.132924 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-531cb60c-28b1-4921-a394-bfe649891a75 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:42:42.139
  I0507 14:42:42.158910 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-969" for this suite. @ 05/07/25 14:42:42.162
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/07/25 14:42:42.169
  I0507 14:42:42.169585 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 14:42:42.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:42.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:42.181
  I0507 14:42:44.213376 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4536" for this suite. @ 05/07/25 14:42:44.217
• [2.052 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/07/25 14:42:44.221
  I0507 14:42:44.221738 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:42:44.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:44.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:44.239
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:42:44.242
  STEP: Saw pod success @ 05/07/25 14:42:48.268
  I0507 14:42:48.271632 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-d092c05e-02c1-4128-85b9-a6a75d758260 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:42:48.278
  I0507 14:42:48.297346 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1422" for this suite. @ 05/07/25 14:42:48.301
• [4.085 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/07/25 14:42:48.306
  I0507 14:42:48.306660 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename controllerrevisions @ 05/07/25 14:42:48.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:48.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:48.318
  STEP: Creating DaemonSet "e2e-qrhkt-daemon-set" @ 05/07/25 14:42:48.409
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 14:42:48.414
  I0507 14:42:48.506728 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qrhkt-daemon-set: 0
  I0507 14:42:48.506777 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:42:49.425693 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qrhkt-daemon-set: 1
  I0507 14:42:49.425734 25 fixtures.go:131] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0507 14:42:50.423043 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qrhkt-daemon-set: 2
  I0507 14:42:50.423082 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-qrhkt-daemon-set
  STEP: Confirm DaemonSet "e2e-qrhkt-daemon-set" successfully created with "daemonset-name=e2e-qrhkt-daemon-set" label @ 05/07/25 14:42:50.425
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-qrhkt-daemon-set" @ 05/07/25 14:42:50.429
  I0507 14:42:50.432298 25 controller_revision.go:162] Located ControllerRevision: "e2e-qrhkt-daemon-set-7d4844c58"
  STEP: Patching ControllerRevision "e2e-qrhkt-daemon-set-7d4844c58" @ 05/07/25 14:42:50.434
  I0507 14:42:50.442755 25 controller_revision.go:173] e2e-qrhkt-daemon-set-7d4844c58 has been patched
  STEP: Create a new ControllerRevision @ 05/07/25 14:42:50.442
  I0507 14:42:50.448159 25 controller_revision.go:191] Created ControllerRevision: e2e-qrhkt-daemon-set-7c98f97b84
  STEP: Confirm that there are two ControllerRevisions @ 05/07/25 14:42:50.448
  I0507 14:42:50.448277 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 14:42:50.451019 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-qrhkt-daemon-set-7d4844c58" @ 05/07/25 14:42:50.451
  STEP: Confirm that there is only one ControllerRevision @ 05/07/25 14:42:50.455
  I0507 14:42:50.455106 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 14:42:50.457787 25 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-qrhkt-daemon-set-7c98f97b84" @ 05/07/25 14:42:50.459
  I0507 14:42:50.467013 25 controller_revision.go:220] e2e-qrhkt-daemon-set-7c98f97b84 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/07/25 14:42:50.467
  W0507 14:42:50.475387      25 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/07/25 14:42:50.475
  I0507 14:42:50.475543 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 14:42:50.498703 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-qrhkt-daemon-set-7c98f97b84=updated" @ 05/07/25 14:42:50.498
  STEP: Confirm that there is only one ControllerRevision @ 05/07/25 14:42:50.507
  I0507 14:42:50.507247 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 14:42:50.533552 25 controller_revision.go:265] Found 1 ControllerRevisions
  I0507 14:42:50.536368 25 controller_revision.go:246] ControllerRevision "e2e-qrhkt-daemon-set-7c6c9c4ddf" has revision 3
  STEP: Deleting DaemonSet "e2e-qrhkt-daemon-set" @ 05/07/25 14:42:50.538
  STEP: deleting DaemonSet.extensions e2e-qrhkt-daemon-set in namespace controllerrevisions-1259, will wait for the garbage collector to delete the pods @ 05/07/25 14:42:50.538
  I0507 14:42:50.596512 25 resources.go:139] Deleting DaemonSet.extensions e2e-qrhkt-daemon-set took: 4.768276ms
  I0507 14:42:50.697278 25 resources.go:163] Terminating DaemonSet.extensions e2e-qrhkt-daemon-set pods took: 100.773361ms
  I0507 14:42:51.702108 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qrhkt-daemon-set: 0
  I0507 14:42:51.702176 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-qrhkt-daemon-set
  I0507 14:42:51.705540 25 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13288"},"items":null}

  I0507 14:42:51.707701 25 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13288"},"items":null}

  I0507 14:42:51.714275 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1259" for this suite. @ 05/07/25 14:42:51.716
• [3.416 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/07/25 14:42:51.723
  I0507 14:42:51.723092 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 14:42:51.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:51.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:51.736
  I0507 14:42:51.761552 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5451" for this suite. @ 05/07/25 14:42:51.815
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/07/25 14:42:51.838
  I0507 14:42:51.838300 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 14:42:51.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:51.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:51.853
  STEP: fetching the /apis discovery document @ 05/07/25 14:42:51.855
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/07/25 14:42:51.856
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/07/25 14:42:51.856
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/07/25 14:42:51.856
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/07/25 14:42:51.856
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/07/25 14:42:51.856
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/07/25 14:42:51.857
  I0507 14:42:51.857287 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2396" for this suite. @ 05/07/25 14:42:51.914
• [0.083 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 05/07/25 14:42:51.921
  I0507 14:42:51.921697 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:42:51.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:51.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:51.933
  STEP: Setting up server cert @ 05/07/25 14:42:51.949
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:42:52.122
  STEP: Deploying the webhook pod @ 05/07/25 14:42:52.126
  STEP: Wait for the deployment to be ready @ 05/07/25 14:42:52.132
  I0507 14:42:52.136235 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:42:54.146
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:42:54.159
  I0507 14:42:55.159637 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/07/25 14:42:55.166
  I0507 14:42:55.198195 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9406" for this suite. @ 05/07/25 14:42:55.2
  STEP: Destroying namespace "webhook-markers-3390" for this suite. @ 05/07/25 14:42:55.204
• [3.288 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 05/07/25 14:42:55.209
  I0507 14:42:55.209242 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 14:42:55.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:55.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:55.218
  I0507 14:42:55.219778 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  W0507 14:42:57.765170      25 warnings.go:70] unknown field "alpha"
  W0507 14:42:57.765205      25 warnings.go:70] unknown field "beta"
  W0507 14:42:57.765215      25 warnings.go:70] unknown field "delta"
  W0507 14:42:57.765223      25 warnings.go:70] unknown field "epsilon"
  W0507 14:42:57.765231      25 warnings.go:70] unknown field "gamma"
  I0507 14:42:58.304522 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9733" for this suite. @ 05/07/25 14:42:58.307
• [3.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/07/25 14:42:58.314
  I0507 14:42:58.314073 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/07/25 14:42:58.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:58.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:58.329
  STEP: getting /apis @ 05/07/25 14:42:58.331
  STEP: getting /apis/storage.k8s.io @ 05/07/25 14:42:58.335
  STEP: getting /apis/storage.k8s.io/v1 @ 05/07/25 14:42:58.336
  STEP: creating @ 05/07/25 14:42:58.337
  STEP: watching @ 05/07/25 14:42:58.351
  I0507 14:42:58.351817 25 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/07/25 14:42:58.359
  STEP: listing in namespace @ 05/07/25 14:42:58.361
  STEP: listing across namespaces @ 05/07/25 14:42:58.364
  STEP: patching @ 05/07/25 14:42:58.366
  STEP: updating @ 05/07/25 14:42:58.37
  I0507 14:42:58.374623 25 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0507 14:42:58.374807 25 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/07/25 14:42:58.374
  STEP: deleting a collection @ 05/07/25 14:42:58.383
  I0507 14:42:58.396619 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9634" for this suite. @ 05/07/25 14:42:58.408
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 05/07/25 14:42:58.413
  I0507 14:42:58.413479 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/07/25 14:42:58.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:42:58.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:42:58.425
  STEP: Setting up the test @ 05/07/25 14:42:58.426
  STEP: Creating hostNetwork=false pod @ 05/07/25 14:42:58.426
  STEP: Creating hostNetwork=true pod @ 05/07/25 14:43:00.441
  STEP: Running the test @ 05/07/25 14:43:02.459
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/07/25 14:43:02.459
  I0507 14:43:02.459231 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.459255 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.459323 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0507 14:43:02.521601 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:02.521665 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.521678 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.521826 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0507 14:43:02.580796 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:02.580883 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.580901 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.580981 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0507 14:43:02.639709 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:02.639822 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.639843 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.639940 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0507 14:43:02.701816 25 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/07/25 14:43:02.701
  I0507 14:43:02.701953 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.701967 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.702050 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0507 14:43:02.767821 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:02.767894 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.767914 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.767993 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0507 14:43:02.840137 25 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/07/25 14:43:02.84
  I0507 14:43:02.840260 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.840278 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.840360 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0507 14:43:02.896458 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:02.896534 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.896554 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.896644 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0507 14:43:02.952231 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:02.952289 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:02.952311 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:02.952392 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0507 14:43:03.018175 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:03.018234 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1956 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:03.018295 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:03.018410 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1956/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0507 14:43:03.076494 25 exec_util.go:108] Exec stderr: ""
  I0507 14:43:03.076712 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1956" for this suite. @ 05/07/25 14:43:03.079
• [4.673 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/07/25 14:43:03.086
  I0507 14:43:03.086639 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 14:43:03.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:03.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:03.1
  I0507 14:43:03.115791 25 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 14:43:03.12
  I0507 14:43:03.215003 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:43:03.215043 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:43:04.130850 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:43:04.130894 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:43:05.130924 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:43:05.130977 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/07/25 14:43:05.141
  STEP: Check that daemon pods images are updated. @ 05/07/25 14:43:05.229
  I0507 14:43:05.233321 25 daemon_set.go:1193] Wrong image for pod: daemon-set-5h9dp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 14:43:06.234573 25 daemon_set.go:1193] Wrong image for pod: daemon-set-5h9dp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 14:43:07.234863 25 daemon_set.go:1193] Wrong image for pod: daemon-set-5h9dp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 14:43:07.234926 25 daemon_set.go:1198] Pod daemon-set-5j9w9 is not available
  I0507 14:43:08.232233 25 daemon_set.go:1198] Pod daemon-set-sqxcc is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/07/25 14:43:08.234
  I0507 14:43:08.237334 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:43:08.237359 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:43:09.243236 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 14:43:09.243275 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  I0507 14:43:10.242557 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 14:43:10.242599 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 14:43:10.254
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5883, will wait for the garbage collector to delete the pods @ 05/07/25 14:43:10.254
  I0507 14:43:10.319040 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.303419ms
  I0507 14:43:10.419479 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.44149ms
  I0507 14:43:11.525287 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 14:43:11.525348 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 14:43:11.528568 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13588"},"items":null}

  I0507 14:43:11.530823 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13588"},"items":null}

  I0507 14:43:11.538209 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5883" for this suite. @ 05/07/25 14:43:11.54
• [8.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 05/07/25 14:43:11.545
  I0507 14:43:11.545807 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 14:43:11.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:11.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:11.56
  STEP: Creating a ResourceQuota with best effort scope @ 05/07/25 14:43:11.563
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 14:43:11.567
  STEP: Creating a ResourceQuota with not best effort scope @ 05/07/25 14:43:13.573
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 14:43:13.577
  STEP: Creating a best-effort pod @ 05/07/25 14:43:15.582
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/07/25 14:43:15.596
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/07/25 14:43:17.602
  STEP: Deleting the pod @ 05/07/25 14:43:19.608
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 14:43:19.621
  STEP: Creating a not best-effort pod @ 05/07/25 14:43:21.625
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/07/25 14:43:21.638
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/07/25 14:43:23.644
  STEP: Deleting the pod @ 05/07/25 14:43:25.649
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 14:43:25.663
  I0507 14:43:27.670027 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3421" for this suite. @ 05/07/25 14:43:27.673
• [16.134 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/07/25 14:43:27.68
  I0507 14:43:27.680078 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 14:43:27.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:27.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:27.69
  STEP: Given a ReplicationController is created @ 05/07/25 14:43:27.692
  STEP: When the matched label of one of its pods change @ 05/07/25 14:43:27.695
  I0507 14:43:27.697129 25 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0507 14:43:32.700613 25 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/07/25 14:43:32.711
  I0507 14:43:33.721308 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2464" for this suite. @ 05/07/25 14:43:33.724
• [6.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/07/25 14:43:33.733
  I0507 14:43:33.733221 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 14:43:33.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:33.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:33.745
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/07/25 14:43:33.748
  STEP: When a replicaset with a matching selector is created @ 05/07/25 14:43:35.77
  STEP: Then the orphan pod is adopted @ 05/07/25 14:43:35.776
  STEP: When the matched label of one of its pods change @ 05/07/25 14:43:36.784
  I0507 14:43:36.787747 25 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/07/25 14:43:36.799
  I0507 14:43:37.807155 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5512" for this suite. @ 05/07/25 14:43:37.81
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/07/25 14:43:37.816
  I0507 14:43:37.816299 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename hostport @ 05/07/25 14:43:37.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:37.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:37.831
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/07/25 14:43:37.912
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.49.3 on the node which pod1 resides and expect scheduled @ 05/07/25 14:43:39.929
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.49.3 but use UDP protocol on the node which pod2 resides @ 05/07/25 14:43:43.95
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/07/25 14:43:47.982
  I0507 14:43:47.982399 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.49.3 http://127.0.0.1:54323/hostname] Namespace:hostport-2157 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:47.982425 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:47.982492 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-2157/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.49.3+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.49.3, port: 54323 @ 05/07/25 14:43:48.044
  I0507 14:43:48.044578 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.49.3:54323/hostname] Namespace:hostport-2157 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:48.044608 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:48.044702 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-2157/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.49.3%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.49.3, port: 54323 UDP @ 05/07/25 14:43:48.098
  I0507 14:43:48.098436 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.49.3 54323] Namespace:hostport-2157 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 14:43:48.098465 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 14:43:48.098564 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-2157/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.49.3+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0507 14:43:53.153426 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2157" for this suite. @ 05/07/25 14:43:53.157
• [15.348 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/07/25 14:43:53.164
  I0507 14:43:53.164455 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:43:53.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:53.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:53.179
  STEP: Creating a pod to test downward api env vars @ 05/07/25 14:43:53.182
  STEP: Saw pod success @ 05/07/25 14:43:57.201
  I0507 14:43:57.204536 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-fd8e6a7c-6fce-4e3d-8984-f22e9e739bbc container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 14:43:57.212
  I0507 14:43:57.228458 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2176" for this suite. @ 05/07/25 14:43:57.231
• [4.073 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/07/25 14:43:57.237
  I0507 14:43:57.237312 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:43:57.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:57.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:57.249
  STEP: reading a file in the container @ 05/07/25 14:43:59.281
  I0507 14:43:59.281677 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6760 pod-service-account-86b4a469-a57c-4c34-b588-07108e71ab46 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/07/25 14:43:59.37
  I0507 14:43:59.370583 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6760 pod-service-account-86b4a469-a57c-4c34-b588-07108e71ab46 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/07/25 14:43:59.469
  I0507 14:43:59.469213 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6760 pod-service-account-86b4a469-a57c-4c34-b588-07108e71ab46 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0507 14:43:59.570862 25 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-6760"
  I0507 14:43:59.573485 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6760" for this suite. @ 05/07/25 14:43:59.577
• [2.345 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 05/07/25 14:43:59.582
  I0507 14:43:59.582298 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:43:59.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:43:59.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:43:59.596
  STEP: Setting up server cert @ 05/07/25 14:43:59.614
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:43:59.773
  STEP: Deploying the webhook pod @ 05/07/25 14:43:59.776
  STEP: Wait for the deployment to be ready @ 05/07/25 14:43:59.783
  I0507 14:43:59.786968 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:44:01.796
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:44:01.813
  I0507 14:44:02.814220 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/07/25 14:44:02.822
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/07/25 14:44:02.845
  STEP: Creating a configMap that should not be mutated @ 05/07/25 14:44:02.852
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/07/25 14:44:02.861
  STEP: Creating a configMap that should be mutated @ 05/07/25 14:44:02.87
  I0507 14:44:02.919340 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9986" for this suite. @ 05/07/25 14:44:02.921
  STEP: Destroying namespace "webhook-markers-9129" for this suite. @ 05/07/25 14:44:02.926
• [3.349 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/07/25 14:44:02.931
  I0507 14:44:02.931260 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:44:02.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:02.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:02.94
  STEP: Creating configMap with name cm-test-opt-del-85aba5c1-35d2-416c-b560-cc7b026023d8 @ 05/07/25 14:44:03.024
  STEP: Creating configMap with name cm-test-opt-upd-58911bc3-e04d-4881-ae3c-e3d5068a1b35 @ 05/07/25 14:44:03.029
  STEP: Creating the pod @ 05/07/25 14:44:03.035
  STEP: Deleting configmap cm-test-opt-del-85aba5c1-35d2-416c-b560-cc7b026023d8 @ 05/07/25 14:44:05.08
  STEP: Updating configmap cm-test-opt-upd-58911bc3-e04d-4881-ae3c-e3d5068a1b35 @ 05/07/25 14:44:05.083
  STEP: Creating configMap with name cm-test-opt-create-b91cada4-f2a6-436e-945e-162cad26d753 @ 05/07/25 14:44:05.089
  STEP: waiting to observe update in volume @ 05/07/25 14:44:05.092
  I0507 14:44:09.134775 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1707" for this suite. @ 05/07/25 14:44:09.137
• [6.213 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 05/07/25 14:44:09.144
  I0507 14:44:09.144327 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 14:44:09.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:09.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:09.157
  STEP: Creating a ResourceQuota @ 05/07/25 14:44:09.16
  STEP: Getting a ResourceQuota @ 05/07/25 14:44:09.163
  STEP: Updating a ResourceQuota @ 05/07/25 14:44:09.164
  STEP: Verifying a ResourceQuota was modified @ 05/07/25 14:44:09.171
  STEP: Deleting a ResourceQuota @ 05/07/25 14:44:09.172
  STEP: Verifying the deleted ResourceQuota @ 05/07/25 14:44:09.175
  I0507 14:44:09.177283 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4693" for this suite. @ 05/07/25 14:44:09.24
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/07/25 14:44:09.246
  I0507 14:44:09.246788 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:44:09.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:09.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:09.259
  STEP: Creating secret with name secret-test-map-b3635334-9295-47f5-8d2c-fcac0c580a46 @ 05/07/25 14:44:09.262
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:44:09.266
  STEP: Saw pod success @ 05/07/25 14:44:11.285
  I0507 14:44:11.288542 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-50e44631-defb-47b1-9b9e-ea72a6ec99b0 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:44:11.296
  I0507 14:44:11.309887 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2333" for this suite. @ 05/07/25 14:44:11.313
• [2.071 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/07/25 14:44:11.318
  I0507 14:44:11.318061 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 14:44:11.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:11.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:11.33
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:44:11.333
  STEP: Saw pod success @ 05/07/25 14:44:13.351
  I0507 14:44:13.354328 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-f4737b30-9e26-4a22-be22-73667001e2d1 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:44:13.361
  I0507 14:44:13.377978 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3547" for this suite. @ 05/07/25 14:44:13.381
• [2.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/07/25 14:44:13.386
  I0507 14:44:13.386384 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 14:44:13.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:13.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:13.399
  STEP: Creating a pod to test substitution in container's command @ 05/07/25 14:44:13.402
  STEP: Saw pod success @ 05/07/25 14:44:17.425
  I0507 14:44:17.428926 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-170d8ceb-3580-4905-b3ec-10782a36e91b container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 14:44:17.435
  I0507 14:44:17.452286 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3388" for this suite. @ 05/07/25 14:44:17.455
• [4.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 05/07/25 14:44:17.461
  I0507 14:44:17.461728 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:44:17.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:17.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:17.474
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1672 @ 05/07/25 14:44:17.476
  STEP: changing the ExternalName service to type=NodePort @ 05/07/25 14:44:17.481
  STEP: creating replication controller externalname-service in namespace services-1672 @ 05/07/25 14:44:17.491
  I0507 14:44:17.503039      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1672, replica count: 2
  I0507 14:44:20.554772      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 14:44:20.554852 25 resource.go:361] Creating new exec pod
  I0507 14:44:23.572946 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-1672 exec execpodp42vr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 14:44:23.673627 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.102.22.231) 80 port [tcp/http] succeeded!\n"
  I0507 14:44:23.673697 25 builder.go:147] stdout: "externalname-service-7whnn"
  I0507 14:44:23.673819 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-1672 exec execpodp42vr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.22.231 80'
  I0507 14:44:23.778711 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.22.231 80\nConnection to 10.102.22.231 80 port [tcp/http] succeeded!\n"
  I0507 14:44:23.778779 25 builder.go:147] stdout: "externalname-service-lcdp2"
  I0507 14:44:23.778892 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-1672 exec execpodp42vr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31326'
  I0507 14:44:23.881014 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31326\nConnection to 192.168.49.2 31326 port [tcp/*] succeeded!\n"
  I0507 14:44:23.881065 25 builder.go:147] stdout: "externalname-service-lcdp2"
  I0507 14:44:23.881149 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-1672 exec execpodp42vr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31326'
  I0507 14:44:23.969346 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31326\nConnection to 192.168.49.3 31326 port [tcp/*] succeeded!\n"
  I0507 14:44:23.969407 25 builder.go:147] stdout: "externalname-service-lcdp2"
  I0507 14:44:23.969564 25 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0507 14:44:23.989601 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1672" for this suite. @ 05/07/25 14:44:23.993
• [6.536 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/07/25 14:44:23.997
  I0507 14:44:23.997569 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:44:23.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:24.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:24.008
  STEP: Creating configMap with name configmap-test-volume-b67ae86f-cf93-4c4f-8089-9c81c7f18fad @ 05/07/25 14:44:24.011
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:44:24.014
  STEP: Saw pod success @ 05/07/25 14:44:28.035
  I0507 14:44:28.038758 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-60e5312b-e02f-4bd5-acad-7734e9465847 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:44:28.046
  I0507 14:44:28.064420 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4299" for this suite. @ 05/07/25 14:44:28.068
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/07/25 14:44:28.073
  I0507 14:44:28.073771 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename prestop @ 05/07/25 14:44:28.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:28.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:28.088
  STEP: Creating server pod server in namespace prestop-7423 @ 05/07/25 14:44:28.09
  STEP: Waiting for pods to come up. @ 05/07/25 14:44:28.098
  STEP: Creating tester pod tester in namespace prestop-7423 @ 05/07/25 14:44:30.109
  STEP: Deleting pre-stop pod @ 05/07/25 14:44:32.12
  I0507 14:44:37.135152 25 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/07/25 14:44:37.135
  I0507 14:44:37.147274 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7423" for this suite. @ 05/07/25 14:44:37.153
• [9.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 05/07/25 14:44:37.161
  I0507 14:44:37.161184 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 14:44:37.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:37.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:37.176
  STEP: validating cluster-info @ 05/07/25 14:44:37.177
  I0507 14:44:37.177760 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-4135 cluster-info'
  I0507 14:44:37.219371 25 builder.go:146] stderr: ""
  I0507 14:44:37.219398 25 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0507 14:44:37.219475 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4135" for this suite. @ 05/07/25 14:44:37.252
• [0.095 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 05/07/25 14:44:37.256
  I0507 14:44:37.256168 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 14:44:37.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:37.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:37.266
  STEP: Creating a pod to test service account token:  @ 05/07/25 14:44:37.268
  STEP: Saw pod success @ 05/07/25 14:44:41.285
  I0507 14:44:41.287974 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod test-pod-cee2b159-ecbd-4c34-9822-d7485f3ac699 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:44:41.294
  I0507 14:44:41.311532 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6499" for this suite. @ 05/07/25 14:44:41.315
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/07/25 14:44:41.32
  I0507 14:44:41.320525 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename watch @ 05/07/25 14:44:41.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:41.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:41.333
  STEP: creating a watch on configmaps @ 05/07/25 14:44:41.335
  STEP: creating a new configmap @ 05/07/25 14:44:41.337
  STEP: modifying the configmap once @ 05/07/25 14:44:41.343
  STEP: closing the watch once it receives two notifications @ 05/07/25 14:44:41.35
  I0507 14:44:41.350309 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6883  b58deceb-c6c4-43c7-90f0-607e55ca6ec0 14296 0 2025-05-07 14:44:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 14:44:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:44:41.350523 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6883  b58deceb-c6c4-43c7-90f0-607e55ca6ec0 14297 0 2025-05-07 14:44:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 14:44:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/07/25 14:44:41.35
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/07/25 14:44:41.357
  STEP: deleting the configmap @ 05/07/25 14:44:41.358
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/07/25 14:44:41.362
  I0507 14:44:41.362730 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6883  b58deceb-c6c4-43c7-90f0-607e55ca6ec0 14298 0 2025-05-07 14:44:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 14:44:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:44:41.362867 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6883  b58deceb-c6c4-43c7-90f0-607e55ca6ec0 14299 0 2025-05-07 14:44:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 14:44:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:44:41.363006 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6883" for this suite. @ 05/07/25 14:44:41.417
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/07/25 14:44:41.425
  I0507 14:44:41.425174 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:44:41.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:41.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:41.438
  STEP: Creating configMap with name projected-configmap-test-volume-ba01a2bd-ddf0-4278-8d5f-6b4515d0e415 @ 05/07/25 14:44:41.441
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:44:41.448
  STEP: Saw pod success @ 05/07/25 14:44:45.47
  I0507 14:44:45.473196 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-5863fd2d-71b5-4f13-a076-c83b6604041c container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:44:45.482
  I0507 14:44:45.499695 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7783" for this suite. @ 05/07/25 14:44:45.503
• [4.084 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 05/07/25 14:44:45.509
  I0507 14:44:45.509245 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 14:44:45.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:45.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:45.521
  STEP: Creating a test namespace @ 05/07/25 14:44:45.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:45.529
  STEP: Creating a service in the namespace @ 05/07/25 14:44:45.532
  STEP: Deleting the namespace @ 05/07/25 14:44:45.542
  STEP: Waiting for the namespace to be removed. @ 05/07/25 14:44:45.55
  STEP: Recreating the namespace @ 05/07/25 14:44:51.552
  STEP: Verifying there is no service in the namespace @ 05/07/25 14:44:51.56
  I0507 14:44:51.562928 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2711" for this suite. @ 05/07/25 14:44:51.565
  STEP: Destroying namespace "nsdeletetest-7638" for this suite. @ 05/07/25 14:44:51.571
  I0507 14:44:51.573372 25 framework.go:370] Namespace nsdeletetest-7638 was already deleted
  STEP: Destroying namespace "nsdeletetest-1960" for this suite. @ 05/07/25 14:44:51.573
• [6.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/07/25 14:44:51.583
  I0507 14:44:51.583578 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:44:51.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:51.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:51.594
  I0507 14:44:51.597900 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/07/25 14:44:52.745
  I0507 14:44:52.745774 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 create -f -'
  I0507 14:44:54.817957 25 builder.go:146] stderr: ""
  I0507 14:44:54.818015 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-911-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0507 14:44:54.818086 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 delete e2e-test-crd-publish-openapi-911-crds test-cr'
  I0507 14:44:54.861886 25 builder.go:146] stderr: ""
  I0507 14:44:54.861926 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-911-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0507 14:44:54.861967 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 apply -f -'
  I0507 14:44:54.903829 25 builder.go:146] stderr: ""
  I0507 14:44:54.903873 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-911-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0507 14:44:54.903919 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 delete e2e-test-crd-publish-openapi-911-crds test-cr'
  I0507 14:44:54.944790 25 builder.go:146] stderr: ""
  I0507 14:44:54.944826 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-911-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/07/25 14:44:54.944
  I0507 14:44:54.944891 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-4546 explain e2e-test-crd-publish-openapi-911-crds'
  I0507 14:44:54.983554 25 builder.go:146] stderr: ""
  I0507 14:44:54.983599 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-911-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0507 14:44:56.118764 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4546" for this suite. @ 05/07/25 14:44:56.124
• [4.545 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 05/07/25 14:44:56.128
  I0507 14:44:56.128889 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:44:56.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:44:56.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:44:56.137
  STEP: creating service multiprotocol-test in namespace services-3461 @ 05/07/25 14:44:56.139
  STEP: creating pod pod1 in namespace services-3461 @ 05/07/25 14:44:56.148
  STEP: Creating pod pod1 in namespace services-3461 @ 05/07/25 14:44:56.148
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3461 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/07/25 14:44:58.169
  I0507 14:44:58.177176 25 service.go:4553] successfully validated that service multiprotocol-test in namespace services-3461 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/07/25 14:44:58.177
  I0507 14:44:58.177275 25 resource.go:361] Creating new exec pod
  I0507 14:45:00.189587 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80'
  I0507 14:45:00.299228 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.54.46 80\nConnection to 10.105.54.46 80 port [tcp/http] succeeded!\n"
  I0507 14:45:00.299276 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:45:00.299358 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.54.46 80'
  I0507 14:45:02.389409 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.54.46 80\n"
  I0507 14:45:02.389471 25 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/07/25 14:45:02.389
  I0507 14:45:02.400561 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80'
  I0507 14:45:02.493023 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.54.46 80\nConnection to 10.105.54.46 80 port [tcp/http] succeeded!\n"
  I0507 14:45:02.493065 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:45:02.493152 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.54.46 80'
  I0507 14:45:04.605699 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.54.46 80\n"
  I0507 14:45:04.605773 25 builder.go:147] stdout: ""
  I0507 14:45:04.605865 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.54.46 80'
  I0507 14:45:06.717445 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.54.46 80\n"
  I0507 14:45:06.717530 25 builder.go:147] stdout: ""
  I0507 14:45:06.717614 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.54.46 80'
  I0507 14:45:08.807652 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.54.46 80\n"
  I0507 14:45:08.807735 25 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/07/25 14:45:08.807
  I0507 14:45:08.817066 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.54.46 80'
  I0507 14:45:08.907047 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.54.46 80\n"
  I0507 14:45:08.907086 25 builder.go:147] stdout: ""
  I0507 14:45:10.817490 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.54.46 80'
  I0507 14:45:12.927732 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.54.46 80\n"
  I0507 14:45:12.927805 25 builder.go:147] stdout: "pod1"
  I0507 14:45:12.927929 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80'
  I0507 14:45:15.034328 25 builder.go:135] rc: 1
  I0507 14:45:15.034415 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.105.54.46 80
  nc: connect to 10.105.54.46 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0507 14:45:15.034553 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80'
  I0507 14:45:17.139515 25 builder.go:135] rc: 1
  I0507 14:45:17.139610 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.105.54.46 80
  nc: connect to 10.105.54.46 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0507 14:45:17.139737 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80'
  I0507 14:45:19.252167 25 builder.go:135] rc: 1
  I0507 14:45:19.252271 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3461 exec execpodk9djb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.54.46 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.105.54.46 80
  nc: connect to 10.105.54.46 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0507 14:45:19.252550 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3461" for this suite. @ 05/07/25 14:45:19.257
• [23.135 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 05/07/25 14:45:19.264
  I0507 14:45:19.264576 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:45:19.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:45:19.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:45:19.276
  STEP: Setting up server cert @ 05/07/25 14:45:19.29
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:45:19.469
  STEP: Deploying the webhook pod @ 05/07/25 14:45:19.473
  STEP: Wait for the deployment to be ready @ 05/07/25 14:45:19.478
  I0507 14:45:19.482903 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:45:21.494
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:45:21.509
  I0507 14:45:22.509605 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/07/25 14:45:22.512
  STEP: create a configmap that should be updated by the webhook @ 05/07/25 14:45:22.523
  I0507 14:45:22.560203 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3058" for this suite. @ 05/07/25 14:45:22.563
  STEP: Destroying namespace "webhook-markers-2065" for this suite. @ 05/07/25 14:45:22.566
• [3.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 05/07/25 14:45:22.571
  I0507 14:45:22.571094 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:45:22.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:45:22.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:45:22.584
  STEP: creating a collection of services @ 05/07/25 14:45:22.586
  I0507 14:45:22.586174 25 service.go:3635] Creating e2e-svc-a-rpv5b
  I0507 14:45:22.594845 25 service.go:3635] Creating e2e-svc-b-9vfgk
  I0507 14:45:22.605875 25 service.go:3635] Creating e2e-svc-c-w7gm9
  STEP: deleting service collection @ 05/07/25 14:45:22.62
  I0507 14:45:22.647512 25 service.go:3670] Collection of services has been deleted
  I0507 14:45:22.647677 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2259" for this suite. @ 05/07/25 14:45:22.666
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 05/07/25 14:45:22.672
  I0507 14:45:22.673012 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 14:45:22.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:45:22.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:45:22.695
  STEP: Creating service test in namespace statefulset-8310 @ 05/07/25 14:45:22.699
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/07/25 14:45:22.703
  STEP: Creating stateful set ss in namespace statefulset-8310 @ 05/07/25 14:45:22.707
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8310 @ 05/07/25 14:45:22.711
  I0507 14:45:22.725904 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0507 14:45:32.718155 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/07/25 14:45:32.718
  I0507 14:45:32.721264 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:45:32.813602 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:45:32.813669 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:45:32.813692 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:45:32.817199 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0507 14:45:42.821389 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:45:42.821462 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0507 14:45:42.837191 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999387s
  I0507 14:45:43.843218 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.996358446s
  I0507 14:45:44.849409 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.990059041s
  I0507 14:45:45.855614 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.983649171s
  I0507 14:45:46.861921 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.977875108s
  I0507 14:45:47.868774 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.97098309s
  I0507 14:45:48.875168 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.964630051s
  I0507 14:45:49.881742 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.958126886s
  I0507 14:45:50.888211 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.951719225s
  I0507 14:45:51.894136 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 945.264454ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8310 @ 05/07/25 14:45:52.894
  I0507 14:45:52.900671 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:45:53.004192 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:45:53.004234 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:45:53.004253 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:45:53.006225 25 wait.go:40] Found 1 stateful pods, waiting for 3
  I0507 14:46:03.010543 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:46:03.010601 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:46:03.010620 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/07/25 14:46:03.01
  STEP: Scale down will halt with unhealthy stateful pod @ 05/07/25 14:46:03.01
  I0507 14:46:03.015872 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:46:03.102988 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:46:03.103033 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:46:03.103052 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:46:03.103098 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:46:03.195066 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:46:03.195113 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:46:03.195129 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:46:03.195183 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:46:03.298590 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:46:03.298655 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:46:03.298678 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:46:03.298696 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0507 14:46:03.301539 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0507 14:46:13.310663 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:46:13.310714 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:46:13.310731 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:46:13.411967 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999569s
  I0507 14:46:14.416603 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.905053288s
  I0507 14:46:15.421803 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.900116859s
  I0507 14:46:16.428259 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.894978021s
  I0507 14:46:17.437383 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.889363727s
  I0507 14:46:18.440788 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.880244182s
  I0507 14:46:19.444922 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.876057256s
  I0507 14:46:20.464278 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.87256995s
  I0507 14:46:21.470466 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.853324959s
  I0507 14:46:22.476717 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 846.990871ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8310 @ 05/07/25 14:46:23.477
  I0507 14:46:23.483432 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:46:23.593694 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:46:23.593758 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:46:23.593781 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:46:23.593851 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:46:23.685190 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:46:23.685237 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:46:23.685252 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:46:23.685299 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-8310 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:46:23.781156 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:46:23.781213 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:46:23.781241 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:46:23.781258 25 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/07/25 14:46:33.79
  I0507 14:46:33.790876 25 statefulset.go:138] Deleting all statefulset in ns statefulset-8310
  I0507 14:46:33.793877 25 rest.go:152] Scaling statefulset ss to 0
  I0507 14:46:33.798209 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 14:46:33.800435 25 rest.go:90] Deleting statefulset ss
  I0507 14:46:33.811962 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8310" for this suite. @ 05/07/25 14:46:33.814
• [71.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/07/25 14:46:33.82
  I0507 14:46:33.820997 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:46:33.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:33.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:33.842
  STEP: Creating configMap with name projected-configmap-test-volume-map-566d6cc7-6c40-4308-9d7e-ef59b32ccb6b @ 05/07/25 14:46:33.844
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:46:33.848
  STEP: Saw pod success @ 05/07/25 14:46:37.873
  I0507 14:46:37.875967 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-6aeee42e-d959-48f3-b9fb-34f8d41bb463 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:46:37.89
  I0507 14:46:37.907536 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7858" for this suite. @ 05/07/25 14:46:37.911
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 05/07/25 14:46:37.916
  I0507 14:46:37.916624 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename disruption @ 05/07/25 14:46:37.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:37.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:37.93
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/07/25 14:46:37.932
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:46:37.936
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/07/25 14:46:39.949
  STEP: Waiting for all pods to be running @ 05/07/25 14:46:39.949
  I0507 14:46:39.953744 25 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 05/07/25 14:46:41.957
  STEP: Updating the pdb to allow a pod to be evicted @ 05/07/25 14:46:41.965
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:46:41.973
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/07/25 14:46:43.979
  STEP: Waiting for all pods to be running @ 05/07/25 14:46:43.979
  STEP: Waiting for the pdb to observed all healthy pods @ 05/07/25 14:46:43.982
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/07/25 14:46:44.002
  STEP: Waiting for the pdb to be processed @ 05/07/25 14:46:44.016
  STEP: Waiting for all pods to be running @ 05/07/25 14:46:46.021
  STEP: locating a running pod @ 05/07/25 14:46:46.025
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/07/25 14:46:46.032
  STEP: Waiting for the pdb to be deleted @ 05/07/25 14:46:46.037
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/07/25 14:46:46.039
  STEP: Waiting for all pods to be running @ 05/07/25 14:46:46.039
  I0507 14:46:46.141929 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4556" for this suite. @ 05/07/25 14:46:46.146
• [8.236 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/07/25 14:46:46.153
  I0507 14:46:46.153196 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:46:46.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:46.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:46.166
  STEP: Creating configMap with name configmap-test-upd-57344cdc-4539-4ea8-997d-6da6ea550cbf @ 05/07/25 14:46:46.248
  STEP: Creating the pod @ 05/07/25 14:46:46.253
  STEP: Waiting for pod with text data @ 05/07/25 14:46:48.271
  STEP: Waiting for pod with binary data @ 05/07/25 14:46:48.279
  I0507 14:46:48.286044 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1922" for this suite. @ 05/07/25 14:46:48.289
• [2.142 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/07/25 14:46:48.295
  I0507 14:46:48.295336 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:46:48.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:48.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:48.31
  STEP: Creating secret with name secret-test-79e48b49-a0d2-4b0f-b806-320f59e50c8b @ 05/07/25 14:46:48.313
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:46:48.317
  STEP: Saw pod success @ 05/07/25 14:46:52.34
  I0507 14:46:52.342636 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-0545c800-dcbf-447c-b227-6595d64d5854 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:46:52.349
  I0507 14:46:52.366630 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9852" for this suite. @ 05/07/25 14:46:52.37
• [4.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/07/25 14:46:52.377
  I0507 14:46:52.377038 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:46:52.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:52.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:52.389
  STEP: Creating configMap with name configmap-test-volume-0f329a7d-08e1-4417-abd7-d3a484e98c4e @ 05/07/25 14:46:52.392
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:46:52.396
  STEP: Saw pod success @ 05/07/25 14:46:56.418
  I0507 14:46:56.422039 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-b4e035d1-609d-471f-94ca-04bf4b090f52 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:46:56.429
  I0507 14:46:56.443824 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4444" for this suite. @ 05/07/25 14:46:56.447
• [4.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 05/07/25 14:46:56.452
  I0507 14:46:56.452674 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 14:46:56.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:56.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:56.466
  STEP: Read namespace status @ 05/07/25 14:46:56.468
  I0507 14:46:56.473326 25 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/07/25 14:46:56.473
  I0507 14:46:56.478619 25 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/07/25 14:46:56.478
  I0507 14:46:56.487332 25 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0507 14:46:56.487565 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4192" for this suite. @ 05/07/25 14:46:56.549
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/07/25 14:46:56.556
  I0507 14:46:56.556834 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 14:46:56.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:46:56.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:46:56.569
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/07/25 14:46:56.572
  STEP: Saw pod success @ 05/07/25 14:47:00.592
  I0507 14:47:00.595711 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-13ff694e-dddb-46ec-b9a8-0d49e4edf43b container test-container: <nil>
  STEP: delete the pod @ 05/07/25 14:47:00.603
  I0507 14:47:00.617889 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5186" for this suite. @ 05/07/25 14:47:00.62
• [4.068 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/07/25 14:47:00.625
  I0507 14:47:00.625251 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 14:47:00.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:00.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:00.634
  STEP: Creating ReplicationController "e2e-rc-stghq" @ 05/07/25 14:47:00.636
  I0507 14:47:00.640427 25 rc.go:792] Get Replication Controller "e2e-rc-stghq" to confirm replicas
  I0507 14:47:01.640949 25 rc.go:792] Get Replication Controller "e2e-rc-stghq" to confirm replicas
  I0507 14:47:01.647752 25 rc.go:801] Found 1 replicas for "e2e-rc-stghq" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-stghq" @ 05/07/25 14:47:01.647
  STEP: Updating a scale subresource @ 05/07/25 14:47:01.65
  STEP: Verifying replicas where modified for replication controller "e2e-rc-stghq" @ 05/07/25 14:47:01.655
  I0507 14:47:01.655488 25 rc.go:792] Get Replication Controller "e2e-rc-stghq" to confirm replicas
  I0507 14:47:02.656339 25 rc.go:792] Get Replication Controller "e2e-rc-stghq" to confirm replicas
  I0507 14:47:02.660331 25 rc.go:801] Found 2 replicas for "e2e-rc-stghq" replication controller
  I0507 14:47:02.660561 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1859" for this suite. @ 05/07/25 14:47:02.664
• [2.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 05/07/25 14:47:02.67
  I0507 14:47:02.670944 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:47:02.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:02.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:02.685
  STEP: Setting up server cert @ 05/07/25 14:47:02.701
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:47:02.795
  STEP: Deploying the webhook pod @ 05/07/25 14:47:02.798
  STEP: Wait for the deployment to be ready @ 05/07/25 14:47:02.806
  I0507 14:47:02.809353 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/07/25 14:47:04.821
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:47:04.835
  I0507 14:47:05.837051 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/07/25 14:47:05.845
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/07/25 14:47:05.861
  I0507 14:47:05.861885 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 14:47:05.899432 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9353" for this suite. @ 05/07/25 14:47:05.902
  STEP: Destroying namespace "webhook-markers-184" for this suite. @ 05/07/25 14:47:05.907
• [3.240 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/07/25 14:47:05.91
  I0507 14:47:05.910904 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:47:05.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:05.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:05.919
  STEP: Creating configMap with name projected-configmap-test-volume-d4427e29-6d5c-407c-9aa8-4b8600018c32 @ 05/07/25 14:47:05.921
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:47:05.923
  STEP: Saw pod success @ 05/07/25 14:47:09.955
  I0507 14:47:09.958539 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-652583ec-ac31-4357-8331-aa61fdccf106 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:47:09.965
  I0507 14:47:09.987761 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7109" for this suite. @ 05/07/25 14:47:09.991
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/07/25 14:47:09.997
  I0507 14:47:09.997299 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:47:09.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:10.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:10.012
  I0507 14:47:10.016077 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/07/25 14:47:11.167
  I0507 14:47:11.167527 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-2092 --namespace=crd-publish-openapi-2092 create -f -'
  I0507 14:47:13.219698 25 builder.go:146] stderr: ""
  I0507 14:47:13.219753 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3412-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0507 14:47:13.219820 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-2092 --namespace=crd-publish-openapi-2092 delete e2e-test-crd-publish-openapi-3412-crds test-cr'
  I0507 14:47:13.264455 25 builder.go:146] stderr: ""
  I0507 14:47:13.264490 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3412-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0507 14:47:13.264542 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-2092 --namespace=crd-publish-openapi-2092 apply -f -'
  I0507 14:47:13.307040 25 builder.go:146] stderr: ""
  I0507 14:47:13.307072 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3412-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0507 14:47:13.307110 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-2092 --namespace=crd-publish-openapi-2092 delete e2e-test-crd-publish-openapi-3412-crds test-cr'
  I0507 14:47:13.346917 25 builder.go:146] stderr: ""
  I0507 14:47:13.346954 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3412-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/07/25 14:47:13.346
  I0507 14:47:13.347036 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=crd-publish-openapi-2092 explain e2e-test-crd-publish-openapi-3412-crds'
  I0507 14:47:13.388307 25 builder.go:146] stderr: ""
  I0507 14:47:13.388360 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3412-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0507 14:47:14.531542 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2092" for this suite. @ 05/07/25 14:47:14.535
• [4.543 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/07/25 14:47:14.54
  I0507 14:47:14.540343 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:47:14.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:14.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:14.552
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 14:47:14.554
  STEP: Saw pod success @ 05/07/25 14:47:18.571
  I0507 14:47:18.574142 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-6dbcab30-291a-413d-a042-0b8da0c4caa7 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 14:47:18.581
  I0507 14:47:18.599964 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7571" for this suite. @ 05/07/25 14:47:18.604
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/07/25 14:47:18.609
  I0507 14:47:18.609729 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:47:18.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:18.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:18.622
  STEP: Creating configMap with name projected-configmap-test-volume-044ce4bf-4775-4849-816e-83334da41535 @ 05/07/25 14:47:18.625
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:47:18.629
  STEP: Saw pod success @ 05/07/25 14:47:22.651
  I0507 14:47:22.654061 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-b7a3d1e3-669d-403f-99c8-31d8dac7795f container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:47:22.66
  I0507 14:47:22.673175 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2513" for this suite. @ 05/07/25 14:47:22.675
• [4.071 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/07/25 14:47:22.681
  I0507 14:47:22.681172 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 14:47:22.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:22.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:22.693
  STEP: getting /apis @ 05/07/25 14:47:22.695
  STEP: getting /apis/node.k8s.io @ 05/07/25 14:47:22.698
  STEP: getting /apis/node.k8s.io/v1 @ 05/07/25 14:47:22.698
  STEP: creating @ 05/07/25 14:47:22.699
  STEP: watching @ 05/07/25 14:47:22.708
  I0507 14:47:22.708893 25 runtimeclass.go:275] starting watch
  STEP: getting @ 05/07/25 14:47:22.713
  STEP: listing @ 05/07/25 14:47:22.714
  STEP: patching @ 05/07/25 14:47:22.715
  STEP: updating @ 05/07/25 14:47:22.718
  I0507 14:47:22.721893 25 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/07/25 14:47:22.722
  STEP: deleting a collection @ 05/07/25 14:47:22.726
  I0507 14:47:22.733114 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6744" for this suite. @ 05/07/25 14:47:22.777
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/07/25 14:47:22.783
  I0507 14:47:22.783624 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:47:22.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:22.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:22.792
  STEP: Creating secret with name secret-test-c67c3b87-befd-4173-8f88-a653e7516285 @ 05/07/25 14:47:22.795
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:47:22.799
  STEP: Saw pod success @ 05/07/25 14:47:24.814
  I0507 14:47:24.816939 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-4d2d6ac6-d3f1-4fb0-8980-b419f025c241 container secret-env-test: <nil>
  STEP: delete the pod @ 05/07/25 14:47:24.823
  I0507 14:47:24.838863 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7853" for this suite. @ 05/07/25 14:47:24.842
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 05/07/25 14:47:24.847
  I0507 14:47:24.847840 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:47:24.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:24.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:24.861
  STEP: Setting up server cert @ 05/07/25 14:47:24.877
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:47:25.118
  STEP: Deploying the webhook pod @ 05/07/25 14:47:25.121
  STEP: Wait for the deployment to be ready @ 05/07/25 14:47:25.128
  I0507 14:47:25.132361 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:47:27.145
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:47:27.158
  I0507 14:47:28.159397 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/07/25 14:47:28.168
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/07/25 14:47:28.185
  STEP: Creating a dummy validating-webhook-configuration object @ 05/07/25 14:47:28.2
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/07/25 14:47:28.206
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/07/25 14:47:28.21
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/07/25 14:47:28.217
  I0507 14:47:28.264123 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-138" for this suite. @ 05/07/25 14:47:28.268
  STEP: Destroying namespace "webhook-markers-1518" for this suite. @ 05/07/25 14:47:28.272
• [3.429 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/07/25 14:47:28.276
  I0507 14:47:28.276777 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 14:47:28.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:28.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:28.287
  I0507 14:47:28.296059 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2126" for this suite. @ 05/07/25 14:47:28.37
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 05/07/25 14:47:28.377
  I0507 14:47:28.377112 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pv @ 05/07/25 14:47:28.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:28.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:28.389
  STEP: Creating initial PV and PVC @ 05/07/25 14:47:28.393
  I0507 14:47:28.393216 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2269" @ 05/07/25 14:47:28.405
  STEP: Listing PVCs in namespace "pv-2269" @ 05/07/25 14:47:28.408
  STEP: Patching the PV "pv-2269-dcjrt" @ 05/07/25 14:47:28.412
  STEP: Patching the PVC "pvc-l2hl7" @ 05/07/25 14:47:28.422
  STEP: Getting PV "pv-2269-dcjrt" @ 05/07/25 14:47:28.428
  STEP: Getting PVC "pvc-l2hl7" @ 05/07/25 14:47:28.429
  STEP: Deleting PVC "pvc-l2hl7" @ 05/07/25 14:47:28.432
  STEP: Confirm deletion of PVC "pvc-l2hl7" @ 05/07/25 14:47:28.436
  STEP: Deleting PV "pv-2269-dcjrt" @ 05/07/25 14:47:30.446
  STEP: Confirm deletion of PV "pv-2269-dcjrt" @ 05/07/25 14:47:30.451
  STEP: Recreating another PV & PVC @ 05/07/25 14:47:32.46
  I0507 14:47:32.461006 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2269-c2zwz" @ 05/07/25 14:47:32.472
  STEP: Updating the PVC "pvc-47295" @ 05/07/25 14:47:32.48
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-47295=updated" @ 05/07/25 14:47:32.487
  STEP: Deleting PVC "pvc-47295" via DeleteCollection @ 05/07/25 14:47:32.49
  STEP: Confirm deletion of PVC "pvc-47295" @ 05/07/25 14:47:32.497
  STEP: Deleting PV "pv-2269-c2zwz" via DeleteCollection @ 05/07/25 14:47:34.514
  STEP: Confirm deletion of PV "pv-2269-c2zwz" @ 05/07/25 14:47:34.522
  I0507 14:47:36.530186 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0507 14:47:36.530259 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-47295"
  I0507 14:47:36.533207 25 pv.go:193] Deleting PersistentVolume "pv-2269-c2zwz"
  I0507 14:47:36.535415 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2269" for this suite. @ 05/07/25 14:47:36.538
• [8.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/07/25 14:47:36.544
  I0507 14:47:36.544413 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename watch @ 05/07/25 14:47:36.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:36.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:36.561
  STEP: getting a starting resourceVersion @ 05/07/25 14:47:36.563
  STEP: starting a background goroutine to produce watch events @ 05/07/25 14:47:36.566
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/07/25 14:47:36.566
  I0507 14:47:39.352566 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1924" for this suite. @ 05/07/25 14:47:39.401
• [2.907 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/07/25 14:47:39.452
  I0507 14:47:39.452157 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:47:39.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:39.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:39.465
  STEP: Creating configMap with name projected-configmap-test-volume-map-5daf6387-73dd-48cd-b9c3-5e43b4cb4186 @ 05/07/25 14:47:39.468
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:47:39.472
  STEP: Saw pod success @ 05/07/25 14:47:43.494
  I0507 14:47:43.496928 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-8c84bd09-7997-46c8-9c62-946942418602 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:47:43.504
  I0507 14:47:43.520959 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1275" for this suite. @ 05/07/25 14:47:43.524
• [4.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 05/07/25 14:47:43.529
  I0507 14:47:43.529032 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-selectable-fields @ 05/07/25 14:47:43.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:43.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:43.54
  STEP: Setting up server cert @ 05/07/25 14:47:43.542
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/07/25 14:47:43.796
  STEP: Deploying the custom resource conversion webhook pod @ 05/07/25 14:47:43.8
  STEP: Wait for the deployment to be ready @ 05/07/25 14:47:43.806
  I0507 14:47:43.810622 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:47:45.821
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:47:45.834
  I0507 14:47:46.834837 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 05/07/25 14:47:46.843
  I0507 14:47:46.843048 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Creating a custom resource conversion webhook @ 05/07/25 14:47:47.356
  STEP: Watching with field selectors @ 05/07/25 14:47:49.401
  STEP: Registering informers with field selectors @ 05/07/25 14:47:49.405
  STEP: Creating custom resources @ 05/07/25 14:47:49.405
  STEP: Listing v2 custom resources with field selector host=host1 @ 05/07/25 14:47:49.421
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 05/07/25 14:47:49.423
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 05/07/25 14:47:49.425
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 05/07/25 14:47:49.427
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 05/07/25 14:47:49.429
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 05/07/25 14:47:49.434
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 05/07/25 14:47:49.434
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 05/07/25 14:47:49.434
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 05/07/25 14:47:49.434
  STEP: Deleting one custom resources to ensure that deletions are observed @ 05/07/25 14:47:49.434
  STEP: Updating one custom resources to ensure that deletions are observed @ 05/07/25 14:47:49.444
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 05/07/25 14:47:49.451
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 05/07/25 14:47:49.453
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 05/07/25 14:47:49.454
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 05/07/25 14:47:49.459
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 05/07/25 14:47:49.459
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 05/07/25 14:47:49.459
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 05/07/25 14:47:49.459
  I0507 14:47:50.004577 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-254" for this suite. @ 05/07/25 14:47:50.008
• [6.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/07/25 14:47:50.016
  I0507 14:47:50.016600 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 14:47:50.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:47:50.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:47:50.033
  STEP: Creating pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772 @ 05/07/25 14:47:50.038
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 14:47:52.054
  I0507 14:47:52.057058 25 container_probe.go:1749] Initial restart count of pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 is 0
  I0507 14:47:52.059607 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:47:54.064660 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:47:56.070129 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:47:58.076015 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:00.082115 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:02.088524 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:04.094836 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:06.100428 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:08.106903 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:10.112682 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:12.119327 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:12.119380 25 container_probe.go:1763] Restart count of pod container-probe-2772/liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 is now 1 (20.06227605s elapsed)
  I0507 14:48:14.123123 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:16.127415 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:18.133103 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:20.136391 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:22.142949 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:24.149409 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:26.151918 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:28.156685 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:30.162855 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:32.166851 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:32.166904 25 container_probe.go:1763] Restart count of pod container-probe-2772/liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 is now 2 (40.109799571s elapsed)
  I0507 14:48:34.174074 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:36.179918 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:38.182159 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:40.187575 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:42.192374 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:44.198381 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:46.202778 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:48.209386 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:50.215369 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:52.221142 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:52.221204 25 container_probe.go:1763] Restart count of pod container-probe-2772/liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 is now 3 (1m0.164098466s elapsed)
  I0507 14:48:54.226451 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:56.232282 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:48:58.238256 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:00.245168 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:02.251703 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:04.257939 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:06.261844 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:08.267840 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:10.273578 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:12.279958 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:12.280024 25 container_probe.go:1763] Restart count of pod container-probe-2772/liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 is now 4 (1m20.222918964s elapsed)
  I0507 14:49:14.287015 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:16.292915 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:18.297491 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:20.303462 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:22.309289 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:24.316324 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:26.321939 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:28.327817 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:30.333584 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:32.337219 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:34.340683 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:36.346136 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:38.351230 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:40.356639 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:42.361935 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:44.367284 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:46.373547 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:48.380310 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:50.386684 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:52.392209 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:54.395009 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:56.400043 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:49:58.406450 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:00.413454 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:02.419189 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:04.426122 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:06.432312 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:08.440682 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:10.443791 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:12.448907 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:14.455364 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:16.457565 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:18.462946 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:20.468456 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:22.474196 25 container_probe.go:1759] Get pod liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 in namespace container-probe-2772
  I0507 14:50:22.474257 25 container_probe.go:1763] Restart count of pod container-probe-2772/liveness-eaeb3b5d-2bb4-4435-9ae2-947de471b3a5 is now 5 (2m30.417152046s elapsed)
  STEP: deleting the pod @ 05/07/25 14:50:22.474
  I0507 14:50:22.487030 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2772" for this suite. @ 05/07/25 14:50:22.492
• [152.480 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/07/25 14:50:22.496
  I0507 14:50:22.496265 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 14:50:22.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:50:22.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:50:22.508
  STEP: Creating a ReplaceConcurrent cronjob @ 05/07/25 14:50:22.51
  STEP: Ensuring a job is scheduled @ 05/07/25 14:50:22.514
  STEP: Ensuring exactly one is scheduled @ 05/07/25 14:51:00.519
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/07/25 14:51:00.521
  STEP: Ensuring the job is replaced with a new one @ 05/07/25 14:51:00.524
  STEP: Removing cronjob @ 05/07/25 14:52:00.529
  I0507 14:52:00.533068 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7923" for this suite. @ 05/07/25 14:52:00.535
• [98.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/07/25 14:52:00.541
  I0507 14:52:00.541232 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 14:52:00.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:00.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:00.557
  I0507 14:52:00.559248 25 deployment.go:1645] Creating simple deployment test-new-deployment
  I0507 14:52:00.566569 25 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/07/25 14:52:02.58
  STEP: updating a scale subresource @ 05/07/25 14:52:02.582
  STEP: verifying the deployment Spec.Replicas was modified @ 05/07/25 14:52:02.591
  STEP: Patch a scale subresource @ 05/07/25 14:52:02.596
  I0507 14:52:02.615227 25 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c582ee6f-0f09-44b3-90fa-9ef3cb6ee6e1",
      ResourceVersion: (string) (len=5) "16129",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 14:52:02.621805 25 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b89a0daf-1d56-4b65-a143-ebcfe0d24861",
      ResourceVersion: (string) (len=5) "16136",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "c582ee6f-0f09-44b3-90fa-9ef3cb6ee6e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 35 38 32 65 65  36 66 2d 30 66 30 39 2d  |\"c582ee6f-0f09-|
              00000120  34 34 62 33 2d 39 30 66  61 2d 39 65 66 33 63 62  |44b3-90fa-9ef3cb|
              00000130  36 65 65 36 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6ee6e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 14:52:02.627682 25 deployment.go:68] Pod "test-new-deployment-685b768f58-8thg4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-8thg4",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a59ea1c-2988-4efb-a2af-9567ab631ff4",
      ResourceVersion: (string) (len=5) "16137",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "b89a0daf-1d56-4b65-a143-ebcfe0d24861",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  39 61 30 64 61 66 2d 31  |d\":\"b89a0daf-1|
              00000090  64 35 36 2d 34 62 36 35  2d 61 31 34 33 2d 65 62  |d56-4b65-a143-eb|
              000000a0  63 66 65 30 64 32 34 38  36 31 5c 22 7d 22 3a 7b  |cfe0d24861\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5ghn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5ghn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b5ghn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 14:52:02.631740 25 deployment.go:68] Pod "test-new-deployment-685b768f58-mw9h5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-mw9h5",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "522659b1-f558-47cf-bfb6-778d6e9ae430",
      ResourceVersion: (string) (len=5) "16123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "b89a0daf-1d56-4b65-a143-ebcfe0d24861",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  39 61 30 64 61 66 2d 31  |d\":\"b89a0daf-1|
              00000090  64 35 36 2d 34 62 36 35  2d 61 31 34 33 2d 65 62  |d56-4b65-a143-eb|
              000000a0  63 66 65 30 64 32 34 38  36 31 5c 22 7d 22 3a 7b  |cfe0d24861\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  34 38 5c 22 7d 22 3a 7b  |.244.1.248\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ckpld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ckpld",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.248",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.248"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226321,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6d4d3ac2c6efc7c0bc90a2f74105c80ae838388bd903be1de1168b4b9701df74",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ckpld",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 14:52:02.634869 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4861" for this suite. @ 05/07/25 14:52:02.638
• [2.106 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/07/25 14:52:02.648
  I0507 14:52:02.648194 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename watch @ 05/07/25 14:52:02.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:02.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:02.661
  STEP: creating a watch on configmaps with a certain label @ 05/07/25 14:52:02.663
  STEP: creating a new configmap @ 05/07/25 14:52:02.664
  STEP: modifying the configmap once @ 05/07/25 14:52:02.667
  STEP: changing the label value of the configmap @ 05/07/25 14:52:02.671
  STEP: Expecting to observe a delete notification for the watched object @ 05/07/25 14:52:02.675
  I0507 14:52:02.675139 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3183  ff05666b-2ea2-46e6-b3ba-93e0a2517382 16155 0 2025-05-07 14:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 14:52:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:52:02.675235 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3183  ff05666b-2ea2-46e6-b3ba-93e0a2517382 16156 0 2025-05-07 14:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 14:52:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:52:02.675290 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3183  ff05666b-2ea2-46e6-b3ba-93e0a2517382 16157 0 2025-05-07 14:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 14:52:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/07/25 14:52:02.675
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/07/25 14:52:02.678
  STEP: changing the label value of the configmap back @ 05/07/25 14:52:12.678
  STEP: modifying the configmap a third time @ 05/07/25 14:52:12.69
  STEP: deleting the configmap @ 05/07/25 14:52:12.701
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/07/25 14:52:12.707
  I0507 14:52:12.707274 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3183  ff05666b-2ea2-46e6-b3ba-93e0a2517382 16207 0 2025-05-07 14:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 14:52:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:52:12.707424 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3183  ff05666b-2ea2-46e6-b3ba-93e0a2517382 16208 0 2025-05-07 14:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 14:52:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:52:12.707663 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3183  ff05666b-2ea2-46e6-b3ba-93e0a2517382 16209 0 2025-05-07 14:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 14:52:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 14:52:12.707885 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3183" for this suite. @ 05/07/25 14:52:12.711
• [10.069 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/07/25 14:52:12.716
  I0507 14:52:12.716862 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:52:12.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:12.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:12.73
  STEP: Saw pod success @ 05/07/25 14:52:18.785
  I0507 14:52:18.788986 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-envvars-30b11904-e371-4a90-adbe-25f54dad209f container env3cont: <nil>
  STEP: delete the pod @ 05/07/25 14:52:18.807
  I0507 14:52:18.820875 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1232" for this suite. @ 05/07/25 14:52:18.823
• [6.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 05/07/25 14:52:18.829
  I0507 14:52:18.829102 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 14:52:18.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:18.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:18.842
  STEP: Creating service test in namespace statefulset-312 @ 05/07/25 14:52:18.845
  I0507 14:52:18.859658 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0507 14:52:28.864069 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/07/25 14:52:28.869
  I0507 14:52:28.893660 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:52:28.893702 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0507 14:52:38.894337 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:52:38.894397 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/07/25 14:52:38.899
  STEP: Delete all of the StatefulSets @ 05/07/25 14:52:38.901
  STEP: Verify that StatefulSets have been deleted @ 05/07/25 14:52:38.908
  I0507 14:52:38.910473 25 statefulset.go:138] Deleting all statefulset in ns statefulset-312
  I0507 14:52:38.918117 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-312" for this suite. @ 05/07/25 14:52:38.923
• [20.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/07/25 14:52:38.935
  I0507 14:52:38.935402 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sysctl @ 05/07/25 14:52:38.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:38.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:38.955
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/07/25 14:52:38.959
  STEP: Watching for error events or started pod @ 05/07/25 14:52:38.964
  STEP: Waiting for pod completion @ 05/07/25 14:52:40.966
  STEP: Checking that the pod succeeded @ 05/07/25 14:52:40.969
  STEP: Getting logs from the pod @ 05/07/25 14:52:40.969
  STEP: Checking that the sysctl is actually updated @ 05/07/25 14:52:40.972
  I0507 14:52:40.973100 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5116" for this suite. @ 05/07/25 14:52:40.975
• [2.043 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/07/25 14:52:40.978
  I0507 14:52:40.978697 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 14:52:40.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:40.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:40.99
  I0507 14:52:40.992618 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: creating the pod @ 05/07/25 14:52:40.993
  STEP: submitting the pod to kubernetes @ 05/07/25 14:52:40.993
  I0507 14:52:43.091579 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8046" for this suite. @ 05/07/25 14:52:43.094
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 05/07/25 14:52:43.096
  I0507 14:52:43.096833 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 14:52:43.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:43.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:43.104
  STEP: Setting up server cert @ 05/07/25 14:52:43.115
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 14:52:43.252
  STEP: Deploying the webhook pod @ 05/07/25 14:52:43.255
  STEP: Wait for the deployment to be ready @ 05/07/25 14:52:43.261
  I0507 14:52:43.265860 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 14:52:45.276
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 14:52:45.29
  I0507 14:52:46.290441 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/07/25 14:52:46.298
  STEP: create a namespace for the webhook @ 05/07/25 14:52:46.315
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/07/25 14:52:46.325
  I0507 14:52:46.362152 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6252" for this suite. @ 05/07/25 14:52:46.367
  STEP: Destroying namespace "webhook-markers-8184" for this suite. @ 05/07/25 14:52:46.37
  STEP: Destroying namespace "fail-closed-namespace-2178" for this suite. @ 05/07/25 14:52:46.373
• [3.283 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 05/07/25 14:52:46.379
  I0507 14:52:46.379722 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 14:52:46.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:46.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:46.391
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-943.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-943.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 05/07/25 14:52:46.392
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-943.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-943.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/07/25 14:52:46.392
  STEP: creating a pod to probe /etc/hosts @ 05/07/25 14:52:46.392
  STEP: submitting the pod to kubernetes @ 05/07/25 14:52:46.392
  STEP: retrieving the pod @ 05/07/25 14:52:48.405
  STEP: looking for the results for each expected name from probers @ 05/07/25 14:52:48.408
  I0507 14:52:48.418513 25 dns_common.go:546] DNS probes using dns-943/dns-test-868ecaea-917f-437f-aed9-06797ebd93fe succeeded

  STEP: deleting the pod @ 05/07/25 14:52:48.418
  I0507 14:52:48.431605 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-943" for this suite. @ 05/07/25 14:52:48.44
• [2.065 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/07/25 14:52:48.444
  I0507 14:52:48.444454 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:52:48.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:48.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:48.455
  STEP: Creating projection with secret that has name projected-secret-test-map-e4e7e0ef-8899-494b-be41-4b7f87124e9f @ 05/07/25 14:52:48.458
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:52:48.461
  STEP: Saw pod success @ 05/07/25 14:52:52.48
  I0507 14:52:52.483611 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-77c9d05e-70ad-4f8b-9039-4f0d33e1d2c1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 14:52:52.49
  I0507 14:52:52.504380 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-184" for this suite. @ 05/07/25 14:52:52.507
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/07/25 14:52:52.513
  I0507 14:52:52.513102 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 14:52:52.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:52.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:52.528
  STEP: creating a ConfigMap @ 05/07/25 14:52:52.531
  STEP: fetching the ConfigMap @ 05/07/25 14:52:52.535
  STEP: patching the ConfigMap @ 05/07/25 14:52:52.538
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/07/25 14:52:52.542
  STEP: deleting the ConfigMap by collection with a label selector @ 05/07/25 14:52:52.544
  STEP: listing all ConfigMaps in test namespace @ 05/07/25 14:52:52.549
  I0507 14:52:52.551915 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1613" for this suite. @ 05/07/25 14:52:52.61
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/07/25 14:52:52.617
  I0507 14:52:52.617713 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename subpath @ 05/07/25 14:52:52.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:52:52.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:52:52.632
  STEP: Setting up data @ 05/07/25 14:52:52.635
  STEP: Creating pod pod-subpath-test-configmap-466h @ 05/07/25 14:52:52.644
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 14:52:52.644
  STEP: Saw pod success @ 05/07/25 14:53:14.72
  I0507 14:53:14.723941 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-466h container test-container-subpath-configmap-466h: <nil>
  STEP: delete the pod @ 05/07/25 14:53:14.735
  STEP: Deleting pod pod-subpath-test-configmap-466h @ 05/07/25 14:53:14.745
  I0507 14:53:14.746055 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-466h" in namespace "subpath-9209"
  I0507 14:53:14.748429 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9209" for this suite. @ 05/07/25 14:53:14.751
• [22.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/07/25 14:53:14.758
  I0507 14:53:14.758492 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 14:53:14.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:14.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:14.769
  STEP: set up a multi version CRD @ 05/07/25 14:53:14.771
  I0507 14:53:14.771850 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: mark a version not serverd @ 05/07/25 14:53:17.754
  STEP: check the unserved version gets removed @ 05/07/25 14:53:17.766
  STEP: check the other version is not changed @ 05/07/25 14:53:18.41
  I0507 14:53:20.752582 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6579" for this suite. @ 05/07/25 14:53:20.757
• [6.004 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 05/07/25 14:53:20.762
  I0507 14:53:20.762550 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 14:53:20.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:20.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:20.771
  STEP: creating service in namespace services-8780 @ 05/07/25 14:53:20.773
  STEP: creating service affinity-clusterip-transition in namespace services-8780 @ 05/07/25 14:53:20.773
  STEP: creating replication controller affinity-clusterip-transition in namespace services-8780 @ 05/07/25 14:53:20.781
  I0507 14:53:20.788243      25 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8780, replica count: 3
  I0507 14:53:23.841133      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 14:53:23.848092 25 resource.go:361] Creating new exec pod
  I0507 14:53:26.861662 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8780 exec execpod-affinityt5qsk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0507 14:53:26.963086 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.100.0.170) 80 port [tcp/http] succeeded!\n"
  I0507 14:53:26.963149 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:53:26.963248 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8780 exec execpod-affinityt5qsk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.0.170 80'
  I0507 14:53:27.071845 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.0.170 80\nConnection to 10.100.0.170 80 port [tcp/http] succeeded!\n"
  I0507 14:53:27.071910 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 14:53:27.081686 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8780 exec execpod-affinityt5qsk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.100.0.170:80/ ; done'
  I0507 14:53:27.253007 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n"
  I0507 14:53:27.253040 25 builder.go:147] stdout: "\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-j5wnr\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-7vpdq\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-7vpdq\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-7vpdq\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-7vpdq\naffinity-clusterip-transition-j5wnr\naffinity-clusterip-transition-7vpdq\naffinity-clusterip-transition-7vpdq\naffinity-clusterip-transition-xxz2c"
  I0507 14:53:27.253051 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253058 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253063 25 service.go:242] Received response from host: affinity-clusterip-transition-j5wnr
  I0507 14:53:27.253067 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253076 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253081 25 service.go:242] Received response from host: affinity-clusterip-transition-7vpdq
  I0507 14:53:27.253085 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253092 25 service.go:242] Received response from host: affinity-clusterip-transition-7vpdq
  I0507 14:53:27.253097 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253103 25 service.go:242] Received response from host: affinity-clusterip-transition-7vpdq
  I0507 14:53:27.253107 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.253112 25 service.go:242] Received response from host: affinity-clusterip-transition-7vpdq
  I0507 14:53:27.253117 25 service.go:242] Received response from host: affinity-clusterip-transition-j5wnr
  I0507 14:53:27.253121 25 service.go:242] Received response from host: affinity-clusterip-transition-7vpdq
  I0507 14:53:27.253126 25 service.go:242] Received response from host: affinity-clusterip-transition-7vpdq
  I0507 14:53:27.253130 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.258964 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-8780 exec execpod-affinityt5qsk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.100.0.170:80/ ; done'
  I0507 14:53:27.425746 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.100.0.170:80/\n"
  I0507 14:53:27.425808 25 builder.go:147] stdout: "\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c\naffinity-clusterip-transition-xxz2c"
  I0507 14:53:27.425831 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425846 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425858 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425869 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425883 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425894 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425904 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425915 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425927 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425938 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425949 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425960 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425977 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425988 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.425998 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.426009 25 service.go:242] Received response from host: affinity-clusterip-transition-xxz2c
  I0507 14:53:27.426093 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8780, will wait for the garbage collector to delete the pods @ 05/07/25 14:53:27.435
  I0507 14:53:27.493316 25 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 4.689248ms
  I0507 14:53:27.594434 25 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.100559ms
  I0507 14:53:30.813461 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8780" for this suite. @ 05/07/25 14:53:30.817
• [10.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/07/25 14:53:30.824
  I0507 14:53:30.824261 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 14:53:30.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:30.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:30.837
  STEP: Creating configMap with name projected-configmap-test-volume-map-bd4199b2-bb33-44e3-90ce-e2d39373dead @ 05/07/25 14:53:30.84
  STEP: Creating a pod to test consume configMaps @ 05/07/25 14:53:30.845
  STEP: Saw pod success @ 05/07/25 14:53:34.864
  I0507 14:53:34.867358 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-8d069c09-78a8-417b-86a0-0b11232198f0 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 14:53:34.874
  I0507 14:53:34.890858 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2518" for this suite. @ 05/07/25 14:53:34.894
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/07/25 14:53:34.901
  I0507 14:53:34.901467 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 14:53:34.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:34.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:34.915
  I0507 14:53:36.935069 25 delete.go:62] Deleting pod "var-expansion-57b23049-c59c-48a2-abe7-3f59d0a2f715" in namespace "var-expansion-86"
  I0507 14:53:36.943697 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-57b23049-c59c-48a2-abe7-3f59d0a2f715" to be fully deleted
  I0507 14:53:38.953590 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-86" for this suite. @ 05/07/25 14:53:38.957
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/07/25 14:53:38.964
  I0507 14:53:38.964343 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/07/25 14:53:38.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:38.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:38.977
  STEP: Creating 50 configmaps @ 05/07/25 14:53:38.979
  STEP: Creating RC which spawns configmap-volume pods @ 05/07/25 14:53:39.221
  I0507 14:53:39.331172 25 resource.go:87] Pod name wrapped-volume-race-c97ead01-1d0a-4917-bf7e-87be9afbfa36: Found 3 pods out of 5
  I0507 14:53:44.338149 25 resource.go:87] Pod name wrapped-volume-race-c97ead01-1d0a-4917-bf7e-87be9afbfa36: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/07/25 14:53:44.338
  STEP: Creating RC which spawns configmap-volume pods @ 05/07/25 14:53:44.353
  I0507 14:53:44.368386 25 resource.go:87] Pod name wrapped-volume-race-ebe5629e-181b-4ad8-8d43-7b292b9a4f28: Found 1 pods out of 5
  I0507 14:53:49.377877 25 resource.go:87] Pod name wrapped-volume-race-ebe5629e-181b-4ad8-8d43-7b292b9a4f28: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/07/25 14:53:49.377
  STEP: Creating RC which spawns configmap-volume pods @ 05/07/25 14:53:49.4
  I0507 14:53:49.420760 25 resource.go:87] Pod name wrapped-volume-race-8259f736-7fa2-49ea-b9b8-e03bc2dce35a: Found 1 pods out of 5
  I0507 14:53:54.430884 25 resource.go:87] Pod name wrapped-volume-race-8259f736-7fa2-49ea-b9b8-e03bc2dce35a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/07/25 14:53:54.43
  STEP: deleting ReplicationController wrapped-volume-race-8259f736-7fa2-49ea-b9b8-e03bc2dce35a in namespace emptydir-wrapper-5493, will wait for the garbage collector to delete the pods @ 05/07/25 14:53:54.448
  I0507 14:53:54.509648 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-8259f736-7fa2-49ea-b9b8-e03bc2dce35a took: 7.901461ms
  I0507 14:53:54.609984 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-8259f736-7fa2-49ea-b9b8-e03bc2dce35a pods took: 100.339269ms
  STEP: deleting ReplicationController wrapped-volume-race-ebe5629e-181b-4ad8-8d43-7b292b9a4f28 in namespace emptydir-wrapper-5493, will wait for the garbage collector to delete the pods @ 05/07/25 14:53:55.511
  I0507 14:53:55.572162 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-ebe5629e-181b-4ad8-8d43-7b292b9a4f28 took: 8.497518ms
  I0507 14:53:55.673238 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-ebe5629e-181b-4ad8-8d43-7b292b9a4f28 pods took: 101.078668ms
  STEP: deleting ReplicationController wrapped-volume-race-c97ead01-1d0a-4917-bf7e-87be9afbfa36 in namespace emptydir-wrapper-5493, will wait for the garbage collector to delete the pods @ 05/07/25 14:53:56.574
  I0507 14:53:56.639881 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-c97ead01-1d0a-4917-bf7e-87be9afbfa36 took: 10.21002ms
  I0507 14:53:56.740688 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-c97ead01-1d0a-4917-bf7e-87be9afbfa36 pods took: 100.806181ms
  STEP: Cleaning up the configMaps @ 05/07/25 14:53:57.641
  I0507 14:53:57.841918 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5493" for this suite. @ 05/07/25 14:53:57.845
• [18.885 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 05/07/25 14:53:57.849
  I0507 14:53:57.849459 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pv @ 05/07/25 14:53:57.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:57.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:57.862
  STEP: Creating initial PV and PVC @ 05/07/25 14:53:57.864
  I0507 14:53:57.865031 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-216" @ 05/07/25 14:53:57.874
  STEP: Listing PVCs in namespace "pv-216" @ 05/07/25 14:53:57.876
  STEP: Reading "pvc-4kq64" Status @ 05/07/25 14:53:57.877
  STEP: Reading "pv-216-rqdcz" Status @ 05/07/25 14:53:57.88
  STEP: Patching "pvc-4kq64" Status @ 05/07/25 14:53:57.884
  STEP: Patching "pv-216-rqdcz" Status @ 05/07/25 14:53:57.896
  STEP: Updating "pvc-4kq64" Status @ 05/07/25 14:53:57.899
  STEP: Updating "pv-216-rqdcz" Status @ 05/07/25 14:53:57.904
  I0507 14:53:57.908541 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0507 14:53:57.908565 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-4kq64"
  I0507 14:53:57.911067 25 pv.go:193] Deleting PersistentVolume "pv-216-rqdcz"
  I0507 14:53:57.914551 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-216" for this suite. @ 05/07/25 14:53:57.947
• [0.106 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/07/25 14:53:57.955
  I0507 14:53:57.955407 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename init-container @ 05/07/25 14:53:57.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:53:57.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:53:57.969
  STEP: creating the pod @ 05/07/25 14:53:57.971
  I0507 14:53:57.971865 25 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0507 14:54:41.367639 25 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ee1526f0-8aa8-483c-8fc8-2080162338bf", GenerateName:"", Namespace:"init-container-2013", SelfLink:"", UID:"de59d5e5-31fe-46f3-bf8c-a8097b6eaa64", ResourceVersion:"17399", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"971851581"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f5b7a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 14, 54, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f5b7d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-m7pz8", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003f177c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-m7pz8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-m7pz8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-m7pz8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0069d1348), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8sconformance-m02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0069e8cf0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0069d13c0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0069d13e0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0069d13e8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0069d13ec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000efd220), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 14, 53, 58, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.49.3", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.49.3"}}, PodIP:"10.244.1.13", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.13"}}, StartTime:time.Date(2025, time.May, 7, 14, 53, 57, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004392ee0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004392f50)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://e5d02b0c31c1bf3d583276914a06a687cbdbe958cb5925b754b7ed7be71b9f45", Started:(*bool)(0xc0069d149a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-m7pz8", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000efd240)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003f17840), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0069d14ad), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-m7pz8", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000efd250)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003f17800), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0069d146f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-m7pz8", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000efd230)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0507 14:54:41.367857 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2013" for this suite. @ 05/07/25 14:54:41.371
• [43.421 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/07/25 14:54:41.375
  I0507 14:54:41.375916 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 14:54:41.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:54:41.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:54:41.389
  STEP: creating the policy @ 05/07/25 14:54:41.404
  STEP: waiting until the marker is denied @ 05/07/25 14:54:41.411
  STEP: testing a replicated Deployment to be allowed @ 05/07/25 14:54:41.521
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/07/25 14:54:41.534
  I0507 14:54:41.577541 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9775" for this suite. @ 05/07/25 14:54:41.582
• [0.210 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 05/07/25 14:54:41.586
  I0507 14:54:41.586138 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 14:54:41.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:54:41.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:54:41.594
  STEP: Creating service test in namespace statefulset-9130 @ 05/07/25 14:54:41.595
  STEP: Creating stateful set ss in namespace statefulset-9130 @ 05/07/25 14:54:41.599
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9130 @ 05/07/25 14:54:41.602
  I0507 14:54:41.604641 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0507 14:54:51.609124 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/07/25 14:54:51.609
  I0507 14:54:51.611854 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:54:51.712568 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:54:51.712625 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:54:51.712652 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:54:51.715794 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0507 14:55:01.721597 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:55:01.721678 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0507 14:55:01.738383 25 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I0507 14:55:01.738527 25 resource.go:175] ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:41 +0000 UTC  }]
  I0507 14:55:01.738547 25 resource.go:175] ss-2                      Pending         []
  I0507 14:55:01.738561 25 resource.go:178] 
  I0507 14:55:01.738577 25 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  I0507 14:55:02.744553 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.99396035s
  I0507 14:55:03.751585 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.987039757s
  I0507 14:55:04.756825 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.980769617s
  I0507 14:55:05.763551 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.975531437s
  I0507 14:55:06.770594 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.967878799s
  I0507 14:55:07.777311 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.96175837s
  I0507 14:55:08.782925 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.955015484s
  I0507 14:55:09.789333 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.949443585s
  I0507 14:55:10.796135 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 942.264307ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9130 @ 05/07/25 14:55:11.796
  I0507 14:55:11.802803 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:55:11.904552 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 14:55:11.904592 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:55:11.904614 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:55:11.904654 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:55:11.990985 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0507 14:55:11.991040 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:55:11.991061 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:55:11.991122 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 14:55:12.100825 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0507 14:55:12.100879 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 14:55:12.100905 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 14:55:12.104407 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0507 14:55:22.108636 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:55:22.108691 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 14:55:22.108714 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/07/25 14:55:22.108
  I0507 14:55:22.111622 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:55:22.208310 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:55:22.208384 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:55:22.208411 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:55:22.208484 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:55:22.321580 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:55:22.321642 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:55:22.321665 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:55:22.321735 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=statefulset-9130 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 14:55:22.405926 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 14:55:22.405971 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 14:55:22.405987 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 14:55:22.406000 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0507 14:55:22.408059 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0507 14:55:32.415495 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:55:32.415566 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:55:32.415587 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0507 14:55:32.430110 25 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I0507 14:55:32.430217 25 resource.go:175] ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:54:41 +0000 UTC  }]
  I0507 14:55:32.430258 25 resource.go:175] ss-1  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:02 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:01 +0000 UTC  }]
  I0507 14:55:32.430294 25 resource.go:175] ss-2  k8sconformance      Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:01 +0000 UTC  }]
  I0507 14:55:32.430308 25 resource.go:178] 
  I0507 14:55:32.430322 25 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0507 14:55:33.436805 25 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0507 14:55:33.436910 25 resource.go:175] ss-2  k8sconformance  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:01 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:23 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:23 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 14:55:01 +0000 UTC  }]
  I0507 14:55:33.436927 25 resource.go:178] 
  I0507 14:55:33.436941 25 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 1
  I0507 14:55:34.441113 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.984709268s
  I0507 14:55:35.443617 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.981097984s
  I0507 14:55:36.448204 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.977683779s
  I0507 14:55:37.453284 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.973884132s
  I0507 14:55:38.459174 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.968514479s
  I0507 14:55:39.464448 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.962706606s
  I0507 14:55:40.470462 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.957528821s
  I0507 14:55:41.476335 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 950.774318ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9130 @ 05/07/25 14:55:42.476
  I0507 14:55:42.482592 25 rest.go:152] Scaling statefulset ss to 0
  I0507 14:55:42.487482 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 14:55:42.489649 25 statefulset.go:138] Deleting all statefulset in ns statefulset-9130
  I0507 14:55:42.492111 25 rest.go:152] Scaling statefulset ss to 0
  I0507 14:55:42.496231 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 14:55:42.498357 25 rest.go:90] Deleting statefulset ss
  I0507 14:55:42.509782 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9130" for this suite. @ 05/07/25 14:55:42.512
• [60.933 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/07/25 14:55:42.519
  I0507 14:55:42.519069 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-watch @ 05/07/25 14:55:42.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:55:42.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:55:42.531
  I0507 14:55:42.533719 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Creating first CR  @ 05/07/25 14:55:45.074
  I0507 14:55:45.078608 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T14:55:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T14:55:45Z]] name:name1 resourceVersion:17720 uid:4f54d3a6-2f6b-4705-bfc0-a0ca5d7f9ddb] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/07/25 14:55:55.079
  I0507 14:55:55.088556 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T14:55:55Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T14:55:55Z]] name:name2 resourceVersion:17761 uid:6fb05f6a-f851-4553-8bbf-c8d43b7b945c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/07/25 14:56:05.09
  I0507 14:56:05.100122 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T14:55:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T14:56:05Z]] name:name1 resourceVersion:17771 uid:4f54d3a6-2f6b-4705-bfc0-a0ca5d7f9ddb] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/07/25 14:56:15.103
  I0507 14:56:15.112600 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T14:55:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T14:56:15Z]] name:name2 resourceVersion:17781 uid:6fb05f6a-f851-4553-8bbf-c8d43b7b945c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/07/25 14:56:25.113
  I0507 14:56:25.123595 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T14:55:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T14:56:05Z]] name:name1 resourceVersion:17791 uid:4f54d3a6-2f6b-4705-bfc0-a0ca5d7f9ddb] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/07/25 14:56:35.124
  I0507 14:56:35.133597 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T14:55:55Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T14:56:15Z]] name:name2 resourceVersion:17801 uid:6fb05f6a-f851-4553-8bbf-c8d43b7b945c] num:map[num1:9223372036854775807 num2:1000000]]}
  I0507 14:56:45.646958 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9317" for this suite. @ 05/07/25 14:56:45.65
• [63.138 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/07/25 14:56:45.657
  I0507 14:56:45.657348 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 14:56:45.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:56:45.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:56:45.671
  STEP: creating secret secrets-8668/secret-test-9577968f-1241-423a-b1c8-f1361ce994fd @ 05/07/25 14:56:45.674
  STEP: Creating a pod to test consume secrets @ 05/07/25 14:56:45.677
  STEP: Saw pod success @ 05/07/25 14:56:47.692
  I0507 14:56:47.696010 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-c971f0e9-e85c-4a46-8c36-2f6ed1af2256 container env-test: <nil>
  STEP: delete the pod @ 05/07/25 14:56:47.711
  I0507 14:56:47.724682 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8668" for this suite. @ 05/07/25 14:56:47.727
• [2.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 05/07/25 14:56:47.732
  I0507 14:56:47.732863 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/07/25 14:56:47.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:56:47.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:56:47.742
  I0507 14:56:47.745017 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 14:57:47.746879 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0507 14:57:47.753100 25 taints.go:144] Starting informer...
  STEP: Starting pods... @ 05/07/25 14:57:47.753
  I0507 14:57:47.974844 25 taints.go:463] Pod1 is running on k8sconformance-m02. Tainting Node
  I0507 14:57:50.198078 25 taints.go:471] Pod2 is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/07/25 14:57:50.198
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 14:57:50.21
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/07/25 14:57:50.214
  I0507 14:57:55.931054 25 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0507 14:58:16.083615 25 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 14:58:16.097
  I0507 14:58:16.101049 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2027" for this suite. @ 05/07/25 14:58:16.104
• [88.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 05/07/25 14:58:16.112
  I0507 14:58:16.112477 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename taint-single-pod @ 05/07/25 14:58:16.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 14:58:16.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 14:58:16.128
  I0507 14:58:16.129608 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 14:59:16.130088 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0507 14:59:16.135892 25 taints.go:144] Starting informer...
  STEP: Starting pod... @ 05/07/25 14:59:16.135
  I0507 14:59:16.353708 25 taints.go:294] Pod is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/07/25 14:59:16.353
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 14:59:16.368
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/07/25 14:59:16.372
  I0507 14:59:16.372659 25 taints.go:313] Pod wasn't evicted. Proceeding
  I0507 14:59:16.372694 25 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 14:59:16.391
  STEP: Waiting some time to make sure that toleration time passed. @ 05/07/25 14:59:16.396
  I0507 15:00:31.396646 25 taints.go:329] Pod wasn't evicted. Test successful
  I0507 15:00:31.397032 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8409" for this suite. @ 05/07/25 15:00:31.402
• [135.298 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 05/07/25 15:00:31.41
  I0507 15:00:31.410451 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 15:00:31.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:00:31.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:00:31.423
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/07/25 15:00:31.427
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/07/25 15:00:31.427
  STEP: creating a pod to probe DNS @ 05/07/25 15:00:31.427
  STEP: submitting the pod to kubernetes @ 05/07/25 15:00:31.427
  STEP: retrieving the pod @ 05/07/25 15:00:33.443
  STEP: looking for the results for each expected name from probers @ 05/07/25 15:00:33.445
  I0507 15:00:33.456159 25 dns_common.go:546] DNS probes using dns-5357/dns-test-3e1b8508-9b6a-45a3-a796-97588c8bddc1 succeeded

  STEP: deleting the pod @ 05/07/25 15:00:33.456
  I0507 15:00:33.466564 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5357" for this suite. @ 05/07/25 15:00:33.469
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/07/25 15:00:33.477
  I0507 15:00:33.477105 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 15:00:33.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:00:33.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:00:33.487
  STEP: Creating secret with name secret-test-aea639db-7ff8-4e3f-9dda-46eff6bcfee2 @ 05/07/25 15:00:33.499
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:00:33.502
  STEP: Saw pod success @ 05/07/25 15:00:37.522
  I0507 15:00:37.525490 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-5f82adc8-a971-4cd8-af00-eb509bcf862a container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:00:37.542
  I0507 15:00:37.559838 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9280" for this suite. @ 05/07/25 15:00:37.563
  STEP: Destroying namespace "secret-namespace-3681" for this suite. @ 05/07/25 15:00:37.567
• [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 05/07/25 15:00:37.573
  I0507 15:00:37.573383 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 15:00:37.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:00:37.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:00:37.585
  STEP: Creating Indexed job @ 05/07/25 15:00:37.588
  STEP: Ensuring job reaches completions @ 05/07/25 15:00:37.594
  STEP: Ensuring pods with index for job exist @ 05/07/25 15:00:45.616
  I0507 15:00:45.619485 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1255" for this suite. @ 05/07/25 15:00:45.622
• [8.056 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 05/07/25 15:00:45.629
  I0507 15:00:45.629602 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 15:00:45.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:00:45.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:00:45.642
  STEP: Setting up server cert @ 05/07/25 15:00:45.659
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 15:00:45.846
  STEP: Deploying the webhook pod @ 05/07/25 15:00:45.849
  STEP: Wait for the deployment to be ready @ 05/07/25 15:00:45.856
  I0507 15:00:45.860522 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 15:00:47.871
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:00:47.883
  I0507 15:00:48.883986 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/07/25 15:00:48.894
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/07/25 15:00:48.895
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/07/25 15:00:48.895
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/07/25 15:00:48.896
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/07/25 15:00:48.897
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/07/25 15:00:48.897
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/07/25 15:00:48.898
  I0507 15:00:48.933518 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2563" for this suite. @ 05/07/25 15:00:48.935
  STEP: Destroying namespace "webhook-markers-2431" for this suite. @ 05/07/25 15:00:48.939
• [3.314 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 05/07/25 15:00:48.943
  I0507 15:00:48.943327 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:00:48.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:00:48.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:00:48.951
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3815 @ 05/07/25 15:00:48.952
  STEP: changing the ExternalName service to type=ClusterIP @ 05/07/25 15:00:48.955
  STEP: creating replication controller externalname-service in namespace services-3815 @ 05/07/25 15:00:48.967
  I0507 15:00:48.971979      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3815, replica count: 2
  I0507 15:00:52.023074      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 15:00:52.023147 25 resource.go:361] Creating new exec pod
  I0507 15:00:55.042149 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3815 exec execpod78g9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 15:00:55.140480 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.97.164.34) 80 port [tcp/http] succeeded!\n"
  I0507 15:00:55.140548 25 builder.go:147] stdout: ""
  I0507 15:00:56.042952 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3815 exec execpod78g9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 15:00:56.155539 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.97.164.34) 80 port [tcp/http] succeeded!\n"
  I0507 15:00:56.155599 25 builder.go:147] stdout: "externalname-service-czzgh"
  I0507 15:00:56.155687 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3815 exec execpod78g9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.164.34 80'
  I0507 15:00:56.244547 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.164.34 80\nConnection to 10.97.164.34 80 port [tcp/http] succeeded!\n"
  I0507 15:00:56.244580 25 builder.go:147] stdout: "externalname-service-tkvrw"
  I0507 15:00:56.244640 25 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0507 15:00:56.262720 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3815" for this suite. @ 05/07/25 15:00:56.265
• [7.325 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/07/25 15:00:56.268
  I0507 15:00:56.268366 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 15:00:56.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:00:56.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:00:56.28
  STEP: Creating a cronjob @ 05/07/25 15:00:56.282
  STEP: Ensuring more than one job is running at a time @ 05/07/25 15:00:56.286
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/07/25 15:02:00.292
  STEP: Removing cronjob @ 05/07/25 15:02:00.295
  I0507 15:02:00.303160 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5761" for this suite. @ 05/07/25 15:02:00.307
• [64.045 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 05/07/25 15:02:00.313
  I0507 15:02:00.314078 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 15:02:00.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:00.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:00.333
  STEP: Setting up server cert @ 05/07/25 15:02:00.354
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 15:02:00.493
  STEP: Deploying the webhook pod @ 05/07/25 15:02:00.499
  STEP: Wait for the deployment to be ready @ 05/07/25 15:02:00.506
  I0507 15:02:00.510870 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 15:02:02.523
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:02:02.535
  I0507 15:02:03.535818 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/07/25 15:02:03.543
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 15:02:03.563
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/07/25 15:02:03.572
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 15:02:03.579
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/07/25 15:02:03.59
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 15:02:03.597
  I0507 15:02:03.663108 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3991" for this suite. @ 05/07/25 15:02:03.665
  STEP: Destroying namespace "webhook-markers-700" for this suite. @ 05/07/25 15:02:03.669
• [3.359 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 05/07/25 15:02:03.672
  I0507 15:02:03.672649 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 15:02:03.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:03.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:03.679
  STEP: Setting up server cert @ 05/07/25 15:02:03.691
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 15:02:04.128
  STEP: Deploying the webhook pod @ 05/07/25 15:02:04.131
  STEP: Wait for the deployment to be ready @ 05/07/25 15:02:04.138
  I0507 15:02:04.142217 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 15:02:06.154
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:02:06.167
  I0507 15:02:07.168166 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/07/25 15:02:07.174
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 15:02:07.174
  I0507 15:02:07.190700 25 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/07/25 15:02:07.304
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/07/25 15:02:08.316
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 15:02:08.316
  STEP: Having no error when timeout is longer than webhook latency @ 05/07/25 15:02:09.348
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 15:02:09.348
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/07/25 15:02:14.38
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 15:02:14.38
  I0507 15:02:19.455844 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4062" for this suite. @ 05/07/25 15:02:19.46
  STEP: Destroying namespace "webhook-markers-1501" for this suite. @ 05/07/25 15:02:19.465
• [15.796 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/07/25 15:02:19.469
  I0507 15:02:19.469297 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename subpath @ 05/07/25 15:02:19.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:19.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:19.481
  STEP: Setting up data @ 05/07/25 15:02:19.482
  STEP: Creating pod pod-subpath-test-downwardapi-r99v @ 05/07/25 15:02:19.488
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 15:02:19.488
  STEP: Saw pod success @ 05/07/25 15:02:43.566
  I0507 15:02:43.569204 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-downwardapi-r99v container test-container-subpath-downwardapi-r99v: <nil>
  STEP: delete the pod @ 05/07/25 15:02:43.584
  STEP: Deleting pod pod-subpath-test-downwardapi-r99v @ 05/07/25 15:02:43.599
  I0507 15:02:43.600011 25 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-r99v" in namespace "subpath-9874"
  I0507 15:02:43.602728 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9874" for this suite. @ 05/07/25 15:02:43.605
• [24.143 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/07/25 15:02:43.612
  I0507 15:02:43.612342 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 15:02:43.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:43.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:43.623
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 15:02:43.626
  STEP: Saw pod success @ 05/07/25 15:02:47.647
  I0507 15:02:47.649597 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-894708be-ac3a-4ea4-b73f-e350ad0de88d container client-container: <nil>
  STEP: delete the pod @ 05/07/25 15:02:47.656
  I0507 15:02:47.669772 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8565" for this suite. @ 05/07/25 15:02:47.673
• [4.066 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/07/25 15:02:47.678
  I0507 15:02:47.678399 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:02:47.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:47.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:47.691
  STEP: Creating projection with secret that has name projected-secret-test-67c6c4b5-c40e-4583-8ab1-ed49366bfd6a @ 05/07/25 15:02:47.693
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:02:47.697
  STEP: Saw pod success @ 05/07/25 15:02:51.716
  I0507 15:02:51.719485 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-40f0544e-3f27-4b6c-9c58-7de69a60cfd4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:02:51.726
  I0507 15:02:51.744358 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9918" for this suite. @ 05/07/25 15:02:51.747
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/07/25 15:02:51.753
  I0507 15:02:51.753176 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename events @ 05/07/25 15:02:51.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:51.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:51.765
  STEP: creating a test event @ 05/07/25 15:02:51.768
  STEP: listing events in all namespaces @ 05/07/25 15:02:51.774
  STEP: listing events in test namespace @ 05/07/25 15:02:51.777
  STEP: listing events with field selection filtering on source @ 05/07/25 15:02:51.779
  STEP: listing events with field selection filtering on reportingController @ 05/07/25 15:02:51.78
  STEP: getting the test event @ 05/07/25 15:02:51.782
  STEP: patching the test event @ 05/07/25 15:02:51.783
  STEP: getting the test event @ 05/07/25 15:02:51.79
  STEP: updating the test event @ 05/07/25 15:02:51.792
  STEP: getting the test event @ 05/07/25 15:02:51.796
  STEP: deleting the test event @ 05/07/25 15:02:51.798
  STEP: listing events in all namespaces @ 05/07/25 15:02:51.802
  STEP: listing events in test namespace @ 05/07/25 15:02:51.805
  I0507 15:02:51.807252 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3826" for this suite. @ 05/07/25 15:02:51.849
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/07/25 15:02:51.855
  I0507 15:02:51.855338 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 15:02:51.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:51.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:51.87
  I0507 15:02:51.873360 25 deployment.go:1196] Creating deployment "webserver-deployment"
  I0507 15:02:51.879554 25 deployment.go:1200] Waiting for observed generation 1
  I0507 15:02:53.887430 25 deployment.go:1205] Waiting for all required pods to come up
  I0507 15:02:53.891440 25 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/07/25 15:02:53.891
  I0507 15:02:53.891587 25 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0507 15:02:53.896492 25 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0507 15:02:53.907899 25 deployment.go:314] Updating deployment webserver-deployment
  I0507 15:02:53.907961 25 deployment.go:1224] Waiting for observed generation 2
  I0507 15:02:55.914642 25 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0507 15:02:55.918513 25 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0507 15:02:55.921777 25 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0507 15:02:55.929401 25 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0507 15:02:55.929450 25 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0507 15:02:55.933055 25 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0507 15:02:55.937070 25 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0507 15:02:55.937109 25 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0507 15:02:55.943655 25 deployment.go:314] Updating deployment webserver-deployment
  I0507 15:02:55.943709 25 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0507 15:02:55.948885 25 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0507 15:02:55.951928 25 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0507 15:02:55.960930 25 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32a30f25-c37d-476d-8d57-6a23284974ab",
      ResourceVersion: (string) (len=5) "19076",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 15:02:56.008043 25 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
      ResourceVersion: (string) (len=5) "19080",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "32a30f25-c37d-476d-8d57-6a23284974ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 61 33 30 66  32 35 2d 63 33 37 64 2d  |\"32a30f25-c37d-|
              00000120  34 37 36 64 2d 38 64 35  37 2d 36 61 32 33 32 38  |476d-8d57-6a2328|
              00000130  34 39 37 34 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4974ab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 15:02:56.008384 25 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0507 15:02:56.008752 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
      ResourceVersion: (string) (len=5) "19126",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "32a30f25-c37d-476d-8d57-6a23284974ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 61 33 30 66  32 35 2d 63 33 37 64 2d  |\"32a30f25-c37d-|
              00000120  34 37 36 64 2d 38 64 35  37 2d 36 61 32 33 32 38  |476d-8d57-6a2328|
              00000130  34 39 37 34 61 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4974ab\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 15:02:56.020863 25 deployment.go:68] Pod "webserver-deployment-685b768f58-49r8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-49r8m",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6dac6c1-2b4a-4e30-9506-34f30b08e4d9",
      ResourceVersion: (string) (len=5) "19140",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftv48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftv48",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ftv48",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.022213 25 deployment.go:68] Pod "webserver-deployment-685b768f58-59znk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-59znk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f966d00d-b5cf-49cc-8915-f1124e341e43",
      ResourceVersion: (string) (len=5) "19104",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gvpw5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gvpw5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gvpw5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.023494 25 deployment.go:68] Pod "webserver-deployment-685b768f58-5s4md" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5s4md",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9916be7a-9626-496f-ab80-724052b7d705",
      ResourceVersion: (string) (len=5) "18987",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  32 30 5c 22 7d 22 3a 7b  |.244.0.120\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzgzn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzgzn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6a6c164f75a28b07b4964f9b36cc453bb6a889a88c5e41d853304b54515316b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dzgzn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.024910 25 deployment.go:68] Pod "webserver-deployment-685b768f58-672mb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-672mb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6b396c2-e4e0-4229-91b8-a1c0491b2d63",
      ResourceVersion: (string) (len=5) "19125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vjr2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vjr2g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.025891 25 deployment.go:68] Pod "webserver-deployment-685b768f58-776rc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-776rc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d12c261-d9c3-4a9b-b244-0cd093139209",
      ResourceVersion: (string) (len=5) "18981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  31 38 5c 22 7d 22 3a 7b  |.244.0.118\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wtb6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wtb6p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://811842fb1ab7dc01f903de66151636f8e48dee5980f7f41edb0e762cb69b4259",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wtb6p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.027246 25 deployment.go:68] Pod "webserver-deployment-685b768f58-9kfzx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9kfzx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fc53c7d-3446-421f-ae8e-349913a55a7d",
      ResourceVersion: (string) (len=5) "18966",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  37 5c 22 7d 22 3a 7b 22  |.244.1.37\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qll4w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qll4w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://7a05d5a99b524c7cb575a67178640771f7036f488c3ec1f143f4d45f24f64969",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qll4w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.028633 25 deployment.go:68] Pod "webserver-deployment-685b768f58-dw2mr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dw2mr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fddabbb-b1fe-40c5-ac36-f2e17126a492",
      ResourceVersion: (string) (len=5) "19131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czsvj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czsvj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.029483 25 deployment.go:68] Pod "webserver-deployment-685b768f58-f49fw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f49fw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d15114f-499c-4e03-8059-0e690bdf43f8",
      ResourceVersion: (string) (len=5) "19127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-np4bk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-np4bk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.030407 25 deployment.go:68] Pod "webserver-deployment-685b768f58-ff8r8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ff8r8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9195b169-4082-4c15-be7b-0629fd90e2be",
      ResourceVersion: (string) (len=5) "19123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5dgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5dgr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s5dgr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.031498 25 deployment.go:68] Pod "webserver-deployment-685b768f58-fr8nq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fr8nq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78191e08-6efb-41c4-9b4f-d5602375f880",
      ResourceVersion: (string) (len=5) "19107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rgt7x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rgt7x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.032169 25 deployment.go:68] Pod "webserver-deployment-685b768f58-k7phm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-k7phm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3193a6e7-f7b5-4550-9e33-5fb7d78864dd",
      ResourceVersion: (string) (len=5) "19108",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78t2j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78t2j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.032877 25 deployment.go:68] Pod "webserver-deployment-685b768f58-kfdvl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kfdvl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38a4657f-6f65-4933-a367-68e27f989c62",
      ResourceVersion: (string) (len=5) "19129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hqsxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hqsxj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.033545 25 deployment.go:68] Pod "webserver-deployment-685b768f58-ksbpq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ksbpq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f050b3ab-1274-4856-86e7-ede856bfce83",
      ResourceVersion: (string) (len=5) "19106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-znqjq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-znqjq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.034246 25 deployment.go:68] Pod "webserver-deployment-685b768f58-nkfxf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nkfxf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "686233ac-29ca-4a8a-bf29-bb6f36bea985",
      ResourceVersion: (string) (len=5) "18975",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  38 5c 22 7d 22 3a 7b 22  |.244.1.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-68j5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-68j5p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://10c120c8e98b05e950a29949332b62284efdb4cde9002bfdcc3f6ed4d5c076c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-68j5p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.035592 25 deployment.go:68] Pod "webserver-deployment-685b768f58-nzxbv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nzxbv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "237e433a-350a-488f-a774-052233c06c13",
      ResourceVersion: (string) (len=5) "19139",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t5nm9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t5nm9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t5nm9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.036958 25 deployment.go:68] Pod "webserver-deployment-685b768f58-p268n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p268n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e3297f4-16f0-489f-b3aa-6966a0afa726",
      ResourceVersion: (string) (len=5) "18984",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  32 31 5c 22 7d 22 3a 7b  |.244.0.121\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbbzw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbbzw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://98481f4323d4461dba7e1f550b143d1745f5e03577368f86baf7ce4c25e7b5d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tbbzw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.038399 25 deployment.go:68] Pod "webserver-deployment-685b768f58-qjmcr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qjmcr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "391f0cee-7775-465f-ae4c-5bfea3082314",
      ResourceVersion: (string) (len=5) "19130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-227b6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-227b6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.039344 25 deployment.go:68] Pod "webserver-deployment-685b768f58-qvlxp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qvlxp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27762db6-cea7-4102-bd84-3375a34c436f",
      ResourceVersion: (string) (len=5) "18979",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  31 37 5c 22 7d 22 3a 7b  |.244.0.117\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzr2v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzr2v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://e01aaf83983607fac5eb18a4544d48adaf3e4c0787011a01f684e2bdd2690c60",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dzr2v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.040670 25 deployment.go:68] Pod "webserver-deployment-685b768f58-tvwrf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tvwrf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d3fc7bb-edd7-4fc0-8e48-675f420c2fb1",
      ResourceVersion: (string) (len=5) "18990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  31 39 5c 22 7d 22 3a 7b  |.244.0.119\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kvlgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kvlgr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6950b28e5466116519f4cb6ac61ca4c883953cb4d8a7a844a8e79d0c8d86aead",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kvlgr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.041459 25 deployment.go:68] Pod "webserver-deployment-685b768f58-vgghf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vgghf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b462f3b-8ab4-4102-81ab-2c0c2a74f37f",
      ResourceVersion: (string) (len=5) "18973",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a1ef7bec-bdea-4d19-92b4-1569e0efdd0c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  65 66 37 62 65 63 2d 62  |d\":\"a1ef7bec-b|
              00000090  64 65 61 2d 34 64 31 39  2d 39 32 62 34 2d 31 35  |dea-4d19-92b4-15|
              000000a0  36 39 65 30 65 66 64 64  30 63 5c 22 7d 22 3a 7b  |69e0efdd0c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  39 5c 22 7d 22 3a 7b 22  |.244.1.39\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xqmh2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xqmh2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882226972,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://c4b6f5d94e404f0ad37137c5106395b0d4f5d83b42ae5bf66bdff958841b1bdd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xqmh2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.042224 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4qh9v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4qh9v",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2334aa72-80bb-46ff-9115-1c5c42239889",
      ResourceVersion: (string) (len=5) "19133",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t9dxr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t9dxr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.042838 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7vf8b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7vf8b",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71d95d56-fd99-4cf8-887e-18f5d62a2706",
      ResourceVersion: (string) (len=5) "19071",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 34 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.42\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c576v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c576v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c576v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.043816 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-8sqbg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-8sqbg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "837aad99-9a9a-4f3b-8e17-4884a33137e5",
      ResourceVersion: (string) (len=5) "19074",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 34 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.43\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74j62",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74j62",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-74j62",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.044587 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9xq9z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9xq9z",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56907b2e-4f08-4ca0-a6a5-a8369e8ec9dd",
      ResourceVersion: (string) (len=5) "19060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 32 33 5c  22 7d 22 3a 7b 22 2e 22  |4.0.123\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gpdg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gpdg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gpdg7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.045276 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bns6j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bns6j",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2284879c-9a6f-467c-859d-4d928e36e8e8",
      ResourceVersion: (string) (len=5) "19100",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-twww5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-twww5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.045851 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cnl6f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cnl6f",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7472aa16-0e62-46aa-ad5a-0491ba51e53a",
      ResourceVersion: (string) (len=5) "19063",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 32 32 5c  22 7d 22 3a 7b 22 2e 22  |4.0.122\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cx2cv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cx2cv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cx2cv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.046719 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gw7d7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gw7d7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f9352ca-73b3-4dd7-b744-1a6778f1071e",
      ResourceVersion: (string) (len=5) "19103",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nlhq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nlhq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.047292 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jmvmh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jmvmh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "282305de-1aed-4472-baea-bcf7838b80d4",
      ResourceVersion: (string) (len=5) "19068",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 34 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.41\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wm5lw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wm5lw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wm5lw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.048022 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jw6vw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jw6vw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7965c79-220b-4bb8-a2ef-527af7ae1f62",
      ResourceVersion: (string) (len=5) "19134",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4stsr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4stsr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.048508 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-p8flp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-p8flp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e062cbbd-7fd3-44b2-97d7-b838fb39c898",
      ResourceVersion: (string) (len=5) "19124",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8sf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8sf7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.048974 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qbvss" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qbvss",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d015de5-d4e4-46d6-81ea-7ce1e52bcc4e",
      ResourceVersion: (string) (len=5) "19121",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dm5z8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dm5z8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.049464 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-r5bbh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-r5bbh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "907d504b-252f-41c5-819b-c790b63d4fd8",
      ResourceVersion: (string) (len=5) "19135",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q68qt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q68qt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.050010 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xbrbh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xbrbh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-2773",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fed0420b-3ac2-40a8-9c63-ce4f63f21988",
      ResourceVersion: (string) (len=5) "19118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "382a6fc6-0890-4ca3-abc8-fcc5211486ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  32 61 36 66 63 36 2d 30  |d\":\"382a6fc6-0|
              00000090  38 39 30 2d 34 63 61 33  2d 61 62 63 38 2d 66 63  |890-4ca3-abc8-fc|
              000000a0  63 35 32 31 31 34 38 36  65 64 5c 22 7d 22 3a 7b  |c5211486ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rfs4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rfs4n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882226975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882226975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rfs4n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:02:56.050806 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2773" for this suite. @ 05/07/25 15:02:56.053
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 05/07/25 15:02:56.058
  I0507 15:02:56.058884 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:02:56.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:02:56.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:02:56.065
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4198 @ 05/07/25 15:02:56.067
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/07/25 15:02:56.077
  STEP: creating service externalsvc in namespace services-4198 @ 05/07/25 15:02:56.077
  STEP: creating replication controller externalsvc in namespace services-4198 @ 05/07/25 15:02:56.085
  I0507 15:02:56.089713      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4198, replica count: 2
  I0507 15:02:59.141788      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/07/25 15:02:59.147
  I0507 15:02:59.164699 25 resource.go:361] Creating new exec pod
  I0507 15:03:01.176420 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-4198 exec execpod7ts2c -- /bin/sh -x -c nslookup clusterip-service.services-4198.svc.cluster.local'
  I0507 15:03:01.319595 25 builder.go:146] stderr: "+ nslookup clusterip-service.services-4198.svc.cluster.local\n"
  I0507 15:03:01.319641 25 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-4198.svc.cluster.local\tcanonical name = externalsvc.services-4198.svc.cluster.local.\nName:\texternalsvc.services-4198.svc.cluster.local\nAddress: 10.98.196.85\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4198, will wait for the garbage collector to delete the pods @ 05/07/25 15:03:01.319
  I0507 15:03:01.381088 25 resources.go:139] Deleting ReplicationController externalsvc took: 6.521557ms
  I0507 15:03:01.482097 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.008235ms
  I0507 15:03:04.603758 25 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0507 15:03:04.615362 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4198" for this suite. @ 05/07/25 15:03:04.62
• [8.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 05/07/25 15:03:04.63
  I0507 15:03:04.630762 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:03:04.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:04.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:04.641
  STEP: creating service in namespace services-7357 @ 05/07/25 15:03:04.643
  STEP: creating service affinity-clusterip in namespace services-7357 @ 05/07/25 15:03:04.644
  STEP: creating replication controller affinity-clusterip in namespace services-7357 @ 05/07/25 15:03:04.654
  I0507 15:03:04.661795      25 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7357, replica count: 3
  I0507 15:03:07.713415      25 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 15:03:07.720939 25 resource.go:361] Creating new exec pod
  I0507 15:03:10.736658 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-7357 exec execpod-affinitycv9kw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0507 15:03:10.839277 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.107.139.218) 80 port [tcp/http] succeeded!\n"
  I0507 15:03:10.839348 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:03:10.839444 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-7357 exec execpod-affinitycv9kw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.139.218 80'
  I0507 15:03:10.944642 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.139.218 80\nConnection to 10.107.139.218 80 port [tcp/http] succeeded!\n"
  I0507 15:03:10.944705 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:03:10.944779 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-7357 exec execpod-affinitycv9kw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.107.139.218:80/ ; done'
  I0507 15:03:11.107368 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.139.218:80/\n"
  I0507 15:03:11.107413 25 builder.go:147] stdout: "\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg\naffinity-clusterip-qnrjg"
  I0507 15:03:11.107430 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107442 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107451 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107458 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107466 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107473 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107490 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107497 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107513 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107520 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107528 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107535 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107543 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107550 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107560 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107566 25 service.go:242] Received response from host: affinity-clusterip-qnrjg
  I0507 15:03:11.107626 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7357, will wait for the garbage collector to delete the pods @ 05/07/25 15:03:11.114
  I0507 15:03:11.174438 25 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.849555ms
  I0507 15:03:11.275215 25 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.777667ms
  I0507 15:03:14.392657 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7357" for this suite. @ 05/07/25 15:03:14.397
• [9.772 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/07/25 15:03:14.403
  I0507 15:03:14.403206 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename csi-storageclass @ 05/07/25 15:03:14.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:14.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:14.418
  STEP: Creating a StorageClass @ 05/07/25 15:03:14.42
  STEP: Get StorageClass "e2e-tpzlr" @ 05/07/25 15:03:14.423
  STEP: Patching the StorageClass "e2e-tpzlr" @ 05/07/25 15:03:14.426
  STEP: Delete StorageClass "e2e-tpzlr" @ 05/07/25 15:03:14.431
  STEP: Confirm deletion of StorageClass "e2e-tpzlr" @ 05/07/25 15:03:14.435
  STEP: Create a replacement StorageClass @ 05/07/25 15:03:14.436
  STEP: Updating StorageClass "e2e-v2-2f5s7" @ 05/07/25 15:03:14.439
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-2f5s7=updated" @ 05/07/25 15:03:14.444
  STEP: Deleting StorageClass "e2e-v2-2f5s7" via DeleteCollection @ 05/07/25 15:03:14.446
  STEP: Confirm deletion of StorageClass "e2e-v2-2f5s7" @ 05/07/25 15:03:14.45
  I0507 15:03:14.452277 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3164" for this suite. @ 05/07/25 15:03:14.498
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/07/25 15:03:14.505
  I0507 15:03:14.505239 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sysctl @ 05/07/25 15:03:14.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:14.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:14.521
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/07/25 15:03:14.524
  I0507 15:03:14.529126 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3941" for this suite. @ 05/07/25 15:03:14.599
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/07/25 15:03:14.604
  I0507 15:03:14.604846 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:03:14.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:14.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:14.618
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/07/25 15:03:14.62
  STEP: Saw pod success @ 05/07/25 15:03:16.64
  I0507 15:03:16.643160 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-287234f0-c6da-4383-b8bc-82cb058ee619 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:03:16.649
  I0507 15:03:16.661537 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6896" for this suite. @ 05/07/25 15:03:16.664
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/07/25 15:03:16.67
  I0507 15:03:16.670968 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:03:16.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:16.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:16.683
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/07/25 15:03:16.685
  STEP: Saw pod success @ 05/07/25 15:03:18.698
  I0507 15:03:18.700157 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-8534190e-8fb3-4b95-9551-44d3c2055272 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:03:18.705
  I0507 15:03:18.715004 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9066" for this suite. @ 05/07/25 15:03:18.716
• [2.049 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 05/07/25 15:03:18.72
  I0507 15:03:18.720160 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 15:03:18.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:18.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:18.729
  STEP: Setting up server cert @ 05/07/25 15:03:18.742
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 15:03:19.058
  STEP: Deploying the webhook pod @ 05/07/25 15:03:19.063
  STEP: Wait for the deployment to be ready @ 05/07/25 15:03:19.07
  I0507 15:03:19.074327 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 15:03:21.087
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:03:21.1
  I0507 15:03:22.100416 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/07/25 15:03:22.109
  STEP: create a pod that should be updated by the webhook @ 05/07/25 15:03:22.126
  I0507 15:03:22.178218 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7116" for this suite. @ 05/07/25 15:03:22.182
  STEP: Destroying namespace "webhook-markers-486" for this suite. @ 05/07/25 15:03:22.19
• [3.476 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/07/25 15:03:22.196
  I0507 15:03:22.196572 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 15:03:22.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:22.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:22.207
  STEP: Create a ReplicaSet @ 05/07/25 15:03:22.21
  STEP: Verify that the required pods have come up @ 05/07/25 15:03:22.215
  I0507 15:03:22.217131 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0507 15:03:27.222123 25 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/07/25 15:03:27.222
  I0507 15:03:27.225595 25 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/07/25 15:03:27.225
  STEP: DeleteCollection of the ReplicaSets @ 05/07/25 15:03:27.228
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/07/25 15:03:27.238
  I0507 15:03:27.242386 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7685" for this suite. @ 05/07/25 15:03:27.247
• [5.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 05/07/25 15:03:27.263
  I0507 15:03:27.263233 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 15:03:27.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:27.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:27.273
  STEP: Creating a job @ 05/07/25 15:03:27.275
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/07/25 15:03:27.279
  STEP: patching /status @ 05/07/25 15:03:29.327
  STEP: updating /status @ 05/07/25 15:03:29.337
  STEP: get /status @ 05/07/25 15:03:29.344
  I0507 15:03:29.346855 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4097" for this suite. @ 05/07/25 15:03:29.35
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 05/07/25 15:03:29.355
  I0507 15:03:29.355588 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:03:29.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:29.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:29.368
  STEP: creating service in namespace services-9771 @ 05/07/25 15:03:29.37
  STEP: creating service affinity-nodeport-transition in namespace services-9771 @ 05/07/25 15:03:29.37
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9771 @ 05/07/25 15:03:29.385
  I0507 15:03:29.392422      25 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-9771, replica count: 3
  I0507 15:03:32.444165      25 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 15:03:32.452829 25 resource.go:361] Creating new exec pod
  I0507 15:03:35.464914 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-9771 exec execpod-affinityj8zwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0507 15:03:35.569144 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.107.248.195) 80 port [tcp/http] succeeded!\n"
  I0507 15:03:35.569194 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:03:35.569268 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-9771 exec execpod-affinityj8zwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.248.195 80'
  I0507 15:03:35.648756 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.248.195 80\nConnection to 10.107.248.195 80 port [tcp/http] succeeded!\n"
  I0507 15:03:35.648784 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:03:35.648830 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-9771 exec execpod-affinityj8zwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31640'
  I0507 15:03:35.746179 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31640\nConnection to 192.168.49.2 31640 port [tcp/*] succeeded!\n"
  I0507 15:03:35.746225 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:03:35.746288 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-9771 exec execpod-affinityj8zwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31640'
  I0507 15:03:35.833418 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31640\nConnection to 192.168.49.3 31640 port [tcp/*] succeeded!\n"
  I0507 15:03:35.833459 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:03:35.839667 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-9771 exec execpod-affinityj8zwc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31640/ ; done'
  I0507 15:03:36.022543 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n"
  I0507 15:03:36.022606 25 builder.go:147] stdout: "\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-2l8qs\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-2l8qs\naffinity-nodeport-transition-2l8qs\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-8c8g4\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58"
  I0507 15:03:36.022629 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022644 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022657 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022676 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022688 25 service.go:242] Received response from host: affinity-nodeport-transition-2l8qs
  I0507 15:03:36.022699 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022711 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022722 25 service.go:242] Received response from host: affinity-nodeport-transition-2l8qs
  I0507 15:03:36.022740 25 service.go:242] Received response from host: affinity-nodeport-transition-2l8qs
  I0507 15:03:36.022750 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022763 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022774 25 service.go:242] Received response from host: affinity-nodeport-transition-8c8g4
  I0507 15:03:36.022784 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.022795 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.022804 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.022814 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.030375 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-9771 exec execpod-affinityj8zwc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31640/ ; done'
  I0507 15:03:36.184637 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31640/\n"
  I0507 15:03:36.184685 25 builder.go:147] stdout: "\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58\naffinity-nodeport-transition-7wh58"
  I0507 15:03:36.184701 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184711 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184719 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184729 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184736 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184743 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184750 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184761 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184768 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184777 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184783 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184792 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184799 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184806 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184812 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184820 25 service.go:242] Received response from host: affinity-nodeport-transition-7wh58
  I0507 15:03:36.184882 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9771, will wait for the garbage collector to delete the pods @ 05/07/25 15:03:36.194
  I0507 15:03:36.254688 25 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.126218ms
  I0507 15:03:36.355554 25 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.807417ms
  I0507 15:03:39.076945 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9771" for this suite. @ 05/07/25 15:03:39.08
• [9.730 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/07/25 15:03:39.085
  I0507 15:03:39.085698 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:03:39.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:39.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:39.094
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 15:03:39.097
  STEP: Saw pod success @ 05/07/25 15:03:41.115
  I0507 15:03:41.118046 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-11a7160d-f061-4fc2-a482-b765420acacf container client-container: <nil>
  STEP: delete the pod @ 05/07/25 15:03:41.125
  I0507 15:03:41.139868 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1006" for this suite. @ 05/07/25 15:03:41.143
• [2.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 05/07/25 15:03:41.15
  I0507 15:03:41.150029 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:03:41.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:41.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:41.162
  STEP: creating a replication controller @ 05/07/25 15:03:41.164
  I0507 15:03:41.164589 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 create -f -'
  I0507 15:03:41.239206 25 builder.go:146] stderr: ""
  I0507 15:03:41.239237 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 15:03:41.239
  I0507 15:03:41.239307 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:03:41.293673 25 builder.go:146] stderr: ""
  I0507 15:03:41.293706 25 builder.go:147] stdout: "update-demo-nautilus-6cpzr update-demo-nautilus-wvcbs "
  I0507 15:03:41.293747 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-6cpzr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:03:41.329797 25 builder.go:146] stderr: ""
  I0507 15:03:41.329836 25 builder.go:147] stdout: ""
  I0507 15:03:41.329850 25 kubectl.go:2509] update-demo-nautilus-6cpzr is created but not running
  I0507 15:03:46.330358 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:03:46.383575 25 builder.go:146] stderr: ""
  I0507 15:03:46.383612 25 builder.go:147] stdout: "update-demo-nautilus-6cpzr update-demo-nautilus-wvcbs "
  I0507 15:03:46.383656 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-6cpzr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:03:46.420584 25 builder.go:146] stderr: ""
  I0507 15:03:46.420621 25 builder.go:147] stdout: ""
  I0507 15:03:46.420631 25 kubectl.go:2509] update-demo-nautilus-6cpzr is created but not running
  I0507 15:03:51.421123 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:03:51.463490 25 builder.go:146] stderr: ""
  I0507 15:03:51.463529 25 builder.go:147] stdout: "update-demo-nautilus-6cpzr update-demo-nautilus-wvcbs "
  I0507 15:03:51.463584 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-6cpzr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:03:51.502356 25 builder.go:146] stderr: ""
  I0507 15:03:51.502396 25 builder.go:147] stdout: ""
  I0507 15:03:51.502408 25 kubectl.go:2509] update-demo-nautilus-6cpzr is created but not running
  I0507 15:03:56.502814 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:03:56.539946 25 builder.go:146] stderr: ""
  I0507 15:03:56.539981 25 builder.go:147] stdout: "update-demo-nautilus-6cpzr update-demo-nautilus-wvcbs "
  I0507 15:03:56.540021 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-6cpzr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:03:56.576097 25 builder.go:146] stderr: ""
  I0507 15:03:56.576135 25 builder.go:147] stdout: "true"
  I0507 15:03:56.576176 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-6cpzr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:03:56.610571 25 builder.go:146] stderr: ""
  I0507 15:03:56.610607 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:03:56.610626 25 kubectl.go:2400] validating pod update-demo-nautilus-6cpzr
  I0507 15:03:56.612649 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:03:56.612704 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:03:56.612718 25 kubectl.go:2527] update-demo-nautilus-6cpzr is verified up and running
  I0507 15:03:56.612755 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-wvcbs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:03:56.652494 25 builder.go:146] stderr: ""
  I0507 15:03:56.652540 25 builder.go:147] stdout: "true"
  I0507 15:03:56.652585 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods update-demo-nautilus-wvcbs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:03:56.689236 25 builder.go:146] stderr: ""
  I0507 15:03:56.689270 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:03:56.689281 25 kubectl.go:2400] validating pod update-demo-nautilus-wvcbs
  I0507 15:03:56.691382 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:03:56.691417 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:03:56.691428 25 kubectl.go:2527] update-demo-nautilus-wvcbs is verified up and running
  STEP: using delete to clean up resources @ 05/07/25 15:03:56.691
  I0507 15:03:56.691492 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 delete --grace-period=0 --force -f -'
  I0507 15:03:56.738921 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:03:56.738956 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0507 15:03:56.739003 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get rc,svc -l name=update-demo --no-headers'
  I0507 15:03:56.798953 25 builder.go:146] stderr: "No resources found in kubectl-8706 namespace.\n"
  I0507 15:03:56.798990 25 builder.go:147] stdout: ""
  I0507 15:03:56.799032 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8706 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0507 15:03:56.842600 25 builder.go:146] stderr: ""
  I0507 15:03:56.842642 25 builder.go:147] stdout: ""
  I0507 15:03:56.842762 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8706" for this suite. @ 05/07/25 15:03:56.845
• [15.700 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 05/07/25 15:03:56.85
  I0507 15:03:56.850263 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 15:03:56.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:03:56.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:03:56.859
  STEP: Counting existing ResourceQuota @ 05/07/25 15:03:56.86
  STEP: Creating a ResourceQuota @ 05/07/25 15:04:01.864
  STEP: Ensuring resource quota status is calculated @ 05/07/25 15:04:01.868
  STEP: Creating a Pod that fits quota @ 05/07/25 15:04:03.874
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/07/25 15:04:03.891
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/07/25 15:04:05.897
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/07/25 15:04:05.9
  STEP: Ensuring a pod cannot update its resource requirements @ 05/07/25 15:04:05.904
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/07/25 15:04:05.908
  STEP: Deleting the pod @ 05/07/25 15:04:07.915
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 15:04:07.927
  I0507 15:04:09.933924 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6192" for this suite. @ 05/07/25 15:04:09.937
• [13.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/07/25 15:04:09.944
  I0507 15:04:09.944631 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:04:09.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:04:09.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:04:09.957
  STEP: Creating the pod @ 05/07/25 15:04:09.959
  I0507 15:04:12.498325 25 pod_client.go:173] Successfully updated pod "labelsupdate41524ac7-546a-4eac-91b5-2c2238a4404f"
  I0507 15:04:16.526427 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9617" for this suite. @ 05/07/25 15:04:16.529
• [6.591 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 05/07/25 15:04:16.536
  I0507 15:04:16.536273 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:04:16.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:04:16.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:04:16.548
  STEP: creating service in namespace services-20 @ 05/07/25 15:04:16.551
  STEP: creating service affinity-nodeport in namespace services-20 @ 05/07/25 15:04:16.551
  STEP: creating replication controller affinity-nodeport in namespace services-20 @ 05/07/25 15:04:16.564
  I0507 15:04:16.571913      25 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-20, replica count: 3
  I0507 15:04:19.623227      25 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 15:04:19.634067 25 resource.go:361] Creating new exec pod
  I0507 15:04:22.651387 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-20 exec execpod-affinitywk8jn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0507 15:04:22.739747 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.103.58.9) 80 port [tcp/http] succeeded!\n"
  I0507 15:04:22.739815 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:04:22.739918 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-20 exec execpod-affinitywk8jn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.58.9 80'
  I0507 15:04:22.821137 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.58.9 80\nConnection to 10.103.58.9 80 port [tcp/http] succeeded!\n"
  I0507 15:04:22.821196 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:04:22.821291 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-20 exec execpod-affinitywk8jn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31557'
  I0507 15:04:22.918686 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31557\nConnection to 192.168.49.2 31557 port [tcp/*] succeeded!\n"
  I0507 15:04:22.918770 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:04:22.918880 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-20 exec execpod-affinitywk8jn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31557'
  I0507 15:04:23.015434 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31557\nConnection to 192.168.49.3 31557 port [tcp/*] succeeded!\n"
  I0507 15:04:23.015518 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:04:23.015612 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-20 exec execpod-affinitywk8jn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31557/ ; done'
  I0507 15:04:23.186774 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31557/\n"
  I0507 15:04:23.186827 25 builder.go:147] stdout: "\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws\naffinity-nodeport-kxzws"
  I0507 15:04:23.186853 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186867 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186878 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186887 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186897 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186906 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186916 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186925 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186935 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186947 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186957 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186967 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186976 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186985 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.186994 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.187005 25 service.go:242] Received response from host: affinity-nodeport-kxzws
  I0507 15:04:23.187080 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-20, will wait for the garbage collector to delete the pods @ 05/07/25 15:04:23.194
  I0507 15:04:23.249629 25 resources.go:139] Deleting ReplicationController affinity-nodeport took: 3.359709ms
  I0507 15:04:23.350085 25 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.447399ms
  I0507 15:04:26.373687 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-20" for this suite. @ 05/07/25 15:04:26.376
• [9.846 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 05/07/25 15:04:26.382
  I0507 15:04:26.382722 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:04:26.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:04:26.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:04:26.396
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 15:04:26.399
  I0507 15:04:26.399610 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-840 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0507 15:04:26.450107 25 builder.go:146] stderr: ""
  I0507 15:04:26.450158 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/07/25 15:04:26.45
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/07/25 15:04:31.501
  I0507 15:04:31.501643 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-840 get pod e2e-test-httpd-pod -o json'
  I0507 15:04:31.551146 25 builder.go:146] stderr: ""
  I0507 15:04:31.551222 25 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-05-07T15:04:26Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-840\",\n        \"resourceVersion\": \"20326\",\n        \"uid\": \"f390ea17-e863-4c62-b845-0c71ee89a99f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-jnnz8\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8sconformance-m02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-jnnz8\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T15:04:27Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T15:04:26Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T15:04:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T15:04:27Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T15:04:26Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://2b0b2494e0f22e1c4ecfca7fac5691784623505110ea1b64966e4a48592af789\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-05-07T15:04:26Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-jnnz8\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.49.3\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.49.3\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.65\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.65\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-05-07T15:04:26Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/07/25 15:04:31.551
  I0507 15:04:31.551288 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-840 replace -f -'
  I0507 15:04:31.630487 25 builder.go:146] stderr: ""
  I0507 15:04:31.630520 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/07/25 15:04:31.63
  I0507 15:04:31.632001 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-840 delete pods e2e-test-httpd-pod'
  I0507 15:04:33.428100 25 builder.go:146] stderr: ""
  I0507 15:04:33.428142 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0507 15:04:33.428268 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-840" for this suite. @ 05/07/25 15:04:33.43
• [7.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 05/07/25 15:04:33.435
  I0507 15:04:33.435022 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 15:04:33.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:04:33.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:04:33.445
  I0507 15:04:33.458190 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 15:05:33.465780 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 05/07/25 15:05:33.469
  STEP: Adding a custom resource @ 05/07/25 15:05:33.469
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 05/07/25 15:05:33.479
  I0507 15:05:33.488734 25 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 05/07/25 15:05:33.488
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 05/07/25 15:05:35.496
  I0507 15:05:35.502622 25 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 05/07/25 15:05:35.502
  STEP: Verifying the pod has the pod disruption condition @ 05/07/25 15:05:37.509
  I0507 15:05:37.512188 25 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0507 15:05:38.023764 25 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 05/07/25 15:05:38.037
  STEP: Removing a custom resource @ 05/07/25 15:05:38.047
  I0507 15:05:38.058850 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2075" for this suite. @ 05/07/25 15:05:38.062
• [64.633 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 05/07/25 15:05:38.067
  I0507 15:05:38.067687 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 15:05:38.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:05:38.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:05:38.075
  STEP: creating a Namespace @ 05/07/25 15:05:38.076
  STEP: patching the Namespace @ 05/07/25 15:05:38.082
  STEP: get the Namespace and ensuring it has the label @ 05/07/25 15:05:38.085
  I0507 15:05:38.087115 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8435" for this suite. @ 05/07/25 15:05:38.162
  STEP: Destroying namespace "nspatchtest-12a3adc9-2740-4ba6-a08a-eba67e03ed11-4666" for this suite. @ 05/07/25 15:05:38.167
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/07/25 15:05:38.169
  I0507 15:05:38.169792 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename discovery @ 05/07/25 15:05:38.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:05:38.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:05:38.176
  STEP: Setting up server cert @ 05/07/25 15:05:38.178
  I0507 15:05:38.302252 25 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0507 15:05:38.302885 25 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0507 15:05:38.302908 25 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0507 15:05:38.302918 25 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0507 15:05:38.302925 25 discovery.go:139] Checking APIGroup: apps
  I0507 15:05:38.303272 25 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0507 15:05:38.303291 25 discovery.go:148] Versions found [{apps/v1 v1}]
  I0507 15:05:38.303299 25 discovery.go:154] apps/v1 matches apps/v1
  I0507 15:05:38.303306 25 discovery.go:139] Checking APIGroup: events.k8s.io
  I0507 15:05:38.303674 25 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0507 15:05:38.303687 25 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0507 15:05:38.303693 25 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0507 15:05:38.303698 25 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0507 15:05:38.304237 25 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0507 15:05:38.304252 25 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0507 15:05:38.304258 25 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0507 15:05:38.304264 25 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0507 15:05:38.304732 25 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0507 15:05:38.304745 25 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0507 15:05:38.304751 25 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0507 15:05:38.304757 25 discovery.go:139] Checking APIGroup: autoscaling
  I0507 15:05:38.305191 25 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0507 15:05:38.305204 25 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0507 15:05:38.305209 25 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0507 15:05:38.305214 25 discovery.go:139] Checking APIGroup: batch
  I0507 15:05:38.305659 25 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0507 15:05:38.305676 25 discovery.go:148] Versions found [{batch/v1 v1}]
  I0507 15:05:38.305682 25 discovery.go:154] batch/v1 matches batch/v1
  I0507 15:05:38.305687 25 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0507 15:05:38.306033 25 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0507 15:05:38.306046 25 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0507 15:05:38.306050 25 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0507 15:05:38.306056 25 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0507 15:05:38.306363 25 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0507 15:05:38.306389 25 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0507 15:05:38.306397 25 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0507 15:05:38.306404 25 discovery.go:139] Checking APIGroup: policy
  I0507 15:05:38.306749 25 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0507 15:05:38.306757 25 discovery.go:148] Versions found [{policy/v1 v1}]
  I0507 15:05:38.306761 25 discovery.go:154] policy/v1 matches policy/v1
  I0507 15:05:38.306764 25 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0507 15:05:38.307053 25 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0507 15:05:38.307069 25 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0507 15:05:38.307076 25 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0507 15:05:38.307081 25 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0507 15:05:38.307567 25 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0507 15:05:38.307574 25 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0507 15:05:38.307578 25 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0507 15:05:38.307582 25 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0507 15:05:38.308021 25 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0507 15:05:38.308035 25 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0507 15:05:38.308040 25 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0507 15:05:38.308044 25 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0507 15:05:38.308363 25 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0507 15:05:38.308383 25 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0507 15:05:38.308392 25 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0507 15:05:38.308399 25 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0507 15:05:38.308734 25 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0507 15:05:38.308748 25 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0507 15:05:38.308755 25 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0507 15:05:38.308761 25 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0507 15:05:38.309034 25 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0507 15:05:38.309046 25 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0507 15:05:38.309052 25 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0507 15:05:38.309058 25 discovery.go:139] Checking APIGroup: node.k8s.io
  I0507 15:05:38.309356 25 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0507 15:05:38.309372 25 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0507 15:05:38.309380 25 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0507 15:05:38.309386 25 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0507 15:05:38.309679 25 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0507 15:05:38.309692 25 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0507 15:05:38.309699 25 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0507 15:05:38.309705 25 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0507 15:05:38.309959 25 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0507 15:05:38.309969 25 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0507 15:05:38.309973 25 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0507 15:05:38.310024 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5441" for this suite. @ 05/07/25 15:05:38.311
• [0.145 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 05/07/25 15:05:38.314
  I0507 15:05:38.314619 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 15:05:38.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:05:38.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:05:38.323
  STEP: Counting existing ResourceQuota @ 05/07/25 15:05:55.328
  STEP: Creating a ResourceQuota @ 05/07/25 15:06:00.335
  STEP: Ensuring resource quota status is calculated @ 05/07/25 15:06:00.341
  STEP: Creating a ConfigMap @ 05/07/25 15:06:02.344
  STEP: Ensuring resource quota status captures configMap creation @ 05/07/25 15:06:02.353
  STEP: Deleting a ConfigMap @ 05/07/25 15:06:04.359
  STEP: Ensuring resource quota status released usage @ 05/07/25 15:06:04.364
  I0507 15:06:06.369296 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6638" for this suite. @ 05/07/25 15:06:06.372
• [28.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/07/25 15:06:06.381
  I0507 15:06:06.381560 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:06:06.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:06:06.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:06:06.396
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/07/25 15:06:06.399
  STEP: Saw pod success @ 05/07/25 15:06:08.418
  I0507 15:06:08.420738 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-d0dd3ee1-0cc9-44f4-a9ca-4dbf3fa0bbff container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:06:08.438
  I0507 15:06:08.452201 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6125" for this suite. @ 05/07/25 15:06:08.455
• [2.078 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/07/25 15:06:08.459
  I0507 15:06:08.459513 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 15:06:08.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:06:08.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:06:08.474
  STEP: Creating pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623 @ 05/07/25 15:06:08.477
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 15:06:10.492
  I0507 15:06:10.494850 25 container_probe.go:1749] Initial restart count of pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 is 0
  I0507 15:06:10.497037 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:12.501458 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:14.506590 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:16.512398 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:18.518929 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:20.521963 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:22.528427 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:24.534717 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:26.539598 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:28.544983 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:30.550928 25 container_probe.go:1759] Get pod liveness-f783c0dd-b15a-424f-8b8f-3af294211002 in namespace container-probe-6623
  I0507 15:06:30.550983 25 container_probe.go:1763] Restart count of pod container-probe-6623/liveness-f783c0dd-b15a-424f-8b8f-3af294211002 is now 1 (20.056092069s elapsed)
  STEP: deleting the pod @ 05/07/25 15:06:30.551
  I0507 15:06:30.563666 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6623" for this suite. @ 05/07/25 15:06:30.569
• [22.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/07/25 15:06:30.577
  I0507 15:06:30.577093 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 15:06:30.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:06:30.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:06:30.59
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 15:06:30.668
  STEP: create the pod with lifecycle hook @ 05/07/25 15:06:32.689
  STEP: delete the pod with lifecycle hook @ 05/07/25 15:06:34.708
  STEP: check prestop hook @ 05/07/25 15:06:36.726
  I0507 15:06:36.734725 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6446" for this suite. @ 05/07/25 15:06:36.737
• [6.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/07/25 15:06:36.742
  I0507 15:06:36.742620 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svc-latency @ 05/07/25 15:06:36.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:06:36.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:06:36.756
  I0507 15:06:36.759410 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3514 @ 05/07/25 15:06:36.76
  I0507 15:06:36.764189      25 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3514, replica count: 1
  I0507 15:06:37.815121      25 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 15:06:37.930573 25 service_latency.go:356] Created: latency-svc-2f4kz
  I0507 15:06:37.936670 25 service_latency.go:363] Got endpoints: latency-svc-2f4kz [21.255911ms]
  I0507 15:06:37.950217 25 service_latency.go:356] Created: latency-svc-pcnr4
  I0507 15:06:37.953816 25 service_latency.go:363] Got endpoints: latency-svc-pcnr4 [16.996685ms]
  I0507 15:06:37.956301 25 service_latency.go:356] Created: latency-svc-82nqk
  I0507 15:06:37.960339 25 service_latency.go:363] Got endpoints: latency-svc-82nqk [23.346481ms]
  I0507 15:06:37.963120 25 service_latency.go:356] Created: latency-svc-b4xrs
  I0507 15:06:37.969124 25 service_latency.go:363] Got endpoints: latency-svc-b4xrs [32.07944ms]
  I0507 15:06:37.971997 25 service_latency.go:356] Created: latency-svc-knd65
  I0507 15:06:37.977767 25 service_latency.go:363] Got endpoints: latency-svc-knd65 [40.771089ms]
  I0507 15:06:37.983337 25 service_latency.go:356] Created: latency-svc-cvzvm
  I0507 15:06:38.007700 25 service_latency.go:363] Got endpoints: latency-svc-cvzvm [70.599747ms]
  I0507 15:06:38.008919 25 service_latency.go:356] Created: latency-svc-gmqd2
  I0507 15:06:38.014568 25 service_latency.go:363] Got endpoints: latency-svc-gmqd2 [77.509446ms]
  I0507 15:06:38.016635 25 service_latency.go:356] Created: latency-svc-7gv7g
  I0507 15:06:38.021021 25 service_latency.go:363] Got endpoints: latency-svc-7gv7g [83.951473ms]
  I0507 15:06:38.022646 25 service_latency.go:356] Created: latency-svc-54p86
  I0507 15:06:38.030241 25 service_latency.go:363] Got endpoints: latency-svc-54p86 [93.270299ms]
  I0507 15:06:38.032317 25 service_latency.go:356] Created: latency-svc-kd6rr
  I0507 15:06:38.039001 25 service_latency.go:363] Got endpoints: latency-svc-kd6rr [101.94777ms]
  I0507 15:06:38.041468 25 service_latency.go:356] Created: latency-svc-smdld
  I0507 15:06:38.069050 25 service_latency.go:363] Got endpoints: latency-svc-smdld [132.158788ms]
  I0507 15:06:38.071114 25 service_latency.go:356] Created: latency-svc-nrvt2
  I0507 15:06:38.075974 25 service_latency.go:363] Got endpoints: latency-svc-nrvt2 [138.869945ms]
  I0507 15:06:38.078261 25 service_latency.go:356] Created: latency-svc-k9zck
  I0507 15:06:38.084915 25 service_latency.go:363] Got endpoints: latency-svc-k9zck [147.8279ms]
  I0507 15:06:38.086109 25 service_latency.go:356] Created: latency-svc-c2qwh
  I0507 15:06:38.093577 25 service_latency.go:363] Got endpoints: latency-svc-c2qwh [156.484088ms]
  I0507 15:06:38.095584 25 service_latency.go:356] Created: latency-svc-4r9x7
  I0507 15:06:38.104134 25 service_latency.go:363] Got endpoints: latency-svc-4r9x7 [167.050555ms]
  I0507 15:06:38.105206 25 service_latency.go:356] Created: latency-svc-zsd8w
  I0507 15:06:38.112300 25 service_latency.go:363] Got endpoints: latency-svc-zsd8w [175.285831ms]
  I0507 15:06:38.114159 25 service_latency.go:356] Created: latency-svc-c7jsm
  I0507 15:06:38.121179 25 service_latency.go:363] Got endpoints: latency-svc-c7jsm [167.274868ms]
  I0507 15:06:38.123582 25 service_latency.go:356] Created: latency-svc-xp99k
  I0507 15:06:38.131624 25 service_latency.go:363] Got endpoints: latency-svc-xp99k [171.243888ms]
  I0507 15:06:38.134308 25 service_latency.go:356] Created: latency-svc-knd7g
  I0507 15:06:38.140575 25 service_latency.go:363] Got endpoints: latency-svc-knd7g [171.407234ms]
  I0507 15:06:38.148545 25 service_latency.go:356] Created: latency-svc-5h9c7
  I0507 15:06:38.155966 25 service_latency.go:363] Got endpoints: latency-svc-5h9c7 [178.121376ms]
  I0507 15:06:38.158362 25 service_latency.go:356] Created: latency-svc-dhqqc
  I0507 15:06:38.165361 25 service_latency.go:363] Got endpoints: latency-svc-dhqqc [157.599735ms]
  I0507 15:06:38.167359 25 service_latency.go:356] Created: latency-svc-5vdkt
  I0507 15:06:38.210306 25 service_latency.go:363] Got endpoints: latency-svc-5vdkt [195.694804ms]
  I0507 15:06:38.211951 25 service_latency.go:356] Created: latency-svc-lmtx6
  I0507 15:06:38.219253 25 service_latency.go:363] Got endpoints: latency-svc-lmtx6 [198.190057ms]
  I0507 15:06:38.220479 25 service_latency.go:356] Created: latency-svc-wnkxk
  I0507 15:06:38.226727 25 service_latency.go:363] Got endpoints: latency-svc-wnkxk [196.415574ms]
  I0507 15:06:38.229149 25 service_latency.go:356] Created: latency-svc-fsd4c
  I0507 15:06:38.235359 25 service_latency.go:363] Got endpoints: latency-svc-fsd4c [196.314111ms]
  I0507 15:06:38.236901 25 service_latency.go:356] Created: latency-svc-7skdh
  I0507 15:06:38.239470 25 service_latency.go:363] Got endpoints: latency-svc-7skdh [170.369084ms]
  I0507 15:06:38.247805 25 service_latency.go:356] Created: latency-svc-qhxdd
  I0507 15:06:38.254396 25 service_latency.go:363] Got endpoints: latency-svc-qhxdd [178.381488ms]
  I0507 15:06:38.255527 25 service_latency.go:356] Created: latency-svc-qgck6
  I0507 15:06:38.262146 25 service_latency.go:363] Got endpoints: latency-svc-qgck6 [177.180613ms]
  I0507 15:06:38.264937 25 service_latency.go:356] Created: latency-svc-4mkv6
  I0507 15:06:38.271082 25 service_latency.go:363] Got endpoints: latency-svc-4mkv6 [177.454716ms]
  I0507 15:06:38.272244 25 service_latency.go:356] Created: latency-svc-6j6zm
  I0507 15:06:38.274789 25 service_latency.go:363] Got endpoints: latency-svc-6j6zm [170.583768ms]
  I0507 15:06:38.282192 25 service_latency.go:356] Created: latency-svc-zch4l
  I0507 15:06:38.325343 25 service_latency.go:363] Got endpoints: latency-svc-zch4l [212.981889ms]
  I0507 15:06:38.328165 25 service_latency.go:356] Created: latency-svc-qh8kr
  I0507 15:06:38.335473 25 service_latency.go:363] Got endpoints: latency-svc-qh8kr [214.223045ms]
  I0507 15:06:38.336971 25 service_latency.go:356] Created: latency-svc-6wksl
  I0507 15:06:38.339660 25 service_latency.go:363] Got endpoints: latency-svc-6wksl [207.959315ms]
  I0507 15:06:38.345308 25 service_latency.go:356] Created: latency-svc-2rft9
  I0507 15:06:38.353357 25 service_latency.go:363] Got endpoints: latency-svc-2rft9 [212.700276ms]
  I0507 15:06:38.355795 25 service_latency.go:356] Created: latency-svc-lc5tq
  I0507 15:06:38.363742 25 service_latency.go:363] Got endpoints: latency-svc-lc5tq [207.721579ms]
  I0507 15:06:38.367057 25 service_latency.go:356] Created: latency-svc-xr27l
  I0507 15:06:38.375805 25 service_latency.go:363] Got endpoints: latency-svc-xr27l [210.400551ms]
  I0507 15:06:38.377752 25 service_latency.go:356] Created: latency-svc-6bb46
  I0507 15:06:38.391293 25 service_latency.go:363] Got endpoints: latency-svc-6bb46 [180.929986ms]
  I0507 15:06:38.395857 25 service_latency.go:356] Created: latency-svc-95cc9
  I0507 15:06:38.404126 25 service_latency.go:363] Got endpoints: latency-svc-95cc9 [184.824212ms]
  I0507 15:06:38.407348 25 service_latency.go:356] Created: latency-svc-84glr
  I0507 15:06:38.415180 25 service_latency.go:363] Got endpoints: latency-svc-84glr [188.406718ms]
  I0507 15:06:38.417696 25 service_latency.go:356] Created: latency-svc-bmrhp
  I0507 15:06:38.466206 25 service_latency.go:356] Created: latency-svc-6gkcm
  I0507 15:06:38.467404 25 service_latency.go:363] Got endpoints: latency-svc-bmrhp [231.966361ms]
  I0507 15:06:38.470398 25 service_latency.go:356] Created: latency-svc-p9dcx
  I0507 15:06:38.482057 25 service_latency.go:356] Created: latency-svc-2hfz7
  I0507 15:06:38.491995 25 service_latency.go:363] Got endpoints: latency-svc-6gkcm [252.439972ms]
  I0507 15:06:38.493979 25 service_latency.go:356] Created: latency-svc-vrw8w
  I0507 15:06:38.506408 25 service_latency.go:356] Created: latency-svc-67fzg
  I0507 15:06:38.515025 25 service_latency.go:356] Created: latency-svc-c824c
  I0507 15:06:38.525317 25 service_latency.go:356] Created: latency-svc-sdl6d
  I0507 15:06:38.534958 25 service_latency.go:356] Created: latency-svc-v5wn2
  I0507 15:06:38.536810 25 service_latency.go:363] Got endpoints: latency-svc-p9dcx [282.372858ms]
  I0507 15:06:38.544870 25 service_latency.go:356] Created: latency-svc-mqtlg
  I0507 15:06:38.556188 25 service_latency.go:356] Created: latency-svc-k5wbj
  I0507 15:06:38.598700 25 service_latency.go:363] Got endpoints: latency-svc-2hfz7 [336.501276ms]
  I0507 15:06:38.600487 25 service_latency.go:356] Created: latency-svc-ppv9v
  I0507 15:06:38.614198 25 service_latency.go:356] Created: latency-svc-cwmqz
  I0507 15:06:38.625376 25 service_latency.go:356] Created: latency-svc-ns5rm
  I0507 15:06:38.636301 25 service_latency.go:363] Got endpoints: latency-svc-vrw8w [365.16891ms]
  I0507 15:06:38.639176 25 service_latency.go:356] Created: latency-svc-f6msj
  I0507 15:06:38.649115 25 service_latency.go:356] Created: latency-svc-7xrrf
  I0507 15:06:38.659685 25 service_latency.go:356] Created: latency-svc-r4gpz
  I0507 15:06:38.670649 25 service_latency.go:356] Created: latency-svc-4gf57
  I0507 15:06:38.676339 25 service_latency.go:356] Created: latency-svc-9nsm9
  I0507 15:06:38.684178 25 service_latency.go:356] Created: latency-svc-92rrx
  I0507 15:06:38.684870 25 service_latency.go:363] Got endpoints: latency-svc-67fzg [410.034798ms]
  I0507 15:06:38.697179 25 service_latency.go:356] Created: latency-svc-p2tfd
  I0507 15:06:38.737840 25 service_latency.go:363] Got endpoints: latency-svc-c824c [412.413598ms]
  I0507 15:06:38.752260 25 service_latency.go:356] Created: latency-svc-9j9n9
  I0507 15:06:38.788103 25 service_latency.go:363] Got endpoints: latency-svc-sdl6d [452.529292ms]
  I0507 15:06:38.802911 25 service_latency.go:356] Created: latency-svc-9sptj
  I0507 15:06:38.836836 25 service_latency.go:363] Got endpoints: latency-svc-v5wn2 [497.129267ms]
  I0507 15:06:38.852633 25 service_latency.go:356] Created: latency-svc-dwvnp
  I0507 15:06:38.887274 25 service_latency.go:363] Got endpoints: latency-svc-mqtlg [533.866918ms]
  I0507 15:06:38.902610 25 service_latency.go:356] Created: latency-svc-pfw2h
  I0507 15:06:38.942070 25 service_latency.go:363] Got endpoints: latency-svc-k5wbj [578.264508ms]
  I0507 15:06:38.958171 25 service_latency.go:356] Created: latency-svc-8jlmj
  I0507 15:06:38.988798 25 service_latency.go:363] Got endpoints: latency-svc-ppv9v [612.93075ms]
  I0507 15:06:39.000443 25 service_latency.go:356] Created: latency-svc-vvz65
  I0507 15:06:39.035537 25 service_latency.go:363] Got endpoints: latency-svc-cwmqz [644.126944ms]
  I0507 15:06:39.056590 25 service_latency.go:356] Created: latency-svc-5jp4f
  I0507 15:06:39.087339 25 service_latency.go:363] Got endpoints: latency-svc-ns5rm [683.161403ms]
  I0507 15:06:39.117498 25 service_latency.go:356] Created: latency-svc-zs9d7
  I0507 15:06:39.134456 25 service_latency.go:363] Got endpoints: latency-svc-f6msj [719.227851ms]
  I0507 15:06:39.141156 25 service_latency.go:356] Created: latency-svc-fxjgn
  I0507 15:06:39.187208 25 service_latency.go:363] Got endpoints: latency-svc-7xrrf [719.719962ms]
  I0507 15:06:39.198912 25 service_latency.go:356] Created: latency-svc-67kgs
  I0507 15:06:39.236445 25 service_latency.go:363] Got endpoints: latency-svc-r4gpz [744.309962ms]
  I0507 15:06:39.251627 25 service_latency.go:356] Created: latency-svc-hr8f8
  I0507 15:06:39.287353 25 service_latency.go:363] Got endpoints: latency-svc-4gf57 [750.461007ms]
  I0507 15:06:39.299852 25 service_latency.go:356] Created: latency-svc-kb27j
  I0507 15:06:39.337457 25 service_latency.go:363] Got endpoints: latency-svc-9nsm9 [738.641658ms]
  I0507 15:06:39.352353 25 service_latency.go:356] Created: latency-svc-wk86k
  I0507 15:06:39.388139 25 service_latency.go:363] Got endpoints: latency-svc-92rrx [751.721987ms]
  I0507 15:06:39.402215 25 service_latency.go:356] Created: latency-svc-h8bhq
  I0507 15:06:39.436950 25 service_latency.go:363] Got endpoints: latency-svc-p2tfd [752.003723ms]
  I0507 15:06:39.449459 25 service_latency.go:356] Created: latency-svc-twtjh
  I0507 15:06:39.486579 25 service_latency.go:363] Got endpoints: latency-svc-9j9n9 [748.588479ms]
  I0507 15:06:39.501740 25 service_latency.go:356] Created: latency-svc-9l9kw
  I0507 15:06:39.537416 25 service_latency.go:363] Got endpoints: latency-svc-9sptj [749.216917ms]
  I0507 15:06:39.550124 25 service_latency.go:356] Created: latency-svc-pk594
  I0507 15:06:39.591922 25 service_latency.go:363] Got endpoints: latency-svc-dwvnp [754.995583ms]
  I0507 15:06:39.605039 25 service_latency.go:356] Created: latency-svc-7flnl
  I0507 15:06:39.638174 25 service_latency.go:363] Got endpoints: latency-svc-pfw2h [750.808565ms]
  I0507 15:06:39.651944 25 service_latency.go:356] Created: latency-svc-9hcjk
  I0507 15:06:39.687208 25 service_latency.go:363] Got endpoints: latency-svc-8jlmj [745.004236ms]
  I0507 15:06:39.703265 25 service_latency.go:356] Created: latency-svc-79ffp
  I0507 15:06:39.736304 25 service_latency.go:363] Got endpoints: latency-svc-vvz65 [747.407925ms]
  I0507 15:06:39.750709 25 service_latency.go:356] Created: latency-svc-f67x9
  I0507 15:06:39.787003 25 service_latency.go:363] Got endpoints: latency-svc-5jp4f [751.380604ms]
  I0507 15:06:39.799463 25 service_latency.go:356] Created: latency-svc-92xbn
  I0507 15:06:39.837539 25 service_latency.go:363] Got endpoints: latency-svc-zs9d7 [750.12302ms]
  I0507 15:06:39.852262 25 service_latency.go:356] Created: latency-svc-m76br
  I0507 15:06:39.887010 25 service_latency.go:363] Got endpoints: latency-svc-fxjgn [752.502164ms]
  I0507 15:06:39.900337 25 service_latency.go:356] Created: latency-svc-j7qtk
  I0507 15:06:39.937196 25 service_latency.go:363] Got endpoints: latency-svc-67kgs [749.873296ms]
  I0507 15:06:39.949433 25 service_latency.go:356] Created: latency-svc-rd26m
  I0507 15:06:39.986369 25 service_latency.go:363] Got endpoints: latency-svc-hr8f8 [749.789896ms]
  I0507 15:06:39.996897 25 service_latency.go:356] Created: latency-svc-49tbt
  I0507 15:06:40.038003 25 service_latency.go:363] Got endpoints: latency-svc-kb27j [750.554429ms]
  I0507 15:06:40.050318 25 service_latency.go:356] Created: latency-svc-zbdkn
  I0507 15:06:40.087053 25 service_latency.go:363] Got endpoints: latency-svc-wk86k [749.465269ms]
  I0507 15:06:40.099014 25 service_latency.go:356] Created: latency-svc-pwz9t
  I0507 15:06:40.136325 25 service_latency.go:363] Got endpoints: latency-svc-h8bhq [748.080185ms]
  I0507 15:06:40.149003 25 service_latency.go:356] Created: latency-svc-6565p
  I0507 15:06:40.189233 25 service_latency.go:363] Got endpoints: latency-svc-twtjh [752.187495ms]
  I0507 15:06:40.202933 25 service_latency.go:356] Created: latency-svc-v7kgz
  I0507 15:06:40.238824 25 service_latency.go:363] Got endpoints: latency-svc-9l9kw [752.158369ms]
  I0507 15:06:40.251416 25 service_latency.go:356] Created: latency-svc-n46jp
  I0507 15:06:40.286696 25 service_latency.go:363] Got endpoints: latency-svc-pk594 [749.193743ms]
  I0507 15:06:40.298835 25 service_latency.go:356] Created: latency-svc-gtg4m
  I0507 15:06:40.337694 25 service_latency.go:363] Got endpoints: latency-svc-7flnl [745.684156ms]
  I0507 15:06:40.355233 25 service_latency.go:356] Created: latency-svc-hnjsg
  I0507 15:06:40.386705 25 service_latency.go:363] Got endpoints: latency-svc-9hcjk [748.463469ms]
  I0507 15:06:40.400004 25 service_latency.go:356] Created: latency-svc-ngwff
  I0507 15:06:40.438042 25 service_latency.go:363] Got endpoints: latency-svc-79ffp [750.728453ms]
  I0507 15:06:40.457214 25 service_latency.go:356] Created: latency-svc-q2ftt
  I0507 15:06:40.488578 25 service_latency.go:363] Got endpoints: latency-svc-f67x9 [752.189172ms]
  I0507 15:06:40.501163 25 service_latency.go:356] Created: latency-svc-47b7h
  I0507 15:06:40.537277 25 service_latency.go:363] Got endpoints: latency-svc-92xbn [750.167027ms]
  I0507 15:06:40.550565 25 service_latency.go:356] Created: latency-svc-9mjv6
  I0507 15:06:40.588324 25 service_latency.go:363] Got endpoints: latency-svc-m76br [750.692577ms]
  I0507 15:06:40.601521 25 service_latency.go:356] Created: latency-svc-k2w9d
  I0507 15:06:40.638042 25 service_latency.go:363] Got endpoints: latency-svc-j7qtk [750.939992ms]
  I0507 15:06:40.649726 25 service_latency.go:356] Created: latency-svc-w7m45
  I0507 15:06:40.688341 25 service_latency.go:363] Got endpoints: latency-svc-rd26m [751.059008ms]
  I0507 15:06:40.701136 25 service_latency.go:356] Created: latency-svc-wvgf7
  I0507 15:06:40.738638 25 service_latency.go:363] Got endpoints: latency-svc-49tbt [752.178317ms]
  I0507 15:06:40.749196 25 service_latency.go:356] Created: latency-svc-8p79h
  I0507 15:06:40.787470 25 service_latency.go:363] Got endpoints: latency-svc-zbdkn [749.392291ms]
  I0507 15:06:40.798876 25 service_latency.go:356] Created: latency-svc-gbjg4
  I0507 15:06:40.837088 25 service_latency.go:363] Got endpoints: latency-svc-pwz9t [749.961677ms]
  I0507 15:06:40.849394 25 service_latency.go:356] Created: latency-svc-rstvl
  I0507 15:06:40.886973 25 service_latency.go:363] Got endpoints: latency-svc-6565p [750.544998ms]
  I0507 15:06:40.898697 25 service_latency.go:356] Created: latency-svc-lbxdf
  I0507 15:06:40.938570 25 service_latency.go:363] Got endpoints: latency-svc-v7kgz [749.244019ms]
  I0507 15:06:40.950352 25 service_latency.go:356] Created: latency-svc-tvswm
  I0507 15:06:40.987196 25 service_latency.go:363] Got endpoints: latency-svc-n46jp [748.278313ms]
  I0507 15:06:40.998274 25 service_latency.go:356] Created: latency-svc-bs6k2
  I0507 15:06:41.036905 25 service_latency.go:363] Got endpoints: latency-svc-gtg4m [750.10074ms]
  I0507 15:06:41.049858 25 service_latency.go:356] Created: latency-svc-9sjjz
  I0507 15:06:41.093619 25 service_latency.go:363] Got endpoints: latency-svc-hnjsg [755.841829ms]
  I0507 15:06:41.107634 25 service_latency.go:356] Created: latency-svc-tvtzt
  I0507 15:06:41.134594 25 service_latency.go:363] Got endpoints: latency-svc-ngwff [747.729813ms]
  I0507 15:06:41.146130 25 service_latency.go:356] Created: latency-svc-2n5dn
  I0507 15:06:41.187188 25 service_latency.go:363] Got endpoints: latency-svc-q2ftt [749.019182ms]
  I0507 15:06:41.203411 25 service_latency.go:356] Created: latency-svc-rvqvg
  I0507 15:06:41.238039 25 service_latency.go:363] Got endpoints: latency-svc-47b7h [749.29746ms]
  I0507 15:06:41.249794 25 service_latency.go:356] Created: latency-svc-xmnl7
  I0507 15:06:41.286346 25 service_latency.go:363] Got endpoints: latency-svc-9mjv6 [748.988023ms]
  I0507 15:06:41.298421 25 service_latency.go:356] Created: latency-svc-2d8rs
  I0507 15:06:41.333781 25 service_latency.go:363] Got endpoints: latency-svc-k2w9d [745.353009ms]
  I0507 15:06:41.344390 25 service_latency.go:356] Created: latency-svc-k2rf4
  I0507 15:06:41.386347 25 service_latency.go:363] Got endpoints: latency-svc-w7m45 [748.222936ms]
  I0507 15:06:41.398764 25 service_latency.go:356] Created: latency-svc-wc8nk
  I0507 15:06:41.435385 25 service_latency.go:363] Got endpoints: latency-svc-wvgf7 [746.955623ms]
  I0507 15:06:41.446306 25 service_latency.go:356] Created: latency-svc-ws8c7
  I0507 15:06:41.488748 25 service_latency.go:363] Got endpoints: latency-svc-8p79h [750.024069ms]
  I0507 15:06:41.499824 25 service_latency.go:356] Created: latency-svc-kf4kq
  I0507 15:06:41.537309 25 service_latency.go:363] Got endpoints: latency-svc-gbjg4 [749.736439ms]
  I0507 15:06:41.549934 25 service_latency.go:356] Created: latency-svc-wttcz
  I0507 15:06:41.586689 25 service_latency.go:363] Got endpoints: latency-svc-rstvl [749.522696ms]
  I0507 15:06:41.599640 25 service_latency.go:356] Created: latency-svc-nhpvt
  I0507 15:06:41.636912 25 service_latency.go:363] Got endpoints: latency-svc-lbxdf [749.838778ms]
  I0507 15:06:41.654860 25 service_latency.go:356] Created: latency-svc-59hfb
  I0507 15:06:41.687855 25 service_latency.go:363] Got endpoints: latency-svc-tvswm [749.202045ms]
  I0507 15:06:41.699598 25 service_latency.go:356] Created: latency-svc-69qlj
  I0507 15:06:41.736222 25 service_latency.go:363] Got endpoints: latency-svc-bs6k2 [748.951325ms]
  I0507 15:06:41.747111 25 service_latency.go:356] Created: latency-svc-5p2sq
  I0507 15:06:41.783765 25 service_latency.go:363] Got endpoints: latency-svc-9sjjz [746.758587ms]
  I0507 15:06:41.793173 25 service_latency.go:356] Created: latency-svc-p72wg
  I0507 15:06:41.837112 25 service_latency.go:363] Got endpoints: latency-svc-tvtzt [743.340273ms]
  I0507 15:06:41.847539 25 service_latency.go:356] Created: latency-svc-q984p
  I0507 15:06:41.887449 25 service_latency.go:363] Got endpoints: latency-svc-2n5dn [752.779982ms]
  I0507 15:06:41.898762 25 service_latency.go:356] Created: latency-svc-tvnwv
  I0507 15:06:41.940138 25 service_latency.go:363] Got endpoints: latency-svc-rvqvg [752.844192ms]
  I0507 15:06:41.971080 25 service_latency.go:356] Created: latency-svc-fzjxl
  I0507 15:06:41.986281 25 service_latency.go:363] Got endpoints: latency-svc-xmnl7 [748.136779ms]
  I0507 15:06:41.993000 25 service_latency.go:356] Created: latency-svc-sz4xx
  I0507 15:06:42.032962 25 service_latency.go:363] Got endpoints: latency-svc-2d8rs [746.534629ms]
  I0507 15:06:42.045471 25 service_latency.go:356] Created: latency-svc-hm2xq
  I0507 15:06:42.086746 25 service_latency.go:363] Got endpoints: latency-svc-k2rf4 [752.90809ms]
  I0507 15:06:42.098873 25 service_latency.go:356] Created: latency-svc-zlpsq
  I0507 15:06:42.137476 25 service_latency.go:363] Got endpoints: latency-svc-wc8nk [751.026988ms]
  I0507 15:06:42.149983 25 service_latency.go:356] Created: latency-svc-jvx85
  I0507 15:06:42.185331 25 service_latency.go:363] Got endpoints: latency-svc-ws8c7 [749.871318ms]
  I0507 15:06:42.194969 25 service_latency.go:356] Created: latency-svc-fxfb4
  I0507 15:06:42.236235 25 service_latency.go:363] Got endpoints: latency-svc-kf4kq [747.390653ms]
  I0507 15:06:42.251747 25 service_latency.go:356] Created: latency-svc-ksb8w
  I0507 15:06:42.287901 25 service_latency.go:363] Got endpoints: latency-svc-wttcz [750.496355ms]
  I0507 15:06:42.299765 25 service_latency.go:356] Created: latency-svc-lgrzd
  I0507 15:06:42.336904 25 service_latency.go:363] Got endpoints: latency-svc-nhpvt [750.13242ms]
  I0507 15:06:42.346373 25 service_latency.go:356] Created: latency-svc-rkhxv
  I0507 15:06:42.383656 25 service_latency.go:363] Got endpoints: latency-svc-59hfb [746.605474ms]
  I0507 15:06:42.389666 25 service_latency.go:356] Created: latency-svc-ncltb
  I0507 15:06:42.433618 25 service_latency.go:363] Got endpoints: latency-svc-69qlj [745.673052ms]
  I0507 15:06:42.442581 25 service_latency.go:356] Created: latency-svc-ll5sv
  I0507 15:06:42.483610 25 service_latency.go:363] Got endpoints: latency-svc-5p2sq [747.319701ms]
  I0507 15:06:42.492064 25 service_latency.go:356] Created: latency-svc-4jnj8
  I0507 15:06:42.533660 25 service_latency.go:363] Got endpoints: latency-svc-p72wg [749.836894ms]
  I0507 15:06:42.543217 25 service_latency.go:356] Created: latency-svc-9zgh8
  I0507 15:06:42.586478 25 service_latency.go:363] Got endpoints: latency-svc-q984p [749.267398ms]
  I0507 15:06:42.597870 25 service_latency.go:356] Created: latency-svc-9gwzt
  I0507 15:06:42.637551 25 service_latency.go:363] Got endpoints: latency-svc-tvnwv [749.986967ms]
  I0507 15:06:42.652803 25 service_latency.go:356] Created: latency-svc-qb2wl
  I0507 15:06:42.687953 25 service_latency.go:363] Got endpoints: latency-svc-fzjxl [747.628621ms]
  I0507 15:06:42.701241 25 service_latency.go:356] Created: latency-svc-gsclk
  I0507 15:06:42.738026 25 service_latency.go:363] Got endpoints: latency-svc-sz4xx [751.689305ms]
  I0507 15:06:42.752156 25 service_latency.go:356] Created: latency-svc-2r4z7
  I0507 15:06:42.784629 25 service_latency.go:363] Got endpoints: latency-svc-hm2xq [751.628321ms]
  I0507 15:06:42.797326 25 service_latency.go:356] Created: latency-svc-t2rdc
  I0507 15:06:42.836213 25 service_latency.go:363] Got endpoints: latency-svc-zlpsq [749.355697ms]
  I0507 15:06:42.850866 25 service_latency.go:356] Created: latency-svc-hf22d
  I0507 15:06:42.888258 25 service_latency.go:363] Got endpoints: latency-svc-jvx85 [750.677639ms]
  I0507 15:06:42.900851 25 service_latency.go:356] Created: latency-svc-xm8jq
  I0507 15:06:42.939079 25 service_latency.go:363] Got endpoints: latency-svc-fxfb4 [753.672561ms]
  I0507 15:06:42.950435 25 service_latency.go:356] Created: latency-svc-rpq4q
  I0507 15:06:42.985800 25 service_latency.go:363] Got endpoints: latency-svc-ksb8w [749.481397ms]
  I0507 15:06:42.995475 25 service_latency.go:356] Created: latency-svc-wcjhn
  I0507 15:06:43.038905 25 service_latency.go:363] Got endpoints: latency-svc-lgrzd [750.913057ms]
  I0507 15:06:43.052125 25 service_latency.go:356] Created: latency-svc-mhs9b
  I0507 15:06:43.089545 25 service_latency.go:363] Got endpoints: latency-svc-rkhxv [752.42148ms]
  I0507 15:06:43.104062 25 service_latency.go:356] Created: latency-svc-2n8fv
  I0507 15:06:43.137387 25 service_latency.go:363] Got endpoints: latency-svc-ncltb [753.686543ms]
  I0507 15:06:43.149887 25 service_latency.go:356] Created: latency-svc-rvst5
  I0507 15:06:43.192737 25 service_latency.go:363] Got endpoints: latency-svc-ll5sv [759.072446ms]
  I0507 15:06:43.205245 25 service_latency.go:356] Created: latency-svc-zb2h2
  I0507 15:06:43.237436 25 service_latency.go:363] Got endpoints: latency-svc-4jnj8 [753.770701ms]
  I0507 15:06:43.248536 25 service_latency.go:356] Created: latency-svc-z62jf
  I0507 15:06:43.287472 25 service_latency.go:363] Got endpoints: latency-svc-9zgh8 [753.740119ms]
  I0507 15:06:43.302283 25 service_latency.go:356] Created: latency-svc-6jw5k
  I0507 15:06:43.338134 25 service_latency.go:363] Got endpoints: latency-svc-9gwzt [751.565406ms]
  I0507 15:06:43.351964 25 service_latency.go:356] Created: latency-svc-69gbz
  I0507 15:06:43.386111 25 service_latency.go:363] Got endpoints: latency-svc-qb2wl [748.456364ms]
  I0507 15:06:43.398893 25 service_latency.go:356] Created: latency-svc-jhlxz
  I0507 15:06:43.435588 25 service_latency.go:363] Got endpoints: latency-svc-gsclk [747.440227ms]
  I0507 15:06:43.448778 25 service_latency.go:356] Created: latency-svc-4vbfp
  I0507 15:06:43.484753 25 service_latency.go:363] Got endpoints: latency-svc-2r4z7 [746.627119ms]
  I0507 15:06:43.494704 25 service_latency.go:356] Created: latency-svc-s59lp
  I0507 15:06:43.538873 25 service_latency.go:363] Got endpoints: latency-svc-t2rdc [754.165284ms]
  I0507 15:06:43.550933 25 service_latency.go:356] Created: latency-svc-fvjvc
  I0507 15:06:43.587096 25 service_latency.go:363] Got endpoints: latency-svc-hf22d [750.770185ms]
  I0507 15:06:43.599985 25 service_latency.go:356] Created: latency-svc-c2sqj
  I0507 15:06:43.637719 25 service_latency.go:363] Got endpoints: latency-svc-xm8jq [749.37352ms]
  I0507 15:06:43.651022 25 service_latency.go:356] Created: latency-svc-s8sg8
  I0507 15:06:43.686243 25 service_latency.go:363] Got endpoints: latency-svc-rpq4q [747.087311ms]
  I0507 15:06:43.700305 25 service_latency.go:356] Created: latency-svc-bt6jm
  I0507 15:06:43.736308 25 service_latency.go:363] Got endpoints: latency-svc-wcjhn [750.445988ms]
  I0507 15:06:43.748122 25 service_latency.go:356] Created: latency-svc-6dhlj
  I0507 15:06:43.787197 25 service_latency.go:363] Got endpoints: latency-svc-mhs9b [748.203557ms]
  I0507 15:06:43.799461 25 service_latency.go:356] Created: latency-svc-mx8tc
  I0507 15:06:43.837789 25 service_latency.go:363] Got endpoints: latency-svc-2n8fv [748.105899ms]
  I0507 15:06:43.852906 25 service_latency.go:356] Created: latency-svc-hv5hb
  I0507 15:06:43.886878 25 service_latency.go:363] Got endpoints: latency-svc-rvst5 [749.422782ms]
  I0507 15:06:43.899564 25 service_latency.go:356] Created: latency-svc-mp92p
  I0507 15:06:43.936805 25 service_latency.go:363] Got endpoints: latency-svc-zb2h2 [743.977344ms]
  I0507 15:06:43.948149 25 service_latency.go:356] Created: latency-svc-dgdq5
  I0507 15:06:43.987296 25 service_latency.go:363] Got endpoints: latency-svc-z62jf [749.75152ms]
  I0507 15:06:43.999550 25 service_latency.go:356] Created: latency-svc-p6lsm
  I0507 15:06:44.037861 25 service_latency.go:363] Got endpoints: latency-svc-6jw5k [750.268497ms]
  I0507 15:06:44.052282 25 service_latency.go:356] Created: latency-svc-x9g8v
  I0507 15:06:44.087496 25 service_latency.go:363] Got endpoints: latency-svc-69gbz [749.258035ms]
  I0507 15:06:44.100864 25 service_latency.go:356] Created: latency-svc-fzjpj
  I0507 15:06:44.138726 25 service_latency.go:363] Got endpoints: latency-svc-jhlxz [752.536331ms]
  I0507 15:06:44.150752 25 service_latency.go:356] Created: latency-svc-b8j5j
  I0507 15:06:44.187844 25 service_latency.go:363] Got endpoints: latency-svc-4vbfp [752.174894ms]
  I0507 15:06:44.200241 25 service_latency.go:356] Created: latency-svc-9z4zr
  I0507 15:06:44.236842 25 service_latency.go:363] Got endpoints: latency-svc-s59lp [752.017457ms]
  I0507 15:06:44.250820 25 service_latency.go:356] Created: latency-svc-7ljg8
  I0507 15:06:44.286575 25 service_latency.go:363] Got endpoints: latency-svc-fvjvc [747.605641ms]
  I0507 15:06:44.298710 25 service_latency.go:356] Created: latency-svc-mc5pc
  I0507 15:06:44.335199 25 service_latency.go:363] Got endpoints: latency-svc-c2sqj [748.03032ms]
  I0507 15:06:44.345230 25 service_latency.go:356] Created: latency-svc-sx252
  I0507 15:06:44.385284 25 service_latency.go:363] Got endpoints: latency-svc-s8sg8 [747.458066ms]
  I0507 15:06:44.398954 25 service_latency.go:356] Created: latency-svc-9t6xt
  I0507 15:06:44.437235 25 service_latency.go:363] Got endpoints: latency-svc-bt6jm [750.910351ms]
  I0507 15:06:44.452760 25 service_latency.go:356] Created: latency-svc-t8d5x
  I0507 15:06:44.486999 25 service_latency.go:363] Got endpoints: latency-svc-6dhlj [750.6116ms]
  I0507 15:06:44.498171 25 service_latency.go:356] Created: latency-svc-x26nx
  I0507 15:06:44.537316 25 service_latency.go:363] Got endpoints: latency-svc-mx8tc [750.0221ms]
  I0507 15:06:44.553077 25 service_latency.go:356] Created: latency-svc-t57sm
  I0507 15:06:44.586763 25 service_latency.go:363] Got endpoints: latency-svc-hv5hb [748.893766ms]
  I0507 15:06:44.598113 25 service_latency.go:356] Created: latency-svc-fr9tk
  I0507 15:06:44.637758 25 service_latency.go:363] Got endpoints: latency-svc-mp92p [750.801159ms]
  I0507 15:06:44.649677 25 service_latency.go:356] Created: latency-svc-7jfms
  I0507 15:06:44.687112 25 service_latency.go:363] Got endpoints: latency-svc-dgdq5 [750.214215ms]
  I0507 15:06:44.699952 25 service_latency.go:356] Created: latency-svc-r7g9m
  I0507 15:06:44.737862 25 service_latency.go:363] Got endpoints: latency-svc-p6lsm [750.484399ms]
  I0507 15:06:44.778004 25 service_latency.go:356] Created: latency-svc-zj47s
  I0507 15:06:44.783697 25 service_latency.go:363] Got endpoints: latency-svc-x9g8v [745.686823ms]
  I0507 15:06:44.790343 25 service_latency.go:356] Created: latency-svc-9v9gx
  I0507 15:06:44.836067 25 service_latency.go:363] Got endpoints: latency-svc-fzjpj [748.431928ms]
  I0507 15:06:44.848489 25 service_latency.go:356] Created: latency-svc-6nx8n
  I0507 15:06:44.884403 25 service_latency.go:363] Got endpoints: latency-svc-b8j5j [745.576395ms]
  I0507 15:06:44.899269 25 service_latency.go:356] Created: latency-svc-c5xvm
  I0507 15:06:44.937475 25 service_latency.go:363] Got endpoints: latency-svc-9z4zr [749.533992ms]
  I0507 15:06:44.950904 25 service_latency.go:356] Created: latency-svc-sbcr6
  I0507 15:06:44.986626 25 service_latency.go:363] Got endpoints: latency-svc-7ljg8 [749.698066ms]
  I0507 15:06:44.996913 25 service_latency.go:356] Created: latency-svc-8thbf
  I0507 15:06:45.038886 25 service_latency.go:363] Got endpoints: latency-svc-mc5pc [752.200987ms]
  I0507 15:06:45.051521 25 service_latency.go:356] Created: latency-svc-7ldnh
  I0507 15:06:45.084978 25 service_latency.go:363] Got endpoints: latency-svc-sx252 [749.732414ms]
  I0507 15:06:45.097555 25 service_latency.go:356] Created: latency-svc-gg9t7
  I0507 15:06:45.137414 25 service_latency.go:363] Got endpoints: latency-svc-9t6xt [752.039575ms]
  I0507 15:06:45.150268 25 service_latency.go:356] Created: latency-svc-ftm7q
  I0507 15:06:45.185749 25 service_latency.go:363] Got endpoints: latency-svc-t8d5x [748.43055ms]
  I0507 15:06:45.197225 25 service_latency.go:356] Created: latency-svc-bxp57
  I0507 15:06:45.235411 25 service_latency.go:363] Got endpoints: latency-svc-x26nx [748.333568ms]
  I0507 15:06:45.246843 25 service_latency.go:356] Created: latency-svc-kxjbx
  I0507 15:06:45.290869 25 service_latency.go:363] Got endpoints: latency-svc-t57sm [753.47152ms]
  I0507 15:06:45.303802 25 service_latency.go:356] Created: latency-svc-sqnmn
  I0507 15:06:45.338327 25 service_latency.go:363] Got endpoints: latency-svc-fr9tk [751.475554ms]
  I0507 15:06:45.350517 25 service_latency.go:356] Created: latency-svc-xrdv6
  I0507 15:06:45.387185 25 service_latency.go:363] Got endpoints: latency-svc-7jfms [749.311157ms]
  I0507 15:06:45.403213 25 service_latency.go:356] Created: latency-svc-58xf6
  I0507 15:06:45.442426 25 service_latency.go:363] Got endpoints: latency-svc-r7g9m [755.227366ms]
  I0507 15:06:45.452473 25 service_latency.go:356] Created: latency-svc-8ldz9
  I0507 15:06:45.488312 25 service_latency.go:363] Got endpoints: latency-svc-zj47s [750.364778ms]
  I0507 15:06:45.500706 25 service_latency.go:356] Created: latency-svc-5ljl2
  I0507 15:06:45.538181 25 service_latency.go:363] Got endpoints: latency-svc-9v9gx [754.441733ms]
  I0507 15:06:45.550955 25 service_latency.go:356] Created: latency-svc-xjqd5
  I0507 15:06:45.587102 25 service_latency.go:363] Got endpoints: latency-svc-6nx8n [750.96398ms]
  I0507 15:06:45.601920 25 service_latency.go:356] Created: latency-svc-dct26
  I0507 15:06:45.637658 25 service_latency.go:363] Got endpoints: latency-svc-c5xvm [753.179545ms]
  I0507 15:06:45.649075 25 service_latency.go:356] Created: latency-svc-trlsv
  I0507 15:06:45.686178 25 service_latency.go:363] Got endpoints: latency-svc-sbcr6 [748.557079ms]
  I0507 15:06:45.698124 25 service_latency.go:356] Created: latency-svc-6krmz
  I0507 15:06:45.736301 25 service_latency.go:363] Got endpoints: latency-svc-8thbf [749.586631ms]
  I0507 15:06:45.749437 25 service_latency.go:356] Created: latency-svc-l6drx
  I0507 15:06:45.788234 25 service_latency.go:363] Got endpoints: latency-svc-7ldnh [749.250116ms]
  I0507 15:06:45.835825 25 service_latency.go:363] Got endpoints: latency-svc-gg9t7 [750.761573ms]
  I0507 15:06:45.888760 25 service_latency.go:363] Got endpoints: latency-svc-ftm7q [751.182368ms]
  I0507 15:06:45.935235 25 service_latency.go:363] Got endpoints: latency-svc-bxp57 [749.412807ms]
  I0507 15:06:45.985201 25 service_latency.go:363] Got endpoints: latency-svc-kxjbx [749.668886ms]
  I0507 15:06:46.036962 25 service_latency.go:363] Got endpoints: latency-svc-sqnmn [745.967948ms]
  I0507 15:06:46.086702 25 service_latency.go:363] Got endpoints: latency-svc-xrdv6 [748.27736ms]
  I0507 15:06:46.138263 25 service_latency.go:363] Got endpoints: latency-svc-58xf6 [750.973902ms]
  I0507 15:06:46.184182 25 service_latency.go:363] Got endpoints: latency-svc-8ldz9 [741.679159ms]
  I0507 15:06:46.238347 25 service_latency.go:363] Got endpoints: latency-svc-5ljl2 [749.90922ms]
  I0507 15:06:46.287116 25 service_latency.go:363] Got endpoints: latency-svc-xjqd5 [748.843592ms]
  I0507 15:06:46.338243 25 service_latency.go:363] Got endpoints: latency-svc-dct26 [751.03468ms]
  I0507 15:06:46.386587 25 service_latency.go:363] Got endpoints: latency-svc-trlsv [748.853221ms]
  I0507 15:06:46.440569 25 service_latency.go:363] Got endpoints: latency-svc-6krmz [754.296555ms]
  I0507 15:06:46.484724 25 service_latency.go:363] Got endpoints: latency-svc-l6drx [748.349409ms]
  I0507 15:06:46.484913 25 service_latency.go:114] Latencies: [16.996685ms 23.346481ms 32.07944ms 40.771089ms 70.599747ms 77.509446ms 83.951473ms 93.270299ms 101.94777ms 132.158788ms 138.869945ms 147.8279ms 156.484088ms 157.599735ms 167.050555ms 167.274868ms 170.369084ms 170.583768ms 171.243888ms 171.407234ms 175.285831ms 177.180613ms 177.454716ms 178.121376ms 178.381488ms 180.929986ms 184.824212ms 188.406718ms 195.694804ms 196.314111ms 196.415574ms 198.190057ms 207.721579ms 207.959315ms 210.400551ms 212.700276ms 212.981889ms 214.223045ms 231.966361ms 252.439972ms 282.372858ms 336.501276ms 365.16891ms 410.034798ms 412.413598ms 452.529292ms 497.129267ms 533.866918ms 578.264508ms 612.93075ms 644.126944ms 683.161403ms 719.227851ms 719.719962ms 738.641658ms 741.679159ms 743.340273ms 743.977344ms 744.309962ms 745.004236ms 745.353009ms 745.576395ms 745.673052ms 745.684156ms 745.686823ms 745.967948ms 746.534629ms 746.605474ms 746.627119ms 746.758587ms 746.955623ms 747.087311ms 747.319701ms 747.390653ms 747.407925ms 747.440227ms 747.458066ms 747.605641ms 747.628621ms 747.729813ms 748.03032ms 748.080185ms 748.105899ms 748.136779ms 748.203557ms 748.222936ms 748.27736ms 748.278313ms 748.333568ms 748.349409ms 748.43055ms 748.431928ms 748.456364ms 748.463469ms 748.557079ms 748.588479ms 748.843592ms 748.853221ms 748.893766ms 748.951325ms 748.988023ms 749.019182ms 749.193743ms 749.202045ms 749.216917ms 749.244019ms 749.250116ms 749.258035ms 749.267398ms 749.29746ms 749.311157ms 749.355697ms 749.37352ms 749.392291ms 749.412807ms 749.422782ms 749.465269ms 749.481397ms 749.522696ms 749.533992ms 749.586631ms 749.668886ms 749.698066ms 749.732414ms 749.736439ms 749.75152ms 749.789896ms 749.836894ms 749.838778ms 749.871318ms 749.873296ms 749.90922ms 749.961677ms 749.986967ms 750.0221ms 750.024069ms 750.10074ms 750.12302ms 750.13242ms 750.167027ms 750.214215ms 750.268497ms 750.364778ms 750.445988ms 750.461007ms 750.484399ms 750.496355ms 750.544998ms 750.554429ms 750.6116ms 750.677639ms 750.692577ms 750.728453ms 750.761573ms 750.770185ms 750.801159ms 750.808565ms 750.910351ms 750.913057ms 750.939992ms 750.96398ms 750.973902ms 751.026988ms 751.03468ms 751.059008ms 751.182368ms 751.380604ms 751.475554ms 751.565406ms 751.628321ms 751.689305ms 751.721987ms 752.003723ms 752.017457ms 752.039575ms 752.158369ms 752.174894ms 752.178317ms 752.187495ms 752.189172ms 752.200987ms 752.42148ms 752.502164ms 752.536331ms 752.779982ms 752.844192ms 752.90809ms 753.179545ms 753.47152ms 753.672561ms 753.686543ms 753.740119ms 753.770701ms 754.165284ms 754.296555ms 754.441733ms 754.995583ms 755.227366ms 755.841829ms 759.072446ms]
  I0507 15:06:46.484951 25 service_latency.go:118] 50 %ile: 748.988023ms
  I0507 15:06:46.484967 25 service_latency.go:119] 90 %ile: 752.200987ms
  I0507 15:06:46.484981 25 service_latency.go:120] 99 %ile: 755.841829ms
  I0507 15:06:46.484994 25 service_latency.go:121] Total sample count: 200
  I0507 15:06:46.485246 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3514" for this suite. @ 05/07/25 15:06:46.489
• [9.753 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/07/25 15:06:46.496
  I0507 15:06:46.496227 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:06:46.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:06:46.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:06:46.51
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/07/25 15:06:46.513
  STEP: Saw pod success @ 05/07/25 15:06:50.532
  I0507 15:06:50.536470 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-c412c4a9-0e0f-4b6f-ac5c-44af9e19b249 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:06:50.544
  I0507 15:06:50.562220 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7662" for this suite. @ 05/07/25 15:06:50.566
• [4.078 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/07/25 15:06:50.574
  I0507 15:06:50.574133 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 15:06:50.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:06:50.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:06:50.587
  STEP: Creating pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318 @ 05/07/25 15:06:50.589
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 15:06:52.601
  I0507 15:06:52.603528 25 container_probe.go:1749] Initial restart count of pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 is 0
  I0507 15:06:52.605035 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:06:54.611085 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:06:56.616956 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:06:58.623107 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:00.626703 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:02.632330 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:04.634572 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:06.639314 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:08.644832 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:10.650318 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:12.656068 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:14.662972 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:16.668443 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:18.674244 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:20.679522 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:22.685916 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:24.691102 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:26.697224 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:28.702958 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:30.709476 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:32.715704 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:34.721874 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:36.726769 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:38.733830 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:40.739958 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:42.746162 25 container_probe.go:1759] Get pod busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 in namespace container-probe-318
  I0507 15:07:42.746229 25 container_probe.go:1763] Restart count of pod container-probe-318/busybox-53a413c3-4672-48b4-9c1b-a76610cfc708 is now 1 (50.142673629s elapsed)
  STEP: deleting the pod @ 05/07/25 15:07:42.746
  I0507 15:07:42.762415 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-318" for this suite. @ 05/07/25 15:07:42.767
• [52.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 05/07/25 15:07:42.773
  I0507 15:07:42.773695 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-webhook @ 05/07/25 15:07:42.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:07:42.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:07:42.79
  STEP: Setting up server cert @ 05/07/25 15:07:42.793
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/07/25 15:07:42.98
  STEP: Deploying the custom resource conversion webhook pod @ 05/07/25 15:07:42.983
  STEP: Wait for the deployment to be ready @ 05/07/25 15:07:42.99
  I0507 15:07:42.995196 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 15:07:45.008
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:07:45.022
  I0507 15:07:46.023284 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0507 15:07:46.028351 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Creating a v1 custom resource @ 05/07/25 15:07:48.592
  STEP: v2 custom resource should be converted @ 05/07/25 15:07:48.597
  I0507 15:07:49.145618 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6552" for this suite. @ 05/07/25 15:07:49.148
• [6.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 05/07/25 15:07:49.155
  I0507 15:07:49.155622 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 15:07:49.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:07:49.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:07:49.168
  STEP: Creating a test namespace @ 05/07/25 15:07:49.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:07:49.184
  STEP: Creating a pod in the namespace @ 05/07/25 15:07:49.186
  STEP: Waiting for the pod to have running status @ 05/07/25 15:07:49.192
  STEP: Deleting the namespace @ 05/07/25 15:07:51.201
  STEP: Waiting for the namespace to be removed. @ 05/07/25 15:07:51.209
  STEP: Recreating the namespace @ 05/07/25 15:08:02.214
  STEP: Verifying there are no pods in the namespace @ 05/07/25 15:08:02.227
  I0507 15:08:02.229780 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9619" for this suite. @ 05/07/25 15:08:02.232
  STEP: Destroying namespace "nsdeletetest-4459" for this suite. @ 05/07/25 15:08:02.237
  I0507 15:08:02.240034 25 framework.go:370] Namespace nsdeletetest-4459 was already deleted
  STEP: Destroying namespace "nsdeletetest-7574" for this suite. @ 05/07/25 15:08:02.24
• [13.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 05/07/25 15:08:02.246
  I0507 15:08:02.246120 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 15:08:02.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:02.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:02.258
  STEP: Creating a pod to test downward api env vars @ 05/07/25 15:08:02.262
  STEP: Saw pod success @ 05/07/25 15:08:06.283
  I0507 15:08:06.286406 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-4eac996e-8eca-4c7a-bca0-553d131a697e container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 15:08:06.295
  I0507 15:08:06.313045 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1839" for this suite. @ 05/07/25 15:08:06.315
• [4.074 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/07/25 15:08:06.32
  I0507 15:08:06.320313 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 15:08:06.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:06.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:06.33
  STEP: Creating secret with name secret-test-16923122-a9b5-4b5e-964f-ae8a5671a176 @ 05/07/25 15:08:06.333
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:08:06.336
  STEP: Saw pod success @ 05/07/25 15:08:10.355
  I0507 15:08:10.358631 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-4a579bb5-51d3-43bc-9cc5-3f7cef48e91c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:08:10.366
  I0507 15:08:10.384195 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9989" for this suite. @ 05/07/25 15:08:10.387
• [4.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/07/25 15:08:10.394
  I0507 15:08:10.394567 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:08:10.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:10.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:10.408
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 15:08:10.41
  STEP: Saw pod success @ 05/07/25 15:08:14.426
  I0507 15:08:14.428100 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-2090c828-a38b-4eab-8dab-49faefb47ecb container client-container: <nil>
  STEP: delete the pod @ 05/07/25 15:08:14.435
  I0507 15:08:14.453875 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9058" for this suite. @ 05/07/25 15:08:14.456
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/07/25 15:08:14.461
  I0507 15:08:14.461946 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename proxy @ 05/07/25 15:08:14.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:14.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:14.476
  I0507 15:08:14.479492 25 proxy.go:387] Creating pod...
  I0507 15:08:16.495877 25 proxy.go:411] Creating service...
  I0507 15:08:16.511143 25 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=DELETE
  I0507 15:08:16.515948 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 15:08:16.516030 25 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=OPTIONS
  I0507 15:08:16.519891 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 15:08:16.519958 25 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=PATCH
  I0507 15:08:16.523472 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 15:08:16.523519 25 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=POST
  I0507 15:08:16.526755 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 15:08:16.526839 25 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=PUT
  I0507 15:08:16.529385 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 15:08:16.529427 25 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=DELETE
  I0507 15:08:16.532488 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 15:08:16.532541 25 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0507 15:08:16.534916 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 15:08:16.534948 25 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=PATCH
  I0507 15:08:16.537448 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 15:08:16.537492 25 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=POST
  I0507 15:08:16.542246 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 15:08:16.542286 25 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=PUT
  I0507 15:08:16.545052 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 15:08:16.545102 25 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=GET
  I0507 15:08:16.546806 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0507 15:08:16.546850 25 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=GET
  I0507 15:08:16.549334 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0507 15:08:16.549377 25 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/pods/agnhost/proxy?method=HEAD
  I0507 15:08:16.551132 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0507 15:08:16.551175 25 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8119/services/e2e-proxy-test-service/proxy?method=HEAD
  I0507 15:08:16.553585 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0507 15:08:16.553728 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8119" for this suite. @ 05/07/25 15:08:16.556
• [2.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/07/25 15:08:16.561
  I0507 15:08:16.561043 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 15:08:16.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:16.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:16.573
  STEP: Creating a pod to test downward api env vars @ 05/07/25 15:08:16.575
  STEP: Saw pod success @ 05/07/25 15:08:18.588
  I0507 15:08:18.590811 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-15cf54c4-05f4-40ce-86f8-0e35a9b13a24 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 15:08:18.598
  I0507 15:08:18.612771 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-690" for this suite. @ 05/07/25 15:08:18.616
• [2.060 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/07/25 15:08:18.621
  I0507 15:08:18.621420 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename podtemplate @ 05/07/25 15:08:18.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:18.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:18.633
  STEP: Create a pod template @ 05/07/25 15:08:18.636
  STEP: Replace a pod template @ 05/07/25 15:08:18.641
  I0507 15:08:18.647390 25 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0507 15:08:18.647520 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8225" for this suite. @ 05/07/25 15:08:18.718
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/07/25 15:08:18.724
  I0507 15:08:18.724766 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:08:18.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:18.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:18.737
  STEP: Creating Pod @ 05/07/25 15:08:18.74
  STEP: Reading file content from the nginx-container @ 05/07/25 15:08:20.752
  I0507 15:08:20.752727 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3850 PodName:pod-sharedvolume-e9b38b2c-d413-486d-9e8b-c1b00786fad5 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:08:20.752752 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:08:20.752816 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-3850/pods/pod-sharedvolume-e9b38b2c-d413-486d-9e8b-c1b00786fad5/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0507 15:08:20.809181 25 exec_util.go:108] Exec stderr: ""
  I0507 15:08:20.809338 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3850" for this suite. @ 05/07/25 15:08:20.813
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/07/25 15:08:20.82
  I0507 15:08:20.820560 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 15:08:20.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:20.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:20.834
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/07/25 15:08:20.837
  STEP: When a replication controller with a matching selector is created @ 05/07/25 15:08:22.854
  STEP: Then the orphan pod is adopted @ 05/07/25 15:08:22.859
  I0507 15:08:23.864114 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7219" for this suite. @ 05/07/25 15:08:23.865
• [3.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/07/25 15:08:23.869
  I0507 15:08:23.869033 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:08:23.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:23.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:23.876
  STEP: Creating secret with name s-test-opt-del-969b3fc1-2d93-4bbd-bc5e-b6507c008d80 @ 05/07/25 15:08:23.966
  STEP: Creating secret with name s-test-opt-upd-8c40908e-f5c9-46a6-ae06-638d1c79318e @ 05/07/25 15:08:23.969
  STEP: Creating the pod @ 05/07/25 15:08:23.972
  STEP: Deleting secret s-test-opt-del-969b3fc1-2d93-4bbd-bc5e-b6507c008d80 @ 05/07/25 15:08:26.002
  STEP: Updating secret s-test-opt-upd-8c40908e-f5c9-46a6-ae06-638d1c79318e @ 05/07/25 15:08:26.005
  STEP: Creating secret with name s-test-opt-create-a1817ae1-15e4-41c2-aeb7-9c34e3be1561 @ 05/07/25 15:08:26.008
  STEP: waiting to observe update in volume @ 05/07/25 15:08:26.011
  I0507 15:08:30.050191 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1045" for this suite. @ 05/07/25 15:08:30.053
• [6.191 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/07/25 15:08:30.06
  I0507 15:08:30.060346 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 15:08:30.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:08:30.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:08:30.074
  STEP: creating the pod @ 05/07/25 15:08:30.077
  STEP: waiting for pod running @ 05/07/25 15:08:30.085
  STEP: creating a file in subpath @ 05/07/25 15:08:32.094
  I0507 15:08:32.097199 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-133 PodName:var-expansion-78427d96-8023-49df-9395-e7258a7b545c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:08:32.097238 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:08:32.097297 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-133/pods/var-expansion-78427d96-8023-49df-9395-e7258a7b545c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/07/25 15:08:32.154
  I0507 15:08:32.156939 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-133 PodName:var-expansion-78427d96-8023-49df-9395-e7258a7b545c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:08:32.156965 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:08:32.157014 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-133/pods/var-expansion-78427d96-8023-49df-9395-e7258a7b545c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/07/25 15:08:32.212
  I0507 15:08:32.728095 25 pod_client.go:173] Successfully updated pod "var-expansion-78427d96-8023-49df-9395-e7258a7b545c"
  STEP: waiting for annotated pod running @ 05/07/25 15:08:32.728
  STEP: deleting the pod gracefully @ 05/07/25 15:08:32.731
  I0507 15:08:32.731714 25 delete.go:62] Deleting pod "var-expansion-78427d96-8023-49df-9395-e7258a7b545c" in namespace "var-expansion-133"
  I0507 15:08:32.737886 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-78427d96-8023-49df-9395-e7258a7b545c" to be fully deleted
  I0507 15:09:04.837783 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-133" for this suite. @ 05/07/25 15:09:04.841
• [34.786 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/07/25 15:09:04.846
  I0507 15:09:04.846866 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 15:09:04.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:09:04.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:09:04.86
  STEP: Creating a ForbidConcurrent cronjob @ 05/07/25 15:09:04.862
  STEP: Ensuring a job is scheduled @ 05/07/25 15:09:04.867
  STEP: Ensuring exactly one is scheduled @ 05/07/25 15:10:00.873
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/07/25 15:10:00.875
  STEP: Ensuring no more jobs are scheduled @ 05/07/25 15:10:00.878
  STEP: Removing cronjob @ 05/07/25 15:10:00.881
  I0507 15:10:00.886382 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9622" for this suite. @ 05/07/25 15:10:00.89
• [56.049 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 05/07/25 15:10:00.896
  I0507 15:10:00.896136 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 15:10:00.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:00.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:00.913
  STEP: Counting existing ResourceQuota @ 05/07/25 15:10:00.916
  STEP: Creating a ResourceQuota @ 05/07/25 15:10:05.92
  STEP: Ensuring resource quota status is calculated @ 05/07/25 15:10:05.927
  STEP: Creating a ReplicationController @ 05/07/25 15:10:07.934
  STEP: Ensuring resource quota status captures replication controller creation @ 05/07/25 15:10:07.947
  STEP: Deleting a ReplicationController @ 05/07/25 15:10:09.954
  STEP: Ensuring resource quota status released usage @ 05/07/25 15:10:09.961
  I0507 15:10:11.967127 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8206" for this suite. @ 05/07/25 15:10:11.97
• [11.081 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/07/25 15:10:11.976
  I0507 15:10:11.976850 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename deployment @ 05/07/25 15:10:11.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:11.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:11.992
  I0507 15:10:11.995029 25 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0507 15:10:12.000251 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0507 15:10:17.003447 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 15:10:17.003
  I0507 15:10:17.003575 25 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0507 15:10:17.010941 25 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0507 15:10:17.015877 25 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0507 15:10:19.025794 25 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0507 15:10:19.027732 25 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0507 15:10:19.034552 25 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9b4bf94-d4c7-40f6-9062-54d63f101366",
      ResourceVersion: (string) (len=5) "23109",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882227417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 15:10:19.038329 25 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38ee3da0-df74-4ea6-863b-9e7ca0d59dcb",
      ResourceVersion: (string) (len=5) "23099",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882227417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "d9b4bf94-d4c7-40f6-9062-54d63f101366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 39 62 34 62 66  39 34 2d 64 34 63 37 2d  |\"d9b4bf94-d4c7-|
              00000120  34 30 66 36 2d 39 30 36  32 2d 35 34 64 36 33 66  |40f6-9062-54d63f|
              00000130  31 30 31 33 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |101366\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 15:10:19.039317 25 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0507 15:10:19.039626 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4300c635-e3cd-49be-b4af-ac34903b84f0",
      ResourceVersion: (string) (len=5) "23108",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882227411,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "d9b4bf94-d4c7-40f6-9062-54d63f101366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 39 62 34 62 66 39  |"uid\":\"d9b4bf9|
              000000b0  34 2d 64 34 63 37 2d 34  30 66 36 2d 39 30 36 32  |4-d4c7-40f6-9062|
              000000c0  2d 35 34 64 36 33 66 31  30 31 33 36 36 5c 22 7d  |-54d63f101366\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 15:10:19.043081 25 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-sv6xr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-sv6xr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8506",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9527602-cca8-4404-a161-89bba8477d9a",
      ResourceVersion: (string) (len=5) "23098",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882227417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "38ee3da0-df74-4ea6-863b-9e7ca0d59dcb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  65 65 33 64 61 30 2d 64  |d\":\"38ee3da0-d|
              00000090  66 37 34 2d 34 65 61 36  2d 38 36 33 62 2d 39 65  |f74-4ea6-863b-9e|
              000000a0  37 63 61 30 64 35 39 64  63 62 5c 22 7d 22 3a 7b  |7ca0d59dcb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 38  36 5c 22 7d 22 3a 7b 22  |.244.1.86\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t5blc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t5blc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882227417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882227417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882227417,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=73) "docker://c830d181ec22677fae5ff8546032aff07549571dbbe1e7ee71829e5f3ac62088",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t5blc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 15:10:19.044164 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8506" for this suite. @ 05/07/25 15:10:19.046
• [7.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/07/25 15:10:19.051
  I0507 15:10:19.051420 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 15:10:19.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:19.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:19.065
  I0507 15:10:19.071634 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5240" for this suite. @ 05/07/25 15:10:19.148
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 05/07/25 15:10:19.154
  I0507 15:10:19.154677 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:10:19.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:19.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:19.168
  STEP: create deployment with httpd image @ 05/07/25 15:10:19.171
  I0507 15:10:19.171845 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-4611 create -f -'
  I0507 15:10:19.238384 25 builder.go:146] stderr: ""
  I0507 15:10:19.238418 25 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/07/25 15:10:19.238
  I0507 15:10:19.238494 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-4611 diff -f -'
  I0507 15:10:19.345050 25 builder.go:135] rc: 1
  I0507 15:10:19.345127 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-4611 delete -f -'
  I0507 15:10:19.381887 25 builder.go:146] stderr: ""
  I0507 15:10:19.381918 25 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0507 15:10:19.382004 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4611" for this suite. @ 05/07/25 15:10:19.383
• [0.232 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/07/25 15:10:19.386
  I0507 15:10:19.386798 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 15:10:19.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:19.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:19.396
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 15:10:19.397
  STEP: Saw pod success @ 05/07/25 15:10:23.416
  I0507 15:10:23.419349 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-108cf53c-e7bb-44db-bc99-6b7b34e47278 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 15:10:23.434
  I0507 15:10:23.447076 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5033" for this suite. @ 05/07/25 15:10:23.45
• [4.068 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 05/07/25 15:10:23.454
  I0507 15:10:23.454988 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename containers @ 05/07/25 15:10:23.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:23.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:23.469
  I0507 15:10:25.497395 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-493" for this suite. @ 05/07/25 15:10:25.5
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/07/25 15:10:25.508
  I0507 15:10:25.508062 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename subpath @ 05/07/25 15:10:25.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:25.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:25.522
  STEP: Setting up data @ 05/07/25 15:10:25.524
  STEP: Creating pod pod-subpath-test-projected-qnzr @ 05/07/25 15:10:25.531
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 15:10:25.531
  STEP: Saw pod success @ 05/07/25 15:10:49.605
  I0507 15:10:49.608586 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-projected-qnzr container test-container-subpath-projected-qnzr: <nil>
  STEP: delete the pod @ 05/07/25 15:10:49.616
  STEP: Deleting pod pod-subpath-test-projected-qnzr @ 05/07/25 15:10:49.632
  I0507 15:10:49.632481 25 delete.go:62] Deleting pod "pod-subpath-test-projected-qnzr" in namespace "subpath-8712"
  I0507 15:10:49.634882 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8712" for this suite. @ 05/07/25 15:10:49.637
• [24.135 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/07/25 15:10:49.642
  I0507 15:10:49.642959 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 15:10:49.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:49.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:49.653
  I0507 15:10:49.655929 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 15:10:52.708966 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-293" for this suite. @ 05/07/25 15:10:52.712
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/07/25 15:10:52.719
  I0507 15:10:52.719497 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 15:10:52.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:52.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:52.733
  I0507 15:10:56.749788 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-311" for this suite. @ 05/07/25 15:10:56.753
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/07/25 15:10:56.763
  I0507 15:10:56.763910 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:10:56.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:10:56.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:10:56.78
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 15:10:56.79
  STEP: Saw pod success @ 05/07/25 15:11:00.828
  I0507 15:11:00.832419 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-80ef746c-d0df-4372-bf9e-61ce308d0f0f container client-container: <nil>
  STEP: delete the pod @ 05/07/25 15:11:00.841
  I0507 15:11:00.857939 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5754" for this suite. @ 05/07/25 15:11:00.861
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/07/25 15:11:00.867
  I0507 15:11:00.867233 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 15:11:00.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:00.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:00.882
  I0507 15:11:00.889866 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2841" for this suite. @ 05/07/25 15:11:00.963
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/07/25 15:11:00.97
  I0507 15:11:00.970742 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 15:11:00.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:00.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:00.985
  STEP: Creating configMap with name configmap-test-volume-map-f225313b-6235-46c4-b901-482da6c1dbba @ 05/07/25 15:11:00.987
  STEP: Creating a pod to test consume configMaps @ 05/07/25 15:11:00.989
  STEP: Saw pod success @ 05/07/25 15:11:05.01
  I0507 15:11:05.014068 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-4a8ac272-c349-44a4-8592-8fbc7aa56353 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 15:11:05.022
  I0507 15:11:05.039700 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8206" for this suite. @ 05/07/25 15:11:05.042
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/07/25 15:11:05.048
  I0507 15:11:05.048099 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:11:05.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:05.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:05.063
  STEP: Creating the pod @ 05/07/25 15:11:05.07
  I0507 15:11:07.608323 25 pod_client.go:173] Successfully updated pod "annotationupdatee1aeed97-979e-4440-bb05-2a9548f3ccb2"
  I0507 15:11:11.642078 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5232" for this suite. @ 05/07/25 15:11:11.645
• [6.603 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 05/07/25 15:11:11.651
  I0507 15:11:11.651495 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 15:11:11.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:11.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:11.667
  STEP: Creating a test externalName service @ 05/07/25 15:11:11.67
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5334.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-5334.svc.cluster.local; sleep 1; done
   @ 05/07/25 15:11:11.676
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5334.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5334.svc.cluster.local; sleep 1; done
   @ 05/07/25 15:11:11.676
  STEP: creating a pod to probe DNS @ 05/07/25 15:11:11.676
  STEP: submitting the pod to kubernetes @ 05/07/25 15:11:11.676
  STEP: retrieving the pod @ 05/07/25 15:11:13.693
  STEP: looking for the results for each expected name from probers @ 05/07/25 15:11:13.696
  I0507 15:11:13.702359 25 dns_common.go:571] DNS probes using dns-test-fa8fa2c0-3ea1-43cc-944f-ad6213632cf7 succeeded

  STEP: changing the externalName to bar.example.com @ 05/07/25 15:11:13.702
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5334.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-5334.svc.cluster.local; sleep 1; done
   @ 05/07/25 15:11:13.708
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5334.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5334.svc.cluster.local; sleep 1; done
   @ 05/07/25 15:11:13.708
  STEP: creating a second pod to probe DNS @ 05/07/25 15:11:13.708
  STEP: submitting the pod to kubernetes @ 05/07/25 15:11:13.708
  STEP: retrieving the pod @ 05/07/25 15:11:15.727
  STEP: looking for the results for each expected name from probers @ 05/07/25 15:11:15.731
  I0507 15:11:15.738470 25 dns_common.go:571] DNS probes using dns-test-00be7acc-2c24-498e-a609-c3c1153109b1 succeeded

  STEP: changing the service to type=ClusterIP @ 05/07/25 15:11:15.738
  W0507 15:11:15.758026      25 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5334.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-5334.svc.cluster.local; sleep 1; done
   @ 05/07/25 15:11:15.758
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5334.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5334.svc.cluster.local; sleep 1; done
   @ 05/07/25 15:11:15.758
  STEP: creating a third pod to probe DNS @ 05/07/25 15:11:15.758
  STEP: submitting the pod to kubernetes @ 05/07/25 15:11:15.761
  STEP: retrieving the pod @ 05/07/25 15:11:17.779
  STEP: looking for the results for each expected name from probers @ 05/07/25 15:11:17.782
  I0507 15:11:17.788375 25 dns_common.go:571] DNS probes using dns-test-9d6cabb8-22d9-4625-ac5c-21a0b5a90ec8 succeeded

  STEP: deleting the pod @ 05/07/25 15:11:17.788
  STEP: deleting the pod @ 05/07/25 15:11:17.801
  STEP: deleting the pod @ 05/07/25 15:11:17.812
  STEP: deleting the test externalName service @ 05/07/25 15:11:17.83
  I0507 15:11:17.853399 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5334" for this suite. @ 05/07/25 15:11:17.859
• [6.213 seconds]
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/07/25 15:11:17.864
  I0507 15:11:17.864290 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 15:11:17.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:17.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:17.874
  STEP: creating a Pod with a static label @ 05/07/25 15:11:17.879
  STEP: watching for Pod to be ready @ 05/07/25 15:11:17.884
  I0507 15:11:17.885655 25 pods.go:945] observed Pod pod-test in namespace pods-6031 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0507 15:11:17.890470 25 pods.go:945] observed Pod pod-test in namespace pods-6031 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC  }]
  I0507 15:11:17.898462 25 pods.go:945] observed Pod pod-test in namespace pods-6031 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC  }]
  I0507 15:11:19.404159 25 pods.go:948] Found Pod pod-test in namespace pods-6031 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:19 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:19 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 15:11:17 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/07/25 15:11:19.408
  STEP: getting the Pod and ensuring that it's patched @ 05/07/25 15:11:19.419
  STEP: replacing the Pod's status Ready condition to False @ 05/07/25 15:11:19.421
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/07/25 15:11:19.43
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/07/25 15:11:19.43
  STEP: watching for the Pod to be deleted @ 05/07/25 15:11:19.436
  I0507 15:11:19.438752 25 pods.go:1058] observed event type MODIFIED
  I0507 15:11:21.479666 25 pods.go:1058] observed event type MODIFIED
  I0507 15:11:21.587930 25 pods.go:1058] observed event type MODIFIED
  I0507 15:11:22.509248 25 pods.go:1058] observed event type MODIFIED
  I0507 15:11:22.515817 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6031" for this suite. @ 05/07/25 15:11:22.518
• [4.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/07/25 15:11:22.521
  I0507 15:11:22.521715 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 15:11:22.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:22.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:22.53
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/07/25 15:11:22.533
  I0507 15:11:22.534024 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 15:11:23.671574 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 15:11:28.333031 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-850" for this suite. @ 05/07/25 15:11:28.339
• [5.822 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/07/25 15:11:28.344
  I0507 15:11:28.344138 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 15:11:28.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:28.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:28.353
  STEP: Performing setup for networking test in namespace pod-network-test-6328 @ 05/07/25 15:11:28.354
  STEP: creating a selector @ 05/07/25 15:11:28.354
  STEP: Creating the service pods in kubernetes @ 05/07/25 15:11:28.355
  I0507 15:11:28.355026 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/07/25 15:11:42.504
  I0507 15:11:44.529933 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 15:11:44.529976 25 utils.go:496] Going to poll 10.244.0.132 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0507 15:11:44.531947 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.132:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6328 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:11:44.531978 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:11:44.532036 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6328/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.132%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0507 15:11:44.594183 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0507 15:11:44.594213 25 utils.go:496] Going to poll 10.244.1.98 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0507 15:11:44.596259 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.98:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6328 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:11:44.596289 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:11:44.596344 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6328/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.98%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0507 15:11:44.667928 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0507 15:11:44.668107 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6328" for this suite. @ 05/07/25 15:11:44.672
• [16.335 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 05/07/25 15:11:44.679
  I0507 15:11:44.679239 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 15:11:44.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:11:44.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:11:44.691
  I0507 15:11:44.694831 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 15:11:44.775345 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0507 15:11:44.777333 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0507 15:11:44.780844 25 predicates.go:957] coredns-668d6bf9bc-kg25h from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780875 25 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0507 15:11:44.780885 25 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780893 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0507 15:11:44.780901 25 predicates.go:957] kindnet-rnsjv from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780908 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 15:11:44.780916 25 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780924 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0507 15:11:44.780931 25 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780939 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0507 15:11:44.780946 25 predicates.go:957] kube-proxy-xzmjp from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780953 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 15:11:44.780961 25 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780969 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0507 15:11:44.780977 25 predicates.go:957] storage-provisioner from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.780985 25 predicates.go:959] 	Container storage-provisioner ready: true, restart count 1
  I0507 15:11:44.780993 25 predicates.go:957] netserver-0 from pod-network-test-6328 started at 2025-05-07 15:11:28 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.781004 25 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0507 15:11:44.781017 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-l5ngp from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:11:44.781025 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:11:44.781033 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0507 15:11:44.781041 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0507 15:11:44.783636 25 predicates.go:957] kindnet-nd7gj from kube-system started at 2025-05-07 14:59:16 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.783672 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 15:11:44.783689 25 predicates.go:957] kube-proxy-nwnr4 from kube-system started at 2025-05-07 13:58:19 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.783701 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 15:11:44.783713 25 predicates.go:957] host-test-container-pod from pod-network-test-6328 started at 2025-05-07 15:11:42 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.783726 25 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0507 15:11:44.783738 25 predicates.go:957] netserver-1 from pod-network-test-6328 started at 2025-05-07 15:11:28 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.783755 25 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0507 15:11:44.783768 25 predicates.go:957] test-container-pod from pod-network-test-6328 started at 2025-05-07 15:11:42 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.783778 25 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0507 15:11:44.783789 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-07 13:58:43 +0000 UTC (1 container statuses recorded)
  I0507 15:11:44.783799 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 15:11:44.783810 25 predicates.go:957] sonobuoy-e2e-job-889ff4cea7414d9e from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:11:44.783820 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0507 15:11:44.783836 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:11:44.783846 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-6fk5k from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:11:44.783856 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:11:44.783865 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/07/25 15:11:44.783
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/07/25 15:11:46.799
  STEP: Trying to apply a random label on the found node. @ 05/07/25 15:11:46.816
  STEP: verifying the node has the label kubernetes.io/e2e-350f6411-ea8f-4459-8324-5361e05db3b9 95 @ 05/07/25 15:11:46.827
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/07/25 15:11:46.832
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.49.3 on the node which pod4 resides and expect not scheduled @ 05/07/25 15:11:48.846
  STEP: removing the label kubernetes.io/e2e-350f6411-ea8f-4459-8324-5361e05db3b9 off the node k8sconformance-m02 @ 05/07/25 15:16:48.857
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-350f6411-ea8f-4459-8324-5361e05db3b9 @ 05/07/25 15:16:48.872
  I0507 15:16:48.876559 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8831" for this suite. @ 05/07/25 15:16:48.878
• [304.204 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 05/07/25 15:16:48.883
  I0507 15:16:48.883976 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:16:48.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:16:48.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:16:48.896
  STEP: creating a Service @ 05/07/25 15:16:48.9
  STEP: watching for the Service to be added @ 05/07/25 15:16:48.91
  I0507 15:16:48.911641 25 service.go:3425] Found Service test-service-82vrd in namespace services-4734 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31633}]
  I0507 15:16:48.911667 25 service.go:3432] Service test-service-82vrd created
  STEP: Getting /status @ 05/07/25 15:16:48.911
  I0507 15:16:48.915424 25 service.go:3443] Service test-service-82vrd has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/07/25 15:16:48.915
  STEP: watching for the Service to be patched @ 05/07/25 15:16:48.919
  I0507 15:16:48.921005 25 service.go:3466] observed Service test-service-82vrd in namespace services-4734 with annotations: map[] & LoadBalancer: {[]}
  I0507 15:16:48.921034 25 service.go:3469] Found Service test-service-82vrd in namespace services-4734 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003c12cc0 []}]}
  I0507 15:16:48.921040 25 service.go:3476] Service test-service-82vrd has service status patched
  STEP: updating the ServiceStatus @ 05/07/25 15:16:48.921
  I0507 15:16:48.925342 25 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/07/25 15:16:48.925
  I0507 15:16:48.926555 25 service.go:3507] Observed Service test-service-82vrd in namespace services-4734 with annotations: map[] & Conditions: []
  I0507 15:16:48.926583 25 service.go:3518] Observed Service test-service-82vrd in namespace services-4734 with annotations: map[patchedstatus:true] & Conditions: []
  I0507 15:16:48.926683 25 service.go:3514] Found Service test-service-82vrd in namespace services-4734 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 15:16:48.926698 25 service.go:3525] Service test-service-82vrd has service status updated
  STEP: patching the service @ 05/07/25 15:16:48.926
  STEP: watching for the Service to be patched @ 05/07/25 15:16:48.935
  I0507 15:16:48.936470 25 service.go:3548] observed Service test-service-82vrd in namespace services-4734 with labels: map[test-service-static:true]
  I0507 15:16:48.936485 25 service.go:3548] observed Service test-service-82vrd in namespace services-4734 with labels: map[test-service-static:true]
  I0507 15:16:48.936565 25 service.go:3548] observed Service test-service-82vrd in namespace services-4734 with labels: map[test-service-static:true]
  I0507 15:16:48.936608 25 service.go:3551] Found Service test-service-82vrd in namespace services-4734 with labels: map[test-service:patched test-service-static:true]
  I0507 15:16:48.936634 25 service.go:3558] Service test-service-82vrd patched
  STEP: deleting the service @ 05/07/25 15:16:48.936
  STEP: watching for the Service to be deleted @ 05/07/25 15:16:48.949
  I0507 15:16:48.950746 25 service.go:3582] Observed event: ADDED
  I0507 15:16:48.950830 25 service.go:3582] Observed event: MODIFIED
  I0507 15:16:48.950942 25 service.go:3582] Observed event: MODIFIED
  I0507 15:16:48.950965 25 service.go:3582] Observed event: MODIFIED
  I0507 15:16:48.950986 25 service.go:3578] Found Service test-service-82vrd in namespace services-4734 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0507 15:16:48.950997 25 service.go:3587] Service test-service-82vrd deleted
  I0507 15:16:48.951093 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4734" for this suite. @ 05/07/25 15:16:48.952
• [0.071 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/07/25 15:16:48.955
  I0507 15:16:48.955255 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 15:16:48.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:16:48.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:16:48.962
  STEP: Creating a suspended cronjob @ 05/07/25 15:16:48.963
  STEP: Ensuring no jobs are scheduled @ 05/07/25 15:16:48.966
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/07/25 15:21:48.966
  STEP: Removing cronjob @ 05/07/25 15:21:48.972
  I0507 15:21:48.979384 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-755" for this suite. @ 05/07/25 15:21:48.983
• [300.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 05/07/25 15:21:48.988
  I0507 15:21:48.988891 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 15:21:48.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:21:49.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:21:49.005
  STEP: Updating Namespace "namespaces-8223" @ 05/07/25 15:21:49.008
  I0507 15:21:49.015281 25 namespace.go:390] Namespace "namespaces-8223" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"f0dbccc4-0455-4e7c-9127-5fae0cbf053e", "kubernetes.io/metadata.name":"namespaces-8223", "namespaces-8223":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0507 15:21:49.015455 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8223" for this suite. @ 05/07/25 15:21:49.085
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/07/25 15:21:49.092
  I0507 15:21:49.092057 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename init-container @ 05/07/25 15:21:49.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:21:49.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:21:49.108
  STEP: creating the pod @ 05/07/25 15:21:49.111
  I0507 15:21:49.111774 25 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0507 15:21:52.473852 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8545" for this suite. @ 05/07/25 15:21:52.477
• [3.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/07/25 15:21:52.482
  I0507 15:21:52.482800 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:21:52.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:21:52.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:21:52.494
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/07/25 15:21:52.495
  STEP: Saw pod success @ 05/07/25 15:21:54.505
  I0507 15:21:54.507723 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-6ba8e489-0e71-4b9b-8965-fc232a3a608a container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:21:54.522
  I0507 15:21:54.530383 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1839" for this suite. @ 05/07/25 15:21:54.532
• [2.053 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/07/25 15:21:54.535
  I0507 15:21:54.535357 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:21:54.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:21:54.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:21:54.545
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/07/25 15:21:54.547
  STEP: Saw pod success @ 05/07/25 15:21:56.562
  I0507 15:21:56.565638 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-5705c4bd-503c-4630-ba37-8d4581d06fff container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:21:56.573
  I0507 15:21:56.587830 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3608" for this suite. @ 05/07/25 15:21:56.591
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 05/07/25 15:21:56.597
  I0507 15:21:56.598008 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:21:56.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:21:56.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:21:56.609
  STEP: creating all guestbook components @ 05/07/25 15:21:56.611
  I0507 15:21:56.611761 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0507 15:21:56.611853 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 create -f -'
  I0507 15:21:56.691546 25 builder.go:146] stderr: ""
  I0507 15:21:56.691621 25 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0507 15:21:56.691688 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0507 15:21:56.691806 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 create -f -'
  I0507 15:21:56.773626 25 builder.go:146] stderr: ""
  I0507 15:21:56.773661 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0507 15:21:56.773701 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0507 15:21:56.773765 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 create -f -'
  I0507 15:21:56.854289 25 builder.go:146] stderr: ""
  I0507 15:21:56.854325 25 builder.go:147] stdout: "service/frontend created\n"
  I0507 15:21:56.854376 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0507 15:21:56.854456 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 create -f -'
  I0507 15:21:56.906211 25 builder.go:146] stderr: ""
  I0507 15:21:56.906251 25 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0507 15:21:56.906308 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0507 15:21:56.906394 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 create -f -'
  I0507 15:21:56.998663 25 builder.go:146] stderr: ""
  I0507 15:21:56.998711 25 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0507 15:21:56.998759 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0507 15:21:56.998856 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 create -f -'
  I0507 15:21:57.061825 25 builder.go:146] stderr: ""
  I0507 15:21:57.061859 25 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/07/25 15:21:57.061
  I0507 15:21:57.061894 25 kubectl.go:2279] Waiting for all frontend pods to be Running.
  I0507 15:22:02.113455 25 kubectl.go:2283] Waiting for frontend to serve content.
  I0507 15:22:02.123864 25 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0507 15:22:02.133221 25 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/07/25 15:22:02.14
  I0507 15:22:02.140224 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 delete --grace-period=0 --force -f -'
  I0507 15:22:02.194480 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:02.194534 25 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 15:22:02.194
  I0507 15:22:02.194632 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 delete --grace-period=0 --force -f -'
  I0507 15:22:02.243310 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:02.243344 25 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 15:22:02.243
  I0507 15:22:02.243441 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 delete --grace-period=0 --force -f -'
  I0507 15:22:02.290315 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:02.290348 25 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 15:22:02.29
  I0507 15:22:02.290467 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 delete --grace-period=0 --force -f -'
  I0507 15:22:02.331589 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:02.331616 25 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 15:22:02.331
  I0507 15:22:02.331692 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 delete --grace-period=0 --force -f -'
  I0507 15:22:02.407533 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:02.407572 25 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 15:22:02.407
  I0507 15:22:02.407703 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6944 delete --grace-period=0 --force -f -'
  I0507 15:22:02.460570 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:02.460617 25 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0507 15:22:02.460723 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6944" for this suite. @ 05/07/25 15:22:02.463
• [5.871 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 05/07/25 15:22:02.469
  I0507 15:22:02.469376 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:22:02.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:02.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:02.482
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 15:22:02.484
  I0507 15:22:02.484457 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-167 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0507 15:22:02.535237 25 builder.go:146] stderr: ""
  I0507 15:22:02.535436 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/07/25 15:22:02.535
  I0507 15:22:02.537452 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-167 delete pods e2e-test-httpd-pod'
  I0507 15:22:04.643219 25 builder.go:146] stderr: ""
  I0507 15:22:04.643284 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0507 15:22:04.643458 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-167" for this suite. @ 05/07/25 15:22:04.647
• [2.183 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 05/07/25 15:22:04.652
  I0507 15:22:04.652604 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename dns @ 05/07/25 15:22:04.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:04.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:04.666
  STEP: Creating a test headless service @ 05/07/25 15:22:04.669
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9009 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9009;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9009 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9009;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9009.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9009.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9009.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9009.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9009.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9009.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9009.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9009.svc;check="$$(dig +notcp +noall +answer +search 91.151.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.151.91_udp@PTR;check="$$(dig +tcp +noall +answer +search 91.151.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.151.91_tcp@PTR;sleep 1; done
   @ 05/07/25 15:22:04.685
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9009 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9009;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9009 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9009;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9009.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9009.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9009.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9009.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9009.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9009.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9009.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9009.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9009.svc;check="$$(dig +notcp +noall +answer +search 91.151.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.151.91_udp@PTR;check="$$(dig +tcp +noall +answer +search 91.151.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.151.91_tcp@PTR;sleep 1; done
   @ 05/07/25 15:22:04.685
  STEP: creating a pod to probe DNS @ 05/07/25 15:22:04.685
  STEP: submitting the pod to kubernetes @ 05/07/25 15:22:04.685
  STEP: retrieving the pod @ 05/07/25 15:22:06.703
  STEP: looking for the results for each expected name from probers @ 05/07/25 15:22:06.705
  I0507 15:22:06.706772 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61: the server could not find the requested resource (get pods dns-test-19c5ff6c-176c-4300-9786-dcc785574c61)
  I0507 15:22:06.708000 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61: the server could not find the requested resource (get pods dns-test-19c5ff6c-176c-4300-9786-dcc785574c61)
  I0507 15:22:06.709177 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9009 from pod dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61: the server could not find the requested resource (get pods dns-test-19c5ff6c-176c-4300-9786-dcc785574c61)
  I0507 15:22:06.710573 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9009 from pod dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61: the server could not find the requested resource (get pods dns-test-19c5ff6c-176c-4300-9786-dcc785574c61)
  I0507 15:22:06.712109 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9009.svc from pod dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61: the server could not find the requested resource (get pods dns-test-19c5ff6c-176c-4300-9786-dcc785574c61)
  I0507 15:22:06.732564 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9009.svc from pod dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61: the server could not find the requested resource (get pods dns-test-19c5ff6c-176c-4300-9786-dcc785574c61)
  I0507 15:22:06.737835 25 dns_common.go:506] Lookups using dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9009 agnhost_tcp@dns-test-service.dns-9009 agnhost_udp@dns-test-service.dns-9009.svc jessie_tcp@_http._tcp.dns-test-service.dns-9009.svc]

  I0507 15:22:06.742353 25 dns_common.go:514] Pod client logs for webserver: 
  I0507 15:22:06.748796 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0507 15:22:06.753886 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0507 15:22:11.753180 25 dns_common.go:546] DNS probes using dns-9009/dns-test-19c5ff6c-176c-4300-9786-dcc785574c61 succeeded

  STEP: deleting the pod @ 05/07/25 15:22:11.753
  STEP: deleting the test service @ 05/07/25 15:22:11.766
  STEP: deleting the test headless service @ 05/07/25 15:22:11.79
  I0507 15:22:11.798876 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9009" for this suite. @ 05/07/25 15:22:11.802
• [7.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 05/07/25 15:22:11.805
  I0507 15:22:11.805959 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 15:22:11.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:11.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:11.815
  STEP: Creating a job @ 05/07/25 15:22:11.817
  STEP: Ensuring job reaches completions @ 05/07/25 15:22:11.82
  I0507 15:22:21.849847 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6385" for this suite. @ 05/07/25 15:22:21.852
• [10.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/07/25 15:22:21.86
  I0507 15:22:21.860537 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 15:22:21.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:21.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:21.874
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/07/25 15:22:21.877
  I0507 15:22:21.877740 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/07/25 15:22:26.622
  I0507 15:22:26.623332 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 15:22:27.774939 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  I0507 15:22:32.437492 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6795" for this suite. @ 05/07/25 15:22:32.441
• [10.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/07/25 15:22:32.446
  I0507 15:22:32.446433 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 15:22:32.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:32.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:32.454
  STEP: creating a ReplicationController @ 05/07/25 15:22:32.458
  STEP: waiting for RC to be added @ 05/07/25 15:22:32.461
  STEP: waiting for available Replicas @ 05/07/25 15:22:32.461
  STEP: patching ReplicationController @ 05/07/25 15:22:34.096
  STEP: waiting for RC to be modified @ 05/07/25 15:22:34.128
  STEP: patching ReplicationController status @ 05/07/25 15:22:34.128
  STEP: waiting for RC to be modified @ 05/07/25 15:22:34.133
  STEP: waiting for available Replicas @ 05/07/25 15:22:34.133
  STEP: fetching ReplicationController status @ 05/07/25 15:22:34.136
  STEP: patching ReplicationController scale @ 05/07/25 15:22:34.137
  STEP: waiting for RC to be modified @ 05/07/25 15:22:34.141
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/07/25 15:22:34.141
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/07/25 15:22:35.665
  STEP: updating ReplicationController status @ 05/07/25 15:22:35.668
  STEP: waiting for RC to be modified @ 05/07/25 15:22:35.673
  STEP: listing all ReplicationControllers @ 05/07/25 15:22:35.674
  STEP: checking that ReplicationController has expected values @ 05/07/25 15:22:35.677
  STEP: deleting ReplicationControllers by collection @ 05/07/25 15:22:35.677
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/07/25 15:22:35.683
  I0507 15:22:35.712011 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0507 15:22:35.712188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4579" for this suite. @ 05/07/25 15:22:35.714
• [3.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/07/25 15:22:35.72
  I0507 15:22:35.720035 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 15:22:35.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:35.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:35.733
  STEP: Creating configMap configmap-8858/configmap-test-22080002-20a1-456e-974d-60544d14680e @ 05/07/25 15:22:35.735
  STEP: Creating a pod to test consume configMaps @ 05/07/25 15:22:35.739
  E0507 15:22:36.712920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:37.713692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:38.713968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:39.714989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:22:39.765
  I0507 15:22:39.768434 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-bc7d7518-a86f-40c8-9d78-0ee4e3d0e0ce container env-test: <nil>
  STEP: delete the pod @ 05/07/25 15:22:39.775
  I0507 15:22:39.789787 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8858" for this suite. @ 05/07/25 15:22:39.793
• [4.078 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 05/07/25 15:22:39.798
  I0507 15:22:39.798238 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:22:39.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:39.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:39.813
  STEP: creating a replication controller @ 05/07/25 15:22:39.815
  I0507 15:22:39.816071 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 create -f -'
  I0507 15:22:39.889899 25 builder.go:146] stderr: ""
  I0507 15:22:39.889934 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 15:22:39.889
  I0507 15:22:39.890028 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:22:39.942452 25 builder.go:146] stderr: ""
  I0507 15:22:39.942490 25 builder.go:147] stdout: "update-demo-nautilus-4wqtv update-demo-nautilus-wltxt "
  I0507 15:22:39.942556 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-4wqtv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:22:39.980740 25 builder.go:146] stderr: ""
  I0507 15:22:39.980775 25 builder.go:147] stdout: ""
  I0507 15:22:39.980787 25 kubectl.go:2509] update-demo-nautilus-4wqtv is created but not running
  E0507 15:22:40.715718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:41.716811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:42.717298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:43.717709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:44.718151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:22:44.981612 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:22:45.028136 25 builder.go:146] stderr: ""
  I0507 15:22:45.028169 25 builder.go:147] stdout: "update-demo-nautilus-4wqtv update-demo-nautilus-wltxt "
  I0507 15:22:45.028215 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-4wqtv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:22:45.063429 25 builder.go:146] stderr: ""
  I0507 15:22:45.063465 25 builder.go:147] stdout: "true"
  I0507 15:22:45.063517 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-4wqtv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:22:45.101192 25 builder.go:146] stderr: ""
  I0507 15:22:45.101229 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:22:45.101242 25 kubectl.go:2400] validating pod update-demo-nautilus-4wqtv
  I0507 15:22:45.103636 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:22:45.103677 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:22:45.103690 25 kubectl.go:2527] update-demo-nautilus-4wqtv is verified up and running
  I0507 15:22:45.103730 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-wltxt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:22:45.139514 25 builder.go:146] stderr: ""
  I0507 15:22:45.139557 25 builder.go:147] stdout: "true"
  I0507 15:22:45.139604 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-wltxt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:22:45.174868 25 builder.go:146] stderr: ""
  I0507 15:22:45.174901 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:22:45.174913 25 kubectl.go:2400] validating pod update-demo-nautilus-wltxt
  I0507 15:22:45.176930 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:22:45.176963 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:22:45.176972 25 kubectl.go:2527] update-demo-nautilus-wltxt is verified up and running
  STEP: scaling down the replication controller @ 05/07/25 15:22:45.176
  I0507 15:22:45.177958 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0507 15:22:45.177985 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0507 15:22:45.719246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:22:46.228204 25 builder.go:146] stderr: ""
  I0507 15:22:46.228286 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 15:22:46.228
  I0507 15:22:46.228371 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:22:46.267674 25 builder.go:146] stderr: ""
  I0507 15:22:46.267719 25 builder.go:147] stdout: "update-demo-nautilus-wltxt "
  I0507 15:22:46.267760 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-wltxt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:22:46.304828 25 builder.go:146] stderr: ""
  I0507 15:22:46.304861 25 builder.go:147] stdout: "true"
  I0507 15:22:46.304904 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-wltxt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:22:46.342620 25 builder.go:146] stderr: ""
  I0507 15:22:46.342659 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:22:46.342673 25 kubectl.go:2400] validating pod update-demo-nautilus-wltxt
  I0507 15:22:46.344327 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:22:46.344362 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:22:46.344372 25 kubectl.go:2527] update-demo-nautilus-wltxt is verified up and running
  STEP: scaling up the replication controller @ 05/07/25 15:22:46.344
  I0507 15:22:46.345258 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0507 15:22:46.345282 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0507 15:22:46.719808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:22:47.388899 25 builder.go:146] stderr: ""
  I0507 15:22:47.388953 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 15:22:47.388
  I0507 15:22:47.389061 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 15:22:47.429872 25 builder.go:146] stderr: ""
  I0507 15:22:47.429908 25 builder.go:147] stdout: "update-demo-nautilus-kkkt7 update-demo-nautilus-wltxt "
  I0507 15:22:47.429950 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-kkkt7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:22:47.470823 25 builder.go:146] stderr: ""
  I0507 15:22:47.470865 25 builder.go:147] stdout: "true"
  I0507 15:22:47.470904 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-kkkt7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:22:47.512096 25 builder.go:146] stderr: ""
  I0507 15:22:47.512132 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:22:47.512144 25 kubectl.go:2400] validating pod update-demo-nautilus-kkkt7
  I0507 15:22:47.514650 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:22:47.514695 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:22:47.514707 25 kubectl.go:2527] update-demo-nautilus-kkkt7 is verified up and running
  I0507 15:22:47.514744 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-wltxt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 15:22:47.552892 25 builder.go:146] stderr: ""
  I0507 15:22:47.552925 25 builder.go:147] stdout: "true"
  I0507 15:22:47.552975 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods update-demo-nautilus-wltxt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 15:22:47.587210 25 builder.go:146] stderr: ""
  I0507 15:22:47.587243 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 15:22:47.587254 25 kubectl.go:2400] validating pod update-demo-nautilus-wltxt
  I0507 15:22:47.589009 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0507 15:22:47.589036 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 15:22:47.589043 25 kubectl.go:2527] update-demo-nautilus-wltxt is verified up and running
  STEP: using delete to clean up resources @ 05/07/25 15:22:47.589
  I0507 15:22:47.589084 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 delete --grace-period=0 --force -f -'
  I0507 15:22:47.633396 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 15:22:47.633436 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0507 15:22:47.633493 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get rc,svc -l name=update-demo --no-headers'
  I0507 15:22:47.677272 25 builder.go:146] stderr: "No resources found in kubectl-7861 namespace.\n"
  I0507 15:22:47.677301 25 builder.go:147] stdout: ""
  I0507 15:22:47.677329 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-7861 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0507 15:22:47.712599 25 builder.go:146] stderr: ""
  I0507 15:22:47.712639 25 builder.go:147] stdout: ""
  I0507 15:22:47.712753 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7861" for this suite. @ 05/07/25 15:22:47.714
• [7.920 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/07/25 15:22:47.718
  I0507 15:22:47.718184 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:22:47.719
  E0507 15:22:47.720238      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:47.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:47.729
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/07/25 15:22:47.732
  E0507 15:22:48.720879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:49.721495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:50.722580      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:51.723032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:22:51.753
  I0507 15:22:51.756693 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-281c9c06-804d-44bc-b41b-4db5fbab0e3b container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:22:51.763
  I0507 15:22:51.779329 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2936" for this suite. @ 05/07/25 15:22:51.783
• [4.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/07/25 15:22:51.788
  I0507 15:22:51.789009 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 15:22:51.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:51.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:51.803
  STEP: Waiting for pod completion @ 05/07/25 15:22:51.814
  E0507 15:22:52.723669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:53.724404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:54.724465      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:55.724913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:22:55.836324 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7050" for this suite. @ 05/07/25 15:22:55.839
• [4.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 05/07/25 15:22:55.844
  I0507 15:22:55.844962 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 15:22:55.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:55.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:55.856
  STEP: getting /apis @ 05/07/25 15:22:55.864
  STEP: getting /apis/admissionregistration.k8s.io @ 05/07/25 15:22:55.868
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/07/25 15:22:55.869
  STEP: creating @ 05/07/25 15:22:55.87
  STEP: getting @ 05/07/25 15:22:55.883
  STEP: listing @ 05/07/25 15:22:55.886
  STEP: watching @ 05/07/25 15:22:55.888
  I0507 15:22:55.888758 25 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 05/07/25 15:22:55.889
  STEP: updating @ 05/07/25 15:22:55.894
  I0507 15:22:55.902071 25 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 05/07/25 15:22:55.902
  STEP: deleting a collection @ 05/07/25 15:22:55.91
  I0507 15:22:55.921994 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1674" for this suite. @ 05/07/25 15:22:55.941
• [0.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/07/25 15:22:55.95
  I0507 15:22:55.950071 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename limitrange @ 05/07/25 15:22:55.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:22:55.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:22:55.965
  STEP: Creating a LimitRange @ 05/07/25 15:22:55.968
  STEP: Setting up watch @ 05/07/25 15:22:55.968
  STEP: Submitting a LimitRange @ 05/07/25 15:22:56.072
  STEP: Verifying LimitRange creation was observed @ 05/07/25 15:22:56.079
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/07/25 15:22:56.079
  I0507 15:22:56.082275 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0507 15:22:56.082328 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/07/25 15:22:56.082
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/07/25 15:22:56.087
  I0507 15:22:56.089714 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0507 15:22:56.089764 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/07/25 15:22:56.089
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/07/25 15:22:56.094
  I0507 15:22:56.098199 25 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0507 15:22:56.098258 25 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/07/25 15:22:56.098
  STEP: Failing to create a Pod with more than max resources @ 05/07/25 15:22:56.102
  STEP: Updating a LimitRange @ 05/07/25 15:22:56.105
  STEP: Verifying LimitRange updating is effective @ 05/07/25 15:22:56.109
  E0507 15:22:56.725834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:57.726135      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/07/25 15:22:58.115
  STEP: Failing to create a Pod with more than max resources @ 05/07/25 15:22:58.123
  STEP: Deleting a LimitRange @ 05/07/25 15:22:58.126
  STEP: Verifying the LimitRange was deleted @ 05/07/25 15:22:58.132
  E0507 15:22:58.726877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:22:59.727906      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:00.728922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:01.729820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:02.730031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:23:03.136283 25 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/07/25 15:23:03.136
  I0507 15:23:03.147414 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3152" for this suite. @ 05/07/25 15:23:03.151
• [7.207 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 05/07/25 15:23:03.157
  I0507 15:23:03.157715 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 15:23:03.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:23:03.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:23:03.173
  I0507 15:23:03.189118 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0507 15:23:03.730211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:04.730828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:05.730828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:06.732026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:07.732689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:08.733038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:09.733528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:10.734023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:11.734784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:12.735319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:13.735728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:14.736189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:15.736356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:16.736927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:17.737824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:18.738342      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:19.738837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:20.739784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:21.739861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:22.740285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:23.740799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:24.741351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:25.741497      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:26.742153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:27.743088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:28.743659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:29.743712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:30.743952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:31.743978      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:32.744599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:33.745000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:34.745655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:35.746206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:36.746856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:37.747108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:38.747813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:39.748249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:40.748931      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:41.749583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:42.750354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:43.750947      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:44.751944      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:45.752781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:46.753421      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:47.754234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:48.754864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:49.755850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:50.756449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:51.756615      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:52.756846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:53.757321      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:54.757876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:55.758657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:56.759166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:57.759843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:58.760421      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:23:59.760700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:00.761347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:01.761426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:02.762052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:24:03.194795 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/07/25 15:24:03.197
  I0507 15:24:03.197964 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/07/25 15:24:03.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:03.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:03.21
  I0507 15:24:03.228883 25 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0507 15:24:03.233139 25 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 05/07/25 15:24:03.269
  STEP: Removing a custom resource @ 05/07/25 15:24:03.278
  I0507 15:24:03.285865 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3307" for this suite. @ 05/07/25 15:24:03.298
  I0507 15:24:03.305753 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8149" for this suite. @ 05/07/25 15:24:03.396
• [60.246 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 05/07/25 15:24:03.404
  I0507 15:24:03.404582 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 15:24:03.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:03.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:03.42
  STEP: Creating a job @ 05/07/25 15:24:03.423
  STEP: Ensuring active pods == parallelism @ 05/07/25 15:24:03.428
  E0507 15:24:03.762725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:04.763318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/07/25 15:24:05.442
  STEP: deleting Job.batch foo in namespace job-7662, will wait for the garbage collector to delete the pods @ 05/07/25 15:24:05.442
  I0507 15:24:05.502904 25 resources.go:139] Deleting Job.batch foo took: 6.508546ms
  I0507 15:24:05.603100 25 resources.go:163] Terminating Job.batch foo pods took: 100.238524ms
  E0507 15:24:05.764322      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:06.764981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:07.765969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/07/25 15:24:08.204
  I0507 15:24:08.208463 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7662" for this suite. @ 05/07/25 15:24:08.212
• [4.813 seconds]
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 05/07/25 15:24:08.217
  I0507 15:24:08.217795 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename disruption @ 05/07/25 15:24:08.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:08.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:08.233
  STEP: creating the pdb @ 05/07/25 15:24:08.236
  STEP: Waiting for the pdb to be processed @ 05/07/25 15:24:08.24
  E0507 15:24:08.767043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:09.767726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 05/07/25 15:24:10.243
  STEP: Waiting for the pdb to be processed @ 05/07/25 15:24:10.25
  E0507 15:24:10.767650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:11.768039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 05/07/25 15:24:12.254
  STEP: Waiting for the pdb to be processed @ 05/07/25 15:24:12.265
  E0507 15:24:12.768373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:13.768896      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 05/07/25 15:24:14.273
  I0507 15:24:14.276217 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1518" for this suite. @ 05/07/25 15:24:14.279
• [6.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 05/07/25 15:24:14.285
  I0507 15:24:14.285657 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 15:24:14.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:14.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:14.299
  STEP: Setting up server cert @ 05/07/25 15:24:14.319
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 15:24:14.483
  STEP: Deploying the webhook pod @ 05/07/25 15:24:14.487
  STEP: Wait for the deployment to be ready @ 05/07/25 15:24:14.493
  I0507 15:24:14.497463 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 15:24:14.769828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:15.770364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 15:24:16.505
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:24:16.517
  E0507 15:24:16.770821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:24:17.517692 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/07/25 15:24:17.526
  STEP: verifying the validating webhook match conditions @ 05/07/25 15:24:17.534
  STEP: updating the validating webhook match conditions @ 05/07/25 15:24:17.537
  STEP: verifying the validating webhook match conditions @ 05/07/25 15:24:17.545
  I0507 15:24:17.585827 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6206" for this suite. @ 05/07/25 15:24:17.588
  STEP: Destroying namespace "webhook-markers-4651" for this suite. @ 05/07/25 15:24:17.594
• [3.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 05/07/25 15:24:17.6
  I0507 15:24:17.600140 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 15:24:17.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:17.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:17.608
  STEP: Creating a pod to test downward api env vars @ 05/07/25 15:24:17.609
  E0507 15:24:17.771466      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:18.771781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:19.772377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:20.772688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:24:21.628
  I0507 15:24:21.631259 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downward-api-1cff9664-e154-4fb8-83fa-e32a33a2b6ee container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 15:24:21.638
  I0507 15:24:21.655522 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4328" for this suite. @ 05/07/25 15:24:21.659
• [4.065 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/07/25 15:24:21.665
  I0507 15:24:21.665345 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename server-version @ 05/07/25 15:24:21.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:21.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:21.679
  STEP: Request ServerVersion @ 05/07/25 15:24:21.681
  STEP: Confirm major version @ 05/07/25 15:24:21.682
  I0507 15:24:21.682954 25 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/07/25 15:24:21.682
  I0507 15:24:21.683013 25 server_version.go:58] cleanMinorVersion: 32
  I0507 15:24:21.683035 25 server_version.go:62] Minor version: 32
  I0507 15:24:21.683176 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2457" for this suite. @ 05/07/25 15:24:21.761
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/07/25 15:24:21.769
  I0507 15:24:21.769755 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 15:24:21.771
  E0507 15:24:21.772750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:21.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:21.783
  STEP: Creating configMap with name configmap-test-volume-map-aa341b01-c74d-4cbe-9d75-215d5206af70 @ 05/07/25 15:24:21.786
  STEP: Creating a pod to test consume configMaps @ 05/07/25 15:24:21.791
  E0507 15:24:22.772908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:23.773442      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:24.773676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:25.774164      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:24:25.814
  I0507 15:24:25.817844 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-bbdb97c1-64c5-4d4d-b724-13203ee8eac4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 15:24:25.824
  I0507 15:24:25.840317 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-57" for this suite. @ 05/07/25 15:24:25.845
• [4.081 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 05/07/25 15:24:25.851
  I0507 15:24:25.851219 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 15:24:25.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:25.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:25.864
  STEP: Creating a ResourceQuota @ 05/07/25 15:24:25.867
  STEP: Getting a ResourceQuota @ 05/07/25 15:24:25.871
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/07/25 15:24:25.874
  STEP: Patching the ResourceQuota @ 05/07/25 15:24:25.876
  STEP: Deleting a Collection of ResourceQuotas @ 05/07/25 15:24:25.881
  STEP: Verifying the deleted ResourceQuota @ 05/07/25 15:24:25.888
  I0507 15:24:25.890704 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8288" for this suite. @ 05/07/25 15:24:25.946
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 05/07/25 15:24:25.952
  I0507 15:24:25.952867 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:24:25.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:25.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:25.965
  STEP: validating api versions @ 05/07/25 15:24:25.968
  I0507 15:24:25.968814 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-6911 api-versions'
  I0507 15:24:26.013315 25 builder.go:146] stderr: ""
  I0507 15:24:26.013360 25 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0507 15:24:26.013474 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6911" for this suite. @ 05/07/25 15:24:26.044
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/07/25 15:24:26.047
  I0507 15:24:26.047336 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 15:24:26.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:26.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:26.055
  STEP: Performing setup for networking test in namespace pod-network-test-2759 @ 05/07/25 15:24:26.057
  STEP: creating a selector @ 05/07/25 15:24:26.057
  STEP: Creating the service pods in kubernetes @ 05/07/25 15:24:26.057
  I0507 15:24:26.057098 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0507 15:24:26.774757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:27.774904      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:28.774872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:29.775349      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:30.775765      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:31.776171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:32.776343      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:33.776861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:34.777352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:35.778079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:36.778111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:37.778825      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:38.779098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:39.779394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/07/25 15:24:40.213
  E0507 15:24:40.779989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:41.780481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:24:42.242376 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 15:24:42.242424 25 utils.go:496] Going to poll 10.244.0.137 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0507 15:24:42.244571 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.137 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2759 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:24:42.244604 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:24:42.244661 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2759/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.137+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0507 15:24:42.781157      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:24:43.325788 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0507 15:24:43.325867 25 utils.go:496] Going to poll 10.244.1.128 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0507 15:24:43.329682 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.128 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2759 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:24:43.329730 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:24:43.329809 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2759/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.128+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0507 15:24:43.781626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:24:44.403576 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0507 15:24:44.403663 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2759" for this suite. @ 05/07/25 15:24:44.407
• [18.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 05/07/25 15:24:44.415
  I0507 15:24:44.415458 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 15:24:44.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:44.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:44.428
  STEP: Looking for a node to schedule job pod @ 05/07/25 15:24:44.43
  STEP: Creating a job @ 05/07/25 15:24:44.432
  STEP: Ensuring job fails @ 05/07/25 15:24:44.437
  E0507 15:24:44.782409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:45.782613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:46.783373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:47.783616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:24:48.446480 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7880" for this suite. @ 05/07/25 15:24:48.449
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/07/25 15:24:48.456
  I0507 15:24:48.456363 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 15:24:48.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:24:48.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:24:48.468
  STEP: create the rc @ 05/07/25 15:24:48.551
  W0507 15:24:48.558100      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0507 15:24:48.784558      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:49.784618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:50.784881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:51.784963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:52.785867      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:53.786342      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/07/25 15:24:54.563
  STEP: wait for the rc to be deleted @ 05/07/25 15:24:54.568
  E0507 15:24:54.787397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:55.787941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:56.788222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:57.788969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:24:58.789715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/07/25 15:24:59.575
  E0507 15:24:59.789971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:00.789843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:01.790296      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:02.790833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:03.791463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:04.792346      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:05.792685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:06.793153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:07.793792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:08.794849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:09.795348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:10.795880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:11.796962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:12.797483      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:13.798729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:14.799855      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:15.800601      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:16.801004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:17.801703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:18.801708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:19.802160      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:20.802995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:21.803281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:22.803763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:23.804859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:24.805080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:25.805856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:26.806328      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:27.806945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:28.807373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 15:25:29.586
  I0507 15:25:29.681919 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 15:25:29.681967 25 delete.go:95] Deleting pod "simpletest.rc-22wrb" in namespace "gc-720"
  I0507 15:25:29.692367 25 delete.go:95] Deleting pod "simpletest.rc-29k6k" in namespace "gc-720"
  I0507 15:25:29.702826 25 delete.go:95] Deleting pod "simpletest.rc-2bvcc" in namespace "gc-720"
  I0507 15:25:29.714228 25 delete.go:95] Deleting pod "simpletest.rc-2hs9z" in namespace "gc-720"
  I0507 15:25:29.725954 25 delete.go:95] Deleting pod "simpletest.rc-2htbj" in namespace "gc-720"
  I0507 15:25:29.737164 25 delete.go:95] Deleting pod "simpletest.rc-2q5rb" in namespace "gc-720"
  I0507 15:25:29.749918 25 delete.go:95] Deleting pod "simpletest.rc-2xqch" in namespace "gc-720"
  I0507 15:25:29.764187 25 delete.go:95] Deleting pod "simpletest.rc-44j2c" in namespace "gc-720"
  I0507 15:25:29.775418 25 delete.go:95] Deleting pod "simpletest.rc-45khq" in namespace "gc-720"
  I0507 15:25:29.787443 25 delete.go:95] Deleting pod "simpletest.rc-4cnbd" in namespace "gc-720"
  I0507 15:25:29.795915 25 delete.go:95] Deleting pod "simpletest.rc-4dvq6" in namespace "gc-720"
  E0507 15:25:29.807351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:25:29.807398 25 delete.go:95] Deleting pod "simpletest.rc-4k8rg" in namespace "gc-720"
  I0507 15:25:29.821126 25 delete.go:95] Deleting pod "simpletest.rc-4v8qs" in namespace "gc-720"
  I0507 15:25:29.833652 25 delete.go:95] Deleting pod "simpletest.rc-4vp4w" in namespace "gc-720"
  I0507 15:25:29.842428 25 delete.go:95] Deleting pod "simpletest.rc-5dgh4" in namespace "gc-720"
  I0507 15:25:29.855593 25 delete.go:95] Deleting pod "simpletest.rc-5xp89" in namespace "gc-720"
  I0507 15:25:29.871711 25 delete.go:95] Deleting pod "simpletest.rc-6hmsc" in namespace "gc-720"
  I0507 15:25:29.891309 25 delete.go:95] Deleting pod "simpletest.rc-6k694" in namespace "gc-720"
  I0507 15:25:29.902541 25 delete.go:95] Deleting pod "simpletest.rc-7hwcr" in namespace "gc-720"
  I0507 15:25:29.920412 25 delete.go:95] Deleting pod "simpletest.rc-7rx8c" in namespace "gc-720"
  I0507 15:25:29.938995 25 delete.go:95] Deleting pod "simpletest.rc-8p6g9" in namespace "gc-720"
  I0507 15:25:29.957205 25 delete.go:95] Deleting pod "simpletest.rc-8q7n7" in namespace "gc-720"
  I0507 15:25:29.974726 25 delete.go:95] Deleting pod "simpletest.rc-8vvp5" in namespace "gc-720"
  I0507 15:25:29.985869 25 delete.go:95] Deleting pod "simpletest.rc-9lbl7" in namespace "gc-720"
  I0507 15:25:29.997435 25 delete.go:95] Deleting pod "simpletest.rc-9m84v" in namespace "gc-720"
  I0507 15:25:30.011781 25 delete.go:95] Deleting pod "simpletest.rc-9pdsb" in namespace "gc-720"
  I0507 15:25:30.031522 25 delete.go:95] Deleting pod "simpletest.rc-9zc5v" in namespace "gc-720"
  I0507 15:25:30.045695 25 delete.go:95] Deleting pod "simpletest.rc-bqkpg" in namespace "gc-720"
  I0507 15:25:30.056864 25 delete.go:95] Deleting pod "simpletest.rc-bqvhb" in namespace "gc-720"
  I0507 15:25:30.072624 25 delete.go:95] Deleting pod "simpletest.rc-c2ffh" in namespace "gc-720"
  I0507 15:25:30.085712 25 delete.go:95] Deleting pod "simpletest.rc-chpkl" in namespace "gc-720"
  I0507 15:25:30.101184 25 delete.go:95] Deleting pod "simpletest.rc-cvqbj" in namespace "gc-720"
  I0507 15:25:30.122763 25 delete.go:95] Deleting pod "simpletest.rc-drv9k" in namespace "gc-720"
  I0507 15:25:30.139242 25 delete.go:95] Deleting pod "simpletest.rc-ds8xn" in namespace "gc-720"
  I0507 15:25:30.163602 25 delete.go:95] Deleting pod "simpletest.rc-dsmgq" in namespace "gc-720"
  I0507 15:25:30.180351 25 delete.go:95] Deleting pod "simpletest.rc-f649t" in namespace "gc-720"
  I0507 15:25:30.198108 25 delete.go:95] Deleting pod "simpletest.rc-f7xnw" in namespace "gc-720"
  I0507 15:25:30.216493 25 delete.go:95] Deleting pod "simpletest.rc-fct6r" in namespace "gc-720"
  I0507 15:25:30.235564 25 delete.go:95] Deleting pod "simpletest.rc-fzmqk" in namespace "gc-720"
  I0507 15:25:30.253360 25 delete.go:95] Deleting pod "simpletest.rc-g9pqm" in namespace "gc-720"
  I0507 15:25:30.268743 25 delete.go:95] Deleting pod "simpletest.rc-gfbj7" in namespace "gc-720"
  I0507 15:25:30.283367 25 delete.go:95] Deleting pod "simpletest.rc-gh7nb" in namespace "gc-720"
  I0507 15:25:30.304354 25 delete.go:95] Deleting pod "simpletest.rc-gphqj" in namespace "gc-720"
  I0507 15:25:30.319292 25 delete.go:95] Deleting pod "simpletest.rc-grbln" in namespace "gc-720"
  I0507 15:25:30.336205 25 delete.go:95] Deleting pod "simpletest.rc-gtssx" in namespace "gc-720"
  I0507 15:25:30.350481 25 delete.go:95] Deleting pod "simpletest.rc-h79wm" in namespace "gc-720"
  I0507 15:25:30.363830 25 delete.go:95] Deleting pod "simpletest.rc-hkkks" in namespace "gc-720"
  I0507 15:25:30.381631 25 delete.go:95] Deleting pod "simpletest.rc-hncf2" in namespace "gc-720"
  I0507 15:25:30.399164 25 delete.go:95] Deleting pod "simpletest.rc-hw22k" in namespace "gc-720"
  I0507 15:25:30.419517 25 delete.go:95] Deleting pod "simpletest.rc-j545w" in namespace "gc-720"
  I0507 15:25:30.439943 25 delete.go:95] Deleting pod "simpletest.rc-j6fgl" in namespace "gc-720"
  I0507 15:25:30.465179 25 delete.go:95] Deleting pod "simpletest.rc-j7p5j" in namespace "gc-720"
  I0507 15:25:30.479197 25 delete.go:95] Deleting pod "simpletest.rc-jbbgd" in namespace "gc-720"
  I0507 15:25:30.497719 25 delete.go:95] Deleting pod "simpletest.rc-jl4mk" in namespace "gc-720"
  I0507 15:25:30.515335 25 delete.go:95] Deleting pod "simpletest.rc-jtdcc" in namespace "gc-720"
  I0507 15:25:30.528100 25 delete.go:95] Deleting pod "simpletest.rc-kcpj9" in namespace "gc-720"
  I0507 15:25:30.543717 25 delete.go:95] Deleting pod "simpletest.rc-klz6r" in namespace "gc-720"
  I0507 15:25:30.567150 25 delete.go:95] Deleting pod "simpletest.rc-krsql" in namespace "gc-720"
  I0507 15:25:30.582219 25 delete.go:95] Deleting pod "simpletest.rc-l8kd6" in namespace "gc-720"
  I0507 15:25:30.598121 25 delete.go:95] Deleting pod "simpletest.rc-lm7hh" in namespace "gc-720"
  I0507 15:25:30.614148 25 delete.go:95] Deleting pod "simpletest.rc-lmqfj" in namespace "gc-720"
  I0507 15:25:30.634712 25 delete.go:95] Deleting pod "simpletest.rc-lnf8k" in namespace "gc-720"
  I0507 15:25:30.646600 25 delete.go:95] Deleting pod "simpletest.rc-mqz96" in namespace "gc-720"
  I0507 15:25:30.663784 25 delete.go:95] Deleting pod "simpletest.rc-mrf58" in namespace "gc-720"
  I0507 15:25:30.677235 25 delete.go:95] Deleting pod "simpletest.rc-n48md" in namespace "gc-720"
  I0507 15:25:30.690244 25 delete.go:95] Deleting pod "simpletest.rc-n7xp6" in namespace "gc-720"
  I0507 15:25:30.705236 25 delete.go:95] Deleting pod "simpletest.rc-n82xv" in namespace "gc-720"
  I0507 15:25:30.724805 25 delete.go:95] Deleting pod "simpletest.rc-nmx2m" in namespace "gc-720"
  I0507 15:25:30.745460 25 delete.go:95] Deleting pod "simpletest.rc-nqqn9" in namespace "gc-720"
  I0507 15:25:30.762854 25 delete.go:95] Deleting pod "simpletest.rc-nv7mh" in namespace "gc-720"
  I0507 15:25:30.791112 25 delete.go:95] Deleting pod "simpletest.rc-p428n" in namespace "gc-720"
  E0507 15:25:30.807390      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:25:30.842804 25 delete.go:95] Deleting pod "simpletest.rc-plb2p" in namespace "gc-720"
  I0507 15:25:30.889704 25 delete.go:95] Deleting pod "simpletest.rc-pmg8l" in namespace "gc-720"
  I0507 15:25:30.940257 25 delete.go:95] Deleting pod "simpletest.rc-pzvkk" in namespace "gc-720"
  I0507 15:25:30.992644 25 delete.go:95] Deleting pod "simpletest.rc-q5wmk" in namespace "gc-720"
  I0507 15:25:31.044819 25 delete.go:95] Deleting pod "simpletest.rc-qc2rc" in namespace "gc-720"
  I0507 15:25:31.093238 25 delete.go:95] Deleting pod "simpletest.rc-qj52t" in namespace "gc-720"
  I0507 15:25:31.141602 25 delete.go:95] Deleting pod "simpletest.rc-qlm7r" in namespace "gc-720"
  I0507 15:25:31.189672 25 delete.go:95] Deleting pod "simpletest.rc-r5sfg" in namespace "gc-720"
  I0507 15:25:31.236065 25 delete.go:95] Deleting pod "simpletest.rc-r64hq" in namespace "gc-720"
  I0507 15:25:31.288424 25 delete.go:95] Deleting pod "simpletest.rc-rhdqx" in namespace "gc-720"
  I0507 15:25:31.335783 25 delete.go:95] Deleting pod "simpletest.rc-rl9cz" in namespace "gc-720"
  I0507 15:25:31.385890 25 delete.go:95] Deleting pod "simpletest.rc-s9gsz" in namespace "gc-720"
  I0507 15:25:31.435847 25 delete.go:95] Deleting pod "simpletest.rc-s9zd6" in namespace "gc-720"
  I0507 15:25:31.489202 25 delete.go:95] Deleting pod "simpletest.rc-snfxq" in namespace "gc-720"
  I0507 15:25:31.541731 25 delete.go:95] Deleting pod "simpletest.rc-stk7j" in namespace "gc-720"
  I0507 15:25:31.590761 25 delete.go:95] Deleting pod "simpletest.rc-t4hxd" in namespace "gc-720"
  I0507 15:25:31.642837 25 delete.go:95] Deleting pod "simpletest.rc-tdb8f" in namespace "gc-720"
  I0507 15:25:31.686665 25 delete.go:95] Deleting pod "simpletest.rc-tpwj4" in namespace "gc-720"
  I0507 15:25:31.737164 25 delete.go:95] Deleting pod "simpletest.rc-vbj99" in namespace "gc-720"
  I0507 15:25:31.787417 25 delete.go:95] Deleting pod "simpletest.rc-vkclx" in namespace "gc-720"
  E0507 15:25:31.807817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:25:31.835996 25 delete.go:95] Deleting pod "simpletest.rc-vpqc2" in namespace "gc-720"
  I0507 15:25:31.884103 25 delete.go:95] Deleting pod "simpletest.rc-vzxfp" in namespace "gc-720"
  I0507 15:25:31.934858 25 delete.go:95] Deleting pod "simpletest.rc-w9qzp" in namespace "gc-720"
  I0507 15:25:31.981798 25 delete.go:95] Deleting pod "simpletest.rc-xkgcm" in namespace "gc-720"
  I0507 15:25:32.035784 25 delete.go:95] Deleting pod "simpletest.rc-xmg54" in namespace "gc-720"
  I0507 15:25:32.086714 25 delete.go:95] Deleting pod "simpletest.rc-xmj85" in namespace "gc-720"
  I0507 15:25:32.137739 25 delete.go:95] Deleting pod "simpletest.rc-zhrr8" in namespace "gc-720"
  I0507 15:25:32.190384 25 delete.go:95] Deleting pod "simpletest.rc-zm6zd" in namespace "gc-720"
  I0507 15:25:32.235169 25 delete.go:95] Deleting pod "simpletest.rc-zrrdk" in namespace "gc-720"
  I0507 15:25:32.283337 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-720" for this suite. @ 05/07/25 15:25:32.328
• [43.928 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 05/07/25 15:25:32.385
  I0507 15:25:32.385315 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 15:25:32.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:25:32.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:25:32.402
  I0507 15:25:32.406196 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 15:25:32.437357 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0507 15:25:32.440177 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0507 15:25:32.443664 25 predicates.go:957] coredns-668d6bf9bc-kg25h from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443687 25 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0507 15:25:32.443697 25 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443705 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0507 15:25:32.443710 25 predicates.go:957] kindnet-rnsjv from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443717 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 15:25:32.443724 25 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443731 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0507 15:25:32.443738 25 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443746 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0507 15:25:32.443753 25 predicates.go:957] kube-proxy-xzmjp from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443761 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 15:25:32.443768 25 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443779 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0507 15:25:32.443787 25 predicates.go:957] storage-provisioner from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.443794 25 predicates.go:959] 	Container storage-provisioner ready: true, restart count 1
  I0507 15:25:32.443799 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-l5ngp from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:25:32.443804 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:25:32.443808 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0507 15:25:32.443816 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0507 15:25:32.446610 25 predicates.go:957] kindnet-nd7gj from kube-system started at 2025-05-07 14:59:16 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.446643 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 15:25:32.446657 25 predicates.go:957] kube-proxy-nwnr4 from kube-system started at 2025-05-07 13:58:19 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.446667 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 15:25:32.446676 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-07 13:58:43 +0000 UTC (1 container statuses recorded)
  I0507 15:25:32.446684 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 15:25:32.446693 25 predicates.go:957] sonobuoy-e2e-job-889ff4cea7414d9e from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:25:32.446702 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0507 15:25:32.446710 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:25:32.446723 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-6fk5k from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:25:32.446732 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:25:32.446739 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/07/25 15:25:32.446
  E0507 15:25:32.808103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:33.808257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/07/25 15:25:34.465
  STEP: Trying to apply a random label on the found node. @ 05/07/25 15:25:34.478
  STEP: verifying the node has the label kubernetes.io/e2e-cca9e34f-2186-45a8-a4bb-60d5324f495e 42 @ 05/07/25 15:25:34.488
  STEP: Trying to relaunch the pod, now with labels. @ 05/07/25 15:25:34.491
  E0507 15:25:34.808917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:35.809381      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-cca9e34f-2186-45a8-a4bb-60d5324f495e off the node k8sconformance-m02 @ 05/07/25 15:25:36.507
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-cca9e34f-2186-45a8-a4bb-60d5324f495e @ 05/07/25 15:25:36.518
  I0507 15:25:36.522388 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4280" for this suite. @ 05/07/25 15:25:36.525
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/07/25 15:25:36.53
  I0507 15:25:36.530588 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 15:25:36.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:25:36.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:25:36.542
  E0507 15:25:36.809612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:37.809752      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:38.809743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:39.810889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:25:40.568086 25 security_context.go:538] Got logs for pod "busybox-privileged-false-cb2684dc-00f8-4668-babf-f2b7bf80f988": "ip: RTNETLINK answers: Operation not permitted\n"
  I0507 15:25:40.568268 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5828" for this suite. @ 05/07/25 15:25:40.571
• [4.049 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 05/07/25 15:25:40.579
  I0507 15:25:40.579751 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 15:25:40.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:25:40.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:25:40.593
  STEP: Creating service test in namespace statefulset-9529 @ 05/07/25 15:25:40.596
  STEP: Creating statefulset ss in namespace statefulset-9529 @ 05/07/25 15:25:40.604
  I0507 15:25:40.612482 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0507 15:25:40.811302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:41.811676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:42.812016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:43.812554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:44.812786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:45.813219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:46.813784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:47.813690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:48.813849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:49.813976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:25:50.613607 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/07/25 15:25:50.618
  STEP: Getting /status @ 05/07/25 15:25:50.626
  I0507 15:25:50.630629 25 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/07/25 15:25:50.63
  I0507 15:25:50.636305 25 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/07/25 15:25:50.636
  I0507 15:25:50.637881 25 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0507 15:25:50.637921 25 statefulset.go:1114] Found Statefulset ss in namespace statefulset-9529 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 15:25:50.637938 25 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/07/25 15:25:50.637
  I0507 15:25:50.637979 25 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0507 15:25:50.643614 25 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/07/25 15:25:50.643
  I0507 15:25:50.645513 25 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0507 15:25:50.645599 25 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-9529 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 15:25:50.645744 25 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0507 15:25:50.645798 25 statefulset.go:138] Deleting all statefulset in ns statefulset-9529
  I0507 15:25:50.647697 25 rest.go:152] Scaling statefulset ss to 0
  E0507 15:25:50.814756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:51.815191      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:52.815831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:53.816341      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:54.816584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:55.817042      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:56.817603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:57.818099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:58.818862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:25:59.819933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:00.660003 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 15:26:00.662370 25 rest.go:90] Deleting statefulset ss
  I0507 15:26:00.678442 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9529" for this suite. @ 05/07/25 15:26:00.681
• [20.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/07/25 15:26:00.685
  I0507 15:26:00.685076 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 15:26:00.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:00.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:00.694
  STEP: creating the pod @ 05/07/25 15:26:00.696
  STEP: submitting the pod to kubernetes @ 05/07/25 15:26:00.696
  STEP: verifying QOS class is set on the pod @ 05/07/25 15:26:00.703
  I0507 15:26:00.706353 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3430" for this suite. @ 05/07/25 15:26:00.783
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/07/25 15:26:00.797
  I0507 15:26:00.797784 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:26:00.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:00.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:00.808
  STEP: Creating projection with secret that has name projected-secret-test-7af433ea-ba3b-47a7-970c-d6e39caa29db @ 05/07/25 15:26:00.811
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:26:00.816
  E0507 15:26:00.819803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:01.820087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:02.820637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:03.821698      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:04.821852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:26:04.837
  I0507 15:26:04.840578 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-a1f9bd59-22a3-48dd-b1e7-d2c750e10e5e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:26:04.852
  I0507 15:26:04.861188 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4867" for this suite. @ 05/07/25 15:26:04.862
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/07/25 15:26:04.865
  I0507 15:26:04.865572 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename podtemplate @ 05/07/25 15:26:04.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:04.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:04.873
  STEP: Create set of pod templates @ 05/07/25 15:26:04.874
  I0507 15:26:04.877537 25 podtemplates.go:143] created test-podtemplate-1
  I0507 15:26:04.880547 25 podtemplates.go:143] created test-podtemplate-2
  I0507 15:26:04.884569 25 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/07/25 15:26:04.884
  STEP: delete collection of pod templates @ 05/07/25 15:26:04.886
  I0507 15:26:04.886451 25 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/07/25 15:26:04.896
  I0507 15:26:04.896472 25 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0507 15:26:04.898899 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5219" for this suite. @ 05/07/25 15:26:04.964
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/07/25 15:26:04.971
  I0507 15:26:04.971366 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 15:26:04.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:04.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:04.984
  STEP: Creating secret with name secret-test-374279b3-a489-461c-bec1-b92d893ec7ff @ 05/07/25 15:26:04.988
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:26:04.992
  E0507 15:26:05.821923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:06.822756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:07.823782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:08.824401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:26:09.015
  I0507 15:26:09.018846 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-secrets-b4321cc4-3171-442d-9771-246ffbd9200c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:26:09.026
  I0507 15:26:09.040580 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4903" for this suite. @ 05/07/25 15:26:09.044
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/07/25 15:26:09.049
  I0507 15:26:09.049116 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 15:26:09.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:09.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:09.061
  STEP: Create set of pods @ 05/07/25 15:26:09.063
  I0507 15:26:09.072318 25 pods.go:871] created test-pod-1
  I0507 15:26:09.085667 25 pods.go:871] created test-pod-2
  I0507 15:26:09.107142 25 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/07/25 15:26:09.107
  E0507 15:26:09.825066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:10.826117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/07/25 15:26:11.128
  I0507 15:26:11.131645 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0507 15:26:11.826655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:12.133229 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0507 15:26:12.826755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:13.134682 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1982" for this suite. @ 05/07/25 15:26:13.138
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/07/25 15:26:13.143
  I0507 15:26:13.143873 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 15:26:13.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:13.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:13.157
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/07/25 15:26:13.16
  E0507 15:26:13.826813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:14.827938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:15.828675      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:16.829120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:26:17.177
  I0507 15:26:17.180473 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-d1732efa-ece7-417c-a978-09e8d92b8e13 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 15:26:17.187
  I0507 15:26:17.204181 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9623" for this suite. @ 05/07/25 15:26:17.207
• [4.069 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/07/25 15:26:17.212
  I0507 15:26:17.212605 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename aggregator @ 05/07/25 15:26:17.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:17.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:17.223
  I0507 15:26:17.226088 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Registering the sample API server. @ 05/07/25 15:26:17.226
  I0507 15:26:17.394155 25 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0507 15:26:17.407768 25 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0507 15:26:17.829385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:18.829856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:19.447490 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:19.829972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:20.829980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:21.452381 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:21.830932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:22.831401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:23.450525 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:23.831921      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:24.832907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:25.453039 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:25.833657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:26.834045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:27.451742 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:27.835106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:28.835677      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:29.452813 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:29.835834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:30.836309      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:31.452292 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:31.836701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:32.836883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:33.453493 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:33.837065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:34.837294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:35.452802 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:35.837776      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:36.838425      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:37.452457 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:37.838728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:38.838910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:39.451965 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:39.839951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:40.840127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:41.451324 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:41.840952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:42.841189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:43.451824 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 15:26:43.841273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:44.842327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:45.571589 25 aggregator.go:755] Waited 114.472642ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/07/25 15:26:45.612
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/07/25 15:26:45.614
  STEP: List APIServices @ 05/07/25 15:26:45.62
  I0507 15:26:45.623962 25 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/07/25 15:26:45.624
  I0507 15:26:45.635555 25 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/07/25 15:26:45.635
  I0507 15:26:45.649017 25 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.May, 7, 15, 26, 45, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/07/25 15:26:45.649
  I0507 15:26:45.653277 25 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-05-07 15:26:45 +0000 UTC Passed all checks passed}
  I0507 15:26:45.653343 25 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 15:26:45.653368 25 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/07/25 15:26:45.653
  I0507 15:26:45.661906 25 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1408119072" @ 05/07/25 15:26:45.661
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/07/25 15:26:45.674
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/07/25 15:26:45.682
  STEP: Patch APIService Status @ 05/07/25 15:26:45.684
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/07/25 15:26:45.691
  I0507 15:26:45.694096 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-05-07 15:26:45 +0000 UTC Passed all checks passed}
  I0507 15:26:45.694140 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 15:26:45.694159 25 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0507 15:26:45.694180 25 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/07/25 15:26:45.694
  STEP: Confirm that the generated APIService has been deleted @ 05/07/25 15:26:45.699
  I0507 15:26:45.699385 25 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0507 15:26:45.700870 25 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0507 15:26:45.700905 25 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0507 15:26:45.761900 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-605" for this suite. @ 05/07/25 15:26:45.763
• [28.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/07/25 15:26:45.768
  I0507 15:26:45.768168 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 15:26:45.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:26:45.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:26:45.78
  E0507 15:26:45.842731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the rc1 @ 05/07/25 15:26:45.866
  STEP: create the rc2 @ 05/07/25 15:26:45.873
  E0507 15:26:46.842755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:47.844666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:48.844637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:49.844999      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:50.846046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:51.846635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/07/25 15:26:51.885
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/07/25 15:26:52.259
  STEP: wait for the rc to be deleted @ 05/07/25 15:26:52.264
  E0507 15:26:52.847035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:53.847271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:54.848215      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:55.849038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:56.849672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:26:57.277698 25 garbage_collector.go:762] 69 pods remaining
  I0507 15:26:57.277743 25 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0507 15:26:57.277755 25 garbage_collector.go:770] 
  E0507 15:26:57.849660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:58.849878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:26:59.850724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:00.851147      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:01.851463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 15:27:02.276
  I0507 15:27:02.368255 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 15:27:02.368293 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22xxl" in namespace "gc-5152"
  I0507 15:27:02.374619 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27z8s" in namespace "gc-5152"
  I0507 15:27:02.386250 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49bjr" in namespace "gc-5152"
  I0507 15:27:02.397086 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dvfc" in namespace "gc-5152"
  I0507 15:27:02.407842 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4ppgf" in namespace "gc-5152"
  I0507 15:27:02.420709 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xlv4" in namespace "gc-5152"
  I0507 15:27:02.436984 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58w4x" in namespace "gc-5152"
  I0507 15:27:02.458619 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5c5l2" in namespace "gc-5152"
  I0507 15:27:02.467447 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5gmln" in namespace "gc-5152"
  I0507 15:27:02.477266 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jczz" in namespace "gc-5152"
  I0507 15:27:02.494479 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69db6" in namespace "gc-5152"
  I0507 15:27:02.504413 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6c6kc" in namespace "gc-5152"
  I0507 15:27:02.517156 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6fqjp" in namespace "gc-5152"
  I0507 15:27:02.531777 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rgdn" in namespace "gc-5152"
  I0507 15:27:02.550357 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7gsps" in namespace "gc-5152"
  I0507 15:27:02.565384 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84rql" in namespace "gc-5152"
  I0507 15:27:02.581134 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-85sl2" in namespace "gc-5152"
  I0507 15:27:02.603200 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87q6p" in namespace "gc-5152"
  I0507 15:27:02.621895 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l7bq" in namespace "gc-5152"
  I0507 15:27:02.635241 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rbhh" in namespace "gc-5152"
  I0507 15:27:02.646693 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-998dk" in namespace "gc-5152"
  I0507 15:27:02.662639 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bhqq" in namespace "gc-5152"
  I0507 15:27:02.679789 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pzs7" in namespace "gc-5152"
  I0507 15:27:02.694089 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9r68p" in namespace "gc-5152"
  I0507 15:27:02.704033 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9lcx" in namespace "gc-5152"
  I0507 15:27:02.726749 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhrb2" in namespace "gc-5152"
  I0507 15:27:02.752083 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blf5p" in namespace "gc-5152"
  I0507 15:27:02.768149 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2xm6" in namespace "gc-5152"
  I0507 15:27:02.788645 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c655s" in namespace "gc-5152"
  I0507 15:27:02.804294 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbkkm" in namespace "gc-5152"
  I0507 15:27:02.819798 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d295z" in namespace "gc-5152"
  I0507 15:27:02.832662 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4gl4" in namespace "gc-5152"
  E0507 15:27:02.851832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:02.852426 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7mwk" in namespace "gc-5152"
  I0507 15:27:02.866580 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8qb4" in namespace "gc-5152"
  I0507 15:27:02.883073 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dghhb" in namespace "gc-5152"
  I0507 15:27:02.896259 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drrvp" in namespace "gc-5152"
  I0507 15:27:02.910632 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f2wv2" in namespace "gc-5152"
  I0507 15:27:02.923754 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7ntr" in namespace "gc-5152"
  I0507 15:27:02.936278 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fblzb" in namespace "gc-5152"
  I0507 15:27:02.955489 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fbq94" in namespace "gc-5152"
  I0507 15:27:02.975116 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fg8xz" in namespace "gc-5152"
  I0507 15:27:02.991693 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfbjb" in namespace "gc-5152"
  I0507 15:27:03.004774 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpmt8" in namespace "gc-5152"
  I0507 15:27:03.022884 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gz2s8" in namespace "gc-5152"
  I0507 15:27:03.035769 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzbhs" in namespace "gc-5152"
  I0507 15:27:03.058673 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzn98" in namespace "gc-5152"
  I0507 15:27:03.077392 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h2h6q" in namespace "gc-5152"
  I0507 15:27:03.097414 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hv48s" in namespace "gc-5152"
  I0507 15:27:03.116805 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hvcsx" in namespace "gc-5152"
  I0507 15:27:03.130700 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j54mx" in namespace "gc-5152"
  I0507 15:27:03.152943 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5152" for this suite. @ 05/07/25 15:27:03.156
• [17.394 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/07/25 15:27:03.163
  I0507 15:27:03.163120 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:27:03.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:03.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:03.232
  STEP: Creating projection with secret that has name projected-secret-test-52c8a091-b9f6-4e11-a147-2e5f8294708e @ 05/07/25 15:27:03.237
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:27:03.245
  E0507 15:27:03.852706      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:04.853187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:05.854171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:06.854799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:27:07.277
  I0507 15:27:07.280254 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-d48e63f8-260c-4982-8eab-7b019a177e21 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:27:07.289
  I0507 15:27:07.301332 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6575" for this suite. @ 05/07/25 15:27:07.303
• [4.144 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/07/25 15:27:07.307
  I0507 15:27:07.307729 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 15:27:07.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:07.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:07.316
  STEP: Create a Replicaset @ 05/07/25 15:27:07.319
  STEP: Verify that the required pods have come up. @ 05/07/25 15:27:07.322
  I0507 15:27:07.324414 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0507 15:27:07.854912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:08.855786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:09.856320      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:10.857065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:11.858089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:12.327244 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 15:27:12.327
  STEP: Getting /status @ 05/07/25 15:27:12.327
  I0507 15:27:12.330237 25 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/07/25 15:27:12.33
  I0507 15:27:12.340731 25 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/07/25 15:27:12.34
  I0507 15:27:12.342991 25 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0507 15:27:12.343162 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.343313 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.343453 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.343517 25 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6414 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 15:27:12.343549 25 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/07/25 15:27:12.343
  I0507 15:27:12.343609 25 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0507 15:27:12.349294 25 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/07/25 15:27:12.349
  I0507 15:27:12.350813 25 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0507 15:27:12.350919 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.351012 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.351095 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.351188 25 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6414 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 15:27:12.351360 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0507 15:27:12.351390 25 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6414 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0507 15:27:12.351407 25 replica_set.go:729] Replicaset test-rs has a patched status
  I0507 15:27:12.351530 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6414" for this suite. @ 05/07/25 15:27:12.354
• [5.052 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 05/07/25 15:27:12.359
  I0507 15:27:12.359729 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 15:27:12.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:12.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:12.372
  STEP: Creating a Serviceaccount "e2e-sa-tstl9" in namespace "svcaccounts-1748" @ 05/07/25 15:27:12.375
  STEP: Creating a ServiceaccountToken "e2e-sa-tstl9" in namespace "svcaccounts-1748" @ 05/07/25 15:27:12.379
  STEP: Creating a TokenReview for "e2e-sa-tstl9" in namespace "svcaccounts-1748" @ 05/07/25 15:27:12.386
  I0507 15:27:12.387600 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1748" for this suite. @ 05/07/25 15:27:12.454
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/07/25 15:27:12.46
  I0507 15:27:12.460231 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 15:27:12.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:12.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:12.47
  I0507 15:27:12.565922 25 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0507 15:27:12.570784 25 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0507 15:27:12.659838 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:12.659887 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:12.858222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:13.579661 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:13.579716 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:13.859255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:14.579676 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 15:27:14.579723 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0507 15:27:14.579744 25 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0507 15:27:14.588650 25 daemon_set.go:102] Updating DaemonSet daemon-set
  E0507 15:27:14.859557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:15.601556 25 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0507 15:27:15.612664 25 daemon_set.go:102] Updating DaemonSet daemon-set
  I0507 15:27:15.612739 25 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0507 15:27:15.860219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:16.860402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:17.860799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:18.619491 25 daemon_set.go:1198] Pod daemon-set-f8jr8 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 15:27:18.628
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6254, will wait for the garbage collector to delete the pods @ 05/07/25 15:27:18.628
  I0507 15:27:18.689721 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.630022ms
  I0507 15:27:18.790175 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.457337ms
  E0507 15:27:18.861404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:19.794948 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:19.795014 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 15:27:19.798371 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29982"},"items":null}

  I0507 15:27:19.800915 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29982"},"items":null}

  I0507 15:27:19.808747 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6254" for this suite. @ 05/07/25 15:27:19.811
• [7.356 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/07/25 15:27:19.816
  I0507 15:27:19.816581 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 15:27:19.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:19.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:19.832
  E0507 15:27:19.861708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating secret with name s-test-opt-del-62c5bcaf-e7a6-46f4-8afb-ec82a2cf6218 @ 05/07/25 15:27:19.905
  STEP: Creating secret with name s-test-opt-upd-6a24e281-9d0f-4ca3-93ea-6c3911358eb4 @ 05/07/25 15:27:19.911
  STEP: Creating the pod @ 05/07/25 15:27:19.915
  E0507 15:27:20.862061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:21.863023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-62c5bcaf-e7a6-46f4-8afb-ec82a2cf6218 @ 05/07/25 15:27:21.954
  STEP: Updating secret s-test-opt-upd-6a24e281-9d0f-4ca3-93ea-6c3911358eb4 @ 05/07/25 15:27:21.959
  STEP: Creating secret with name s-test-opt-create-7d2faa0d-d2b7-4a6a-9221-ad12d1430f3d @ 05/07/25 15:27:21.964
  STEP: waiting to observe update in volume @ 05/07/25 15:27:21.968
  E0507 15:27:22.863684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:23.864271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:23.997578 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8499" for this suite. @ 05/07/25 15:27:24
• [4.190 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/07/25 15:27:24.006
  I0507 15:27:24.006895 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 15:27:24.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:24.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:24.021
  I0507 15:27:24.108650 25 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/07/25 15:27:24.114
  I0507 15:27:24.118059 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:24.118106 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/07/25 15:27:24.118
  I0507 15:27:24.215421 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:24.215457 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:24.864844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:25.214469 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:25.214536 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:25.865670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:26.214587 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 15:27:26.214641 25 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/07/25 15:27:26.217
  I0507 15:27:26.242044 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:26.242085 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/07/25 15:27:26.242
  I0507 15:27:26.315092 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:26.315159 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:26.866583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:27.257885 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:27.257946 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:27.866819      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:28.256296 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:28.256327 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:28.867181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:29.254411 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 15:27:29.254440 25 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 15:27:29.295
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9387, will wait for the garbage collector to delete the pods @ 05/07/25 15:27:29.295
  I0507 15:27:29.354335 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.757577ms
  I0507 15:27:29.454952 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.608868ms
  E0507 15:27:29.867799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:30.860694 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:30.860763 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 15:27:30.864080 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30112"},"items":null}

  I0507 15:27:30.866589 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30112"},"items":null}

  E0507 15:27:30.868691      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:30.881911 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9387" for this suite. @ 05/07/25 15:27:30.883
• [6.881 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/07/25 15:27:30.887
  I0507 15:27:30.887758 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename subjectreview @ 05/07/25 15:27:30.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:30.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:30.898
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7582" @ 05/07/25 15:27:30.9
  I0507 15:27:30.903335 25 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7582:e2e"
  I0507 15:27:30.903367 25 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7582"}
  I0507 15:27:30.903376 25 subjectreviews.go:71] saUID: "cd083744-49b3-4334-a5c1-c29a7a01db24"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7582:e2e" @ 05/07/25 15:27:30.903
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7582:e2e" @ 05/07/25 15:27:30.903
  I0507 15:27:30.905088 25 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7582:e2e" api 'list' configmaps in "subjectreview-7582" namespace @ 05/07/25 15:27:30.905
  I0507 15:27:30.905958 25 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7582:e2e" @ 05/07/25 15:27:30.905
  I0507 15:27:30.907233 25 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0507 15:27:30.907251 25 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0507 15:27:30.907340 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7582" for this suite. @ 05/07/25 15:27:30.971
• [0.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/07/25 15:27:30.983
  I0507 15:27:30.983629 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:27:30.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:30.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:30.998
  STEP: Creating secret with name projected-secret-test-78070538-c699-4cc5-8af0-b4a341b02ef9 @ 05/07/25 15:27:31
  STEP: Creating a pod to test consume secrets @ 05/07/25 15:27:31.003
  E0507 15:27:31.868977      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:32.869060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:33.869727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:34.870205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:27:35.02
  I0507 15:27:35.023394 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-3af51165-f217-4283-be78-f86a8973d548 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 15:27:35.031
  I0507 15:27:35.046924 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7114" for this suite. @ 05/07/25 15:27:35.049
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 05/07/25 15:27:35.053
  I0507 15:27:35.053847 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename disruption @ 05/07/25 15:27:35.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:35.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:35.065
  STEP: Waiting for the pdb to be processed @ 05/07/25 15:27:35.072
  E0507 15:27:35.870976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:36.871581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/07/25 15:27:37.102
  I0507 15:27:37.109856 25 disruption.go:691] running pods: 0 < 3
  E0507 15:27:37.871929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:38.872887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:39.110958 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2719" for this suite. @ 05/07/25 15:27:39.113
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/07/25 15:27:39.121
  I0507 15:27:39.121439 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename apf @ 05/07/25 15:27:39.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:39.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:39.137
  STEP: getting /apis @ 05/07/25 15:27:39.14
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/07/25 15:27:39.144
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/07/25 15:27:39.144
  STEP: creating @ 05/07/25 15:27:39.145
  STEP: getting @ 05/07/25 15:27:39.154
  STEP: listing @ 05/07/25 15:27:39.155
  STEP: watching @ 05/07/25 15:27:39.157
  I0507 15:27:39.157584 25 flowcontrol.go:620] starting watch
  STEP: patching @ 05/07/25 15:27:39.158
  STEP: updating @ 05/07/25 15:27:39.161
  I0507 15:27:39.167099 25 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/07/25 15:27:39.167
  STEP: patching /status @ 05/07/25 15:27:39.169
  STEP: updating /status @ 05/07/25 15:27:39.175
  STEP: deleting @ 05/07/25 15:27:39.182
  STEP: deleting a collection @ 05/07/25 15:27:39.19
  I0507 15:27:39.201858 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-889" for this suite. @ 05/07/25 15:27:39.204
• [0.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/07/25 15:27:39.208
  I0507 15:27:39.208211 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename gc @ 05/07/25 15:27:39.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:39.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:39.217
  STEP: create the deployment @ 05/07/25 15:27:39.218
  W0507 15:27:39.221852      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/07/25 15:27:39.221
  STEP: delete the deployment @ 05/07/25 15:27:39.725
  STEP: wait for all rs to be garbage collected @ 05/07/25 15:27:39.731
  STEP: expected 0 pods, got 2 pods @ 05/07/25 15:27:39.749
  E0507 15:27:39.873488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 15:27:40.242
  I0507 15:27:40.308786 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 15:27:40.308899 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4976" for this suite. @ 05/07/25 15:27:40.311
• [1.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 05/07/25 15:27:40.313
  I0507 15:27:40.313795 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 15:27:40.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:40.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:40.32
  I0507 15:27:40.321535 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  E0507 15:27:40.874743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:41.875247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0507 15:27:42.863640      25 warnings.go:70] unknown field "alpha"
  W0507 15:27:42.863688      25 warnings.go:70] unknown field "beta"
  W0507 15:27:42.863700      25 warnings.go:70] unknown field "delta"
  W0507 15:27:42.863710      25 warnings.go:70] unknown field "epsilon"
  W0507 15:27:42.863719      25 warnings.go:70] unknown field "gamma"
  E0507 15:27:42.875370      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:43.398024 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8242" for this suite. @ 05/07/25 15:27:43.401
• [3.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/07/25 15:27:43.407
  I0507 15:27:43.407064 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 15:27:43.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:43.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:43.42
  STEP: Creating replication controller my-hostname-basic-583387b7-5386-4109-b1f8-a720e44ffbb6 @ 05/07/25 15:27:43.423
  I0507 15:27:43.434782 25 resource.go:87] Pod name my-hostname-basic-583387b7-5386-4109-b1f8-a720e44ffbb6: Found 1 pods out of 1
  I0507 15:27:43.434850 25 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-583387b7-5386-4109-b1f8-a720e44ffbb6" are running
  E0507 15:27:43.875692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:44.876178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:45.439639 25 rc.go:523] Pod "my-hostname-basic-583387b7-5386-4109-b1f8-a720e44ffbb6-hh4cg" is running and ready(conditions: [])
  I0507 15:27:45.439681 25 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/07/25 15:27:45.439
  I0507 15:27:45.447470 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1546" for this suite. @ 05/07/25 15:27:45.449
• [2.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 05/07/25 15:27:45.452
  I0507 15:27:45.452643 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:27:45.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:45.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:45.46
  STEP: Starting the proxy @ 05/07/25 15:27:45.462
  I0507 15:27:45.462264 25 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-3782 proxy --unix-socket=/tmp/kubectl-proxy-unix4014449095/test'
  STEP: retrieving proxy /api/ output @ 05/07/25 15:27:45.488
  I0507 15:27:45.489081 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3782" for this suite. @ 05/07/25 15:27:45.552
• [0.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/07/25 15:27:45.558
  I0507 15:27:45.558996 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename proxy @ 05/07/25 15:27:45.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:45.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:45.57
  STEP: starting an echo server on multiple ports @ 05/07/25 15:27:45.582
  STEP: creating replication controller proxy-service-zkk5g in namespace proxy-6461 @ 05/07/25 15:27:45.582
  I0507 15:27:45.590614      25 runners.go:193] Created replication controller with name: proxy-service-zkk5g, namespace: proxy-6461, replica count: 1
  E0507 15:27:45.876418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:46.641575      25 runners.go:193] proxy-service-zkk5g Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0507 15:27:46.877317      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:47.641831      25 runners.go:193] proxy-service-zkk5g Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0507 15:27:47.646956 25 proxy.go:230] setup took 2.073587204s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/07/25 15:27:47.647
  I0507 15:27:47.652025 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 4.734851ms)
  I0507 15:27:47.652122 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 4.721919ms)
  I0507 15:27:47.652122 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 4.982235ms)
  I0507 15:27:47.652386 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 4.975498ms)
  I0507 15:27:47.652680 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 5.320309ms)
  I0507 15:27:47.652765 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 5.354928ms)
  I0507 15:27:47.653088 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 5.962381ms)
  I0507 15:27:47.653248 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 5.963674ms)
  I0507 15:27:47.653323 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 5.930427ms)
  I0507 15:27:47.653325 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 5.951158ms)
  I0507 15:27:47.653364 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 6.034916ms)
  I0507 15:27:47.655440 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 8.195286ms)
  I0507 15:27:47.655473 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 8.130317ms)
  I0507 15:27:47.655945 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 8.578178ms)
  I0507 15:27:47.655976 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 8.710821ms)
  I0507 15:27:47.656264 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 8.842407ms)
  I0507 15:27:47.661698 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 5.329897ms)
  I0507 15:27:47.661768 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 5.377588ms)
  I0507 15:27:47.661768 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 5.402504ms)
  I0507 15:27:47.661790 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 5.434232ms)
  I0507 15:27:47.661830 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 5.464395ms)
  I0507 15:27:47.661983 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 5.617589ms)
  I0507 15:27:47.661979 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 5.605432ms)
  I0507 15:27:47.662093 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 5.715945ms)
  I0507 15:27:47.662152 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 5.835901ms)
  I0507 15:27:47.662158 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 5.771109ms)
  I0507 15:27:47.662868 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 6.472759ms)
  I0507 15:27:47.662898 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 6.566891ms)
  I0507 15:27:47.663958 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 7.613034ms)
  I0507 15:27:47.663958 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 7.562167ms)
  I0507 15:27:47.664190 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 7.881912ms)
  I0507 15:27:47.664196 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 7.871524ms)
  I0507 15:27:47.671953 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 7.653739ms)
  I0507 15:27:47.673965 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 9.397916ms)
  I0507 15:27:47.673964 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 9.553003ms)
  I0507 15:27:47.674035 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 9.547826ms)
  I0507 15:27:47.673968 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 9.512329ms)
  I0507 15:27:47.674068 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 9.762903ms)
  I0507 15:27:47.674106 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 9.796782ms)
  I0507 15:27:47.674124 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 9.642022ms)
  I0507 15:27:47.674166 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 9.716556ms)
  I0507 15:27:47.674091 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 9.757471ms)
  I0507 15:27:47.674199 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 9.846566ms)
  I0507 15:27:47.674093 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 9.515699ms)
  I0507 15:27:47.674303 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 9.738357ms)
  I0507 15:27:47.674310 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 9.83914ms)
  I0507 15:27:47.674313 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 9.725578ms)
  I0507 15:27:47.674331 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 9.742565ms)
  I0507 15:27:47.678931 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 4.358219ms)
  I0507 15:27:47.678935 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 4.485825ms)
  I0507 15:27:47.679579 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 4.950141ms)
  I0507 15:27:47.680243 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 5.638167ms)
  I0507 15:27:47.680339 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 5.804102ms)
  I0507 15:27:47.680456 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 5.770982ms)
  I0507 15:27:47.681593 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 6.90633ms)
  I0507 15:27:47.681618 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 6.917998ms)
  I0507 15:27:47.681653 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 6.930539ms)
  I0507 15:27:47.681600 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 7.13166ms)
  I0507 15:27:47.681613 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 6.954227ms)
  I0507 15:27:47.681779 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 7.338561ms)
  I0507 15:27:47.681807 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 7.132461ms)
  I0507 15:27:47.682132 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 7.647266ms)
  I0507 15:27:47.682135 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 7.503786ms)
  I0507 15:27:47.682167 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 7.546395ms)
  I0507 15:27:47.687969 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 5.557395ms)
  I0507 15:27:47.687983 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 5.617451ms)
  I0507 15:27:47.688027 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 5.633068ms)
  I0507 15:27:47.687986 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 5.721312ms)
  I0507 15:27:47.688092 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 5.839258ms)
  I0507 15:27:47.688394 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 5.964018ms)
  I0507 15:27:47.689091 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 6.661507ms)
  I0507 15:27:47.689089 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 6.612308ms)
  I0507 15:27:47.689134 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 6.853925ms)
  I0507 15:27:47.689141 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 6.680031ms)
  I0507 15:27:47.689155 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 6.709223ms)
  I0507 15:27:47.689835 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 7.421203ms)
  I0507 15:27:47.689847 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 7.370216ms)
  I0507 15:27:47.689873 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 7.414312ms)
  I0507 15:27:47.689889 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 7.57242ms)
  I0507 15:27:47.689904 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 7.603086ms)
  I0507 15:27:47.694180 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 4.160901ms)
  I0507 15:27:47.695271 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 5.114674ms)
  I0507 15:27:47.695304 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 5.103643ms)
  I0507 15:27:47.695275 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 5.215187ms)
  I0507 15:27:47.695603 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 5.393652ms)
  I0507 15:27:47.695764 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 5.613687ms)
  I0507 15:27:47.695795 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 5.588785ms)
  I0507 15:27:47.696614 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 6.606212ms)
  I0507 15:27:47.696637 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 6.457908ms)
  I0507 15:27:47.696663 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 6.509743ms)
  I0507 15:27:47.696692 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 6.624641ms)
  I0507 15:27:47.696708 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 6.562529ms)
  I0507 15:27:47.696753 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 6.633387ms)
  I0507 15:27:47.696763 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 6.527552ms)
  I0507 15:27:47.696795 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 6.613566ms)
  I0507 15:27:47.697034 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 6.94317ms)
  I0507 15:27:47.701788 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 4.61606ms)
  I0507 15:27:47.701805 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 4.645543ms)
  I0507 15:27:47.701823 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 4.602365ms)
  I0507 15:27:47.701851 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 4.746177ms)
  I0507 15:27:47.701961 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 4.725791ms)
  I0507 15:27:47.702008 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 4.725027ms)
  I0507 15:27:47.702043 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 4.801062ms)
  I0507 15:27:47.702042 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 4.793195ms)
  I0507 15:27:47.702071 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 4.840342ms)
  I0507 15:27:47.702830 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 5.594514ms)
  I0507 15:27:47.702862 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 5.756582ms)
  I0507 15:27:47.703621 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 6.333566ms)
  I0507 15:27:47.703636 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 6.418778ms)
  I0507 15:27:47.703636 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 6.410971ms)
  I0507 15:27:47.703621 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 6.489635ms)
  I0507 15:27:47.703630 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 6.532895ms)
  I0507 15:27:47.707648 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.833515ms)
  I0507 15:27:47.707695 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 3.924027ms)
  I0507 15:27:47.707737 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.900589ms)
  I0507 15:27:47.707737 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 3.940823ms)
  I0507 15:27:47.707756 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.895449ms)
  I0507 15:27:47.707777 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.965506ms)
  I0507 15:27:47.708665 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 4.747161ms)
  I0507 15:27:47.708688 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 4.829813ms)
  I0507 15:27:47.708714 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 4.809774ms)
  I0507 15:27:47.708738 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 4.817559ms)
  I0507 15:27:47.708760 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 4.881287ms)
  I0507 15:27:47.708747 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 4.858055ms)
  I0507 15:27:47.708751 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 4.990405ms)
  I0507 15:27:47.708770 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 4.839639ms)
  I0507 15:27:47.708840 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 4.961926ms)
  I0507 15:27:47.708874 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 4.962054ms)
  I0507 15:27:47.712170 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.146102ms)
  I0507 15:27:47.712170 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.177914ms)
  I0507 15:27:47.712213 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.156844ms)
  I0507 15:27:47.712440 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 3.389417ms)
  I0507 15:27:47.712839 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 3.871368ms)
  I0507 15:27:47.712839 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.781818ms)
  I0507 15:27:47.712859 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 3.85356ms)
  I0507 15:27:47.712867 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 3.935101ms)
  I0507 15:27:47.712879 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 3.933734ms)
  I0507 15:27:47.713002 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 4.077169ms)
  I0507 15:27:47.713012 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 4.060993ms)
  I0507 15:27:47.713004 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 3.950646ms)
  I0507 15:27:47.713001 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 3.971093ms)
  I0507 15:27:47.713038 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 4.02143ms)
  I0507 15:27:47.713043 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 4.067773ms)
  I0507 15:27:47.713171 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 4.140145ms)
  I0507 15:27:47.716008 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.77932ms)
  I0507 15:27:47.717055 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 3.745379ms)
  I0507 15:27:47.717087 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 3.779551ms)
  I0507 15:27:47.717087 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.813467ms)
  I0507 15:27:47.717092 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 3.753312ms)
  I0507 15:27:47.717096 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 3.776805ms)
  I0507 15:27:47.717105 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 3.846057ms)
  I0507 15:27:47.717123 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 3.869332ms)
  I0507 15:27:47.717128 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 3.841008ms)
  I0507 15:27:47.717112 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 3.879147ms)
  I0507 15:27:47.717159 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.863715ms)
  I0507 15:27:47.717239 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 3.996409ms)
  I0507 15:27:47.717249 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.946596ms)
  I0507 15:27:47.717243 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 3.924559ms)
  I0507 15:27:47.717242 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.943139ms)
  I0507 15:27:47.717251 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 4.033904ms)
  I0507 15:27:47.719419 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.048249ms)
  I0507 15:27:47.719434 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.082185ms)
  I0507 15:27:47.719445 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.065364ms)
  I0507 15:27:47.719455 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.137366ms)
  I0507 15:27:47.719859 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.504358ms)
  I0507 15:27:47.720558 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 3.176217ms)
  I0507 15:27:47.720824 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.409743ms)
  I0507 15:27:47.720861 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 3.545426ms)
  I0507 15:27:47.720877 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 3.474196ms)
  I0507 15:27:47.720877 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.479607ms)
  I0507 15:27:47.720868 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 3.540992ms)
  I0507 15:27:47.720873 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.455283ms)
  I0507 15:27:47.720912 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 3.518427ms)
  I0507 15:27:47.720921 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 3.58847ms)
  I0507 15:27:47.720926 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 3.530498ms)
  I0507 15:27:47.721086 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 3.680115ms)
  I0507 15:27:47.723056 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.908183ms)
  I0507 15:27:47.723179 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 1.978497ms)
  I0507 15:27:47.723181 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.055366ms)
  I0507 15:27:47.723439 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.257811ms)
  I0507 15:27:47.723447 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.250461ms)
  I0507 15:27:47.723473 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.262877ms)
  I0507 15:27:47.723478 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.329483ms)
  I0507 15:27:47.723487 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.287851ms)
  I0507 15:27:47.723531 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.379358ms)
  I0507 15:27:47.723979 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.81427ms)
  I0507 15:27:47.724001 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.798953ms)
  I0507 15:27:47.723997 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.79361ms)
  I0507 15:27:47.724005 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.869989ms)
  I0507 15:27:47.724010 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.823088ms)
  I0507 15:27:47.724022 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.889256ms)
  I0507 15:27:47.724007 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.803988ms)
  I0507 15:27:47.726388 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.308739ms)
  I0507 15:27:47.726641 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.50358ms)
  I0507 15:27:47.726667 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 2.528021ms)
  I0507 15:27:47.726681 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.531701ms)
  I0507 15:27:47.726690 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.52723ms)
  I0507 15:27:47.726699 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.502466ms)
  I0507 15:27:47.726711 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.521661ms)
  I0507 15:27:47.726720 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.593332ms)
  I0507 15:27:47.726735 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.610299ms)
  I0507 15:27:47.727001 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.822892ms)
  I0507 15:27:47.727018 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.858792ms)
  I0507 15:27:47.727030 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.82777ms)
  I0507 15:27:47.727044 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.866336ms)
  I0507 15:27:47.727042 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.865682ms)
  I0507 15:27:47.727047 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.85931ms)
  I0507 15:27:47.727068 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.899426ms)
  I0507 15:27:47.729160 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.994765ms)
  I0507 15:27:47.729160 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 1.971326ms)
  I0507 15:27:47.729162 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.057898ms)
  I0507 15:27:47.729232 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.050977ms)
  I0507 15:27:47.729316 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.155778ms)
  I0507 15:27:47.729592 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.424731ms)
  I0507 15:27:47.729622 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 2.438129ms)
  I0507 15:27:47.729625 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.494149ms)
  I0507 15:27:47.729633 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.485349ms)
  I0507 15:27:47.729636 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.513093ms)
  I0507 15:27:47.729657 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.456821ms)
  I0507 15:27:47.729852 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.711691ms)
  I0507 15:27:47.729857 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.659399ms)
  I0507 15:27:47.729862 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.672523ms)
  I0507 15:27:47.729855 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.663989ms)
  I0507 15:27:47.729856 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.685815ms)
  I0507 15:27:47.732018 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.054413ms)
  I0507 15:27:47.732034 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.049592ms)
  I0507 15:27:47.732026 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.04417ms)
  I0507 15:27:47.732025 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.052729ms)
  I0507 15:27:47.732015 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 2.031764ms)
  I0507 15:27:47.732052 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.054851ms)
  I0507 15:27:47.732056 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.053875ms)
  I0507 15:27:47.732067 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.074036ms)
  I0507 15:27:47.732075 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.181598ms)
  I0507 15:27:47.732080 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.139143ms)
  I0507 15:27:47.732096 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.095795ms)
  I0507 15:27:47.732190 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.294259ms)
  I0507 15:27:47.732273 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.330936ms)
  I0507 15:27:47.732321 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.37438ms)
  I0507 15:27:47.732330 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.338686ms)
  I0507 15:27:47.732461 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.507256ms)
  I0507 15:27:47.735114 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.588672ms)
  I0507 15:27:47.735114 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.522976ms)
  I0507 15:27:47.735116 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.613248ms)
  I0507 15:27:47.735888 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.301521ms)
  I0507 15:27:47.735892 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 3.363254ms)
  I0507 15:27:47.735919 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 3.383003ms)
  I0507 15:27:47.735932 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 3.385393ms)
  I0507 15:27:47.736393 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 3.821929ms)
  I0507 15:27:47.736474 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 3.90136ms)
  I0507 15:27:47.736498 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 3.901042ms)
  I0507 15:27:47.736518 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 3.908723ms)
  I0507 15:27:47.736526 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 3.932414ms)
  I0507 15:27:47.736536 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 3.95258ms)
  I0507 15:27:47.736544 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 3.981716ms)
  I0507 15:27:47.736550 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 3.952139ms)
  I0507 15:27:47.736572 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 3.972755ms)
  I0507 15:27:47.738733 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 1.872586ms)
  I0507 15:27:47.738733 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 1.688419ms)
  I0507 15:27:47.738771 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 1.979703ms)
  I0507 15:27:47.738782 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 1.494695ms)
  I0507 15:27:47.738784 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.681266ms)
  I0507 15:27:47.738788 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 2.184363ms)
  I0507 15:27:47.738795 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 1.435776ms)
  I0507 15:27:47.738801 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 1.880185ms)
  I0507 15:27:47.738806 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.081101ms)
  I0507 15:27:47.738992 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.770024ms)
  I0507 15:27:47.739083 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 1.918902ms)
  I0507 15:27:47.739084 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 1.460289ms)
  I0507 15:27:47.739221 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 1.740202ms)
  I0507 15:27:47.739226 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 1.8032ms)
  I0507 15:27:47.739243 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 1.689959ms)
  I0507 15:27:47.739321 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.338654ms)
  I0507 15:27:47.740999 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 1.589358ms)
  I0507 15:27:47.741417 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 1.961729ms)
  I0507 15:27:47.741420 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 1.953546ms)
  I0507 15:27:47.741418 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 1.982219ms)
  I0507 15:27:47.741432 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.986312ms)
  I0507 15:27:47.741448 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.097782ms)
  I0507 15:27:47.741447 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 1.979856ms)
  I0507 15:27:47.741414 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.995725ms)
  I0507 15:27:47.741444 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 1.97067ms)
  I0507 15:27:47.741466 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.020915ms)
  I0507 15:27:47.741513 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.060362ms)
  I0507 15:27:47.741519 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.075844ms)
  I0507 15:27:47.741526 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.066472ms)
  I0507 15:27:47.741603 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.133043ms)
  I0507 15:27:47.741618 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.206896ms)
  I0507 15:27:47.741740 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.273332ms)
  I0507 15:27:47.743841 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.994809ms)
  I0507 15:27:47.743860 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 2.05641ms)
  I0507 15:27:47.744026 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 2.249684ms)
  I0507 15:27:47.744038 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.17926ms)
  I0507 15:27:47.744070 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.22127ms)
  I0507 15:27:47.744071 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.288774ms)
  I0507 15:27:47.744078 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.234719ms)
  I0507 15:27:47.744073 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 2.253275ms)
  I0507 15:27:47.744070 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.23718ms)
  I0507 15:27:47.744093 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.290704ms)
  I0507 15:27:47.744101 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.307916ms)
  I0507 15:27:47.744192 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.385957ms)
  I0507 15:27:47.744194 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.33873ms)
  I0507 15:27:47.744199 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.351381ms)
  I0507 15:27:47.744199 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.364061ms)
  I0507 15:27:47.744209 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.378686ms)
  I0507 15:27:47.746118 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">test<... (200; 1.863721ms)
  I0507 15:27:47.746123 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 1.863757ms)
  I0507 15:27:47.746152 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:462/proxy/: tls qux (200; 1.908309ms)
  I0507 15:27:47.746276 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 1.988361ms)
  I0507 15:27:47.746428 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:1080/proxy/rewriteme">... (200; 2.132638ms)
  I0507 15:27:47.746451 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname1/proxy/: foo (200; 2.187356ms)
  I0507 15:27:47.746465 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname2/proxy/: bar (200; 2.170953ms)
  I0507 15:27:47.746536 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x:160/proxy/: foo (200; 2.294216ms)
  I0507 15:27:47.746547 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:443/proxy/tlsrewritem... (200; 2.229626ms)
  I0507 15:27:47.746551 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/http:proxy-service-zkk5g-48k6x:162/proxy/: bar (200; 2.239245ms)
  I0507 15:27:47.746572 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/: <a href="/api/v1/namespaces/proxy-6461/pods/proxy-service-zkk5g-48k6x/proxy/rewriteme">test</a> (200; 2.271394ms)
  I0507 15:27:47.746572 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/pods/https:proxy-service-zkk5g-48k6x:460/proxy/: tls baz (200; 2.270918ms)
  I0507 15:27:47.746780 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/services/http:proxy-service-zkk5g:portname2/proxy/: bar (200; 2.513107ms)
  I0507 15:27:47.746993 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/services/proxy-service-zkk5g:portname1/proxy/: foo (200; 2.688429ms)
  I0507 15:27:47.747102 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname1/proxy/: tls baz (200; 2.825762ms)
  I0507 15:27:47.747183 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6461/services/https:proxy-service-zkk5g:tlsportname2/proxy/: tls qux (200; 2.896542ms)
  STEP: deleting ReplicationController proxy-service-zkk5g in namespace proxy-6461, will wait for the garbage collector to delete the pods @ 05/07/25 15:27:47.747
  I0507 15:27:47.808406 25 resources.go:139] Deleting ReplicationController proxy-service-zkk5g took: 8.582081ms
  E0507 15:27:47.878456      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:47.909562 25 resources.go:163] Terminating ReplicationController proxy-service-zkk5g pods took: 101.149212ms
  E0507 15:27:48.879157      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:49.879729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:50.309945 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6461" for this suite. @ 05/07/25 15:27:50.313
• [4.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/07/25 15:27:50.319
  I0507 15:27:50.319718 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename limitrange @ 05/07/25 15:27:50.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:50.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:50.334
  STEP: Creating LimitRange "e2e-limitrange-mnfjq" in namespace "limitrange-6467" @ 05/07/25 15:27:50.337
  STEP: Creating another limitRange in another namespace @ 05/07/25 15:27:50.341
  I0507 15:27:50.352875 25 limit_range.go:299] Namespace "e2e-limitrange-mnfjq-3542" created
  I0507 15:27:50.352928 25 limit_range.go:300] Creating LimitRange "e2e-limitrange-mnfjq" in namespace "e2e-limitrange-mnfjq-3542"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-mnfjq" @ 05/07/25 15:27:50.356
  I0507 15:27:50.359517 25 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-mnfjq" in "limitrange-6467" namespace @ 05/07/25 15:27:50.359
  I0507 15:27:50.368015 25 limit_range.go:335] LimitRange "e2e-limitrange-mnfjq" has been patched
  STEP: Delete LimitRange "e2e-limitrange-mnfjq" by Collection with labelSelector: "e2e-limitrange-mnfjq=patched" @ 05/07/25 15:27:50.368
  STEP: Confirm that the limitRange "e2e-limitrange-mnfjq" has been deleted @ 05/07/25 15:27:50.373
  I0507 15:27:50.373428 25 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0507 15:27:50.375713 25 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-mnfjq=patched"
  I0507 15:27:50.375742 25 limit_range.go:344] LimitRange "e2e-limitrange-mnfjq" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-mnfjq" @ 05/07/25 15:27:50.375
  I0507 15:27:50.377477 25 limit_range.go:350] Found 1 limitRange
  I0507 15:27:50.377654 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6467" for this suite. @ 05/07/25 15:27:50.416
  STEP: Destroying namespace "e2e-limitrange-mnfjq-3542" for this suite. @ 05/07/25 15:27:50.422
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 05/07/25 15:27:50.427
  I0507 15:27:50.427795 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 15:27:50.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:50.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:50.442
  STEP: Creating simple DaemonSet "daemon-set" @ 05/07/25 15:27:50.517
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 15:27:50.52
  I0507 15:27:50.617264 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 15:27:50.617309 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:50.880014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:51.530288 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 15:27:51.530357 25 fixtures.go:131] Node k8sconformance is running 0 daemon pod, expected 1
  E0507 15:27:51.880490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:27:52.529735 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 15:27:52.529795 25 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/07/25 15:27:52.532
  STEP: DeleteCollection of the DaemonSets @ 05/07/25 15:27:52.534
  STEP: Verify that ReplicaSets have been deleted @ 05/07/25 15:27:52.54
  I0507 15:27:52.550993 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30468"},"items":null}

  I0507 15:27:52.555602 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30468"},"items":[{"metadata":{"name":"daemon-set-bpd2q","generateName":"daemon-set-","namespace":"daemonsets-2674","uid":"9db0a7d9-0a38-4d25-89b7-54af6828e0cf","resourceVersion":"30467","creationTimestamp":"2025-05-07T15:27:50Z","deletionTimestamp":"2025-05-07T15:28:22Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"61e20a60-3c09-4a2e-8aa1-e359419f38d6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-07T15:27:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"61e20a60-3c09-4a2e-8aa1-e359419f38d6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-07T15:27:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.240\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zshqj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zshqj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:50Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.240","podIPs":[{"ip":"10.244.0.240"}],"startTime":"2025-05-07T15:27:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-07T15:27:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://824a8dc11a34c1a6b5db591341049d61c14de2e0a6d62adef2846d9f2d9fa3d2","started":true,"volumeMounts":[{"name":"kube-api-access-zshqj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tp72l","generateName":"daemon-set-","namespace":"daemonsets-2674","uid":"1b12406b-96e1-4434-ab8f-8b042c0b9e17","resourceVersion":"30468","creationTimestamp":"2025-05-07T15:27:50Z","deletionTimestamp":"2025-05-07T15:28:22Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"61e20a60-3c09-4a2e-8aa1-e359419f38d6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-07T15:27:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"61e20a60-3c09-4a2e-8aa1-e359419f38d6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-07T15:27:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.7\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qwms4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qwms4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance-m02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance-m02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T15:27:50Z"}],"hostIP":"192.168.49.3","hostIPs":[{"ip":"192.168.49.3"}],"podIP":"10.244.1.7","podIPs":[{"ip":"10.244.1.7"}],"startTime":"2025-05-07T15:27:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-07T15:27:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://0dc1718852317b3ec99b095922b730a76291caea55ebd19551d2afc03a123935","started":true,"volumeMounts":[{"name":"kube-api-access-qwms4","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0507 15:27:52.633652 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2674" for this suite. @ 05/07/25 15:27:52.635
• [2.212 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/07/25 15:27:52.639
  I0507 15:27:52.639552 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 15:27:52.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:52.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:52.648
  STEP: Creating a pod to test substitution in container's args @ 05/07/25 15:27:52.65
  E0507 15:27:52.881037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:53.881787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:27:54.665
  I0507 15:27:54.668749 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-1705ebca-f7a1-4043-a99b-9eccbe1ba900 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 15:27:54.675
  I0507 15:27:54.691681 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-818" for this suite. @ 05/07/25 15:27:54.695
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 05/07/25 15:27:54.7
  I0507 15:27:54.700455 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename containers @ 05/07/25 15:27:54.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:54.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:54.714
  STEP: Creating a pod to test override all @ 05/07/25 15:27:54.717
  E0507 15:27:54.882228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:55.882908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:27:56.733
  I0507 15:27:56.735958 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-containers-8d2cd8f2-34db-4e80-8b34-5dde08882da9 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 15:27:56.745
  I0507 15:27:56.763941 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1455" for this suite. @ 05/07/25 15:27:56.765
• [2.068 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/07/25 15:27:56.768
  I0507 15:27:56.768458 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 15:27:56.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:27:56.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:27:56.775
  STEP: creating the pod with failed condition @ 05/07/25 15:27:56.777
  E0507 15:27:56.883935      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:57.884092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:58.885143      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:27:59.886001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:00.886246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:01.886724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:02.887387      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:03.887973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:04.888074      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:05.888943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:06.889654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:07.890593      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:08.891204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:09.891836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:10.892282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:11.892874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:12.893044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:13.893681      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:14.894150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:15.895162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:16.896280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:17.896482      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:18.896907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:19.897986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:20.898436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:21.899132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:22.900017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:23.900831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:24.901309      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:25.902048      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:26.903006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:27.903185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:28.903889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:29.904094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:30.905153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:31.906071      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:32.906310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:33.906442      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:34.906924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:35.907937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:36.908835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:37.909144      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:38.909237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:39.909816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:40.910769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:41.911864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:42.912115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:43.913180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:44.913809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:45.914786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:46.914952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:47.915458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:48.916034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:49.916951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:50.917406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:51.917890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:52.918821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:53.919285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:54.919799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:55.920814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:56.921408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:57.922013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:58.921924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:28:59.922471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:00.923189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:01.924357      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:02.925162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:03.925788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:04.926858      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:05.926941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:06.927561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:07.927965      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:08.928588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:09.929231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:10.930227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:11.930651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:12.930846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:13.931896      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:14.932375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:15.932622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:16.933130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:17.933848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:18.934230      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:19.934659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:20.935246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:21.936205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:22.936812      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:23.937445      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:24.938178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:25.938346      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:26.938997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:27.939998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:28.940497      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:29.941143      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:30.942305      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:31.943318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:32.943940      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:33.944584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:34.945247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:35.946066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:36.946764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:37.947099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:38.947799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:39.948540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:40.948982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:41.949983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:42.950556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:43.950919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:44.951379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:45.951469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:46.952026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:47.952791      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:48.953327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:49.954374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:50.955665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:51.956207      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:52.956906      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:53.957211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:54.957667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:55.957687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 05/07/25 15:29:56.783
  E0507 15:29:56.958237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:29:57.299440 25 pod_client.go:173] Successfully updated pod "var-expansion-61c40fd1-8bc1-4f4d-b2bc-2e8610afb6b9"
  STEP: waiting for pod running @ 05/07/25 15:29:57.299
  E0507 15:29:57.959008      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:29:58.959689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/07/25 15:29:59.308
  I0507 15:29:59.308855 25 delete.go:62] Deleting pod "var-expansion-61c40fd1-8bc1-4f4d-b2bc-2e8610afb6b9" in namespace "var-expansion-4618"
  I0507 15:29:59.317773 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-61c40fd1-8bc1-4f4d-b2bc-2e8610afb6b9" to be fully deleted
  E0507 15:29:59.959877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:00.960468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:01.961554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:02.962312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:03.962894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:04.963564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:05.964388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:06.964838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:07.965679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:08.966318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:09.966943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:10.967162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:11.967565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:12.967823      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:13.968027      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:14.968682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:15.968827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:16.969567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:17.969930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:18.970532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:19.970974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:20.971329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:21.971646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:22.972331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:23.972734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:24.973337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:25.974318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:26.974881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:27.975822      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:28.975792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:29.976744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:30.977338      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:30:31.401838 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4618" for this suite. @ 05/07/25 15:30:31.405
• [154.643 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 05/07/25 15:30:31.412
  I0507 15:30:31.412695 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 15:30:31.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:30:31.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:30:31.428
  STEP: Creating service test in namespace statefulset-944 @ 05/07/25 15:30:31.435
  STEP: Creating statefulset ss in namespace statefulset-944 @ 05/07/25 15:30:31.438
  I0507 15:30:31.446387 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0507 15:30:31.977943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:32.978434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:33.978891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:34.979768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:35.980494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:36.981003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:37.981892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:38.982998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:39.983468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:40.984308      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:30:41.449314 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/07/25 15:30:41.454
  STEP: updating a scale subresource @ 05/07/25 15:30:41.457
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/07/25 15:30:41.463
  STEP: Patch a scale subresource @ 05/07/25 15:30:41.466
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/07/25 15:30:41.473
  I0507 15:30:41.477618 25 statefulset.go:138] Deleting all statefulset in ns statefulset-944
  I0507 15:30:41.480730 25 rest.go:152] Scaling statefulset ss to 0
  E0507 15:30:41.985601      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:42.986204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:43.986997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:44.987635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:45.987829      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:46.988403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:47.988806      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:48.989447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:49.989941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:50.990209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:30:51.499692 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0507 15:30:51.501976 25 rest.go:90] Deleting statefulset ss
  I0507 15:30:51.513872 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-944" for this suite. @ 05/07/25 15:30:51.517
• [20.110 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/07/25 15:30:51.523
  I0507 15:30:51.523364 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 15:30:51.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:30:51.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:30:51.535
  STEP: Creating a pod to test substitution in volume subpath @ 05/07/25 15:30:51.537
  E0507 15:30:51.990728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:52.991243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:53.991662      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:54.991872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:30:55.559
  I0507 15:30:55.562552 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod var-expansion-d083d2ed-7ff2-4571-af60-fda7df40c879 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 15:30:55.576
  I0507 15:30:55.585444 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5951" for this suite. @ 05/07/25 15:30:55.587
• [4.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 05/07/25 15:30:55.59
  I0507 15:30:55.590267 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename job @ 05/07/25 15:30:55.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:30:55.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:30:55.598
  STEP: Creating a job @ 05/07/25 15:30:55.599
  STEP: Ensuring active pods == parallelism @ 05/07/25 15:30:55.602
  E0507 15:30:55.992251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:56.992836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/07/25 15:30:57.609
  E0507 15:30:57.993106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:30:58.125732 25 pod_client.go:173] Successfully updated pod "adopt-release-g8cwz"
  STEP: Checking that the Job readopts the Pod @ 05/07/25 15:30:58.125
  E0507 15:30:58.993899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:30:59.995044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/07/25 15:31:00.131
  I0507 15:31:00.641076 25 pod_client.go:173] Successfully updated pod "adopt-release-g8cwz"
  STEP: Checking that the Job releases the Pod @ 05/07/25 15:31:00.641
  E0507 15:31:00.995119      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:01.995853      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:02.650071 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2540" for this suite. @ 05/07/25 15:31:02.653
• [7.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/07/25 15:31:02.66
  I0507 15:31:02.660786 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 15:31:02.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:31:02.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:31:02.674
  STEP: Creating pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577 @ 05/07/25 15:31:02.677
  E0507 15:31:02.996856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:03.997419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 15:31:04.696
  I0507 15:31:04.699429 25 container_probe.go:1749] Initial restart count of pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 is 0
  I0507 15:31:04.701892 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:04.998398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:05.998838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:06.707983 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:06.999756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:07.999709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:08.713843 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:09.000354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:10.001378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:10.721749 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:11.002413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:12.002809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:12.726729 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:13.003224      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:14.003825      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:14.732950 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:15.004053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:16.004992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:16.737326 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:17.005996      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:18.006564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:18.743844 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:19.007252      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:20.007940      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:20.749821 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:21.008334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:22.008810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:22.756088 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:23.009228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:24.009726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:24.761266 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:25.009744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:26.010644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:26.765205 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:27.011680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:28.012141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:28.769263 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:29.012832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:30.013879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:30.773076 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:31.014758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:32.015888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:32.776887 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:33.016133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:34.016647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:34.782014 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:35.017402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:36.017973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:36.785589 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:37.019108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:38.019730      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:38.789807 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:39.020375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:40.021165      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:40.796371 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:41.021925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:42.021974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:42.801543 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:43.022783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:44.023174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:44.807381 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:45.023965      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:46.024812      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:46.813013 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:47.025268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:48.025636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:48.818316 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:49.026700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:50.026868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:50.823738 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:51.027208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:52.027839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:52.830090 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:53.028480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:54.029033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:54.834354 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:55.030009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:56.030200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:56.840493 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:57.030905      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:31:58.031929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:31:58.845129 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:31:59.032655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:00.033103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:00.851438 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:01.033722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:02.034914      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:02.855453 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:03.035876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:04.036373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:04.861209 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:05.036764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:06.037152      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:06.867029 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:07.037334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:08.037880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:08.873488 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:09.038952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:10.039837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:10.879456 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:11.040965      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:12.041584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:12.885284 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:13.042682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:14.043271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:14.889799 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:15.044292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:16.044942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:16.894398 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:17.045915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:18.046567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:18.901116 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:19.047419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:20.047909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:20.907110 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:21.048240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:22.048971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:22.913756 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:23.049785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:24.049949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:24.920195 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:25.050546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:26.051051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:26.926533 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:27.051850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:28.052284      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:28.932798 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:29.053158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:30.053666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:30.936497 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:31.053623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:32.054285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:32.942285 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:33.054586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:34.055121      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:34.947014 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:35.055261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:36.055894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:36.949565 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:37.056039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:38.056612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:38.955454 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:39.056666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:40.057017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:40.960576 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:41.057984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:42.058530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:42.967400 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:43.058695      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:44.059298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:44.972873 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:45.060057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:46.060298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:46.977304 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:47.060739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:48.060782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:48.981194 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:49.061485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:50.061922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:50.987584 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:51.062841      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:52.063392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:52.993475 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:53.063789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:54.064363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:54.999935 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:55.065123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:56.066014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:57.005859 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:57.066059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:32:58.066423      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:32:59.011696 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:32:59.066985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:00.067758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:01.014248 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:01.068594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:02.069216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:03.018460 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:03.069920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:04.070462      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:05.024441 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:05.070898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:06.071769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:07.030854 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:07.072132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:08.073054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:09.036567 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:09.073988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:10.074802      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:11.042271 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:11.075580      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:12.076187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:13.047533 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:13.077018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:14.077821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:15.052012 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:15.078381      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:16.078460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:17.057678 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:17.078826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:18.078840      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:19.063614 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:19.079814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:20.080435      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:21.069567 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:21.080937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:22.081718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:23.075804 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:23.081890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:24.082805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:25.080622 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:25.083726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:26.084706      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:27.085139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:27.085600 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:28.085682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:29.086478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:29.091422 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:30.087008      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:31.087083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:31.095160 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:32.087539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:33.088021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:33.102282 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:34.088428      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:35.089019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:35.108073 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:36.089425      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:37.089728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:37.114244 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:38.090670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:39.090959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:39.120593 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:40.091777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:41.091915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:41.125640 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:42.092808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:43.093361      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:43.131681 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:44.093785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:45.094471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:45.138058 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:46.095583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:47.095897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:47.144189 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:48.096125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:49.096724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:49.149608 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:50.097917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:51.098397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:51.155782 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:52.098859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:53.099890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:53.159991 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:54.100037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:55.100646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:55.165408 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:56.100852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:57.101283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:57.172201 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:33:58.102265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:33:59.102806      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:33:59.178623 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:00.103899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:01.104716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:01.183774 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:02.104946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:03.105762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:03.189833 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:04.105913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:05.106335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:05.195444 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:06.106763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:07.106907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:07.199338 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:08.107447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:09.107839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:09.205132 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:10.108051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:11.108347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:11.210031 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:12.108967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:13.109395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:13.216367 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:14.109597      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:15.109612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:15.222087 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:16.110452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:17.110872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:17.228687 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:18.111586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:19.112317      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:19.234894 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:20.113119      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:21.113684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:21.240733 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:22.114850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:23.115051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:23.245802 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:24.115423      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:25.116007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:25.251632 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:26.116265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:27.116696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:27.256664 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:28.117710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:29.118480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:29.263418 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:30.118763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:31.119181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:31.270291 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:32.119281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:33.119827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:33.276352 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:34.120232      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:35.120843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:35.282714 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:36.120949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:37.121559      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:37.288672 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:38.121424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:39.121852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:39.292819 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:40.123000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:41.123493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:41.298129 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:42.124149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:43.124894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:43.304848 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:44.125900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:45.126453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:45.309193 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:46.127700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:47.127982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:47.315209 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:48.128280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:49.128926      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:49.320653 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:50.129690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:51.129988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:51.326302 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:52.130241      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:53.130606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:53.331289 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:54.131299      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:55.131759      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:55.337059 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:56.132452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:57.132812      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:57.342185 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:34:58.133105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:34:59.133643      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:34:59.348775 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:35:00.133723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:01.134035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:01.353754 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:35:02.134790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:03.135677      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:03.360134 25 container_probe.go:1759] Get pod busybox-b08c5658-641a-402a-867c-c1075663fdb6 in namespace container-probe-577
  E0507 15:35:04.135958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:05.136474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/07/25 15:35:05.361
  I0507 15:35:05.377530 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-577" for this suite. @ 05/07/25 15:35:05.386
• [242.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/07/25 15:35:05.393
  I0507 15:35:05.393113 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename configmap @ 05/07/25 15:35:05.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:05.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:05.407
  I0507 15:35:05.438777 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-540" for this suite. @ 05/07/25 15:35:05.486
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/07/25 15:35:05.493
  I0507 15:35:05.493668 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/07/25 15:35:05.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:05.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:05.508
  STEP: creating a target pod @ 05/07/25 15:35:05.511
  E0507 15:35:06.137431      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:07.137974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/07/25 15:35:07.531
  E0507 15:35:08.138242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:09.138807      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/07/25 15:35:09.546
  I0507 15:35:09.546720 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6084 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:35:09.546757 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:35:09.546842 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6084/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0507 15:35:09.612940 25 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/07/25 15:35:09.627
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/07/25 15:35:09.63
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/07/25 15:35:09.64
  I0507 15:35:09.644764 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6084" for this suite. @ 05/07/25 15:35:09.647
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 05/07/25 15:35:09.653
  I0507 15:35:09.653541 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 15:35:09.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:09.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:09.663
  STEP: starting the proxy server @ 05/07/25 15:35:09.666
  I0507 15:35:09.666200 25 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=kubectl-8372 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/07/25 15:35:09.696
  I0507 15:35:09.700229 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0507 15:35:09.702352 25 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:41273

  I0507 15:35:09.702356 25 kubectl.go:2236] kubectl proxy stderr: W0507 15:35:09.695917    2754 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-8372" for this suite. @ 05/07/25 15:35:09.75
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 05/07/25 15:35:09.757
  I0507 15:35:09.757930 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:35:09.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:09.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:09.77
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6373 @ 05/07/25 15:35:09.774
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/07/25 15:35:09.79
  STEP: creating service externalsvc in namespace services-6373 @ 05/07/25 15:35:09.79
  STEP: creating replication controller externalsvc in namespace services-6373 @ 05/07/25 15:35:09.804
  I0507 15:35:09.809922      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6373, replica count: 2
  E0507 15:35:10.139075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:11.140167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:12.140555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:12.861223      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/07/25 15:35:12.866
  I0507 15:35:12.887926 25 resource.go:361] Creating new exec pod
  E0507 15:35:13.141153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:14.141970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:14.906711 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-6373 exec execpodnzn7v -- /bin/sh -x -c nslookup nodeport-service.services-6373.svc.cluster.local'
  I0507 15:35:15.025530 25 builder.go:146] stderr: "+ nslookup nodeport-service.services-6373.svc.cluster.local\n"
  I0507 15:35:15.025570 25 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6373.svc.cluster.local\tcanonical name = externalsvc.services-6373.svc.cluster.local.\nName:\texternalsvc.services-6373.svc.cluster.local\nAddress: 10.107.219.159\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6373, will wait for the garbage collector to delete the pods @ 05/07/25 15:35:15.025
  I0507 15:35:15.085646 25 resources.go:139] Deleting ReplicationController externalsvc took: 7.146951ms
  E0507 15:35:15.142910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:15.186674 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.00849ms
  E0507 15:35:16.143463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:17.144609      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:18.103646 25 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0507 15:35:18.112552 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6373" for this suite. @ 05/07/25 15:35:18.116
• [8.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 05/07/25 15:35:18.12
  I0507 15:35:18.120778 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 15:35:18.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:18.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:18.132
  STEP: Counting existing ResourceQuota @ 05/07/25 15:35:18.134
  E0507 15:35:18.145555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:19.145864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:20.146820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:21.147786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:22.148166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/07/25 15:35:23.137
  STEP: Ensuring resource quota status is calculated @ 05/07/25 15:35:23.142
  E0507 15:35:23.149089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:24.149816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 05/07/25 15:35:25.149
  E0507 15:35:25.149860      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a NodePort Service @ 05/07/25 15:35:25.169
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/07/25 15:35:25.188
  STEP: Ensuring resource quota status captures service creation @ 05/07/25 15:35:25.21
  E0507 15:35:26.150470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:27.150974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 05/07/25 15:35:27.215
  STEP: Ensuring resource quota status released usage @ 05/07/25 15:35:27.25
  E0507 15:35:28.151406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:29.151808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:29.256744 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3513" for this suite. @ 05/07/25 15:35:29.26
• [11.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 05/07/25 15:35:29.266
  I0507 15:35:29.266793 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename webhook @ 05/07/25 15:35:29.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:29.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:29.28
  STEP: Setting up server cert @ 05/07/25 15:35:29.297
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 15:35:29.445
  STEP: Deploying the webhook pod @ 05/07/25 15:35:29.448
  STEP: Wait for the deployment to be ready @ 05/07/25 15:35:29.455
  I0507 15:35:29.458504 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0507 15:35:30.151911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:31.152151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 15:35:31.47
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 15:35:31.485
  E0507 15:35:32.152417      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:32.486779 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/07/25 15:35:32.494
  STEP: create a pod @ 05/07/25 15:35:32.513
  E0507 15:35:33.153015      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:34.153545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/07/25 15:35:34.522
  I0507 15:35:34.522786 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=webhook-8564 attach --namespace=webhook-8564 to-be-attached-pod -i -c=container1'
  I0507 15:35:34.574390 25 builder.go:135] rc: 1
  I0507 15:35:34.599048 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8564" for this suite. @ 05/07/25 15:35:34.602
  STEP: Destroying namespace "webhook-markers-9003" for this suite. @ 05/07/25 15:35:34.608
• [5.345 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 05/07/25 15:35:34.611
  I0507 15:35:34.611689 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:35:34.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:34.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:34.622
  I0507 15:35:34.624701 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8988" for this suite. @ 05/07/25 15:35:34.702
• [0.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/07/25 15:35:34.706
  I0507 15:35:34.706232 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 15:35:34.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:34.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:34.716
  STEP: Performing setup for networking test in namespace pod-network-test-2155 @ 05/07/25 15:35:34.717
  STEP: creating a selector @ 05/07/25 15:35:34.717
  STEP: Creating the service pods in kubernetes @ 05/07/25 15:35:34.717
  I0507 15:35:34.717957 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0507 15:35:35.153983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:36.154579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:37.154930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:38.155797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:39.156327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:40.157038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:41.157560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:42.157821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:43.158993      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:44.159426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:45.159935      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:46.160602      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:47.161308      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:48.161951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/07/25 15:35:48.87
  E0507 15:35:49.162526      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:50.163066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:50.890325 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 15:35:50.890375 25 networking.go:42] Breadth first check of 10.244.0.242 on host 192.168.49.2...
  I0507 15:35:50.892745 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.23:9080/dial?request=hostname&protocol=udp&host=10.244.0.242&port=8081&tries=1'] Namespace:pod-network-test-2155 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:35:50.892781 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:35:50.892847 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2155/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.23%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.242%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 15:35:50.958534 25 utils.go:356] Waiting for responses: map[]
  I0507 15:35:50.958572 25 utils.go:360] reached 10.244.0.242 after 0/1 tries
  I0507 15:35:50.958586 25 networking.go:42] Breadth first check of 10.244.1.22 on host 192.168.49.3...
  I0507 15:35:50.960851 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.23:9080/dial?request=hostname&protocol=udp&host=10.244.1.22&port=8081&tries=1'] Namespace:pod-network-test-2155 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 15:35:50.960879 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0507 15:35:50.960932 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2155/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.23%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.22%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 15:35:51.029611 25 utils.go:356] Waiting for responses: map[]
  I0507 15:35:51.029713 25 utils.go:360] reached 10.244.1.22 after 0/1 tries
  I0507 15:35:51.029738 25 networking.go:53] Going to retry 0 out of 2 pods....
  I0507 15:35:51.029877 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2155" for this suite. @ 05/07/25 15:35:51.033
• [16.333 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 05/07/25 15:35:51.039
  I0507 15:35:51.039713 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 15:35:51.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:51.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:51.054
  STEP: Creating a cronjob @ 05/07/25 15:35:51.057
  STEP: creating @ 05/07/25 15:35:51.057
  STEP: getting @ 05/07/25 15:35:51.061
  STEP: listing @ 05/07/25 15:35:51.063
  STEP: watching @ 05/07/25 15:35:51.066
  I0507 15:35:51.066403 25 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 05/07/25 15:35:51.067
  STEP: cluster-wide watching @ 05/07/25 15:35:51.069
  I0507 15:35:51.069639 25 cronjob.go:407] starting watch
  STEP: patching @ 05/07/25 15:35:51.07
  STEP: updating @ 05/07/25 15:35:51.076
  I0507 15:35:51.082942 25 cronjob.go:431] waiting for watch events with expected annotations
  I0507 15:35:51.083001 25 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 05/07/25 15:35:51.083
  STEP: updating /status @ 05/07/25 15:35:51.089
  STEP: get /status @ 05/07/25 15:35:51.093
  STEP: deleting @ 05/07/25 15:35:51.095
  STEP: deleting a collection @ 05/07/25 15:35:51.102
  I0507 15:35:51.107895 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1894" for this suite. @ 05/07/25 15:35:51.135
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/07/25 15:35:51.141
  I0507 15:35:51.141649 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 15:35:51.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:51.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:51.156
  I0507 15:35:51.158808 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  E0507 15:35:51.163677      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:52.164773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:53.164969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:54.166051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:54.212077 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7150" for this suite. @ 05/07/25 15:35:54.217
• [3.082 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/07/25 15:35:54.223
  I0507 15:35:54.223624 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 15:35:54.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:54.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:54.239
  STEP: Creating the pod @ 05/07/25 15:35:54.242
  E0507 15:35:55.167083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:56.167591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:56.780435 25 pod_client.go:173] Successfully updated pod "labelsupdateecc519d6-3103-4eab-8a96-615fda2fb1cb"
  E0507 15:35:57.168247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:35:58.168570      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:35:58.799877 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-877" for this suite. @ 05/07/25 15:35:58.803
• [4.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 05/07/25 15:35:58.81
  I0507 15:35:58.810399 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 15:35:58.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:35:58.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:35:58.826
  I0507 15:35:58.828970 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  E0507 15:35:59.169452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:00.170007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:01.170325      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0507 15:36:01.362449      25 warnings.go:70] unknown field "alpha"
  W0507 15:36:01.362482      25 warnings.go:70] unknown field "beta"
  W0507 15:36:01.362492      25 warnings.go:70] unknown field "delta"
  W0507 15:36:01.362517      25 warnings.go:70] unknown field "epsilon"
  W0507 15:36:01.362527      25 warnings.go:70] unknown field "gamma"
  I0507 15:36:01.896251 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8151" for this suite. @ 05/07/25 15:36:01.898
• [3.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/07/25 15:36:01.904
  I0507 15:36:01.904495 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 15:36:01.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:36:01.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:36:01.92
  I0507 15:36:01.924184 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  E0507 15:36:02.171200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:02.464710 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1933" for this suite. @ 05/07/25 15:36:02.469
• [0.570 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/07/25 15:36:02.475
  I0507 15:36:02.475290 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 15:36:02.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:36:02.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:36:02.486
  E0507 15:36:03.171451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:04.172032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:04.512459 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2425" for this suite. @ 05/07/25 15:36:04.515
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 05/07/25 15:36:04.52
  I0507 15:36:04.520937 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 15:36:04.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:36:04.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:36:04.533
  STEP: getting /apis @ 05/07/25 15:36:04.541
  STEP: getting /apis/admissionregistration.k8s.io @ 05/07/25 15:36:04.546
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/07/25 15:36:04.547
  STEP: creating @ 05/07/25 15:36:04.548
  STEP: getting @ 05/07/25 15:36:04.566
  STEP: listing @ 05/07/25 15:36:04.569
  STEP: watching @ 05/07/25 15:36:04.571
  I0507 15:36:04.571138 25 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 05/07/25 15:36:04.572
  STEP: updating @ 05/07/25 15:36:04.578
  I0507 15:36:04.583354 25 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0507 15:36:04.583394 25 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0507 15:36:04.583466 25 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0507 15:36:04.583504 25 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/07/25 15:36:04.583
  STEP: patching /status @ 05/07/25 15:36:04.585
  STEP: updating /status @ 05/07/25 15:36:04.59
  STEP: deleting @ 05/07/25 15:36:04.613
  STEP: deleting a collection @ 05/07/25 15:36:04.62
  I0507 15:36:04.631393 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4488" for this suite. @ 05/07/25 15:36:04.633
• [0.118 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/07/25 15:36:04.638
  I0507 15:36:04.638672 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 15:36:04.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:36:04.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:36:04.65
  STEP: Creating pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598 @ 05/07/25 15:36:04.653
  E0507 15:36:05.172995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:06.173477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 15:36:06.67
  I0507 15:36:06.673392 25 container_probe.go:1749] Initial restart count of pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac is 0
  I0507 15:36:06.676173 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:07.174159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:08.174729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:08.681098 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:09.174929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:10.175636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:10.687461 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:11.175603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:12.176007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:12.692397 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:13.177184      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:14.177708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:14.695398 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:15.177971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:16.178426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:16.701834 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:17.179602      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:18.179891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:18.707754 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:19.180461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:20.181192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:20.712879 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:21.181909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:22.182843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:22.716902 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:23.183668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:24.184373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:24.722737 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:25.184401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:26.184854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:26.728137 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:27.185976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:28.185946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:28.730274 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:29.187164      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:30.187892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:30.736195 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:31.187878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:32.188485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:32.739881 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:33.189481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:34.190019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:34.744914 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:35.190715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:36.190833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:36.750852 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:37.191420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:38.191625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:38.756285 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:39.191818      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:40.192378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:40.760394 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:41.193496      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:42.193827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:42.764848 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:43.194904      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:44.195622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:44.770148 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:45.195938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:46.196950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:46.772551 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:47.197830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:48.199016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:48.776756 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:49.199414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:50.199900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:50.781969 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:51.201027      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:52.201679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:52.788566 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:53.201961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:54.202864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:54.794877 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:55.203417      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:56.203815      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:56.800539 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:57.204253      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:36:58.205005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:36:58.803023 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:36:59.206046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:00.206953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:00.809618 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:01.208069      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:02.208898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:02.813780 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:03.209436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:04.209891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:04.820148 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:05.210864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:06.211372      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:06.826393 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:07.211791      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:08.212327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:08.832153 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:09.212773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:10.212862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:10.838352 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:11.212913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:12.213816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:12.842934 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:13.214442      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:14.214885      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:14.847659 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:15.215898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:16.216956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:16.853621 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:17.217126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:18.217994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:18.859416 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:19.218979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:20.219983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:20.863662 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:21.220288      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:22.220869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:22.867409 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:23.221037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:24.221211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:24.872954 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:25.221487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:26.221828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:26.877546 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:27.222209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:28.222757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:28.883272 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:29.222992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:30.223564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:30.888804 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:31.224096      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:32.224754      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:32.892007 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:33.224727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:34.225305      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:34.895286 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:35.226008      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:36.226688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:36.900296 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:37.226817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:38.227328      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:38.905533 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:39.227865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:40.228946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:40.912301 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:41.230212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:42.230032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:42.917765 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:43.230028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:44.230656      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:44.923221 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:45.230683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:46.231298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:46.927410 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:47.231871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:48.232836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:48.932847 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:49.233199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:50.233907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:50.939303 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:51.234001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:52.234583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:52.943321 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:53.234859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:54.235447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:54.948931 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:55.236700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:56.236925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:56.953488 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:57.237169      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:37:58.237933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:37:58.959008 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:37:59.238486      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:00.239218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:00.964992 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:01.239453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:02.240148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:02.970344 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:03.241108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:04.241226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:04.976181 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:05.241444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:06.241934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:06.980481 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:07.242094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:08.242721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:08.986874 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:09.243454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:10.243995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:10.993159 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:11.244740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:12.245070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:12.998851 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:13.245338      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:14.245902      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:15.004612 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:15.246243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:16.246657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:17.010385 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:17.246833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:18.247418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:19.016564 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:19.247813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:20.248347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:21.023010 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:21.248415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:22.248903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:23.028678 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:23.249923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:24.250441      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:25.034073 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:25.251583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:26.252169      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:27.038541 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:27.253220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:28.253851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:29.044953 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:29.254680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:30.254893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:31.047772 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:31.255420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:32.255989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:33.052925 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:33.256290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:34.257041      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:35.058593 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:35.258067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:36.258520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:37.064956 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:37.259460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:38.259760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:39.070788 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:39.260343      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:40.261028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:41.077644 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:41.262204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:42.262704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:43.083894 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:43.263009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:44.263834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:45.088224 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:45.264644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:46.265002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:47.093795 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:47.266110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:48.266817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:49.099047 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:49.267439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:50.267831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:51.103416 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:51.267897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:52.268962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:53.106282 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:53.269832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:54.270375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:55.111233 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:55.270419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:56.270666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:57.116383 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:57.270777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:38:58.271331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:38:59.122891 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:38:59.272195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:00.272558      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:01.128245 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:01.273902      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:02.274028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:03.133557 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:03.274913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:04.275467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:05.140119 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:05.276550      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:06.276958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:07.145870 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:07.277179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:08.277773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:09.151765 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:09.278175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:10.278715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:11.157529 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:11.278977      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:12.279487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:13.163393 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:13.279594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:14.280067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:15.168773 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:15.280970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:16.281701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:17.174831 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:17.282099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:18.282934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:19.178982 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:19.283376      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:20.283981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:21.183221 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:21.284837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:22.285357      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:23.188903 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:23.286169      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:24.286668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:25.191801 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:25.287129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:26.287644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:27.197942 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:27.288526      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:28.288982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:29.204229 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:29.289408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:30.289874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:31.207247 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:31.290956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:32.291717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:33.212824 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:33.292291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:34.292810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:35.218806 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:35.292983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:36.293367      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:37.222814 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:37.294153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:38.294712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:39.228802 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:39.295332      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:40.295946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:41.235008 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:41.297113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:42.297398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:43.241074 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:43.298258      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:44.298794      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:45.246719 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:45.298836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:46.299389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:47.252996 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:47.300039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:48.300912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:49.259346 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:49.301620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:50.301949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:51.265694 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:51.302028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:52.302288      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:53.271279 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:53.302442      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:54.303004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:55.276928 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:55.303243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:56.303526      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:57.283197 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:57.304562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:39:58.304971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:39:59.288709 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:39:59.305203      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:00.305709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:01.293258 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:40:01.306809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:02.307350      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:03.299814 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:40:03.307937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:04.308614      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:05.306711 25 container_probe.go:1759] Get pod test-webserver-a3390824-639e-4be5-84a2-f9d681a251ac in namespace container-probe-4598
  E0507 15:40:05.308690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:06.309269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/07/25 15:40:07.307
  E0507 15:40:07.309704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:07.324370 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4598" for this suite. @ 05/07/25 15:40:07.328
• [242.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/07/25 15:40:07.336
  I0507 15:40:07.336250 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename watch @ 05/07/25 15:40:07.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:07.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:07.349
  STEP: creating a watch on configmaps with label A @ 05/07/25 15:40:07.351
  STEP: creating a watch on configmaps with label B @ 05/07/25 15:40:07.353
  STEP: creating a watch on configmaps with label A or B @ 05/07/25 15:40:07.354
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/07/25 15:40:07.355
  I0507 15:40:07.358940 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31962 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 15:40:07.359006 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31962 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/07/25 15:40:07.359
  I0507 15:40:07.363140 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31963 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 15:40:07.363233 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31963 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/07/25 15:40:07.363
  I0507 15:40:07.367299 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31964 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 15:40:07.367382 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31964 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/07/25 15:40:07.367
  I0507 15:40:07.370426 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31965 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 15:40:07.370466 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7705  546db17e-6157-4a7b-b7ff-12b1a56a92e0 31965 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/07/25 15:40:07.37
  I0507 15:40:07.373548 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7705  be6d4728-dcf5-4675-ba38-4e87ebaf9fc1 31966 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 15:40:07.373623 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7705  be6d4728-dcf5-4675-ba38-4e87ebaf9fc1 31966 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0507 15:40:08.309970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:09.310910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:10.311805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:11.312242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:12.312470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:13.313250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:14.314213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:15.314453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:16.314821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:17.315034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/07/25 15:40:17.374
  I0507 15:40:17.382435 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7705  be6d4728-dcf5-4675-ba38-4e87ebaf9fc1 31985 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 15:40:17.382577 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7705  be6d4728-dcf5-4675-ba38-4e87ebaf9fc1 31985 0 2025-05-07 15:40:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 15:40:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0507 15:40:18.315353      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:19.315950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:20.316923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:21.317329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:22.317672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:23.318132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:24.318681      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:25.319101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:26.319739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:27.320287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:27.384030 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7705" for this suite. @ 05/07/25 15:40:27.388
• [20.060 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/07/25 15:40:27.396
  I0507 15:40:27.397015 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename secrets @ 05/07/25 15:40:27.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:27.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:27.412
  STEP: creating a secret @ 05/07/25 15:40:27.415
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/07/25 15:40:27.42
  STEP: patching the secret @ 05/07/25 15:40:27.423
  STEP: deleting the secret using a LabelSelector @ 05/07/25 15:40:27.433
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/07/25 15:40:27.437
  I0507 15:40:27.439633 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4011" for this suite. @ 05/07/25 15:40:27.441
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/07/25 15:40:27.446
  I0507 15:40:27.446084 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename projected @ 05/07/25 15:40:27.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:27.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:27.455
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 15:40:27.457
  E0507 15:40:28.321246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:29.321745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:30.322791      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:31.323319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:40:31.477
  I0507 15:40:31.480236 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-677167cf-49db-4ce0-897f-d5615c3172e4 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 15:40:31.496
  I0507 15:40:31.509814 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4172" for this suite. @ 05/07/25 15:40:31.513
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/07/25 15:40:31.518
  I0507 15:40:31.518593 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 15:40:31.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:31.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:31.53
  I0507 15:40:31.543095 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0507 15:40:32.324182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:33.325146      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:34.325669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:35.326205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:36.326411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:36.546547 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 15:40:36.546
  STEP: Scaling up "test-rs" replicaset @ 05/07/25 15:40:36.546
  I0507 15:40:36.556943 25 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/07/25 15:40:36.557
  I0507 15:40:36.564741 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1646 with ReadyReplicas 1, AvailableReplicas 1
  I0507 15:40:36.577030 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1646 with ReadyReplicas 1, AvailableReplicas 1
  I0507 15:40:36.588586 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1646 with ReadyReplicas 1, AvailableReplicas 1
  I0507 15:40:36.595050 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1646 with ReadyReplicas 1, AvailableReplicas 1
  E0507 15:40:37.326684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:37.565380 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1646 with ReadyReplicas 2, AvailableReplicas 2
  I0507 15:40:37.825487 25 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1646 with ReadyReplicas 3 found true
  I0507 15:40:37.825743 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1646" for this suite. @ 05/07/25 15:40:37.829
• [6.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/07/25 15:40:37.837
  I0507 15:40:37.837349 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename pods @ 05/07/25 15:40:37.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:37.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:37.849
  I0507 15:40:37.851285 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: creating the pod @ 05/07/25 15:40:37.851
  STEP: submitting the pod to kubernetes @ 05/07/25 15:40:37.851
  E0507 15:40:38.326831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:39.327355      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:39.883954 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3502" for this suite. @ 05/07/25 15:40:39.886
• [2.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 05/07/25 15:40:39.893
  I0507 15:40:39.893891 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 15:40:39.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:39.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:39.904
  I0507 15:40:39.907161 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 15:40:39.991620 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0507 15:40:39.994966 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0507 15:40:39.999246 25 predicates.go:957] coredns-668d6bf9bc-kg25h from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999289 25 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0507 15:40:39.999309 25 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999323 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0507 15:40:39.999342 25 predicates.go:957] kindnet-rnsjv from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999355 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 15:40:39.999368 25 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999379 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0507 15:40:39.999393 25 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999405 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0507 15:40:39.999417 25 predicates.go:957] kube-proxy-xzmjp from kube-system started at 2025-05-07 13:58:08 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999428 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 15:40:39.999440 25 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-05-07 13:58:03 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999455 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0507 15:40:39.999468 25 predicates.go:957] storage-provisioner from kube-system started at 2025-05-07 13:58:09 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999478 25 predicates.go:959] 	Container storage-provisioner ready: true, restart count 1
  I0507 15:40:39.999490 25 predicates.go:957] test-rs-zhb8k from replicaset-1646 started at 2025-05-07 15:40:36 +0000 UTC (1 container statuses recorded)
  I0507 15:40:39.999514 25 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0507 15:40:39.999528 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-l5ngp from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:40:39.999545 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:40:39.999556 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0507 15:40:39.999568 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0507 15:40:40.003254 25 predicates.go:957] kindnet-nd7gj from kube-system started at 2025-05-07 14:59:16 +0000 UTC (1 container statuses recorded)
  I0507 15:40:40.003285 25 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0507 15:40:40.003298 25 predicates.go:957] kube-proxy-nwnr4 from kube-system started at 2025-05-07 13:58:19 +0000 UTC (1 container statuses recorded)
  I0507 15:40:40.003308 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0507 15:40:40.003318 25 predicates.go:957] pod-logs-websocket-405e6755-5590-4913-a1e8-784f64f8c7ec from pods-3502 started at 2025-05-07 15:40:37 +0000 UTC (1 container statuses recorded)
  I0507 15:40:40.003326 25 predicates.go:959] 	Container main ready: true, restart count 0
  I0507 15:40:40.003337 25 predicates.go:957] test-rs-4sqq7 from replicaset-1646 started at 2025-05-07 15:40:31 +0000 UTC (1 container statuses recorded)
  I0507 15:40:40.003347 25 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0507 15:40:40.003357 25 predicates.go:957] test-rs-fcw22 from replicaset-1646 started at 2025-05-07 15:40:36 +0000 UTC (2 container statuses recorded)
  I0507 15:40:40.003366 25 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0507 15:40:40.003376 25 predicates.go:959] 	Container test-rs ready: true, restart count 0
  I0507 15:40:40.003386 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-07 13:58:43 +0000 UTC (1 container statuses recorded)
  I0507 15:40:40.003396 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 15:40:40.003406 25 predicates.go:957] sonobuoy-e2e-job-889ff4cea7414d9e from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:40:40.003415 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0507 15:40:40.003425 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:40:40.003435 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-667f212615894918-6fk5k from sonobuoy started at 2025-05-07 13:58:48 +0000 UTC (2 container statuses recorded)
  I0507 15:40:40.003448 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 15:40:40.003460 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/07/25 15:40:40.003
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.183d48f33c5ed3c1], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/07/25 15:40:40.019
  E0507 15:40:40.328470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:41.023065 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3131" for this suite. @ 05/07/25 15:40:41.026
• [1.142 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 05/07/25 15:40:41.035
  I0507 15:40:41.035492 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename containers @ 05/07/25 15:40:41.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:41.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:41.053
  STEP: Creating a pod to test override arguments @ 05/07/25 15:40:41.056
  E0507 15:40:41.329128      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:42.329691      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 15:40:43.073
  I0507 15:40:43.074375 25 output.go:207] Trying to get logs from node k8sconformance-m02 pod client-containers-b18f8958-454a-4d41-9885-fa0e2ef9c899 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 15:40:43.078
  I0507 15:40:43.092845 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5642" for this suite. @ 05/07/25 15:40:43.094
• [2.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 05/07/25 15:40:43.099
  I0507 15:40:43.099239 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3587238442
  STEP: Building a namespace api object, basename services @ 05/07/25 15:40:43.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 15:40:43.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 15:40:43.114
  STEP: creating service multi-endpoint-test in namespace services-3920 @ 05/07/25 15:40:43.116
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3920 to expose endpoints map[] @ 05/07/25 15:40:43.126
  I0507 15:40:43.128662 25 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0507 15:40:43.330391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:44.138800 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3920 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3920 @ 05/07/25 15:40:44.138
  E0507 15:40:44.331298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:45.331877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3920 to expose endpoints map[pod1:[100]] @ 05/07/25 15:40:46.157
  I0507 15:40:46.172945 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3920 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3920 @ 05/07/25 15:40:46.172
  E0507 15:40:46.332368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:47.332968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3920 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/07/25 15:40:48.185
  I0507 15:40:48.198328 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3920 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/07/25 15:40:48.198
  I0507 15:40:48.198390 25 resource.go:361] Creating new exec pod
  E0507 15:40:48.333763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:49.334228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0507 15:40:50.335107      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:51.206477 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3920 exec execpodlw7g9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0507 15:40:51.330547 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.98.188.68) 80 port [tcp/http] succeeded!\n"
  I0507 15:40:51.330598 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:40:51.330680 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3920 exec execpodlw7g9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.188.68 80'
  E0507 15:40:51.336036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0507 15:40:51.422585 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.188.68 80\nConnection to 10.98.188.68 80 port [tcp/http] succeeded!\n"
  I0507 15:40:51.422644 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:40:51.422750 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3920 exec execpodlw7g9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0507 15:40:51.522003 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.98.188.68) 81 port [tcp/*] succeeded!\n"
  I0507 15:40:51.522057 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 15:40:51.522146 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3587238442 --namespace=services-3920 exec execpodlw7g9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.188.68 81'
  I0507 15:40:51.602188 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.188.68 81\nConnection to 10.98.188.68 81 port [tcp/*] succeeded!\n"
  I0507 15:40:51.602237 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3920 @ 05/07/25 15:40:51.602
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3920 to expose endpoints map[pod2:[101]] @ 05/07/25 15:40:51.612
  I0507 15:40:51.627977 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3920 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3920 @ 05/07/25 15:40:51.628
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3920 to expose endpoints map[] @ 05/07/25 15:40:51.641
  I0507 15:40:51.648737 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-3920 exposes endpoints map[]
  I0507 15:40:51.665050 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3920" for this suite. @ 05/07/25 15:40:51.667
• [8.572 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0507 15:40:51.671121 25 suites.go:34] Running AfterSuite actions on node 1
  I0507 15:40:51.671174 25 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.028 seconds]
------------------------------

Ran 411 of 6625 Specs in 6085.802 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6214 Skipped
PASS

Ginkgo ran 1 suite in 1h41m26.242998885s
Test Suite Passed
